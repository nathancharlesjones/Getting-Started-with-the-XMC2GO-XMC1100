   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4_scu.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SCU_lDelay,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_SCU_lDelay:
  25              	.LFB175:
  26              	 .file 1 "C:/Files/Projects/Git/XMCLib/src/xmc4_scu.c"
   1:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /**
   2:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * @file xmc4_scu.c
   3:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * @date 2018-06-21
   4:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
   5:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
   9:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * 
  18:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * 
  21:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
  36:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
  39:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Initial <br>
  41:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *      
  42:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * 2015-05-20:
  43:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - XMC_ASSERT() hanging issues have fixed.  <br>
  44:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Line indentation aligned with 120 characters. <br>
  45:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     
  46:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * 2015-06-20:
  47:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_EnableEvent,XMC_SCU_INTERRUPT_DisableEvent,
  48:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_TriggerEvent,XMC_SCU_INTERUPT_GetEventStatus,
  49:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_ClearEventStatus are added
  50:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Added Weak implementation for OSCHP_GetFrequency()
  51:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
  52:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * 2015-11-30:
  53:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Documentation improved <br>
  54:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Following API functionalities are improved
  55:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *       XMC_SCU_CLOCK_GatePeripheralClock, XMC_SCU_CLOCK_UngatePeripheralClock, XMC_SCU_CLOCK_IsPe
  56:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *       XMC_SCU_RESET_AssertPeripheralReset, XMC_SCU_RESET_DeassertPeripheralReset, XMC_SCU_RESET_
  57:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
  58:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * 2015-12-08:
  59:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - XMC_SCU_GetTemperature renamed to XMC_SCU_GetTemperatureMeasurement
  60:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
  61:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * 2016-03-09:
  62:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Optimize write only registers
  63:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetPinMode
  64:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  65:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  66:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  67:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  68:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  69:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
  70:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * 2016-04-06:
  71:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Fixed XMC_SCU_ReadFromRetentionMemory functionality
  72:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
  73:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * 2016-05-19:
  74:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Changed XMC_SCU_CLOCK_StartSystemPll to avoid using floating point calculation which might
  75:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  76:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  77:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  78:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  79:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  80:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  81:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  82:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
  83:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * 2016-06-15:
  84:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  85:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  86:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  87:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
  88:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * 2018-06-21:
  89:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Fixed XMC_SCU_HIB_SetSR1Input()
  90:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *     - Fixed XMC_SCU_CLOCK_EnableLowPowerOscillator()
  91:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
  92:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * @endcond 
  93:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
  94:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
  95:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
  96:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /**
  97:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
  98:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * @brief SCU low level driver API prototype definition for XMC4 family of microcontrollers. 
  99:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
 100:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * <b>Detailed description of file:</b> <br>
 101:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * APIs provided in this file cover the following functional blocks of SCU: <br>
 102:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * -- GCU (APIs prefixed with XMC_SCU_GEN_) <br>
 103:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * ------ Temperature Monitoring, Bootmode selection, CCU Start, Comparator configuration etc  <br>
 104:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * -- CCU (APIs prefixed with XMC_SCU_CLOCK_) <br>
 105:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * ------ Clock sources init, Clock tree init, Clock gating, Sleep Management etc <br>
 106:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * -- RCU (APIs prefixed with XMC_SCU_RESET_) <br>
 107:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * ------ Reset Init, Cause, Manual Reset Assert/Deassert <br>
 108:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * -- INTERRUPT (APIs prefixed with XMC_SCU_INTERRUPT_) <br>
 109:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * ------ Init, Manual Assert/Deassert, Acknowledge etc <br>
 110:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * -- PARITY (APIs prefixed with XMC_SCU_PARITY_) <br>
 111:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * ------ Init, Acknowledge etc <br>
 112:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * -- HIBERNATION (APIs prefixed with XMC_SCU_HIB_) <br>
 113:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * ------ Hibernation entry/exit config, entry/wakeup sequences, LPAC configuration etc <br>
 114:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * -- TRAP (APIs prefixed with XMC_SCU_TRAP_) <br>
 115:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * ------ Init, Enable/Disable, Acknowledge etc <br>
 116:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  *
 117:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
 118:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 119:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /**************************************************************************************************
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * HEADER FILES
 121:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  **************************************************************************************************
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #include <xmc_scu.h>
 123:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 124:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if UC_FAMILY == XMC4
 125:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 126:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /**************************************************************************************************
 127:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * MACROS
 128:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  **************************************************************************************************
 129:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define FOSCREF   (2500000UL)    /**< Oscillator reference frequency (fOSCREF) monitored by Oscilla
 130:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define FREQ_1MHZ (1000000UL)    /**< Used during calculation. */
 131:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 132:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #ifndef OFI_FREQUENCY
 133:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define OFI_FREQUENCY (24000000UL)    /**< Fast internal backup clock source. */
 134:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
 135:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 136:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #ifndef OSI_FREQUENCY
 137:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define OSI_FREQUENCY (32768UL)    /**< Internal slow clock source. */
 138:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
 139:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 140:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #ifndef OSCHP_FREQUENCY
 141:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define OSCHP_FREQUENCY (12000000U)    /**< External crystal High Precision Oscillator. */
 142:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
 143:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 144:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define XMC_SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
 145:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLLV_Msk | \
 146:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLSP_Msk)  /**< Used to verify the OSC fr
 147:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                                           usable or not.*/
 148:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 149:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define XMC_SCU_ORC_ADC_START_GROUP    (0UL)    /**< The ADC group whose channel input is compared 
 150:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 151:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 152:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                      this group number. */
 153:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define XMC_SCU_ORC_ADC_END_GROUP      (1UL)    /**< The ADC group whose channel input is compared 
 154:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 155:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                      for analog input pins of the chip and ORC end 
 156:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                      this group number. */
 157:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define XMC_SCU_ORC_START_ADC_CHANNEL  (6UL)    /**< The ADC channel whose channel input is compare
 158:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 159:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 160:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                      this channel number. */
 161:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define XMC_SCU_ORC_END_ADC_CHANNEL    (7UL)    /**< The ADC channel whose channel input is compare
 162:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 163:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                      for analog input pins of the chip and ORC ends
 164:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                      this channel number. */
 165:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 166:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define XMC_SCU_CHECK_GRPNUM(GROUP_NUM)   (((GROUP_NUM) == XMC_SCU_ORC_ADC_START_GROUP) || \
 167:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                         ((GROUP_NUM) == XMC_SCU_ORC_ADC_END_GROUP) ) /**< Used to v
 168:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                                                       provided ADC 
 169:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                                                       within specif
 170:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                                                       end group num
 171:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                         
 172:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define XMC_SCU_CHECK_CHNUM(CH_NUM)       (((CH_NUM) == XMC_SCU_ORC_START_ADC_CHANNEL) || \
 173:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                         ((CH_NUM) == XMC_SCU_ORC_END_ADC_CHANNEL) )  /**< Used to v
 174:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                                                       provided ADC 
 175:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                                                       within specif
 176:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                                                       end channel n
 177:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 178:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define XMC_SCU_INTERRUPT_EVENT_MAX            (32U)      /**< Maximum supported SCU events. */
 179:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 180:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define SCU_HIBERNATE_HDCR_HIBIOSEL_Size (4U)
 181:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 182:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN (0x2U)
 183:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 184:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define XMC_SCU_POWER_LSB13V (0.0058F)
 185:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #define XMC_SCU_POWER_LSB33V (0.0225F)
 186:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 187:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /**************************************************************************************************
 188:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * LOCAL DATA
 189:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  **************************************************************************************************
 190:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler_list[XMC_SCU_INTERRUPT_EVENT_MAX]; /**< For registe
 191:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                                                         functions o
 192:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                                                         occurrence.
 193:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 194:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /**************************************************************************************************
 195:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * LOCAL ROUTINES
 196:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  **************************************************************************************************
 197:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  #if defined(UC_ID)
 198:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* This is a non-weak function, which retrieves high precision external oscillator frequency. */
 199:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 200:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 201:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (OSCHP_FREQUENCY);
 202:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 203:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
 204:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 205:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 206:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** static void XMC_SCU_lDelay(uint32_t cycles);
 207:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 208:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /**************************************************************************************************
 209:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * API IMPLEMENTATION
 210:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  **************************************************************************************************
 211:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 212:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_lDelay(uint32_t delay)
 213:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
  27              	 .loc 1 213 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	.LVL0:
  32 0000 10B5     	 push {r4,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 4,-8
  36              	 .cfi_offset 14,-4
  37 0002 0446     	 mov r4,r0
 214:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t i;
 215:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 216:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SystemCoreClockUpdate();
  38              	 .loc 1 216 0
  39 0004 FFF7FEFF 	 bl SystemCoreClockUpdate
  40              	.LVL1:
 217:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   delay =  delay * (uint32_t)(SystemCoreClock / FREQ_1MHZ);
  41              	 .loc 1 217 0
  42 0008 074B     	 ldr r3,.L6
  43 000a 1B68     	 ldr r3,[r3]
  44 000c 0748     	 ldr r0,.L6+4
  45 000e A0FB0330 	 umull r3,r0,r0,r3
  46 0012 800C     	 lsrs r0,r0,#18
  47 0014 00FB04F0 	 mul r0,r0,r4
  48              	.LVL2:
 218:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 219:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   for (i = 0U; i < delay; ++i)
  49              	 .loc 1 219 0
  50 0018 20B1     	 cbz r0,.L1
  51 001a 0023     	 movs r3,#0
  52              	.LVL3:
  53              	.L3:
 220:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 221:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     __NOP();
  54              	 .loc 1 221 0 discriminator 3
  55              	
  56 001c 00BF     	 nop
  57              	
 219:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
  58              	 .loc 1 219 0 discriminator 3
  59              	 .thumb
  60 001e 0133     	 adds r3,r3,#1
  61              	.LVL4:
  62 0020 8342     	 cmp r3,r0
  63 0022 FBD1     	 bne .L3
  64              	.LVL5:
  65              	.L1:
  66 0024 10BD     	 pop {r4,pc}
  67              	.L7:
  68 0026 00BF     	 .align 2
  69              	.L6:
  70 0028 00000000 	 .word SystemCoreClock
  71 002c 83DE1B43 	 .word 1125899907
  72              	 .cfi_endproc
  73              	.LFE175:
  75              	 .section .text.XMC_SCU_INTERRUPT_EnableEvent,"ax",%progbits
  76              	 .align 2
  77              	 .global XMC_SCU_INTERRUPT_EnableEvent
  78              	 .thumb
  79              	 .thumb_func
  81              	XMC_SCU_INTERRUPT_EnableEvent:
  82              	.LFB176:
 222:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 223:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 224:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 225:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable the SCU event */
 226:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 227:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
  83              	 .loc 1 227 0
  84              	 .cfi_startproc
  85              	 
  86              	 
  87              	 
  88              	.LVL6:
 228:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_INTERRUPT->SRMSK |= (uint32_t)event;
  89              	 .loc 1 228 0
  90 0000 024A     	 ldr r2,.L9
  91 0002 9368     	 ldr r3,[r2,#8]
  92 0004 1843     	 orrs r0,r0,r3
  93              	.LVL7:
  94 0006 9060     	 str r0,[r2,#8]
  95 0008 7047     	 bx lr
  96              	.L10:
  97 000a 00BF     	 .align 2
  98              	.L9:
  99 000c 74400050 	 .word 1342193780
 100              	 .cfi_endproc
 101              	.LFE176:
 103              	 .section .text.XMC_SCU_INTERRUPT_DisableEvent,"ax",%progbits
 104              	 .align 2
 105              	 .global XMC_SCU_INTERRUPT_DisableEvent
 106              	 .thumb
 107              	 .thumb_func
 109              	XMC_SCU_INTERRUPT_DisableEvent:
 110              	.LFB177:
 229:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 230:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 231:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to disable the SCU event */
 232:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 233:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 111              	 .loc 1 233 0
 112              	 .cfi_startproc
 113              	 
 114              	 
 115              	 
 116              	.LVL8:
 234:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_INTERRUPT->SRMSK &= (uint32_t)~event;
 117              	 .loc 1 234 0
 118 0000 024A     	 ldr r2,.L12
 119 0002 9368     	 ldr r3,[r2,#8]
 120 0004 23EA0000 	 bic r0,r3,r0
 121              	.LVL9:
 122 0008 9060     	 str r0,[r2,#8]
 123 000a 7047     	 bx lr
 124              	.L13:
 125              	 .align 2
 126              	.L12:
 127 000c 74400050 	 .word 1342193780
 128              	 .cfi_endproc
 129              	.LFE177:
 131              	 .section .text.XMC_SCU_INTERRUPT_TriggerEvent,"ax",%progbits
 132              	 .align 2
 133              	 .global XMC_SCU_INTERRUPT_TriggerEvent
 134              	 .thumb
 135              	 .thumb_func
 137              	XMC_SCU_INTERRUPT_TriggerEvent:
 138              	.LFB178:
 235:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 236:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 237:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to trigger the SCU event */
 238:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 239:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 139              	 .loc 1 239 0
 140              	 .cfi_startproc
 141              	 
 142              	 
 143              	 
 144              	.LVL10:
 240:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_INTERRUPT->SRSET |= (uint32_t)event;
 145              	 .loc 1 240 0
 146 0000 024A     	 ldr r2,.L15
 147 0002 1369     	 ldr r3,[r2,#16]
 148 0004 1843     	 orrs r0,r0,r3
 149              	.LVL11:
 150 0006 1061     	 str r0,[r2,#16]
 151 0008 7047     	 bx lr
 152              	.L16:
 153 000a 00BF     	 .align 2
 154              	.L15:
 155 000c 74400050 	 .word 1342193780
 156              	 .cfi_endproc
 157              	.LFE178:
 159              	 .section .text.XMC_SCU_INTERUPT_GetEventStatus,"ax",%progbits
 160              	 .align 2
 161              	 .global XMC_SCU_INTERUPT_GetEventStatus
 162              	 .thumb
 163              	 .thumb_func
 165              	XMC_SCU_INTERUPT_GetEventStatus:
 166              	.LFB179:
 241:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 242:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 243:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to retrieve the SCU event status */
 244:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void)
 245:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 167              	 .loc 1 245 0
 168              	 .cfi_startproc
 169              	 
 170              	 
 171              	 
 246:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (SCU_INTERRUPT->SRRAW);
 172              	 .loc 1 246 0
 173 0000 014B     	 ldr r3,.L18
 174 0002 5868     	 ldr r0,[r3,#4]
 247:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 175              	 .loc 1 247 0
 176 0004 7047     	 bx lr
 177              	.L19:
 178 0006 00BF     	 .align 2
 179              	.L18:
 180 0008 74400050 	 .word 1342193780
 181              	 .cfi_endproc
 182              	.LFE179:
 184              	 .section .text.XMC_SCU_INTERRUPT_ClearEventStatus,"ax",%progbits
 185              	 .align 2
 186              	 .global XMC_SCU_INTERRUPT_ClearEventStatus
 187              	 .thumb
 188              	 .thumb_func
 190              	XMC_SCU_INTERRUPT_ClearEventStatus:
 191              	.LFB180:
 248:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 249:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to clear the SCU event status */
 250:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event)
 251:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 192              	 .loc 1 251 0
 193              	 .cfi_startproc
 194              	 
 195              	 
 196              	 
 197              	.LVL12:
 252:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_INTERRUPT->SRCLR = (uint32_t)event;
 198              	 .loc 1 252 0
 199 0000 014B     	 ldr r3,.L21
 200 0002 D860     	 str r0,[r3,#12]
 201 0004 7047     	 bx lr
 202              	.L22:
 203 0006 00BF     	 .align 2
 204              	.L21:
 205 0008 74400050 	 .word 1342193780
 206              	 .cfi_endproc
 207              	.LFE180:
 209              	 .section .text.XMC_SCU_GetBootMode,"ax",%progbits
 210              	 .align 2
 211              	 .global XMC_SCU_GetBootMode
 212              	 .thumb
 213              	 .thumb_func
 215              	XMC_SCU_GetBootMode:
 216              	.LFB181:
 253:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 254:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 255:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 256:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to retrieve the currently deployed device bootmode */
 257:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_GetBootMode(void)
 258:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 217              	 .loc 1 258 0
 218              	 .cfi_startproc
 219              	 
 220              	 
 221              	 
 259:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (uint32_t)(SCU_GENERAL->STCON & SCU_GENERAL_STCON_SWCON_Msk);
 222              	 .loc 1 259 0
 223 0000 024B     	 ldr r3,.L24
 224 0002 1869     	 ldr r0,[r3,#16]
 260:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 225              	 .loc 1 260 0
 226 0004 00F47060 	 and r0,r0,#3840
 227 0008 7047     	 bx lr
 228              	.L25:
 229 000a 00BF     	 .align 2
 230              	.L24:
 231 000c 00400050 	 .word 1342193664
 232              	 .cfi_endproc
 233              	.LFE181:
 235              	 .section .text.XMC_SCU_SetBootMode,"ax",%progbits
 236              	 .align 2
 237              	 .global XMC_SCU_SetBootMode
 238              	 .thumb
 239              	 .thumb_func
 241              	XMC_SCU_SetBootMode:
 242              	.LFB182:
 261:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 262:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to program a new device bootmode */
 263:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t bootmode)
 264:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 243              	 .loc 1 264 0
 244              	 .cfi_startproc
 245              	 
 246              	 
 247              	 
 248              	.LVL13:
 265:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->STCON = (uint32_t)bootmode;
 249              	 .loc 1 265 0
 250 0000 014B     	 ldr r3,.L27
 251 0002 1861     	 str r0,[r3,#16]
 252 0004 7047     	 bx lr
 253              	.L28:
 254 0006 00BF     	 .align 2
 255              	.L27:
 256 0008 00400050 	 .word 1342193664
 257              	 .cfi_endproc
 258              	.LFE182:
 260              	 .section .text.XMC_SCU_ReadGPR,"ax",%progbits
 261              	 .align 2
 262              	 .global XMC_SCU_ReadGPR
 263              	 .thumb
 264              	 .thumb_func
 266              	XMC_SCU_ReadGPR:
 267              	.LFB183:
 266:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 267:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 268:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to read from General purpose register */
 269:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_ReadGPR(const uint32_t index)
 270:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 268              	 .loc 1 270 0
 269              	 .cfi_startproc
 270              	 
 271              	 
 272              	 
 273              	.LVL14:
 271:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (SCU_GENERAL->GPR[index]);
 274              	 .loc 1 271 0
 275 0000 8000     	 lsls r0,r0,#2
 276              	.LVL15:
 277 0002 014B     	 ldr r3,.L30
 278 0004 1858     	 ldr r0,[r3,r0]
 272:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 279              	 .loc 1 272 0
 280 0006 7047     	 bx lr
 281              	.L31:
 282              	 .align 2
 283              	.L30:
 284 0008 2C400050 	 .word 1342193708
 285              	 .cfi_endproc
 286              	.LFE183:
 288              	 .section .text.XMC_SCU_WriteGPR,"ax",%progbits
 289              	 .align 2
 290              	 .global XMC_SCU_WriteGPR
 291              	 .thumb
 292              	 .thumb_func
 294              	XMC_SCU_WriteGPR:
 295              	.LFB184:
 273:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 274:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to write to GPR */
 275:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data)
 276:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 296              	 .loc 1 276 0
 297              	 .cfi_startproc
 298              	 
 299              	 
 300              	 
 301              	.LVL16:
 277:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->GPR[index] = data;
 302              	 .loc 1 277 0
 303 0000 8000     	 lsls r0,r0,#2
 304              	.LVL17:
 305 0002 014B     	 ldr r3,.L33
 306 0004 1950     	 str r1,[r3,r0]
 307 0006 7047     	 bx lr
 308              	.L34:
 309              	 .align 2
 310              	.L33:
 311 0008 2C400050 	 .word 1342193708
 312              	 .cfi_endproc
 313              	.LFE184:
 315              	 .section .text.XMC_SCU_EnableOutOfRangeComparator,"ax",%progbits
 316              	 .align 2
 317              	 .global XMC_SCU_EnableOutOfRangeComparator
 318              	 .thumb
 319              	 .thumb_func
 321              	XMC_SCU_EnableOutOfRangeComparator:
 322              	.LFB185:
 278:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 279:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 280:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 281:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 282:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 323              	 .loc 1 282 0
 324              	 .cfi_startproc
 325              	 
 326              	 
 327              	 
 328              	.LVL18:
 329 0000 8000     	 lsls r0,r0,#2
 330              	.LVL19:
 331 0002 00F1A040 	 add r0,r0,#1342177280
 332 0006 00F58040 	 add r0,r0,#16384
 283:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Group Number",XMC_SCU_CHECK_GRPNUM(group));
 284:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Channel Number",XMC_SCU_CHECK_CHNUM(channel))
 285:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****    
 286:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] |= (uint32_t)(1UL << channel);
 333              	 .loc 1 286 0
 334 000a D0F8A030 	 ldr r3,[r0,#160]
 335 000e 0122     	 movs r2,#1
 336 0010 8A40     	 lsls r2,r2,r1
 337 0012 1343     	 orrs r3,r3,r2
 338 0014 C0F8A030 	 str r3,[r0,#160]
 339 0018 7047     	 bx lr
 340              	 .cfi_endproc
 341              	.LFE185:
 343 001a 00BF     	 .section .text.XMC_SCU_DisableOutOfRangeComparator,"ax",%progbits
 344              	 .align 2
 345              	 .global XMC_SCU_DisableOutOfRangeComparator
 346              	 .thumb
 347              	 .thumb_func
 349              	XMC_SCU_DisableOutOfRangeComparator:
 350              	.LFB186:
 287:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 288:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 289:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 290:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 291:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 351              	 .loc 1 291 0
 352              	 .cfi_startproc
 353              	 
 354              	 
 355              	 
 356              	.LVL20:
 357 0000 8000     	 lsls r0,r0,#2
 358              	.LVL21:
 359 0002 00F1A040 	 add r0,r0,#1342177280
 360 0006 00F58040 	 add r0,r0,#16384
 292:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Group Number",XMC_SCU_CHECK_GRPNUM(group));
 293:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Channel Number",XMC_SCU_CHECK_CHNUM(channel
 294:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****    
 295:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] &= (uint32_t)~(1UL << channel);
 361              	 .loc 1 295 0
 362 000a D0F8A030 	 ldr r3,[r0,#160]
 363 000e 0122     	 movs r2,#1
 364 0010 8A40     	 lsls r2,r2,r1
 365 0012 23EA0203 	 bic r3,r3,r2
 366 0016 C0F8A030 	 str r3,[r0,#160]
 367 001a 7047     	 bx lr
 368              	 .cfi_endproc
 369              	.LFE186:
 371              	 .section .text.XMC_SCU_CalibrateTemperatureSensor,"ax",%progbits
 372              	 .align 2
 373              	 .global XMC_SCU_CalibrateTemperatureSensor
 374              	 .thumb
 375              	 .thumb_func
 377              	XMC_SCU_CalibrateTemperatureSensor:
 378              	.LFB187:
 296:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 297:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 298:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to calibrate temperature sensor */
 299:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain)
 300:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 379              	 .loc 1 300 0
 380              	 .cfi_startproc
 381              	 
 382              	 
 383              	 
 384              	.LVL22:
 301:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 302:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                         (uint32_t)(gain << SCU_GENERAL_DTSCON_GAIN_Pos) |
 385              	 .loc 1 302 0
 386 0000 C902     	 lsls r1,r1,#11
 387              	.LVL23:
 388 0002 41F40801 	 orr r1,r1,#8912896
 303:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                         (uint32_t)(0x4UL << SCU_GENERAL_DTSCON_REFTRIM_Pos) |
 389              	 .loc 1 303 0
 390 0006 41EA0010 	 orr r0,r1,r0,lsl#4
 391              	.LVL24:
 301:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 392              	 .loc 1 301 0
 393 000a 024B     	 ldr r3,.L38
 394 000c C3F88C00 	 str r0,[r3,#140]
 395 0010 7047     	 bx lr
 396              	.L39:
 397 0012 00BF     	 .align 2
 398              	.L38:
 399 0014 00400050 	 .word 1342193664
 400              	 .cfi_endproc
 401              	.LFE187:
 403              	 .section .text.XMC_SCU_EnableTemperatureSensor,"ax",%progbits
 404              	 .align 2
 405              	 .global XMC_SCU_EnableTemperatureSensor
 406              	 .thumb
 407              	 .thumb_func
 409              	XMC_SCU_EnableTemperatureSensor:
 410              	.LFB188:
 304:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                         (uint32_t)(0x8UL << SCU_GENERAL_DTSCON_BGTRIM_Pos));
 305:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 306:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable die temperature measurement by powering the DTS module. */
 307:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_EnableTemperatureSensor(void)
 308:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 411              	 .loc 1 308 0
 412              	 .cfi_startproc
 413              	 
 414              	 
 415              	 
 309:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~(SCU_GENERAL_DTSCON_PWD_Msk);
 416              	 .loc 1 309 0
 417 0000 034A     	 ldr r2,.L41
 418 0002 D2F88C30 	 ldr r3,[r2,#140]
 419 0006 23F00103 	 bic r3,r3,#1
 420 000a C2F88C30 	 str r3,[r2,#140]
 421 000e 7047     	 bx lr
 422              	.L42:
 423              	 .align 2
 424              	.L41:
 425 0010 00400050 	 .word 1342193664
 426              	 .cfi_endproc
 427              	.LFE188:
 429              	 .section .text.XMC_SCU_DisableTemperatureSensor,"ax",%progbits
 430              	 .align 2
 431              	 .global XMC_SCU_DisableTemperatureSensor
 432              	 .thumb
 433              	 .thumb_func
 435              	XMC_SCU_DisableTemperatureSensor:
 436              	.LFB189:
 310:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 311:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 312:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to disable die temperature measurement by powering the DTS module off. */
 313:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_DisableTemperatureSensor(void)
 314:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 437              	 .loc 1 314 0
 438              	 .cfi_startproc
 439              	 
 440              	 
 441              	 
 315:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_PWD_Msk;
 442              	 .loc 1 315 0
 443 0000 034A     	 ldr r2,.L44
 444 0002 D2F88C30 	 ldr r3,[r2,#140]
 445 0006 43F00103 	 orr r3,r3,#1
 446 000a C2F88C30 	 str r3,[r2,#140]
 447 000e 7047     	 bx lr
 448              	.L45:
 449              	 .align 2
 450              	.L44:
 451 0010 00400050 	 .word 1342193664
 452              	 .cfi_endproc
 453              	.LFE189:
 455              	 .section .text.XMC_SCU_IsTemperatureSensorEnabled,"ax",%progbits
 456              	 .align 2
 457              	 .global XMC_SCU_IsTemperatureSensorEnabled
 458              	 .thumb
 459              	 .thumb_func
 461              	XMC_SCU_IsTemperatureSensorEnabled:
 462              	.LFB190:
 316:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 317:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 318:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to provide the die temperature sensor power status. */
 319:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorEnabled(void)
 320:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 463              	 .loc 1 320 0
 464              	 .cfi_startproc
 465              	 
 466              	 
 467              	 
 321:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return ((SCU_GENERAL->DTSCON & SCU_GENERAL_DTSCON_PWD_Msk) == 0U);
 468              	 .loc 1 321 0
 469 0000 034B     	 ldr r3,.L47
 470 0002 D3F88C00 	 ldr r0,[r3,#140]
 471 0006 80F00100 	 eor r0,r0,#1
 322:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 472              	 .loc 1 322 0
 473 000a 00F00100 	 and r0,r0,#1
 474 000e 7047     	 bx lr
 475              	.L48:
 476              	 .align 2
 477              	.L47:
 478 0010 00400050 	 .word 1342193664
 479              	 .cfi_endproc
 480              	.LFE190:
 482              	 .section .text.XMC_SCU_IsTemperatureSensorReady,"ax",%progbits
 483              	 .align 2
 484              	 .global XMC_SCU_IsTemperatureSensorReady
 485              	 .thumb
 486              	 .thumb_func
 488              	XMC_SCU_IsTemperatureSensorReady:
 489              	.LFB191:
 323:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 324:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to check if the die temperature sensor is ready to start a measurement. */
 325:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorReady(void)
 326:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 490              	 .loc 1 326 0
 491              	 .cfi_startproc
 492              	 
 493              	 
 494              	 
 327:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RDY_Msk) != 0U);
 495              	 .loc 1 327 0
 496 0000 024B     	 ldr r3,.L50
 497 0002 D3F89000 	 ldr r0,[r3,#144]
 328:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 498              	 .loc 1 328 0
 499 0006 C0F38030 	 ubfx r0,r0,#14,#1
 500 000a 7047     	 bx lr
 501              	.L51:
 502              	 .align 2
 503              	.L50:
 504 000c 00400050 	 .word 1342193664
 505              	 .cfi_endproc
 506              	.LFE191:
 508              	 .section .text.XMC_SCU_GetTemperatureMeasurement,"ax",%progbits
 509              	 .align 2
 510              	 .global XMC_SCU_GetTemperatureMeasurement
 511              	 .thumb
 512              	 .thumb_func
 514              	XMC_SCU_GetTemperatureMeasurement:
 515              	.LFB193:
 329:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to start device temperature measurements */
 330:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void)
 331:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 332:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_STATUS_t status = XMC_SCU_STATUS_OK;
 333:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 334:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 335:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 336:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 337:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 338:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****    
 339:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorBusy() == true)
 340:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 341:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     status = XMC_SCU_STATUS_BUSY;
 342:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 343:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 344:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* And start the measurement */
 345:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_START_Msk;
 346:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 347:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (status);
 348:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 349:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 350:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to retrieve the temperature measured */
 351:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_GetTemperatureMeasurement(void)
 352:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 516              	 .loc 1 352 0
 517              	 .cfi_startproc
 518              	 
 519              	 
 520 0000 08B5     	 push {r3,lr}
 521              	.LCFI1:
 522              	 .cfi_def_cfa_offset 8
 523              	 .cfi_offset 3,-8
 524              	 .cfi_offset 14,-4
 353:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t temperature;
 354:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 355:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 525              	 .loc 1 355 0
 526 0002 FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 527              	.LVL25:
 528 0006 28B1     	 cbz r0,.L54
 356:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 357:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     temperature = 0x7FFFFFFFUL;
 358:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 359:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
 360:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 361:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     temperature = (uint32_t)((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RESULT_Msk) >> SCU_GENERAL
 529              	 .loc 1 361 0
 530 0008 044B     	 ldr r3,.L56
 531 000a D3F89000 	 ldr r0,[r3,#144]
 532 000e C0F30900 	 ubfx r0,r0,#0,#10
 533              	.LVL26:
 534 0012 08BD     	 pop {r3,pc}
 535              	.LVL27:
 536              	.L54:
 357:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 537              	 .loc 1 357 0
 538 0014 6FF00040 	 mvn r0,#-2147483648
 539              	.LVL28:
 362:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 363:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 364:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return ((uint32_t)temperature);
 365:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 540              	 .loc 1 365 0
 541 0018 08BD     	 pop {r3,pc}
 542              	.L57:
 543 001a 00BF     	 .align 2
 544              	.L56:
 545 001c 00400050 	 .word 1342193664
 546              	 .cfi_endproc
 547              	.LFE193:
 549              	 .section .text.XMC_SCU_IsTemperatureSensorBusy,"ax",%progbits
 550              	 .align 2
 551              	 .global XMC_SCU_IsTemperatureSensorBusy
 552              	 .thumb
 553              	 .thumb_func
 555              	XMC_SCU_IsTemperatureSensorBusy:
 556              	.LFB194:
 366:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 367:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to know whether Die temperature sensor is busy */
 368:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorBusy(void)
 369:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 557              	 .loc 1 369 0
 558              	 .cfi_startproc
 559              	 
 560              	 
 561              	 
 370:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_BUSY_Msk) != 0U);
 562              	 .loc 1 370 0
 563 0000 024B     	 ldr r3,.L59
 564 0002 D3F89000 	 ldr r0,[r3,#144]
 371:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 565              	 .loc 1 371 0
 566 0006 C0F3C030 	 ubfx r0,r0,#15,#1
 567 000a 7047     	 bx lr
 568              	.L60:
 569              	 .align 2
 570              	.L59:
 571 000c 00400050 	 .word 1342193664
 572              	 .cfi_endproc
 573              	.LFE194:
 575              	 .section .text.XMC_SCU_StartTemperatureMeasurement,"ax",%progbits
 576              	 .align 2
 577              	 .global XMC_SCU_StartTemperatureMeasurement
 578              	 .thumb
 579              	 .thumb_func
 581              	XMC_SCU_StartTemperatureMeasurement:
 582              	.LFB192:
 331:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_STATUS_t status = XMC_SCU_STATUS_OK;
 583              	 .loc 1 331 0
 584              	 .cfi_startproc
 585              	 
 586              	 
 587 0000 10B5     	 push {r4,lr}
 588              	.LCFI2:
 589              	 .cfi_def_cfa_offset 8
 590              	 .cfi_offset 4,-8
 591              	 .cfi_offset 14,-4
 592              	.LVL29:
 334:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 593              	 .loc 1 334 0
 594 0002 FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 595              	.LVL30:
 596 0006 0446     	 mov r4,r0
 597              	.LVL31:
 339:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 598              	 .loc 1 339 0
 599 0008 FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorBusy
 600              	.LVL32:
 601 000c 18B9     	 cbnz r0,.L63
 334:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 602              	 .loc 1 334 0
 603 000e 84F00100 	 eor r0,r4,#1
 332:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 604              	 .loc 1 332 0
 605 0012 C0B2     	 uxtb r0,r0
 606 0014 00E0     	 b .L62
 607              	.L63:
 341:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 608              	 .loc 1 341 0
 609 0016 0220     	 movs r0,#2
 610              	.L62:
 611              	.LVL33:
 345:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 612              	 .loc 1 345 0
 613 0018 034A     	 ldr r2,.L65
 614 001a D2F88C30 	 ldr r3,[r2,#140]
 615 001e 43F00203 	 orr r3,r3,#2
 616 0022 C2F88C30 	 str r3,[r2,#140]
 348:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 617              	 .loc 1 348 0
 618 0026 10BD     	 pop {r4,pc}
 619              	.L66:
 620              	 .align 2
 621              	.L65:
 622 0028 00400050 	 .word 1342193664
 623              	 .cfi_endproc
 624              	.LFE192:
 626              	 .section .text.XMC_SCU_WriteToRetentionMemory,"ax",%progbits
 627              	 .align 2
 628              	 .global XMC_SCU_WriteToRetentionMemory
 629              	 .thumb
 630              	 .thumb_func
 632              	XMC_SCU_WriteToRetentionMemory:
 633              	.LFB195:
 372:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 373:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 374:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if defined(SCU_GENERAL_DTEMPLIM_LOWER_Msk) && defined(SCU_GENERAL_DTEMPLIM_UPPER_Msk)
 375:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to determine if device temperature has gone past the ceiling */
 376:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_HighTemperature(void)
 377:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 378:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   bool ret_val;
 379:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t   dtscon;
 380:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t   dtempalarm;
 381:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 382:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 383:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 384:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   ret_val = false;
 385:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 386:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */  
 387:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if(dtscon)
 388:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 389:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Powered down - return false */
 390:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     ret_val = false;
 391:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 392:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
 393:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 394:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 395:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 396:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_OVERFL_Msk;
 397:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     
 398:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     if(dtempalarm)
 399:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
 400:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       ret_val = true;
 401:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
 402:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     else
 403:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
 404:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       ret_val = false;
 405:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
 406:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 407:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (ret_val);
 408:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 409:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 410:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to program raw values of temperature limits into the DTS */
 411:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp)
 412:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 413:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Power up the DTS module */
 414:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~SCU_GENERAL_DTSCON_PWD_Msk;
 415:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = 0;
 416:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = (lower_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk);
 417:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM |= (uint32_t)((upper_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk) << SCU_GENERAL_
 418:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 419:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 420:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to determine if device temperature has gone below the stipulated limit */
 421:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_LowTemperature(void)
 422:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 423:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   bool ret_val;
 424:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t   dtscon;
 425:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t   dtempalarm;
 426:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 427:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 428:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 429:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   ret_val = false;
 430:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 431:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */  
 432:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if(dtscon)
 433:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 434:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Powered down - return false */
 435:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     ret_val = false;
 436:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 437:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
 438:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 439:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 440:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 441:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_UNDERFL_Msk;
 442:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     
 443:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     if(dtempalarm)
 444:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
 445:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       ret_val = true;
 446:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
 447:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     else
 448:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
 449:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       ret_val = false;
 450:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
 451:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 452:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 453:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (ret_val);
 454:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 455:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif  
 456:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 457:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to write into Retention memory in hibernate domain */
 458:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data)
 459:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 634              	 .loc 1 459 0
 635              	 .cfi_startproc
 636              	 
 637              	 
 638              	 
 639              	.LVL34:
 460:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t rmacr;
 461:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 462:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Get the address right */  
 463:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   rmacr = (uint32_t)((address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 640              	 .loc 1 463 0
 641 0000 0004     	 lsls r0,r0,#16
 642              	.LVL35:
 643 0002 00F47020 	 and r0,r0,#983040
 644              	.LVL36:
 464:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 465:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 466:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   rmacr |= (uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk);
 645              	 .loc 1 466 0
 646 0006 40F00100 	 orr r0,r0,#1
 647              	.LVL37:
 467:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 468:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Write desired data into RMDATA register */  
 469:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->RMDATA = data;
 648              	 .loc 1 469 0
 649 000a 064B     	 ldr r3,.L70
 650 000c C3F8CC10 	 str r1,[r3,#204]
 470:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 471:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Write address & direction of transfer into RMACR register */  
 472:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 651              	 .loc 1 472 0
 652 0010 C3F8C800 	 str r0,[r3,#200]
 473:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 474:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 475:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 653              	 .loc 1 475 0
 654 0014 1A46     	 mov r2,r3
 655              	.L68:
 656              	 .loc 1 475 0 is_stmt 0 discriminator 1
 657 0016 D2F8C430 	 ldr r3,[r2,#196]
 658 001a 13F4005F 	 tst r3,#8192
 659 001e FAD1     	 bne .L68
 476:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 477:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 478:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 660              	 .loc 1 478 0 is_stmt 1
 661 0020 7047     	 bx lr
 662              	.L71:
 663 0022 00BF     	 .align 2
 664              	.L70:
 665 0024 00400050 	 .word 1342193664
 666              	 .cfi_endproc
 667              	.LFE195:
 669              	 .section .text.XMC_SCU_ReadFromRetentionMemory,"ax",%progbits
 670              	 .align 2
 671              	 .global XMC_SCU_ReadFromRetentionMemory
 672              	 .thumb
 673              	 .thumb_func
 675              	XMC_SCU_ReadFromRetentionMemory:
 676              	.LFB196:
 479:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 480:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to read from Retention memory in hibernate domain */
 481:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address)
 482:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 677              	 .loc 1 482 0
 678              	 .cfi_startproc
 679              	 
 680              	 
 681              	 
 682              	.LVL38:
 483:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t rmacr;
 484:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 485:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Get the address right */  
 486:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   rmacr = ((uint32_t)(address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 683              	 .loc 1 486 0
 684 0000 0004     	 lsls r0,r0,#16
 685              	.LVL39:
 487:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 488:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 489:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   rmacr &= ~((uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk));
 686              	 .loc 1 489 0
 687 0002 00F47020 	 and r0,r0,#983040
 688              	.LVL40:
 490:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 491:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Writing an adress & direction of transfer into RMACR register */  
 492:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 689              	 .loc 1 492 0
 690 0006 064B     	 ldr r3,.L75
 691 0008 C3F8C800 	 str r0,[r3,#200]
 493:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 494:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 495:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 692              	 .loc 1 495 0
 693 000c 1A46     	 mov r2,r3
 694              	.L73:
 695              	 .loc 1 495 0 is_stmt 0 discriminator 1
 696 000e D2F8C430 	 ldr r3,[r2,#196]
 697 0012 13F4005F 	 tst r3,#8192
 698 0016 FAD1     	 bne .L73
 496:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 497:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 498:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 499:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (SCU_GENERAL->RMDATA);
 699              	 .loc 1 499 0 is_stmt 1
 700 0018 014B     	 ldr r3,.L75
 701 001a D3F8CC00 	 ldr r0,[r3,#204]
 702              	.LVL41:
 500:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 703              	 .loc 1 500 0
 704 001e 7047     	 bx lr
 705              	.L76:
 706              	 .align 2
 707              	.L75:
 708 0020 00400050 	 .word 1342193664
 709              	 .cfi_endproc
 710              	.LFE196:
 712              	 .section .text.XMC_SCU_TRAP_Enable,"ax",%progbits
 713              	 .align 2
 714              	 .global XMC_SCU_TRAP_Enable
 715              	 .thumb
 716              	 .thumb_func
 718              	XMC_SCU_TRAP_Enable:
 719              	.LFB198:
 501:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 502:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to initialize the clock tree */
 503:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config)
 504:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 505:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("", config->fsys_clkdiv != 0);
 506:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("", config->fcpu_clkdiv != 0);
 507:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("", config->fccu_clkdiv != 0);
 508:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("", config->fperipheral_clkdiv != 0);
 509:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.p_div != 0) &&
 510:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 511:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 512:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.n_div != 0) &&
 513:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 514:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 515:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("", (config->syspll_config.k_div != 0) &&
 516:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                  ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 517:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 518:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("", ((config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL) ||
 519:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                  (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_OFI)) &&
 520:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                  ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 521:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 522:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("", ((config->fstdby_clksrc == XMC_SCU_HIB_STDBYCLKSRC_OSCULP) && (config->enable_oscu
 523:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                  (config->fstdby_clksrc != XMC_SCU_HIB_STDBYCLKSRC_OSCULP));
 524:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.clksrc == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) &&
 525:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                  (config->enable_oschp == true)) || (config->syspll_config.clksrc != XMC_SCU_CLOCK_
 526:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 527:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_OFI);
 528:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 529:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_HIB_EnableHibernateDomain();
 530:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 531:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (config->enable_osculp == true)
 532:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 533:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     XMC_SCU_CLOCK_EnableLowPowerOscillator();
 534:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     while (XMC_SCU_CLOCK_IsLowPowerOscillatorStable() == false);
 535:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 536:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 537:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_HIB_SetStandbyClockSource(config->fstdby_clksrc);  
 538:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while (XMC_SCU_GetMirrorStatus() != 0)
 539:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 540:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until update of the stanby clock source is done in the HIB domain */    
 541:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 542:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 543:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_SetBackupClockCalibrationMode(config->calibration_mode);
 544:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 545:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockDivider((uint32_t)config->fsys_clkdiv);
 546:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_SetCpuClockDivider((uint32_t)config->fcpu_clkdiv);
 547:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_SetCcuClockDivider((uint32_t)config->fccu_clkdiv);
 548:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_SetPeripheralClockDivider((uint32_t)config->fperipheral_clkdiv);
 549:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 550:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (config->enable_oschp == true)
 551:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 552:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     XMC_SCU_CLOCK_EnableHighPerformanceOscillator();
 553:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     while(XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable() == false);
 554:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 555:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 556:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED)
 557:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 558:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     XMC_SCU_CLOCK_DisableSystemPll();
 559:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 560:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
 561:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 562:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 563:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     XMC_SCU_CLOCK_EnableSystemPll();
 564:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 565:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                  config->syspll_config.mode,
 566:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                  (uint32_t)config->syspll_config.p_div,
 567:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                  (uint32_t)config->syspll_config.n_div,
 568:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                  (uint32_t)config->syspll_config.k_div);
 569:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 570:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 571:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* use SYSPLL? */
 572:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL)
 573:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 574:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_PLL);    
 575:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 576:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SystemCoreClockUpdate();
 577:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 578:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 579:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable a trap source */
 580:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_TRAP_Enable(const uint32_t trap)
 581:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 720              	 .loc 1 581 0
 721              	 .cfi_startproc
 722              	 
 723              	 
 724              	 
 725              	.LVL42:
 582:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_TRAP->TRAPDIS &= (uint32_t)~trap;
 726              	 .loc 1 582 0
 727 0000 024A     	 ldr r2,.L78
 728 0002 9368     	 ldr r3,[r2,#8]
 729 0004 23EA0000 	 bic r0,r3,r0
 730              	.LVL43:
 731 0008 9060     	 str r0,[r2,#8]
 732 000a 7047     	 bx lr
 733              	.L79:
 734              	 .align 2
 735              	.L78:
 736 000c 60410050 	 .word 1342194016
 737              	 .cfi_endproc
 738              	.LFE198:
 740              	 .section .text.XMC_SCU_TRAP_Disable,"ax",%progbits
 741              	 .align 2
 742              	 .global XMC_SCU_TRAP_Disable
 743              	 .thumb
 744              	 .thumb_func
 746              	XMC_SCU_TRAP_Disable:
 747              	.LFB199:
 583:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 584:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 585:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to disable a trap source */
 586:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_TRAP_Disable(const uint32_t trap)
 587:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 748              	 .loc 1 587 0
 749              	 .cfi_startproc
 750              	 
 751              	 
 752              	 
 753              	.LVL44:
 588:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_TRAP->TRAPDIS |= (uint32_t)trap;
 754              	 .loc 1 588 0
 755 0000 024A     	 ldr r2,.L81
 756 0002 9368     	 ldr r3,[r2,#8]
 757 0004 1843     	 orrs r0,r0,r3
 758              	.LVL45:
 759 0006 9060     	 str r0,[r2,#8]
 760 0008 7047     	 bx lr
 761              	.L82:
 762 000a 00BF     	 .align 2
 763              	.L81:
 764 000c 60410050 	 .word 1342194016
 765              	 .cfi_endproc
 766              	.LFE199:
 768              	 .section .text.XMC_SCU_TRAP_GetStatus,"ax",%progbits
 769              	 .align 2
 770              	 .global XMC_SCU_TRAP_GetStatus
 771              	 .thumb
 772              	 .thumb_func
 774              	XMC_SCU_TRAP_GetStatus:
 775              	.LFB200:
 589:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 590:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 591:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to determine if a trap source has generated event */
 592:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_TRAP_GetStatus(void)
 593:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 776              	 .loc 1 593 0
 777              	 .cfi_startproc
 778              	 
 779              	 
 780              	 
 594:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (SCU_TRAP->TRAPRAW);
 781              	 .loc 1 594 0
 782 0000 014B     	 ldr r3,.L84
 783 0002 5868     	 ldr r0,[r3,#4]
 595:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 784              	 .loc 1 595 0
 785 0004 7047     	 bx lr
 786              	.L85:
 787 0006 00BF     	 .align 2
 788              	.L84:
 789 0008 60410050 	 .word 1342194016
 790              	 .cfi_endproc
 791              	.LFE200:
 793              	 .section .text.XMC_SCU_TRAP_Trigger,"ax",%progbits
 794              	 .align 2
 795              	 .global XMC_SCU_TRAP_Trigger
 796              	 .thumb
 797              	 .thumb_func
 799              	XMC_SCU_TRAP_Trigger:
 800              	.LFB201:
 596:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 597:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to manually trigger a trap event */
 598:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_TRAP_Trigger(const uint32_t trap)
 599:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 801              	 .loc 1 599 0
 802              	 .cfi_startproc
 803              	 
 804              	 
 805              	 
 806              	.LVL46:
 600:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_TRAP->TRAPSET = (uint32_t)trap;
 807              	 .loc 1 600 0
 808 0000 014B     	 ldr r3,.L87
 809 0002 1861     	 str r0,[r3,#16]
 810 0004 7047     	 bx lr
 811              	.L88:
 812 0006 00BF     	 .align 2
 813              	.L87:
 814 0008 60410050 	 .word 1342194016
 815              	 .cfi_endproc
 816              	.LFE201:
 818              	 .section .text.XMC_SCU_TRAP_ClearStatus,"ax",%progbits
 819              	 .align 2
 820              	 .global XMC_SCU_TRAP_ClearStatus
 821              	 .thumb
 822              	 .thumb_func
 824              	XMC_SCU_TRAP_ClearStatus:
 825              	.LFB202:
 601:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 602:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 603:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to clear a trap event */
 604:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap)
 605:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 826              	 .loc 1 605 0
 827              	 .cfi_startproc
 828              	 
 829              	 
 830              	 
 831              	.LVL47:
 606:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_TRAP->TRAPCLR = (uint32_t)trap;
 832              	 .loc 1 606 0
 833 0000 014B     	 ldr r3,.L90
 834 0002 D860     	 str r0,[r3,#12]
 835 0004 7047     	 bx lr
 836              	.L91:
 837 0006 00BF     	 .align 2
 838              	.L90:
 839 0008 60410050 	 .word 1342194016
 840              	 .cfi_endproc
 841              	.LFE202:
 843              	 .section .text.XMC_SCU_PARITY_ClearStatus,"ax",%progbits
 844              	 .align 2
 845              	 .global XMC_SCU_PARITY_ClearStatus
 846              	 .thumb
 847              	 .thumb_func
 849              	XMC_SCU_PARITY_ClearStatus:
 850              	.LFB203:
 607:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 608:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 609:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to clear parity error event */
 610:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory)
 611:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 851              	 .loc 1 611 0
 852              	 .cfi_startproc
 853              	 
 854              	 
 855              	 
 856              	.LVL48:
 612:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PARITY->PEFLAG |= (uint32_t)memory; 
 857              	 .loc 1 612 0
 858 0000 024A     	 ldr r2,.L93
 859 0002 5369     	 ldr r3,[r2,#20]
 860 0004 1843     	 orrs r0,r0,r3
 861              	.LVL49:
 862 0006 5061     	 str r0,[r2,#20]
 863 0008 7047     	 bx lr
 864              	.L94:
 865 000a 00BF     	 .align 2
 866              	.L93:
 867 000c 3C410050 	 .word 1342193980
 868              	 .cfi_endproc
 869              	.LFE203:
 871              	 .section .text.XMC_SCU_PARITY_GetStatus,"ax",%progbits
 872              	 .align 2
 873              	 .global XMC_SCU_PARITY_GetStatus
 874              	 .thumb
 875              	 .thumb_func
 877              	XMC_SCU_PARITY_GetStatus:
 878              	.LFB204:
 613:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 614:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 615:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to determine if the specified parity error has occured or not */
 616:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_PARITY_GetStatus(void)
 617:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 879              	 .loc 1 617 0
 880              	 .cfi_startproc
 881              	 
 882              	 
 883              	 
 618:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (SCU_PARITY->PEFLAG);
 884              	 .loc 1 618 0
 885 0000 014B     	 ldr r3,.L96
 886 0002 5869     	 ldr r0,[r3,#20]
 619:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** } 
 887              	 .loc 1 619 0
 888 0004 7047     	 bx lr
 889              	.L97:
 890 0006 00BF     	 .align 2
 891              	.L96:
 892 0008 3C410050 	 .word 1342193980
 893              	 .cfi_endproc
 894              	.LFE204:
 896              	 .section .text.XMC_SCU_PARITY_Enable,"ax",%progbits
 897              	 .align 2
 898              	 .global XMC_SCU_PARITY_Enable
 899              	 .thumb
 900              	 .thumb_func
 902              	XMC_SCU_PARITY_Enable:
 903              	.LFB205:
 620:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 621:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable parity error checking for the selected on-chip RAM type */
 622:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_PARITY_Enable(const uint32_t memory)
 623:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 904              	 .loc 1 623 0
 905              	 .cfi_startproc
 906              	 
 907              	 
 908              	 
 909              	.LVL50:
 624:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PARITY->PEEN |= (uint32_t)memory; 
 910              	 .loc 1 624 0
 911 0000 024A     	 ldr r2,.L99
 912 0002 1368     	 ldr r3,[r2]
 913 0004 1843     	 orrs r0,r0,r3
 914              	.LVL51:
 915 0006 1060     	 str r0,[r2]
 916 0008 7047     	 bx lr
 917              	.L100:
 918 000a 00BF     	 .align 2
 919              	.L99:
 920 000c 3C410050 	 .word 1342193980
 921              	 .cfi_endproc
 922              	.LFE205:
 924              	 .section .text.XMC_SCU_PARITY_Disable,"ax",%progbits
 925              	 .align 2
 926              	 .global XMC_SCU_PARITY_Disable
 927              	 .thumb
 928              	 .thumb_func
 930              	XMC_SCU_PARITY_Disable:
 931              	.LFB206:
 625:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 626:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 627:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to disable parity error checking for the selected on-chip RAM type */
 628:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_PARITY_Disable(const uint32_t memory)
 629:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 932              	 .loc 1 629 0
 933              	 .cfi_startproc
 934              	 
 935              	 
 936              	 
 937              	.LVL52:
 630:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PARITY->PEEN &= (uint32_t)~memory; 
 938              	 .loc 1 630 0
 939 0000 024A     	 ldr r2,.L102
 940 0002 1368     	 ldr r3,[r2]
 941 0004 23EA0000 	 bic r0,r3,r0
 942              	.LVL53:
 943 0008 1060     	 str r0,[r2]
 944 000a 7047     	 bx lr
 945              	.L103:
 946              	 .align 2
 947              	.L102:
 948 000c 3C410050 	 .word 1342193980
 949              	 .cfi_endproc
 950              	.LFE206:
 952              	 .section .text.XMC_SCU_PARITY_EnableTrapGeneration,"ax",%progbits
 953              	 .align 2
 954              	 .global XMC_SCU_PARITY_EnableTrapGeneration
 955              	 .thumb
 956              	 .thumb_func
 958              	XMC_SCU_PARITY_EnableTrapGeneration:
 959              	.LFB207:
 631:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 632:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 633:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable trap assertion for the parity error source */
 634:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory)
 635:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 960              	 .loc 1 635 0
 961              	 .cfi_startproc
 962              	 
 963              	 
 964              	 
 965              	.LVL54:
 636:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PARITY->PETE |= (uint32_t)memory; 
 966              	 .loc 1 636 0
 967 0000 024A     	 ldr r2,.L105
 968 0002 9368     	 ldr r3,[r2,#8]
 969 0004 1843     	 orrs r0,r0,r3
 970              	.LVL55:
 971 0006 9060     	 str r0,[r2,#8]
 972 0008 7047     	 bx lr
 973              	.L106:
 974 000a 00BF     	 .align 2
 975              	.L105:
 976 000c 3C410050 	 .word 1342193980
 977              	 .cfi_endproc
 978              	.LFE207:
 980              	 .section .text.XMC_SCU_PARITY_DisableTrapGeneration,"ax",%progbits
 981              	 .align 2
 982              	 .global XMC_SCU_PARITY_DisableTrapGeneration
 983              	 .thumb
 984              	 .thumb_func
 986              	XMC_SCU_PARITY_DisableTrapGeneration:
 987              	.LFB208:
 637:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 638:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 639:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to disable the assertion of trap for the parity error source */
 640:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory)
 641:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 988              	 .loc 1 641 0
 989              	 .cfi_startproc
 990              	 
 991              	 
 992              	 
 993              	.LVL56:
 642:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PARITY->PETE &= (uint32_t)~memory; 
 994              	 .loc 1 642 0
 995 0000 024A     	 ldr r2,.L108
 996 0002 9368     	 ldr r3,[r2,#8]
 997 0004 23EA0000 	 bic r0,r3,r0
 998              	.LVL57:
 999 0008 9060     	 str r0,[r2,#8]
 1000 000a 7047     	 bx lr
 1001              	.L109:
 1002              	 .align 2
 1003              	.L108:
 1004 000c 3C410050 	 .word 1342193980
 1005              	 .cfi_endproc
 1006              	.LFE208:
 1008              	 .section .text.XMC_SCU_INTERRUPT_EnableNmiRequest,"ax",%progbits
 1009              	 .align 2
 1010              	 .global XMC_SCU_INTERRUPT_EnableNmiRequest
 1011              	 .thumb
 1012              	 .thumb_func
 1014              	XMC_SCU_INTERRUPT_EnableNmiRequest:
 1015              	.LFB209:
 643:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 644:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 645:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* Enables a NMI source */
 646:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request)
 647:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1016              	 .loc 1 647 0
 1017              	 .cfi_startproc
 1018              	 
 1019              	 
 1020              	 
 1021              	.LVL58:
 648:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN |= (uint32_t)request;
 1022              	 .loc 1 648 0
 1023 0000 024A     	 ldr r2,.L111
 1024 0002 5369     	 ldr r3,[r2,#20]
 1025 0004 1843     	 orrs r0,r0,r3
 1026              	.LVL59:
 1027 0006 5061     	 str r0,[r2,#20]
 1028 0008 7047     	 bx lr
 1029              	.L112:
 1030 000a 00BF     	 .align 2
 1031              	.L111:
 1032 000c 74400050 	 .word 1342193780
 1033              	 .cfi_endproc
 1034              	.LFE209:
 1036              	 .section .text.XMC_SCU_INTERRUPT_DisableNmiRequest,"ax",%progbits
 1037              	 .align 2
 1038              	 .global XMC_SCU_INTERRUPT_DisableNmiRequest
 1039              	 .thumb
 1040              	 .thumb_func
 1042              	XMC_SCU_INTERRUPT_DisableNmiRequest:
 1043              	.LFB210:
 649:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 650:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 651:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* Disables a NMI source */
 652:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request)
 653:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1044              	 .loc 1 653 0
 1045              	 .cfi_startproc
 1046              	 
 1047              	 
 1048              	 
 1049              	.LVL60:
 654:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN &= (uint32_t)~request;
 1050              	 .loc 1 654 0
 1051 0000 024A     	 ldr r2,.L114
 1052 0002 5369     	 ldr r3,[r2,#20]
 1053 0004 23EA0000 	 bic r0,r3,r0
 1054              	.LVL61:
 1055 0008 5061     	 str r0,[r2,#20]
 1056 000a 7047     	 bx lr
 1057              	.L115:
 1058              	 .align 2
 1059              	.L114:
 1060 000c 74400050 	 .word 1342193780
 1061              	 .cfi_endproc
 1062              	.LFE210:
 1064              	 .section .text.XMC_SCU_RESET_AssertPeripheralReset,"ax",%progbits
 1065              	 .align 2
 1066              	 .global XMC_SCU_RESET_AssertPeripheralReset
 1067              	 .thumb
 1068              	 .thumb_func
 1070              	XMC_SCU_RESET_AssertPeripheralReset:
 1071              	.LFB211:
 655:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 656:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 657:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to manually assert a reset request */
 658:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 659:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1072              	 .loc 1 659 0
 1073              	 .cfi_startproc
 1074              	 
 1075              	 
 1076              	 
 1077              	.LVL62:
 660:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 1078              	 .loc 1 660 0
 1079 0000 030F     	 lsrs r3,r0,#28
 1080              	.LVL63:
 661:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 662:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 663:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   *(uint32_t *)(&(SCU_RESET->PRSET0) + (index * 3U)) = (uint32_t)mask;
 1081              	 .loc 1 663 0
 1082 0002 03EB4303 	 add r3,r3,r3,lsl#1
 1083              	.LVL64:
 661:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 1084              	 .loc 1 661 0
 1085 0006 20F07040 	 bic r0,r0,#-268435456
 1086              	.LVL65:
 1087              	 .loc 1 663 0
 1088 000a 024A     	 ldr r2,.L117
 1089 000c 42F82300 	 str r0,[r2,r3,lsl#2]
 1090 0010 7047     	 bx lr
 1091              	.L118:
 1092 0012 00BF     	 .align 2
 1093              	.L117:
 1094 0014 10440050 	 .word 1342194704
 1095              	 .cfi_endproc
 1096              	.LFE211:
 1098              	 .section .text.XMC_SCU_RESET_DeassertPeripheralReset,"ax",%progbits
 1099              	 .align 2
 1100              	 .global XMC_SCU_RESET_DeassertPeripheralReset
 1101              	 .thumb
 1102              	 .thumb_func
 1104              	XMC_SCU_RESET_DeassertPeripheralReset:
 1105              	.LFB212:
 664:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 665:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 666:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to manually de-assert a reset request */
 667:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 668:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1106              	 .loc 1 668 0
 1107              	 .cfi_startproc
 1108              	 
 1109              	 
 1110              	 
 1111              	.LVL66:
 669:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 1112              	 .loc 1 669 0
 1113 0000 030F     	 lsrs r3,r0,#28
 1114              	.LVL67:
 670:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 671:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 672:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   *(uint32_t *)(&(SCU_RESET->PRCLR0) + (index * 3U)) = (uint32_t)mask;
 1115              	 .loc 1 672 0
 1116 0002 03EB4303 	 add r3,r3,r3,lsl#1
 1117              	.LVL68:
 670:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 1118              	 .loc 1 670 0
 1119 0006 20F07040 	 bic r0,r0,#-268435456
 1120              	.LVL69:
 1121              	 .loc 1 672 0
 1122 000a 024A     	 ldr r2,.L120
 1123 000c 42F82300 	 str r0,[r2,r3,lsl#2]
 1124 0010 7047     	 bx lr
 1125              	.L121:
 1126 0012 00BF     	 .align 2
 1127              	.L120:
 1128 0014 14440050 	 .word 1342194708
 1129              	 .cfi_endproc
 1130              	.LFE212:
 1132              	 .section .text.XMC_SCU_RESET_IsPeripheralResetAsserted,"ax",%progbits
 1133              	 .align 2
 1134              	 .global XMC_SCU_RESET_IsPeripheralResetAsserted
 1135              	 .thumb
 1136              	 .thumb_func
 1138              	XMC_SCU_RESET_IsPeripheralResetAsserted:
 1139              	.LFB213:
 673:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 674:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 675:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* Find out if the peripheral reset is asserted */
 676:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 677:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1140              	 .loc 1 677 0
 1141              	 .cfi_startproc
 1142              	 
 1143              	 
 1144              	 
 1145              	.LVL70:
 678:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 679:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 1146              	 .loc 1 679 0
 1147 0000 20F07042 	 bic r2,r0,#-268435456
 1148              	.LVL71:
 678:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 1149              	 .loc 1 678 0
 1150 0004 000F     	 lsrs r0,r0,#28
 1151              	.LVL72:
 680:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 681:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return ((*(uint32_t *)(&(SCU_RESET->PRSTAT0) + (index * 3U)) & mask) != 0U);
 1152              	 .loc 1 681 0
 1153 0006 00EB4000 	 add r0,r0,r0,lsl#1
 1154              	.LVL73:
 1155 000a 044B     	 ldr r3,.L123
 1156 000c 53F82030 	 ldr r3,[r3,r0,lsl#2]
 1157 0010 1A42     	 tst r2,r3
 682:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 1158              	 .loc 1 682 0
 1159 0012 14BF     	 ite ne
 1160 0014 0120     	 movne r0,#1
 1161 0016 0020     	 moveq r0,#0
 1162 0018 7047     	 bx lr
 1163              	.L124:
 1164 001a 00BF     	 .align 2
 1165              	.L123:
 1166 001c 0C440050 	 .word 1342194700
 1167              	 .cfi_endproc
 1168              	.LFE213:
 1170              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency,"ax",%progbits
 1171              	 .align 2
 1172              	 .global XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 1173              	 .thumb
 1174              	 .thumb_func
 1176              	XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:
 1177              	.LFB215:
 683:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 684:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /*
 685:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * API to retrieve frequency of System PLL output clock
 686:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
 687:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void)
 688:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 689:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t clock_frequency;
 690:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t p_div;
 691:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t n_div;
 692:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t k2_div;
 693:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 694:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   clock_frequency = XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency();
 695:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if(SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk)
 696:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 697:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Prescalar mode - fOSC is the parent*/
 698:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     clock_frequency = (uint32_t)(clock_frequency / 
 699:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_P
 700:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 701:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
 702:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 703:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     p_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Po
 704:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     n_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Po
 705:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     k2_div = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_
 706:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****        
 707:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     clock_frequency = (clock_frequency * n_div) / (p_div * k2_div);
 708:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 709:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 710:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (clock_frequency);
 711:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 712:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 713:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /**
 714:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * API to retrieve frequency of System PLL VCO input clock
 715:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
 716:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void)
 717:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1178              	 .loc 1 717 0
 1179              	 .cfi_startproc
 1180              	 
 1181              	 
 1182 0000 08B5     	 push {r3,lr}
 1183              	.LCFI3:
 1184              	 .cfi_def_cfa_offset 8
 1185              	 .cfi_offset 3,-8
 1186              	 .cfi_offset 14,-4
 718:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t clock_frequency;
 719:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 720:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Prescalar mode - fOSC is the parent*/
 721:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if((SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk) == (uint32_t)XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP)
 1187              	 .loc 1 721 0
 1188 0002 054B     	 ldr r3,.L129
 1189 0004 DB68     	 ldr r3,[r3,#12]
 1190 0006 13F0010F 	 tst r3,#1
 1191 000a 02D1     	 bne .L127
 722:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 723:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     clock_frequency = OSCHP_GetFrequency();
 1192              	 .loc 1 723 0
 1193 000c FFF7FEFF 	 bl OSCHP_GetFrequency
 1194              	.LVL74:
 1195 0010 08BD     	 pop {r3,pc}
 1196              	.LVL75:
 1197              	.L127:
 724:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 725:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
 726:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 727:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     clock_frequency = OFI_FREQUENCY;
 1198              	 .loc 1 727 0
 1199 0012 0248     	 ldr r0,.L129+4
 1200              	.LVL76:
 728:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 729:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 730:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (clock_frequency);
 731:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 1201              	 .loc 1 731 0
 1202 0014 08BD     	 pop {r3,pc}
 1203              	.L130:
 1204 0016 00BF     	 .align 2
 1205              	.L129:
 1206 0018 10470050 	 .word 1342195472
 1207 001c 00366E01 	 .word 24000000
 1208              	 .cfi_endproc
 1209              	.LFE215:
 1211              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency,"ax",%progbits
 1212              	 .align 2
 1213              	 .global XMC_SCU_CLOCK_GetSystemPllClockFrequency
 1214              	 .thumb
 1215              	 .thumb_func
 1217              	XMC_SCU_CLOCK_GetSystemPllClockFrequency:
 1218              	.LFB214:
 688:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t clock_frequency;
 1219              	 .loc 1 688 0
 1220              	 .cfi_startproc
 1221              	 
 1222              	 
 1223 0000 08B5     	 push {r3,lr}
 1224              	.LCFI4:
 1225              	 .cfi_def_cfa_offset 8
 1226              	 .cfi_offset 3,-8
 1227              	 .cfi_offset 14,-4
 694:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if(SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk)
 1228              	 .loc 1 694 0
 1229 0002 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 1230              	.LVL77:
 695:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 1231              	 .loc 1 695 0
 1232 0006 0F4B     	 ldr r3,.L135
 1233 0008 1B68     	 ldr r3,[r3]
 1234 000a 13F0010F 	 tst r3,#1
 1235 000e 07D0     	 beq .L132
 699:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 1236              	 .loc 1 699 0
 1237 0010 0C4B     	 ldr r3,.L135
 1238 0012 9B68     	 ldr r3,[r3,#8]
 1239 0014 03F07F03 	 and r3,r3,#127
 1240 0018 0133     	 adds r3,r3,#1
 698:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_P
 1241              	 .loc 1 698 0
 1242 001a B0FBF3F0 	 udiv r0,r0,r3
 1243              	.LVL78:
 1244 001e 08BD     	 pop {r3,pc}
 1245              	.L132:
 703:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     n_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Po
 1246              	 .loc 1 703 0
 1247 0020 084B     	 ldr r3,.L135
 1248 0022 9A68     	 ldr r2,[r3,#8]
 1249              	.LVL79:
 704:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     k2_div = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_
 1250              	 .loc 1 704 0
 1251 0024 9968     	 ldr r1,[r3,#8]
 1252              	.LVL80:
 705:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****        
 1253              	 .loc 1 705 0
 1254 0026 9B68     	 ldr r3,[r3,#8]
 1255              	.LVL81:
 704:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     k2_div = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_
 1256              	 .loc 1 704 0
 1257 0028 C1F30621 	 ubfx r1,r1,#8,#7
 1258              	.LVL82:
 707:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 1259              	 .loc 1 707 0
 1260 002c 01FB0000 	 mla r0,r1,r0,r0
 1261              	.LVL83:
 705:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****        
 1262              	 .loc 1 705 0
 1263 0030 C3F30641 	 ubfx r1,r3,#16,#7
 703:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     n_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Po
 1264              	 .loc 1 703 0
 1265 0034 C2F30362 	 ubfx r2,r2,#24,#4
 1266              	.LVL84:
 1267 0038 531C     	 adds r3,r2,#1
 1268              	.LVL85:
 707:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 1269              	 .loc 1 707 0
 1270 003a 01FB0333 	 mla r3,r1,r3,r3
 1271 003e B0FBF3F0 	 udiv r0,r0,r3
 1272              	.LVL86:
 711:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 1273              	 .loc 1 711 0
 1274 0042 08BD     	 pop {r3,pc}
 1275              	.L136:
 1276              	 .align 2
 1277              	.L135:
 1278 0044 10470050 	 .word 1342195472
 1279              	 .cfi_endproc
 1280              	.LFE214:
 1282              	 .section .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency,"ax",%progbits
 1283              	 .align 2
 1284              	 .global XMC_SCU_CLOCK_GetUsbPllClockFrequency
 1285              	 .thumb
 1286              	 .thumb_func
 1288              	XMC_SCU_CLOCK_GetUsbPllClockFrequency:
 1289              	.LFB216:
 732:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 733:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /*
 734:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * API to retrieve frequency of USB PLL output clock
 735:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
 736:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void)
 737:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1290              	 .loc 1 737 0
 1291              	 .cfi_startproc
 1292              	 
 1293              	 
 1294 0000 08B5     	 push {r3,lr}
 1295              	.LCFI5:
 1296              	 .cfi_def_cfa_offset 8
 1297              	 .cfi_offset 3,-8
 1298              	 .cfi_offset 14,-4
 738:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t clock_frequency;
 739:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t n_div;
 740:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t p_div;
 741:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 742:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   clock_frequency = OSCHP_GetFrequency();
 1299              	 .loc 1 742 0
 1300 0002 FFF7FEFF 	 bl OSCHP_GetFrequency
 1301              	.LVL87:
 743:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) == 0U)
 1302              	 .loc 1 743 0
 1303 0006 094B     	 ldr r3,.L140
 1304 0008 1B69     	 ldr r3,[r3,#16]
 1305 000a 13F0010F 	 tst r3,#1
 1306 000e 0CD1     	 bne .L138
 744:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 745:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Normal mode - fVCO is the parent*/
 746:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     n_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_NDIV_Msk) >> SCU_PLL_USBPLLCON_ND
 1307              	 .loc 1 746 0
 1308 0010 064B     	 ldr r3,.L140
 1309 0012 5A69     	 ldr r2,[r3,#20]
 1310              	.LVL88:
 747:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     p_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_PDIV_Msk) >> SCU_PLL_USBPLLCON_PD
 1311              	 .loc 1 747 0
 1312 0014 5B69     	 ldr r3,[r3,#20]
 1313              	.LVL89:
 746:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     p_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_PDIV_Msk) >> SCU_PLL_USBPLLCON_PD
 1314              	 .loc 1 746 0
 1315 0016 C2F30622 	 ubfx r2,r2,#8,#7
 1316              	.LVL90:
 748:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     clock_frequency = (uint32_t)((clock_frequency * n_div)/ (uint32_t)(p_div * 2UL));
 1317              	 .loc 1 748 0
 1318 001a 02FB0000 	 mla r0,r2,r0,r0
 1319              	.LVL91:
 747:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     p_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_PDIV_Msk) >> SCU_PLL_USBPLLCON_PD
 1320              	 .loc 1 747 0
 1321 001e C3F30363 	 ubfx r3,r3,#24,#4
 1322              	.LVL92:
 1323 0022 0133     	 adds r3,r3,#1
 1324              	 .loc 1 748 0
 1325 0024 5B00     	 lsls r3,r3,#1
 1326 0026 B0FBF3F0 	 udiv r0,r0,r3
 1327              	.LVL93:
 1328              	.L138:
 749:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 750:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (clock_frequency);
 751:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 1329              	 .loc 1 751 0
 1330 002a 08BD     	 pop {r3,pc}
 1331              	.L141:
 1332              	 .align 2
 1333              	.L140:
 1334 002c 10470050 	 .word 1342195472
 1335              	 .cfi_endproc
 1336              	.LFE216:
 1338              	 .section .text.XMC_SCU_CLOCK_GetCcuClockFrequency,"ax",%progbits
 1339              	 .align 2
 1340              	 .global XMC_SCU_CLOCK_GetCcuClockFrequency
 1341              	 .thumb
 1342              	 .thumb_func
 1344              	XMC_SCU_CLOCK_GetCcuClockFrequency:
 1345              	.LFB217:
 752:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 753:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /*
 754:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * API to retrieve frequency of CCU clock frequency
 755:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
 756:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetCcuClockFrequency(void)
 757:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1346              	 .loc 1 757 0
 1347              	 .cfi_startproc
 1348              	 
 1349              	 
 1350              	 
 1351              	.LVL94:
 1352              	.LBB16:
 1353              	.LBB17:
 1354              	 .file 2 "C:/Files/Projects/Git/XMCLib/inc/xmc4_scu.h"
   1:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
   2:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @file xmc4_scu.h
   3:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @date 2019-02-18
   4:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
   5:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
   9:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
  18:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
  21:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  36:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  39:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2015-06-20:
  40:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Initial version
  41:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  42:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  43:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2015-11-30:
  44:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  45:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *      
  46:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2016-03-09:
  47:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_EnableMonitor/XMC_SCU_POWER_DisableMonitor
  48:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_POWER_GetEVRStatus, XMC_SCU_POWER_GetEVR13Voltage, XMC_SCU_POWER_GetEVR33Vol
  49:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  50:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  51:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  52:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  53:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  54:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  55:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2016-04-15:
  56:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Fixed naming of XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG peripheral clock.
  57:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *       Added enable and disable for peripheral clocks       
  58:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
  59:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2016-05-19:
  60:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  61:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_WaitForInterrupt() and XMC_SCU_POWER_WaitForEvent()
  62:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  63:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  64:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  65:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  66:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  67:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  68:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Removed XMC_SCU_INTERRUPT_EVENT_OSCULSTAT_UPDATED, XMC_SCU_INTERRUPT_EVENT_HDSTAT_UPDATED
  69:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  70:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2016-06-14:
  71:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_IsWakeupEventDetected() and XMC_SCU_HIB_ClearWakeupEventDetectionStatus(
  72:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  73:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2016-06-15:
  74:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  75:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  76:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  77:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  78:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2019-02-18:
  79:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Fix conditional definition of XMC_SCU_PARITY_t elements
  80:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
  81:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
  82:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SetParityWriteValue(uint8_t val)
  83:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_GetParityReadValue(void)
  84:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  85:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @endcond 
  86:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  87:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
  88:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
  89:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #ifndef XMC4_SCU_H
  90:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC4_SCU_H
  91:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
  92:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
  93:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * HEADER FILES
  94:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  95:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
  96:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #include "xmc_common.h"
  97:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
  98:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if UC_FAMILY == XMC4
  99:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 100:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 101:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
 102:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @{
 103:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 104:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  
 105:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 106:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @addtogroup SCU
 107:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @{
 108:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 109:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 110:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 111:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * MACROS
 112:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 113:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_8MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8MH
 114:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_8MHZ (89U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8M
 115:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_8MHZ (2U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 8
 116:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 117:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_12MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 12
 118:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_12MHZ (79U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 119:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_12MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 120:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 121:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_16MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 16
 122:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_16MHZ (59U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 123:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_16MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 124:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 125:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_WDT_WARN           SCU_INTERRUPT_SRSTAT_PRWARN_Msk /**< Watchdog pr
 126:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC       SCU_INTERRUPT_SRSTAT_PI_Msk     /**< RTC periodi
 127:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_ALARM          SCU_INTERRUPT_SRSTAT_AI_Msk     /**< RTC alarm e
 128:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_DLR_OVERRUN        SCU_INTERRUPT_SRSTAT_DLROVR_Msk /**< DLR overrun
 129:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCR_Msk)
 130:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCR_UPDATED     SCU_INTERRUPT_SRSTAT_LPACCR_Msk /**< LPAC Contro
 131:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 132:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH0_Msk)
 133:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH0_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH0_Msk /**< LPAC Thres
 134:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 135:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH1_Msk)
 136:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH1_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH1_Msk  /**< LPAC Thre
 137:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 138:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACST_Msk)
 139:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACST_UPDATED     SCU_INTERRUPT_SRSTAT_LPACST_Msk  /**< LPAC Statu
 140:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 141:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCLR_Msk)
 142:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCLR_UPDATED    SCU_INTERRUPT_SRSTAT_LPACCLR_Msk /**< LPAC event
 143:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 144:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACSET_Msk)
 145:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACSET_UPDATED    SCU_INTERRUPT_SRSTAT_LPACSET_Msk /**< LPAC event
 146:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 147:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTST_Msk)
 148:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTST_UPDATED     SCU_INTERRUPT_SRSTAT_HINTST_Msk /**< HIB HINTST 
 149:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 150:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTCLR_Msk)
 151:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTCLR_UPDATED    SCU_INTERRUPT_SRSTAT_HINTCLR_Msk /**< HIB HINTCL
 152:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 153:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTSET_Msk)
 154:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTSET_UPDATED    SCU_INTERRUPT_SRSTAT_HINTSET_Msk /**< HIB HINTSE
 155:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 156:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED      SCU_INTERRUPT_SRSTAT_HDCLR_Msk /**< HIB HDCLR re
 157:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDSET_UPDATED      SCU_INTERRUPT_SRSTAT_HDSET_Msk /**< HIB HDSET re
 158:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED       SCU_INTERRUPT_SRSTAT_HDCR_Msk /**< HIB HDCR regi
 159:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCSICTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCSICTRL_Msk /**< HIB OSCS
 160:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCULCTRL_Msk /**< HIB OSCU
 161:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED     SCU_INTERRUPT_SRSTAT_RTC_CTR_Msk /**< HIB RTCCTR
 162:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM0_Msk /**< HIB RTCA
 163:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM1_Msk /**< HIB RTCA
 164:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM0_Msk /**< HIB TIM0 
 165:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM1_Msk /**< HIB TIM1 
 166:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RMX_UPDATED        SCU_INTERRUPT_SRSTAT_RMX_Msk /**< HIB RMX regist
 167:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 168:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 169:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * ENUMS
 170:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 171:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 172:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines Capture/Compare unit timer slice trigger, that enables synchronous start function avail
 173:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  CCUCON register. Use type \a XMC_SCU_CCU_TRIGGER_t for accessing these enum parameters.
 174:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 175:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CCU_TRIGGER
 176:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 177:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU40)
 178:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU40 = SCU_GENERAL_CCUCON_GSC40_Msk, /**< Trigger mask used for Global Start
 179:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  CCU40 peripheral. */
 180:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 181:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 182:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU41 = SCU_GENERAL_CCUCON_GSC41_Msk, /**< Trigger mask used for Global Start
 183:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  CCU41 peripheral. */
 184:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 185:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 186:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU42 = SCU_GENERAL_CCUCON_GSC42_Msk, /**< Trigger mask used for Global Start
 187:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  CCU42 peripheral. */
 188:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 189:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 190:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU43 = SCU_GENERAL_CCUCON_GSC43_Msk, /**< Trigger mask used for Global Start
 191:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  CCU43 peripheral. */
 192:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 193:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 194:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU80 = SCU_GENERAL_CCUCON_GSC80_Msk, /**< Trigger mask used for Global Start
 195:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  CCU80 peripheral. */
 196:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 197:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 198:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU81 = SCU_GENERAL_CCUCON_GSC81_Msk /**< Trigger mask used for Global Start 
 199:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  CCU81 peripheral. */
 200:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 201:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CCU_TRIGGER_t;
 202:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 203:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 204:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations representing the status of trap cause. The cause of the trap gets automati
 205:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  the \a TRAPSTAT register and can be checked by user software to determine the state of the syst
 206:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  purpose. 
 207:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_TRAP_t for accessing these enum parameters.
 208:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 209:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_TRAP 
 210:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 211:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_OSC_WDG      = SCU_TRAP_TRAPSTAT_SOSCWDGT_Msk, /**< OSC_HP Oscillator Watchdog trap.
 212:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_VCO_LOCK     = SCU_TRAP_TRAPSTAT_SVCOLCKT_Msk, /**< PLL loss of lock trap. */
 213:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_USB_VCO_LOCK = SCU_TRAP_TRAPSTAT_UVCOLCKT_Msk, /**< USB PLL loss of lock trap. */ 
 214:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PARITY_ERROR = SCU_TRAP_TRAPSTAT_PET_Msk,      /**< Memory Parity error trap. */  
 215:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_BROWNOUT     = SCU_TRAP_TRAPSTAT_BRWNT_Msk,    /**< Brownout trap. */ 
 216:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ULP_WDG      = SCU_TRAP_TRAPSTAT_ULPWDGT_Msk,  /**< Unstable 32KHz clock trap. */ 
 217:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE0  = SCU_TRAP_TRAPSTAT_BWERR0T_Msk,  /**< Bad memory access of peripherals
 218:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE1  = SCU_TRAP_TRAPSTAT_BWERR1T_Msk,  /**< Bad memory access of peripherals
 219:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPHIT_Msk)
 220:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_HIGH = SCU_TRAP_TRAPSTAT_TEMPHIT_Msk,  /**< Die temperature higher than expe
 221:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 222:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPLOT_Msk)
 223:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_LOW  = SCU_TRAP_TRAPSTAT_TEMPLOT_Msk,  /**< Die temperature lower than expec
 224:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 225:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 226:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ECAT_RESET = SCU_TRAP_TRAPSTAT_ECAT0RST_Msk, /**< EtherCat Reset */ 
 227:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 228:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_TRAP_t;
 229:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 230:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 231:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for different parity event generating modules that in turn generate a trap
 232:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Parity can be enabled with \a PETE register in order to get the trap flag reflected in \a TRAPR
 233:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  configure parity error trap generation mechanism bits of \a PETE register.
 234:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PETE register.
 235:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PARITY_t for accessing these enum parameters.
 236:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 237:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PARITY
 238:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 239:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PSRAM_MEM  = SCU_PARITY_PEEN_PEENPS_Msk,   /**< Program SRAM parity error trap. */
 240:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM1_MEM = SCU_PARITY_PEEN_PEENDS1_Msk,  /**< Data SRAM-1 parity error trap. */ 
 241:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENDS2_Msk)
 242:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM2_MEM = SCU_PARITY_PEEN_PEENDS2_Msk,  /**< Data SRAM-2 parity error trap. */ 
 243:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 244:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC0_MEM  = SCU_PARITY_PEEN_PEENU0_Msk,   /**< USIC0 memory parity error trap. */
 245:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU1_Msk)
 246:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC1_MEM  = SCU_PARITY_PEEN_PEENU1_Msk,   /**< USIC1 memory parity error trap. */
 247:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 248:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU2_Msk)
 249:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC2_MEM  = SCU_PARITY_PEEN_PEENU2_Msk,   /**< USIC2 memory parity error trap. */
 250:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 251:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_MCAN_MEM   = SCU_PARITY_PEEN_PEENMC_Msk,   /**< CAN memory parity error trap. */
 252:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PMU_MEM    = SCU_PARITY_PEEN_PEENPPRF_Msk, /**< PMU Prefetch memory parity error t
 253:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USB_MEM    = SCU_PARITY_PEEN_PEENUSB_Msk,  /**< USB memory parity error trap. */ 
 254:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0TX_Msk)
 255:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_TXMEM  = SCU_PARITY_PEEN_PEENETH0TX_Msk, /**< Ethernet transmit memory parity 
 256:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 257:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0RX_Msk)
 258:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_RXMEM  = SCU_PARITY_PEEN_PEENETH0RX_Msk, /**< Ethernet receive memory parity e
 259:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 260:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD0_Msk)
 261:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM0 = SCU_PARITY_PEEN_PEENSD0_Msk, /**< SDMMC Memory-0 parity error trap. *
 262:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 263:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD1_Msk)
 264:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM1 = SCU_PARITY_PEEN_PEENSD1_Msk, /**< SDMMC Memory-1 parity error trap. *
 265:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 266:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENECAT0_Msk)
 267:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ECAT_MEM = SCU_PARITY_PEEN_PEENECAT0_Msk, /**< ECAT0 SRAM parity error trap. */ 
 268:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 269:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PARITY_t;
 270:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 271:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 272:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines the different causes for last reset. The cause of the last reset gets automatically sto
 273:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  the \a SCU_RSTSTAT register and can be checked by user software to determine the state of the s
 274:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  purpose. All the enum items are tabulated as per bits present in \a SCU_RSTSTAT register.
 275:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_RESET_REASON_t for accessing these enum parameters.
 276:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 277:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_RESET_REASON
 278:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 279:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PORST        = (1UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 280:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SWD          = (2UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sup
 281:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PV           = (4UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 282:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SW           = (8UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sof
 283:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_LOCKUP       = (16UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to re
 284:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_WATCHDOG     = (32UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Wa
 285:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PARITY_ERROR = (128UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to r
 286:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_RESET_REASON_t;
 287:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 288:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 289:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for events which can lead to interrupt. These enumeration values represent
 290:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * status of one of the bits in \a SRSTAT register. 
 291:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_INTERRUPT_EVENT_t for accessing these enum parameters.
 292:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 293:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t;
 294:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 295:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  
 296:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 297:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration for the events that can generate non maskable interrupt(NMI).
 298:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  The NMI generation can be enabled with \a NMIREQEN register. The event will be reflected in \a 
 299:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  mirrored in the TRAPSTAT register. These enums can be used to configure NMI request generation 
 300:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  NMIREQEN register.  Once configured, these events can generate non maskable interrupt.
 301:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a NMIREQEN register.
 302:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_NMIREQ_t for accessing these enum parameters.
 303:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 304:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_NMIREQ
 305:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 306:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_WDT_WARN = SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, /**< Watchdog timer Pre-Warning even
 307:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_PI   = SCU_INTERRUPT_NMIREQEN_PI_Msk,     /**< RTC Periodic event */ 
 308:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_AI   = SCU_INTERRUPT_NMIREQEN_AI_Msk,     /**< RTC Alarm event */ 
 309:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_0   = SCU_INTERRUPT_NMIREQEN_ERU00_Msk,  /**< Channel 0 event of ERU0 */  
 310:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_1   = SCU_INTERRUPT_NMIREQEN_ERU01_Msk,  /**< Channel 1 event of ERU0 */ 
 311:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_2   = SCU_INTERRUPT_NMIREQEN_ERU02_Msk,  /**< Channel 2 event of ERU0 */ 
 312:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_3   = SCU_INTERRUPT_NMIREQEN_ERU03_Msk   /**< Channel 3 event of ERU0 */ 
 313:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_NMIREQ_t;
 314:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   
 315:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 316:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 317:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration representing different peripheral reset bits in the \a PRSTAT registers.
 318:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PRSTAT0,  \a PRSTAT1,  \a PRSTAT2,
 319:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  \a PRSTAT3 registers. Use type \a XMC_SCU_PERIPHERAL_RESET_t for accessing these enum parameter
 320:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Note: Release of reset should be prevented when the peripheral clock is gated in cases where ke
 321:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  clock and bus interface clocks are shared, in order to avoid system hang-up.
 322:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 323:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_RESET
 324:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 325:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_VADC   = SCU_RESET_PRSTAT0_VADCRS_Msk,   /**< VADC reset. */ 
 326:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 327:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DSD    = SCU_RESET_PRSTAT0_DSDRS_Msk,    /**< DSD reset. */
 328:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 329:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU40  = SCU_RESET_PRSTAT0_CCU40RS_Msk,  /**< CCU40 reset. */
 330:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 331:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU41  = SCU_RESET_PRSTAT0_CCU41RS_Msk,  /**< CCU41 reset. */
 332:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 333:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 334:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU42  = SCU_RESET_PRSTAT0_CCU42RS_Msk,  /**< CCU42 reset. */
 335:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 336:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 337:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU80  = SCU_RESET_PRSTAT0_CCU80RS_Msk,  /**< CCU80 reset. */
 338:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 339:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 340:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU81  = SCU_RESET_PRSTAT0_CCU81RS_Msk,  /**< CCU81 reset. */
 341:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 342:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 343:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF0 = SCU_RESET_PRSTAT0_POSIF0RS_Msk, /**< POSIF0 reset. */
 344:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 345:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 346:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF1 = SCU_RESET_PRSTAT0_POSIF1RS_Msk, /**< POSIF1 reset.*/
 347:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 348:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC0  = SCU_RESET_PRSTAT0_USIC0RS_Msk,  /**< USIC0 reset. */
 349:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ERU1   = SCU_RESET_PRSTAT0_ERU1RS_Msk,   /**< ERU1 reset. */
 350:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 351:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_HRPWM0 = SCU_RESET_PRSTAT0_HRPWM0RS_Msk,  /**< HRPWM0 reset. */
 352:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 353:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 354:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU43  = (SCU_RESET_PRSTAT1_CCU43RS_Msk | 0x10000000UL),   /**< CCU43 re
 355:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 356:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 357:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_LEDTS0 = (SCU_RESET_PRSTAT1_LEDTSCU0RS_Msk | 0x10000000UL), /**< LEDTS0 
 358:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 359:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 360:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_MCAN   = (SCU_RESET_PRSTAT1_MCAN0RS_Msk | 0x10000000UL), /**< MCAN reset
 361:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 362:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 363:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DAC    = (SCU_RESET_PRSTAT1_DACRS_Msk | 0x10000000UL),    /**< DAC reset
 364:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 365:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 366:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_SDMMC  = (SCU_RESET_PRSTAT1_MMCIRS_Msk | 0x10000000UL),     /**< SDMMC r
 367:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 368:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 369:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC1  = (SCU_RESET_PRSTAT1_USIC1RS_Msk | 0x10000000UL),    /**< USIC1 r
 370:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 371:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 372:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC2  = (SCU_RESET_PRSTAT1_USIC2RS_Msk | 0x10000000UL),    /**< USIC2 r
 373:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 374:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_PORTS  = (SCU_RESET_PRSTAT1_PPORTSRS_Msk | 0x10000000UL),   /**< PORTS r
 375:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_WDT    = (SCU_RESET_PRSTAT2_WDTRS_Msk | 0x20000000UL),      /**< WDT res
 376:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 377:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ETH0   = (SCU_RESET_PRSTAT2_ETH0RS_Msk | 0x20000000UL),     /**< ETH0 re
 378:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 379:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA0 = (SCU_RESET_PRSTAT2_DMA0RS_Msk | 0x20000000UL),     /**< DMA0 re
 380:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 381:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA1 = (SCU_RESET_PRSTAT2_DMA1RS_Msk | 0x20000000UL),     /**< DMA1 re
 382:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 383:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 384:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_FCE    = (SCU_RESET_PRSTAT2_FCERS_Msk | 0x20000000UL),      /**< FCE res
 385:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 386:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)  
 387:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USB0   = (SCU_RESET_PRSTAT2_USBRS_Msk | 0x20000000UL),      /**< USB0 re
 388:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 389:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)  
 390:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ECAT0  = (SCU_RESET_PRSTAT2_ECAT0RS_Msk | 0x20000000UL),      /**< ECAT0
 391:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 392:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 393:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_EBU    = (SCU_RESET_PRSTAT3_EBURS_Msk | 0x30000000UL)       /**< EBU res
 394:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 395:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_RESET_t;
 396:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 397:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 398:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for disabling the clocks sources of peripherals. Disabling of the peripher
 399:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  clock is configured via the \a CLKCLR registers.
 400:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 401:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 402:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK
 403:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 404:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USB = SCU_CLK_CLKCLR_USBCDI_Msk, /**< USB module clock. */
 405:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 406:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_MMC = SCU_CLK_CLKCLR_MMCCDI_Msk, /**< MMC module clock. */
 407:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 408:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 409:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ETH = SCU_CLK_CLKCLR_ETH0CDI_Msk, /**< Ethernet module clock. */
 410:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 411:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 412:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EBU = SCU_CLK_CLKCLR_EBUCDI_Msk, /**< EBU module clock. */
 413:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 414:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_CCU = SCU_CLK_CLKCLR_CCUCDI_Msk, /**< CCU module clock. */
 415:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDT = SCU_CLK_CLKCLR_WDTCDI_Msk  /**< WDT module clock. */
 416:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_t;
 417:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 418:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if(UC_SERIES != XMC45)
 419:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 420:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Defines enumeration for peripherals that support clock gating. 
 421:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The enumerations can be used for gating or ungating the peripheral clocks.
 422:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * All the enum items are tabulated as per bits present in \a CGATSTAT0 register.
 423:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 424:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 425:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_CLOCK
 426:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 427:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_VADC   = SCU_CLK_CGATSTAT0_VADC_Msk,  /**< VADC peripheral gating. */
 428:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 429:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DSD    = SCU_CLK_CGATSTAT0_DSD_Msk,   /**< DSD peripheral gating. */
 430:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 431:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU40  = SCU_CLK_CGATSTAT0_CCU40_Msk,  /**< CCU40 peripheral gating. */
 432:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 433:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU41  = SCU_CLK_CGATSTAT0_CCU41_Msk,  /**< CCU41 peripheral gating. */
 434:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 435:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 436:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU42  = SCU_CLK_CGATSTAT0_CCU42_Msk,  /**< CCU42 peripheral gating. */
 437:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 438:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 439:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU80  = SCU_CLK_CGATSTAT0_CCU80_Msk,  /**< CCU80 peripheral gating. */
 440:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 441:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 442:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU81  = SCU_CLK_CGATSTAT0_CCU81_Msk,  /**< CCU81 peripheral gating. */
 443:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 444:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 445:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF0 = SCU_CLK_CGATSTAT0_POSIF0_Msk,  /**< POSIF0 peripheral gating. *
 446:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 447:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 448:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF1 = SCU_CLK_CGATSTAT0_POSIF1_Msk,   /**< POSIF1 peripheral gating. 
 449:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 450:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC0  = SCU_CLK_CGATSTAT0_USIC0_Msk,   /**< USIC0 peripheral gating. */
 451:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ERU1   = SCU_CLK_CGATSTAT0_ERU1_Msk,    /**< ERU1 peripheral gating. */
 452:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 453:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_HRPWM0 = SCU_CLK_CGATSTAT0_HRPWM0_Msk,  /**< HRPWM0 peripheral gating. *
 454:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 455:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 456:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU43  = (SCU_CLK_CGATSTAT1_CCU43_Msk | 0x10000000UL),   /**< CCU43 peri
 457:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 458:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 459:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_LEDTS0 = (SCU_CLK_CGATSTAT1_LEDTSCU0_Msk | 0x10000000UL), /**< LEDTS0 pe
 460:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 461:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 462:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_MCAN   = (SCU_CLK_CGATSTAT1_MCAN0_Msk | 0x10000000UL),   /**< MCAN perip
 463:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 464:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 465:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DAC    = (SCU_CLK_CGATSTAT1_DAC_Msk | 0x10000000UL),     /**< DAC periph
 466:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 467:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 468:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_SDMMC  = (SCU_CLK_CGATSTAT1_MMCI_Msk | 0x10000000UL),    /**< SDMMC peri
 469:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 470:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 471:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC1  = (SCU_CLK_CGATSTAT1_USIC1_Msk | 0x10000000UL),   /**< USIC1 peri
 472:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 473:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 474:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC2  = (SCU_CLK_CGATSTAT1_USIC2_Msk | 0x10000000UL),    /**< USIC2 per
 475:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 476:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_PORTS  = (SCU_CLK_CGATSTAT1_PPORTS_Msk | 0x10000000UL),   /**< PORTS per
 477:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_WDT    = (SCU_CLK_CGATSTAT2_WDT_Msk | 0x20000000UL),      /**< WDT perip
 478:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 479:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ETH0   = (SCU_CLK_CGATSTAT2_ETH0_Msk | 0x20000000UL),     /**< ETH0 peri
 480:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 481:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA0 = (SCU_CLK_CGATSTAT2_DMA0_Msk | 0x20000000UL),     /**< DMA0 peri
 482:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 483:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA1 = (SCU_CLK_CGATSTAT2_DMA1_Msk | 0x20000000UL),     /**< DMA1 peri
 484:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 485:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 486:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_FCE    = (SCU_CLK_CGATSTAT2_FCE_Msk | 0x20000000UL),      /**< FCE perip
 487:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 488:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 489:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USB0   = (SCU_CLK_CGATSTAT2_USB_Msk | 0x20000000UL),      /**< USB0 peri
 490:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 491:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 492:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ECAT0   = (SCU_CLK_CGATSTAT2_ECAT0_Msk | 0x20000000UL),      /**< ECAT0 
 493:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 494:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 495:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_EBU    = (SCU_CLK_CGATSTAT3_EBU_Msk | 0x30000000UL)       /**< EBU perip
 496:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 497:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_CLOCK_t;
 498:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 499:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 500:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 501:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for system clock (fSYS) source. These enums are used to configure \a SYSSEL bit
 502:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Clock Control Register. 
 503:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_SYSCLKSRC_t for accessing these enum parameters.
 504:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */ 
 505:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSCLKSRC
 506:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 507:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_OFI = (0UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos), /**< Internal Fast Clock (fOF
 508:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 509:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_PLL = (1UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos)  /**< PLL output (fPLL) as a
 510:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 511:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSCLKSRC_t;
 512:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 513:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 514:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the P-Divider input frequency. These enums are used to configure 
 515:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  register. 
 516:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_OSCCLKSRC_t for accessing these enum parameters.
 517:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */ 
 518:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLLCLKSRC
 519:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 520:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP = 0UL,  /**< External crystal oscillator
 521:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                 (fOHP) as the source for P-Divider. */
 522:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk /**< Ba
 523:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                              as the source for P-Di
 524:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLLCLKSRC_t;
 525:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 526:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 527:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the USB clock source(fUSB/fSDMMC).
 528:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * These enums are used to configure \a USBSEL bits of \a USBCLKCR
 529:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * register. User can choose either fPLL or fUSBPLL clock as a source for USB clock. 
 530:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 531:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */ 
 532:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_USBCLKSRC
 533:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 534:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_USBPLL = (0UL << SCU_CLK_USBCLKCR_USBSEL_Pos), /**< USB PLL(fUSB PLL) as 
 535:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 536:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_SYSPLL = (1UL << SCU_CLK_USBCLKCR_USBSEL_Pos)  /**< Main PLL output (fPLL
 537:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 538:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_USBCLKSRC_t;
 539:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 540:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
 541:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 542:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the ECAT clock source.
 543:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */ 
 544:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_ECATCLKSRC
 545:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 546:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_USBPLL = (0UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos), /**< USB PLL (fUSBPLL) 
 547:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL = (1UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos)  /**< Main PLL output (f
 548:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_ECATCLKSRC_t;
 549:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 550:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 551:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 552:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of WDT clock(fWDT). These enums are used to configure 
 553:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOFI or fPLL or fSTDBY clock as a source for WDT clock. 
 554:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 555:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */ 
 556:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_WDTCLKSRC
 557:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 558:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_OFI = (0UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos),  /**< Internal Fast Clock 
 559:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            (fOFI) as the source for
 560:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_STDBY = (1UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos), /**< Standby clock 
 561:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            (fSTDBY) as the source f
 562:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_PLL = (2UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos)   /**< PLL output (fPLL) as th
 563:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for WDT clock (fW
 564:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_WDTCLKSRC_t;
 565:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 566:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 567:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of external clock out (fEXT). These enums are used to 
 568:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fSYS or fPLL or fUSBPLL clock as a source for external clock o
 569:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_EXTOUTCLKSRC_t for accessing these enum parameters.
 570:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */ 
 571:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_EXTOUTCLKSRC
 572:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 573:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS = (0UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos),  /**< System clock (fSYS) 
 574:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                             the source for external
 575:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_USB = (2UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< USB PLL output(fUSB P
 576:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 577:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL = (3UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Main PLL output(fPLL)
 578:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 579:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 580:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY = (4UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Standby clock(fSTDB
 581:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 582:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 583:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_EXTOUTCLKSRC_t;
 584:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 585:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 586:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of RTC Clock (fRTC). These enums are used to configure
 587:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  User can choose either fOSI or fULP clock as a source for RTC Clock (fRTC).
 588:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_RTCCLKSRC_t for accessing these enum parameters.
 589:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 590:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_RTCCLKSRC
 591:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 592:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_RCS_Pos), /**< Internal Slow Clock
 593:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                          (fOSI) as the source for R
 594:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_ULP = (1UL << SCU_HIBERNATE_HDCR_RCS_Pos) /**< Ultra Low Power Clock (fULP)
 595:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                         as the source for RTC Clock
 596:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_RTCCLKSRC_t;
 597:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 598:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 599:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of Standby Clock (fSTDBY). These enums are used to con
 600:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOSI or fULP clock as a source for Standby Clock (fSTDBY).
 601:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_STDBYCLKSRC_t for accessing these enum parameters.
 602:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 603:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_STDBYCLKSRC
 604:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 605:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos), /**< Internal Slow Clock 
 606:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                           (fOSI) as the source for 
 607:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 608:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSCULP = (1UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos) /**< Ultra Low Power Cl
 609:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                           (fULP) as the source for 
 610:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 611:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_STDBYCLKSRC_t;
 612:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 613:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 614:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for backup clock trimming. These enums are used to configure \a AOTREN  \a FOTR
 615:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  PLLCON0 register. Use type \a XMC_SCU_CLOCK_BACKUP_TRIM_t for accessing these enum parameters.
 616:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 617:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE
 618:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 619:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY   = 0UL,  /**< Factory Oscillator Calibration: 
 620:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                         Force adjustment of the internal oscillator
 621:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC = 1UL   /**<  Automatic Oscillator Calibration adju
 622:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t;
 623:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 624:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 625:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 626:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting device boot mode. These enums are used to configure \a SWCON bits
 627:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  User can choose among various boot modes by configuring SWCON bits.
 628:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_BOOTMODE_t for accessing these enum parameters.
 629:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 630:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_BOOTMODE 
 631:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 632:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_NORMAL     = (0UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from start of flash
 633:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ASC_BSL    = (1UL << SCU_GENERAL_STCON_SWCON_Pos), /**< UART bootstrap. */
 634:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_BMI        = (2UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot Mode Index - Custom
 635:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            sequence. */
 636:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_CAN_BSL    = (3UL << SCU_GENERAL_STCON_SWCON_Pos), /**< CAN bootstrap. */
 637:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_PSRAM_BOOT = (4UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from PSRAM. */
 638:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM0       = (8UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed 
 639:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            address 0. */
 640:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM1       = (12UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed
 641:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                             address 1. */
 642:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_FABM       = (14UL << SCU_GENERAL_STCON_SWCON_Pos), /**< fallback Alternate Boot
 643:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                             Try ABM-0 then try ABM-
 644:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_BOOTMODE_t;
 645:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 646:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 647:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 648:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines various PLL modes of operation. These enums are used to configure \a VCOBYP bit of \a P
 649:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  User can choose either normal or prescalar mode by configuring VCOBYP bit.
 650:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PLL_MODE_t for accessing these enum parameters.
 651:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 652:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLL_MODE
 653:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 654:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED, /**< fPLL derived from fOSC and PLL operating in prescalar mo
 655:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,  /**< fPLL derived from fVCO and PLL operating in normal mode. 
 656:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR /**< fPLL derived from fOSC and PLL operating in prescalar mo
 657:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_MODE_t;
 658:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 659:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /** 
 660:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in SLEEP state.
 661:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetSleepConfig before going to SLEEP state.
 662:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 663:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  The SLEEP state of the system corresponds to the SLEEP state of the CPU. The state is
 664:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 665:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  stopped. Peripherals are only clocked when configured to stay enabled. 
 666:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 667:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Peripherals can continue to operate unaffected and eventually generate an event to
 668:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  wake-up the CPU. Any interrupt to the NVIC will bring the CPU back to operation. The
 669:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  clock tree upon exit from SLEEP state is restored to what it was before entry into SLEEP
 670:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  state.
 671:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  
 672:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 673:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SLEEP_MODE_CONFIG
 674:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 675:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in SLEEP 
 676:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_SLEEPCR_SYSSEL_Msk,  /**< fPLL used as syst
 677:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 678:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in SLEEP state */
 679:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_SLEEPCR_USBCR_Msk,  /**< USB clock enabled i
 680:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 681:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 682:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in SLEEP state */
 683:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_SLEEPCR_MMCCR_Msk,/**< SDMMC clock enabled
 684:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 685:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 686:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in SLEEP state */
 687:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_SLEEPCR_ETH0CR_Msk,  /**< ETH clock enabled 
 688:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 689:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 690:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in SLEEP state */
 691:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_SLEEPCR_EBUCR_Msk,  /**< EBU clock enabled i
 692:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 693:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_CCU = 0,  /**< CCU clock disabled in SLEEP state */
 694:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_SLEEPCR_CCUCR_Msk,  /**< CCU clock enabled i
 695:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_WDT = 0,  /**< WDT clock disabled in SLEEP state */
 696:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_SLEEPCR_WDTCR_Msk,  /**< WDT clock enabled i
 697:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_t;
 698:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 699:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /** 
 700:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in DEEPSLEEP state.
 701:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  In addition the state of FLASH, PLL and PLLVCO during DEEPSLEEP state.
 702:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetDeepSleepConfig before going to DEEPSLEEP state.
 703:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 704:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  The DEEPSLEEP state of the system corresponds to the DEEPSLEEP state of the CPU. The state is
 705:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 706:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  stopped. 
 707:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 708:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  In Deep Sleep state the OSC_HP and the PLL may be switched off. The wake-up logic in the NVIC i
 709:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  by a free-running clock. Peripherals are only clocked when configured to stay enabled. 
 710:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Configuration of peripherals and any SRAM content is preserved.
 711:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  The Flash module can be put into low-power mode to achieve a further power reduction.
 712:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  On wake-up Flash module will be restarted again before instructions or data access is possible.
 713:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Any interrupt will bring the system back to operation via the NVIC.The clock setup before
 714:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  entering Deep Sleep state is restored upon wake-up.
 715:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 716:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG
 717:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 718:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in DE
 719:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_DSLEEPCR_SYSSEL_Msk,  /**< fPLL used as
 720:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_FLASH_POWERDOWN = SCU_CLK_DSLEEPCR_FPDN_Msk,/**< Flash power 
 721:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_PLL_POWERDOWN = SCU_CLK_DSLEEPCR_PLLPDN_Msk,  /**<  Switch of
 722:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_VCO_POWERDOWN = SCU_CLK_DSLEEPCR_VCOPDN_Msk,  /**<  Switch of
 723:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 724:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in DEEPSLEEP state 
 725:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_DSLEEPCR_USBCR_Msk,  /**< USB clock enab
 726:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 727:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 728:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in DEEPSLEEP stat
 729:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_DSLEEPCR_MMCCR_Msk,/**< SDMMC clock en
 730:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 731:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 732:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in DEEPSLEEP state 
 733:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_DSLEEPCR_ETH0CR_Msk,  /**< ETH clock ena
 734:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 735:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 736:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in DEEPSLEEP state 
 737:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_DSLEEPCR_EBUCR_Msk,  /**< EBU clock enab
 738:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 739:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_CCU = 0,  /**< CCU clock disabled in DEEPSLEEP state 
 740:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_DSLEEPCR_CCUCR_Msk,  /**< CCU clock enab
 741:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_WDT = 0,  /**< WDT clock disabled in DEEPSLEEP state 
 742:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_DSLEEPCR_WDTCR_Msk,  /**< WDT clock enab
 743:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_t;
 744:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 745:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /** 
 746:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Defines status of EVR13 regulator
 747:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 748:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_EVR_STATUS
 749:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 750:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_OK = 0, /**< EVR13 regulator No overvoltage condition */
 751:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_EVR13_OVERVOLTAGE = SCU_POWER_EVRSTAT_OV13_Msk /**< EVR13 regulator is i
 752:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_EVR_STATUS_t;
 753:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 754:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 755:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Define status of external hibernate control  
 756:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 757:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_CTRL_STATUS
 758:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 759:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_NO_ACTIVE = 0, /**< Hibernate not driven active to pads */
 760:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_ACTIVE = SCU_HIBERNATE_HDSTAT_HIBNOUT_Msk, /**< Hibernate driven active t
 761:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_CTRL_STATUS_t;
 762:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 763:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /** 
 764:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Hibernate domain event status
 765:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 766:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_EVENT
 767:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 768:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_POS_EDGE = SCU_HIBERNATE_HDCR_WKPEP_Msk, /**< Wake-up on positive edg
 769:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_NEG_EDGE = SCU_HIBERNATE_HDCR_WKPEN_Msk, /**< Wake-up on negative edg
 770:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_RTC = SCU_HIBERNATE_HDCR_RTCE_Msk, /**< Wake-up on RTC event */
 771:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_ULPWDG = SCU_HIBERNATE_HDCR_ULPWDGEN_Msk, /**< ULP watchdog alarm status */
 772:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 773:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE = SCU_HIBERNATE_HDSTAT_VBATPEV_Msk, /**< Wake-up on LPAC posi
 774:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE = SCU_HIBERNATE_HDSTAT_VBATNEV_Msk, /**< Wake-up on LPAC nega
 775:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0PEV_Msk, /**< Wake-up on LP
 776:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0NEV_Msk, /**< Wake-up on LP
 777:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 778:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1PEV_Msk, /**< Wake-up on LP
 779:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1NEV_Msk, /**< Wake-up on LP
 780:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 781:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 782:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_EVENT_t;
 783:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 784:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /** 
 785:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   * Hibernate domain dedicated pins
 786:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   */
 787:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO
 788:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 789:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_0 = 0, /**< HIB_IO_0 pin. 
 790:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                              At the first power-up and with every reset of the hibernate domain thi
 791:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 792:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_1 = 1 /**< HIB_IO_1 pin. 
 793:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                             At the first power-up and with every reset of the hibernate domain this
 794:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                             @note : Only available in certain packages*/
 795:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 796:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_t;
 797:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 798:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 799:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * HIB_IOx pin I/O control
 800:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 801:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_PIN_MODE
 802:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 803:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_NONE = 0 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 804:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_DOWN = 1 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 805:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_UP = 2 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, in
 806:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_HIBCTRL = 8 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-
 807:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_WDTSRV = 9 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-p
 808:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_GPIO = 10 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-pu
 809:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_HIBCTRL = 12 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Ope
 810:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_WDTSRV = 13 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open
 811:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_GPIO = 14 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open d
 812:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_PIN_MODE_t;
 813:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 814:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 815:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the output polarity of the HIB_IOx
 816:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 817:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO_OUTPUT_LEVEL
 818:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 819:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_LOW = 0 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos, /**< Direct value */
 820:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_HIGH = 1 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos /**< Inverted value */
 821:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_OUTPUT_LEVEL_t;
 822:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 823:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 824:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects hibernate mode
 825:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 826:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_HIBERNATE_MODE
 827:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 828:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL = 0, /**< Request external hibernate mode */
 829:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 830:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL = 1, /**< Request internal hibernate mode. @note Only availab
 831:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 832:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_HIBERNATE_MODE_t;
 833:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 834:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 835:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR0 of ERU0
 836:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 837:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR0_INPUT
 838:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 839:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI0SEL_Msk, /**< Set HIB_SR0 to HIB_IO_0 dig
 840:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 841:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR0 to HIB_IO_1 digital input. @note Only availa
 842:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 843:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 844:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_ACMP0 = SCU_HIBERNATE_HDCR_ADIG0SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP0. @n
 845:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 846:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR0_INPUT_t;
 847:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 848:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 849:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 850:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
 851:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 852:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR1 of ERU0. @note Only available in XMC44 in certain packages.
 853:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 854:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR1_INPUT
 855:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 856:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI1SEL_Msk, /**< Set HIB_SR1 to HIB_IO_0 dig
 857:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR1 to HIB_IO_1 digital input.  */
 858:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_ACMP1 = SCU_HIBERNATE_HDCR_ADIG1SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP1. */
 859:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_XTAL_GPI = SCU_HIBERNATE_HDCR_XTALGPI1SEL_Msk,  /**< Set HIB_SR0 to RTC_XTA
 860:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR1_INPUT_t;
 861:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 862:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 863:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 864:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC input selection
 865:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 866:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_INPUT
 867:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 868:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_DISABLED = 0 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator permanen
 869:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_VBAT = 0x1 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activated 
 870:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_0 = 0x2 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 871:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))      
 872:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_1 = 0x4 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 873:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 874:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_INPUT_t;
 875:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 876:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 877:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC start trigger selection for selected inputs
 878:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 879:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_TRIGGER
 880:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 881:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SUBSECOND_INTERVAL_COUNTER = 0 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /*
 882:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_ALARM_EVENT = 0x1 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC al
 883:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_PERIODIC_EVENT = 0x2 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC
 884:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_POSITIVE_EDGE_EVENT = 0x3 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 885:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_NEGATIVE_EDGE_EVENT = 0x5 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 886:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_CONTINOUS = 0x6 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Continuous m
 887:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SINGLE_SHOT = 0x7 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Single sho
 888:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_TRIGGER_t;
 889:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 890:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 891:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC status
 892:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 893:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_STATUS
 894:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 895:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_COMPARE_DONE = SCU_HIBERNATE_LPACST_VBATSCMP_Msk, /**< VBAT compare 
 896:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO0SCMP_Msk, /**< HBI_IO
 897:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 898:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO1SCMP_Msk, /**< HBI_IO
 899:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 900:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_VBATVAL_Msk, /**< VBAT compar
 901:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO0VAL_Msk, /**< HBI_
 902:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 903:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO1VAL_Msk, /**< HBI_
 904:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 905:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_STATUS_t;
 906:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 907:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif /* (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41)
 908:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 909:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 910:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * DATA STRUCTURES
 911:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 912:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 913:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 914:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure for initializing the PLL functional block.
 915:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Structure holds divider values for N-DIV, P-DIV, K1-DIV, K2-DIV in order to generate desired 
 916:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  frequency using VCO. It holds the PLL mode of operation either normal or prescaler (VCO bypasse
 917:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_PLL_CONFIG_t for accessing these structure parameters.
 918:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 919:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_SYSPLL_CONFIG
 920:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 921:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t n_div;                       /**<  PLL N-Divider value. */
 922:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t p_div;                       /**<  PLL P-Divider value. */
 923:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t k_div;                       /**<  K1-Divider(Prescalar mode) or K2-Divider (Normal mode)
 924:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_t mode;    /**<  PLL mode of operation. */
 925:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_t clksrc; /**<  PLL divider input frequency. */
 926:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_CONFIG_t;
 927:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 928:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 929:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure used for initializing the clock functional block.
 930:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Clock functional block configures clock source needed for various peripheral and its divider va
 931:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_CONFIG_t for accessing these structure parameters.
 932:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 933:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_CONFIG
 934:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 935:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_CONFIG_t         syspll_config;      /**< PLL configuration */
 936:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_oschp;       /**< Enable external high precision osc
 937:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fOHP has to
 938:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_osculp;      /**< Enable external ultra low power os
 939:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fULP has to
 940:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t calibration_mode;   /**< Backup clock trimming mode. */
 941:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_t             fstdby_clksrc;      /**< Standby clock source. */
 942:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_t             fsys_clksrc;        /**< Choice of system clock. */
 943:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fsys_clkdiv;        /**< Ratio of fPLL to fSYS. */
 944:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fcpu_clkdiv;        /**< Ratio of fSys to fCPU. */
 945:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fccu_clkdiv;        /**< Ratio of fSys to fCCU. */
 946:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fperipheral_clkdiv; /**< Ratio of fSYS to fPERI. */
 947:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } const XMC_SCU_CLOCK_CONFIG_t;
 948:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 949:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 950:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Low power modes
 951:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 952:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_MODE_t
 953:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 954:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_SLEEP = 0, /**< sleep mode stops the processor clock */
 955:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_DEEPSLEEP = SCB_SCR_SLEEPDEEP_Msk /**< deep sleep mode stops the system clock 
 956:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_MODE_t;
 957:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 958:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 959:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * API PROTOTYPES
 960:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 961:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 962:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #ifdef __cplusplus
 963:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** extern "C" {
 964:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 965:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 966:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 967:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
 968:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 969:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 970:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 971:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 972:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 973:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
 974:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 975:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 976:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables out of range comparator for the selected ADC group and channel. \n\n
 977:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The ADC channel input is compared by Out of Range Comparator (ORC) for overvoltage monitoring
 978:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * or for detection of out of range analog inputs. ORC must be turned on explicitly
 979:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * to leverage the auditing feature. ORC is enabled by setting the enable bit in the GORCEN registe
 980:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 981:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableOutOfRangeComparator()\n\n\n
 982:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 983:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 984:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 985:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 986:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
 987:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 988:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 989:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 990:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 991:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 992:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
 993:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 994:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 995:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables the out of range comparator for the selected ADC group and the channel. \n\n
 996:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Out of range comparator is disabled by clearing the enable bit in the GORCEN register.
 997:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 998:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableOutOfRangeComparator()\n\n\n
 999:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1000:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
1001:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1002:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1003:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1004:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1005:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1006:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables die temperature measurement by powering the DTS module.\n\n
1007:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is enabled by setting the PWD bit of DTSCON register.
1008:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTempe
1010:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1011:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1012:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableTemperatureSensor(void);
1013:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1014:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1015:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1016:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1017:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1018:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables die temperature measurement by powering the DTS module off.\n\n
1019:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is disabled by clearing the PWD bit of DTSCON register.
1020:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1021:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTemper
1022:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1023:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1024:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableTemperatureSensor(void);
1025:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1026:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1027:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return Status of die temperature sensor. \n
1028:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: true - if temperature sensor is enabled.\n
1029:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    false - if temperature sensor is disabled.
1030:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1031:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1032:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the die temperature sensor power status.\n\n
1033:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading the PWD bit of DTSCON register.
1034:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1035:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1036:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1037:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1038:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorEnabled(void);
1039:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1040:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1041:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1042:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param offset  Offset value for calibrating the DTS result.\n
1043:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 127.
1044:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param gain    Gain value for calibrating the DTS conversion result.\n
1045:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 63.
1046:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1047:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1048:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1049:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1050:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Calibrates the measurement of temperature by configuring the values of offset and gain of \a DTS
1051:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Allows to improve the accuracy of the temperature measurement with the adjustment of \a OFFSET a
1052:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * in the \a DTSCON register.
1053:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Offset adjustment is defined as a shift of the conversion result. The range of the offset adjust
1054:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * resolution that corresponds to +/- 12.5�C. The offset value gets added to the measure result. 
1055:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Offset is considered as a signed value.
1056:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Gain adjustment helps in minimizing gain error. When the \a gain value is 0, result is generated
1057:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * When the \a gain value is 63, result is generated with least gain, i.e, \a RESULT - 63 at the hi
1058:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1059:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1060:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CalibrateTempMonitor with desired offset and gain calibration values to the DT
1061:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1062:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1063:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1064:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1065:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1066:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1067:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(),
1068:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1069:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1070:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain);
1071:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1072:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1073:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_STATUS_t  Result of starting the temperature measurement.\n
1074:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                           \b Range: \n 
1075:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_OK if the measurement is started successfully.\n
1076:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_ERROR if temperature sensor is not enabled.\n
1077:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_BUSY if temperature sensor is busy measuring the tem
1078:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1079:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1080:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1081:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Starts die temperature measurement using internal temperature sensor.\n\n
1082:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API checks if the temperature sensor is enabled and is not busy in measurement.\n
1083:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1084:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1085:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1086:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1087:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1088:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1089:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1090:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1091:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1092:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1093:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1094:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void);
1095:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1096:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1097:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1098:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1099:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Measured temperature value.\n
1100:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Valid temperature range is 0 to 1023. \n
1101:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              If sensor is not enabled, 0x7FFFFFFFH is returned.
1102:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1103:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1104:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Reads the measured value of die temperature.\n\n
1105:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Temperature measurement result is read from \a RESULT bit field of \a DTSSTAT register.
1106:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The temperature measured in �C is given by (RESULT - 605) / 2.05 [�C]
1107:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1108:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1109:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1110:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetTemperatureMeasurement(void);
1111:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1112:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1113:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the die temperature sensor is busy.\n
1114:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    \b Range: \a true if sensor is busy in temperature measurement.
1115:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    \a false if sensor is free and can accept a new request for measurement.
1116:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1117:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1118:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks whether Die Temperature Sensor (DTS) is busy in temperature measurement.\n\n
1119:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The status is read from the \a BUSY bit field of the \a DTSSTAT register.
1120:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1121:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1122:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1123:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorBusy(void);
1124:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1125:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1126:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return bool Status of die temperature sensor whether it is ready to start measurement. \n
1127:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: \n \a true if temperature sensor is ready to start measurement. \n
1128:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \a false if temperature sensor is not ready to start measurement.
1129:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1130:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1131:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks if the die temperature sensor is ready to start a measurement\n\n
1132:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading \a RDY bit of \a DTSSTAT register. It is recommended
1133:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * to check the ready status of die temperature sensor before starting it.
1134:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1135:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1136:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1137:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorReady(void);
1138:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1139:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (UC_SERIES != XMC45)
1140:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1141:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has exceeded the configured upper 
1142:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has exceeded the configured upper limit.
1143:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is less than the configured upper limit.
1144:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1145:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1146:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has exceeded the configured upper limit of temperature.\n\n
1147:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API checks \a OVERFL bit (Upper Limit Overflow Status bit) of \a DTEMPALARM register.
1148:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The \a OVERFL bit will be set if the measured temperature has exceeded the limit configured in 
1149:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a UPPER in the \a DTEMPLIM register.
1150:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1151:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_LowTemperature() \n\n\n
1152:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1153:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_HighTemperature(void);
1154:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1155:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1156:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1157:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param lower_temp  Lower threshold of die temperature. If measured temperature falls below this 
1158:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a UNDERFL bit field of \a DTEMPALARM register.
1159:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param upper_temp  Upper threshold of die temperature. If measured temperature exceeds this valu
1160:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a OVERFL bit field of \a DTEMPALARM register.
1161:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1162:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1163:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1164:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1165:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the lower and upper threshold of die temperature.\n\n
1166:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * API configures \a DTEMPLIM register for upper and lower die temperature threshold limits.
1167:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * When the measured temperature is outside the range defined by the limits, alarm bits \a UNDERFL 
1168:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * will be set in the register \a DTEMPALARM.\n
1169:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1170:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1171:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1172:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1173:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Use \a XMC_SCU_HighTemperature() and XMC_SCU_LowTemperature() to monitor the temperature.\n
1174:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1175:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature() \n\n\n
1176:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1177:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp);
1178:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1179:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1180:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has dropped below the configured l
1181:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has dropped below the configured lower l
1182:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is higher than the configured lower limit.
1183:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1184:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1185:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has dropped below the configured lower limit of temperature.\
1186:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API checks \a UNDERFL bit (Lower LimitUnderflow Status bit) of \a DTEMPALARM register.
1187:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The \a UNDERFL bit will be set if the measured temperature has dropped below the limit configure
1188:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a LOWER in the \a DTEMPLIM register.
1189:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1190:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_HighTemperature() \n\n\n
1191:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1192:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_LowTemperature(void);
1193:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
1194:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1195:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1196:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t Configured boot mode for the device.\n
1197:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for enumeration of different boot modes.
1198:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1199:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1200:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the boot mode configured for the device.\n\n
1201:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The boot mode is read from the \a STCON register bit field \a SWCON.
1202:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1203:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1204:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetBootMode() \n\n\n
1205:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1206:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetBootMode(void);
1207:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1208:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1209:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1210:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param mode Boot mode to be configured for the device.\n
1211:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for selecting the boot mode.
1212:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1213:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1214:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1215:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1216:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the desired boot mode for the device.\n\n
1217:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The XMC4 series devices support multiple boot modes. A running application can set a desired boo
1218:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * launch it by means of software reset. Switching of boot modes should be handled carefully. User 
1219:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the initial boot sequence is executed. A stable execution environment should be maintained when 
1220:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * eventually handed over to the application program.\n
1221:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to launch requested bootmode:\n
1222:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetBootMode() with desired boot mode value.\n
1223:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Trigger a software reset using system reset request by enabling a bit \a SYSRESETREQ of AIRCR 
1224:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *   (PPB->AIRCR |= PPB_AIRCR_SYSRESETREQ_Msk).\n
1225:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1226:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetBootMode() \n\n\n
1227:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1228:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t mode);
1229:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1230:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1231:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1232:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be read.\n
1233:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1234:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1235:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Data read from the selected general purpose register.
1236:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1237:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1238:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides stored data from general purpose SCU register.\n\n
1239:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1240:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * data. The API reads from either GPR0 or GPR1 based on the \a index value.
1241:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1242:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteGPR()\n\n\n
1243:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1244:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadGPR(const uint32_t index);
1245:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  
1246:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1247:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1248:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be written.\n
1249:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1250:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param data  Data to be written to the selected general purpose register.
1251:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1252:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1253:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1254:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1255:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Stores data in the selected general purpose SCU register.\n\n
1256:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1257:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * data. The API writes data to either GPR0 or GPR1 based on the \a index value.
1258:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1259:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadGPR()\n\n\n
1260:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1261:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data);
1262:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1263:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1264:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1265:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be written.\n
1266:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1267:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1268:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1269:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param data    32 bit data to be written into retention memory. The API writes
1270:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data to the address specified.\n
1271:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1272:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1273:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1274:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1275:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1276:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Writes input data to the selected address of Retention memory in hibernate domain.\n\n
1277:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1278:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1279:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1280:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1281:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1282:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadFromRetentionMemory() \n\n\n
1283:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1284:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data);
1285:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1286:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1287:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1288:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be read.\n
1289:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1290:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1291:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1292:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1293:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  32 bit data read from retention memory. The API reads
1294:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data from the address specified.\n
1295:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1296:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1297:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1298:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Reads data from selected address of retention memory in hibernate domain.\n\n
1299:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1300:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1301:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1302:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1303:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1304:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteToRetentionMemory() \n\n\n
1305:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1306:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address);
1307:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1308:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1309:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1310:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be enabled.\n
1311:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1312:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1313:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1314:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1315:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1316:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1317:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selectively enables interrupt sources to generate non maskable interrupt(NMI).\n\n
1318:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually enabled by setting corresponding bit of an interrupt in the 
1319:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \a NMIREQEN register.
1320:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1321:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_DisableNmiRequest() \n\n\n
1322:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1323:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request);
1324:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1325:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1326:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1327:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be disabled.\n
1328:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1329:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1330:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1331:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1332:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1333:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1334:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selectively disables interrupt sources from generating non maskable interrupt(NMI).\n\n
1335:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually disabled by clearing corresponding bits in the \a NMIREQEN reg
1336:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1337:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1338:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1339:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request);
1340:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1341:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1342:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1343:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be enabled.\n
1344:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1345:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1346:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1347:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1348:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1349:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables assertion of trap for the selected trap event.\n\n
1350:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually enabled by clearing respective bit of the 
1351:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * event in \a TRAPDIS register in order to get an exception.
1352:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1353:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Disable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1354:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1355:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Enable(const uint32_t trap);
1356:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1357:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1358:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1359:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be disabled.\n
1360:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1361:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1362:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1363:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1364:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1365:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables assertion of trap for the selected trap event.\n\n
1366:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually disabled by setting the respective event bit 
1367:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * in the \a TRAPDIS register in order to suppress trap generation.
1368:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1369:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1370:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1371:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Disable(const uint32_t trap);
1372:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1373:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1374:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1375:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap status bit has to be cleared.\n
1376:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1377:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1378:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1379:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1380:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1381:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Clears the trap status of input event.\n\n
1382:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Once a trap event is detected, it will have to be acknowledged and later serviced. 
1383:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The trap status bit should be cleared to detect the occurence of trap next time. 
1384:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * This is useful while polling for TRAPSTAT without enabling the NMI for trap.
1385:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap status can be cleared by setting the event bit in the \a TRAPCLR register.
1386:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1387:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1388:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1389:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap);
1390:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1391:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1392:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of trap generating events.\n
1393:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event. The returned
1394:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * value indicates the status of multiple events at their respective bit positions.
1395:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * User should mask the bits of the events of interest using the type specified.
1396:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1397:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1398:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the status of trap generating events. \n\n
1399:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The status is read from \a TRAPRAW register. Status of the specific events can be checked
1400:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * using their respective bits in the \a TRAPRAW register. The bit masks can be obtained from
1401:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the enumeration type @ref XMC_SCU_TRAP_t. Multiple events can be combined using \a OR operation.
1402:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * A trap event is considered to be asserted if the respective bit of the event is set to 1.
1403:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1404:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_ClearStatus() \n\n\n
1405:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1406:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_TRAP_GetStatus(void);  
1407:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1408:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1409:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1410:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap has to be triggered.\n
1411:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1412:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1413:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1414:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1415:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1416:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Triggers trap generation for the event specified. \n\n
1417:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The trap source has to be enabled before invocation of this API. 
1418:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap event can be triggered by setting its respective bit in the \a TRAPSET register.
1419:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap event can be configured to generate a non maskable interrupt by using the API XMC_SCU_INTER
1420:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to manually assert a trap event:\n
1421:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_EnableEvent with desired trap request source ID.\n
1422:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_SetEvent with same trap request source ID to manually assert a trap event
1423:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1424:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1425:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1426:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Trigger(const uint32_t trap);
1427:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1428:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1429:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1430:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be reset.\n
1431:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1432:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1433:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1434:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1435:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1436:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Puts the specified peripheral in to reset state. \n\n
1437:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API achieves reset of peripherals by setting the respective bit in the \a PRSET0,  \a PRSET1
1438:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset assertion automatically stored in the \a PRSTATn register and can be c
1439:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * user software to determine the state of the system and for debug purpose.\n
1440:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to assert a peripheral reset:\n
1441:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_AssertPeripheralReset() with desired peripheral identifier.\n
1442:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted with same peripheral identifier to verify whet
1443:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * is in reset state.\n
1444:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1445:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_IsPeripheralResetAsserted() \n\n\n
1446:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1447:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1448:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1449:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1450:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1451:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be moved out of reset state.\n
1452:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1453:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1454:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1455:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1456:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1457:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables the specified peripheral by moving it out of reset state.  \n\n
1458:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Any peripheral should be moved out of reset state for executing its functionality.
1459:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API enables the peripheral by setting its respective bit in the \a PRCLR0,  \a PRCLR1 or  \a
1460:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset deassertion is automatically stored in the \a PRSTATn register and can
1461:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the user software to determine the state of the system and for debug purpose.\n
1462:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to deassert a peripheral reset:\n
1463:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_DeassertPeripheralReset() with desired peripheral identifier.\n
1464:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted() with desired peripheral identifier to verify
1465:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * has been enabled.\n
1466:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1467:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1468:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1469:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1470:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1471:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1472:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1473:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral, whose reset status has to be checked.\n
1474:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals.
1475:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1476:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral reset. \n
1477:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *               \b Range: \a true if peripheral is in reset state. \a false if peripheral is enabl
1478:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1479:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1480:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks the reset status of the selected peripheral.\n\n
1481:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API reads the reset status from \a PRSTATn register. Returns true if the peripheral is in
1482:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * reset state. On power up of the device, all the peripherals will be in reset state. 
1483:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If the peripheral is enabled, \a false will be returned as the status.
1484:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1485:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n 
1486:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1487:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1488:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  
1489:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1490:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1491:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error status has to be cleared.\n
1492:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1493:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          memory status bits can be cleared by using the \a OR operation.
1494:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1495:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1496:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1497:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1498:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Clears the parity error status bit. \n\n
1499:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * When a memory parity error is detected using the status bits in \a PEFLAG register. It has to 
1500:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * be cleared by software to detect the parity error from the same memory next time.
1501:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API clears the parity error status bit of the selected peripheral by setting the 
1502:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * respective bit in the \a PEFLAG register. Status of multiple memory parity errors 
1503:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * can be cleared by combining the enum values using \a OR operation.
1504:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1505:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetStatus(), XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_EnableTrapGeneration() \n\n\
1506:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1507:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory);
1508:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1509:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1510:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1511:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error checking has to be enabled.\n
1512:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1513:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1514:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1515:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1516:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1517:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1518:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables parity error checking for the selected on-chip RAM type.\n\n
1519:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Parity error checking can be enabled by setting respective bits in the \a PEEN register.
1520:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Additionally parity error can be configured to generate trap when the error is detected,
1521:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * using the API XMC_SCU_PARITY_EnableTrapGeneration(). Such a trap can be further configured
1522:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * to generate non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1523:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1524:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration(), XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1525:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1526:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Enable(const uint32_t memory);
1527:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1528:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1529:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1530:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory   The on-chip RAM type, for which the parity error checking has to be disabled.\n
1531:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1532:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1533:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1534:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1535:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1536:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1537:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables parity error checking for the selected on-chip RAM type.\n\n
1538:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Parity error detection can be disabled by clearing the respective bit in the \a PEEN register.
1539:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1540:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1541:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1542:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Disable(const uint32_t memory);
1543:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1544:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1545:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1546:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be enable
1547:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1548:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1549:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1550:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1551:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1552:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1553:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables trap assertion for the parity error source.\n\n
1554:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Parity error detection for different types of on-chip RAM can generate trap.
1555:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap assertion for parity error can be individually enabled by setting the respective bits
1556:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * in the \a PETE register. The generated trap can be additionally configured to generate
1557:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1558:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1559:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1560:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1561:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory);
1562:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1563:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1564:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1565:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be disabl
1566:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1567:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1568:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1569:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1570:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1571:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1572:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables the assertion of trap for the parity error source.\n\n
1573:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be disabled by clearing the respective bit of the RAM type in the \a PETE reg
1574:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1575:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1576:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration() \n\n\n
1577:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1578:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory);
1579:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1580:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1581:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1582:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of parity error detection for the on-chip RAM modules.\n
1583:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to get the bit mask of each RAM module type.
1584:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1585:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1586:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the status of parity error detection for the on-chip RAM modules.\n\n
1587:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Parity error status information is obtained from the \a PEFLAG register.
1588:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If a particular RAM module has parity error, its respective bit field will be set to 1 in the 
1589:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * returned value. A check for the status of a particular RAM module can be done by
1590:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * masking the returned value with the RAM module identifier from the type @ref XMC_SCU_PARITY_t.
1591:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1592:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_ClearStatus() \n\n\n
1593:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1594:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_PARITY_GetStatus(void);  
1595:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1596:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1597:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1598:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity logic should be overriden.\n
1599:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1600:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1601:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1602:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1603:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1604:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1605:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enable access to parity bits of SRAM modules for various types of peripherals.
1606:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enable direct write to parity bits using value selected using XMC_SCU_PARITY_SetParityWriteValue
1607:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1608:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_SetParityWriteValue() \n\n\n
1609:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
1610:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1611:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
1612:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1613:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->MCHKCON = memory;
1614:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1615:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1616:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1617:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity test has to be enabled.\n
1618:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. 
1619:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Only a single memory type should be specified.
1620:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1621:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1622:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1623:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1624:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects parity test output from a memory instance that can be inspected using XMC_SCU_PARITY_Get
1625:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1626:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetParityReadValue() \n\n\n
1627:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
1628:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1629:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
1630:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1631:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTSR = memory;
1632:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1633:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1634:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1635:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param write_value parity bits value stored with next write access\n
1636:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1637:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1638:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1639:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1640:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits corresponding to the next write access are sele
1641:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1642:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1643:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1644:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
1645:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1646:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SetParityWriteValue(uint8_t write_value)
1647:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1648:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTPR = ((write_value << SCU_PARITY_PMTPR_PWR_Pos) & SCU_PARITY_PMTPR_PWR_Msk);
1649:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1650:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1651:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1652:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return parity bits generated during last read access  
1653:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1654:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1655:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits generated during the most recent read access ca
1656:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1657:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1658:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1659:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
1660:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1661:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint8_t XMC_SCU_PARITY_GetParityReadValue(void)
1662:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1663:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return ((SCU_PARITY->PMTPR & SCU_PARITY_PMTPR_PRD_Msk) >> SCU_PARITY_PMTPR_PRD_Pos);
1664:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1665:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1666:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1667:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1668:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be enabled. \n
1669:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1670:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1671:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1672:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1673:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1674:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables the source clock for selected peripheral.\n\n
1675:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually enabled by setting the pe
1676:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * specific bit in the \a CLKSET register.\n
1677:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether a source clock of peripheral is enabl
1678:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_EnableClock() with desired peripheral identifier.\n
1679:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled() with same peripheral identifier to verify whether the c
1680:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1681:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableClock(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1682:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1683:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock);
1684:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1685:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1686:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1687:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be disabled. \n
1688:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1689:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1690:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1691:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1692:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1693:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables source clock for the peripheral selected.\n\n
1694:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually disabled  by setting the 
1695:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * specific bits in the \a CLKCLR register.\n
1696:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether clock source of the peripheral is ena
1697:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_DisableClock with desired peripheral identifier.\n
1698:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled with same peripheral identifier to verify whether periphe
1699:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1700:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1701:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1702:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock);
1703:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1704:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1705:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1706:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param clock   Peripheral for which the clock status has to be checked. \n
1707:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1708:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1709:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral clock.\n
1710:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: \a true if peripheral clock is enabled. \a false if peripheral clock is disable
1711:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1712:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1713:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks the status of peripheral source clock.\n\n
1714:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The status of peripheral source clock is read from the \a CLKSTATn register. 
1715:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Returns \a true if clock is enabled and returns \a false otherwise.
1716:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1717:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_CLOCK_DisableClock() \n\n\n
1718:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1719:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock);
1720:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1721:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1722:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1723:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for fSYS.\n
1724:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1725:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI for selecting internal fast clock as fSYS.\n
1726:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL for selecting the output of PLL fPLL as fSYS.
1727:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1728:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1729:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1730:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1731:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source for system clock (fSYS).\n\n
1732:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * System clock is selected by setting \a SYSSEL bits in the \a SYSCLKCR register.
1733:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSCLKSRC_PLL is selected, then the dividers of the PLL have to be
1734:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * additionally configured to achieve the required system clock frequency. 
1735:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   * \par<b>Related APIs:</b><BR>
1736:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_StartSystemPll(), XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
1737:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1738:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source);
1739:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1740:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1741:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_SYSCLKSRC_t   Source of clock for fSYS.\n
1742:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1743:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI - internal fast clock selected as fSYS.\n
1744:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL - output of PLL fPLL selected as fSYS.
1745:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1746:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1747:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of system clock (fSYS). \n\n
1748:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selected source of fSYS is obtained by reading \a SYSSEL bits of \a SYSCLKCR register.
1749:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1750:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource(), XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
1751:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1752:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSCLKSRC_t XMC_SCU_CLOCK_GetSystemClockSource(void)
1753:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1754:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSCLKSRC_t)(SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk);
1755:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1756:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1757:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1758:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1759:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1760:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to select the source of clock.\n
1761:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL as source of USB clock(fUSB/
1762:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL as source of USB clock(fUSB
1763:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1764:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1765:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1766:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1767:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of USB/SDMMC clock (fUSB/SDMMC).\n\n
1768:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * USB and SDMMC use a common clock source. They can either use fUSB PLL or fPLL as the source of c
1769:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The selection is done by configuring the \a USBSEL bits of \a USBCLKCR register.
1770:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1771:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1772:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1773:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source);
1774:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1775:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1776:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_USBCLKSRC_t   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1777:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to identify the source of clock.\n
1778:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL is selected as source of USB
1779:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL is selected as source of US
1780:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1781:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1782:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of USB and SDMMC clock frequency.\n\n
1783:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The clock source is read from from the \a USBSEL bits of \a USBCLKCR register.
1784:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1785:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1786:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1787:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_USBCLKSRC_t XMC_SCU_CLOCK_GetUsbClockSource(void)
1788:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1789:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_USBCLKSRC_t)(SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk);
1790:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1791:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1792:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1793:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1794:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source  Clock source for watchdog timer.\n
1795:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1796:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1797:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1798:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1799:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1800:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1801:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1802:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1803:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of WDT clock (fWDT).\n\n
1804:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The selected value is configured to the \a WDTSEL bits of \a WDTCLKCR register.
1805:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The watchdog timer counts at the frequency selected using this API. So the time for
1806:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * timeout or pre-warning of watchdog has to be calculated based on this selection.
1807:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1808:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1809:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_GetWdtClockFrequency() \n\n\n
1810:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1811:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source);
1812:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1813:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1814:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_WDTCLKSRC_t   Clock source configured for watchdog timer.\n
1815:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1816:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1817:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1818:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1819:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1820:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1821:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the source of clock used for watchdog timer.\n\n
1822:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTSEL bits of \a WDTCLKCR register.
1823:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The time for timeout or pre-warning of watchdog has to be calculated based on 
1824:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the clock source selected.
1825:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1826:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_SetWdtClockSource() \n\n\n
1827:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1828:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_WDTCLKSRC_t XMC_SCU_CLOCK_GetWdtClockSource(void)
1829:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1830:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_WDTCLKSRC_t)(SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk);
1831:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1832:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1833:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1834:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1835:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source   Source for standby clock.\n
1836:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1837:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1838:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1839:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1840:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1841:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1842:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1843:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of Standby clock (fSTDBY).\n\n
1844:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Clock source is configured by setting the \a STDBYSEL bits of \a HDCR register.
1845:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Hibernate domain should be enabled explicitly before using the API.
1846:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1847:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \note
1848:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1849:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1850:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1851:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetStdbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1852:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1853:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source);
1854:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1855:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1856:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source clock of standby clock(fSTDBY).\n
1857:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1858:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1859:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1860:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1861:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1862:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the source of standby clock (fSTDBY).\n\n
1863:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a STDBYSEL bits of \a HDCR register.\n
1864:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1865:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetStandbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1866:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1867:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetStdbyClockSource(void)
1868:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1869:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_STDBYSEL_Msk);
1870:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1871:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1872:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1873:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1874:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of RTC clock.\n
1875:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1876:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1877:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1878:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1879:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1880:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1881:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1882:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of RTC clock (fRTC).\n\n
1883:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a RCS bit of \a HDCR register.
1884:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * fULP needs external input powered by VBAT or VDDP. fOSI is internal clock.
1885:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1886:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1887:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \note
1888:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1889:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1890:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1891:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetRtcClockSource() \n\n\n
1892:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1893:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source);
1894:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1895:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1896:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source of RTC clock.\n
1897:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1898:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1899:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1900:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1901:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1902:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the source of RTC clock (fRTC).
1903:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a RCS bit of \a HDCR register.
1904:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1905:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1906:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1907:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1908:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetRtcClockSource(void)
1909:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1910:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_RCS_Msk);
1911:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1912:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1913:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1914:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1915:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param clock  Source of external clock output(fEXT).\n
1916:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1917:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1918:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1919:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1920:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1921:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1922:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1923:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \endif
1924:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1925:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1926:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \endif
1927:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1928:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1929:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1930:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1931:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of external clock out (fEXT).\n\n
1932:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKSEL bits of \a EXTCLKCR register.
1933:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1934:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1935:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1936:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t clock);
1937:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1938:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1939:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_EXTOUTCLKSRC_t   Source of external clock output(fEXT).\n
1940:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1941:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1942:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1943:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1944:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1945:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1946:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \endif
1947:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1948:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1949:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \endif
1950:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1951:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1952:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the source of external clock output(fEXT).\n\n
1953:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECKSEL bits of \a EXTCLKCR register.
1954:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1955:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1956:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1957:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_EXTOUTCLKSRC_t XMC_SCU_CLOCK_GetExternalOutputClockSource(void)
1958:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1959:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_EXTOUTCLKSRC_t)(SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKSEL_Msk);
1960:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1961:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1962:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1963:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1964:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for system PLL.\n
1965:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1966:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1967:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1968:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1969:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1970:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1971:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1972:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of system PLL.\n\n
1973:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a VCOBYP bit of \a PLLCON0 register.
1974:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP is selected, ensure that the high performance oscillator 
1975:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * enabled by using the API XMC_SCU_CLOCK_EnableHighPerformanceOscillator().
1976:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1977:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator()\n\n\n
1978:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1979:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source);
1980:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1981:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1982:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_OSCCLKSRC_t   Source of clock for system PLL.\n
1983:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1984:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1985:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1986:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1987:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1988:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the source of system PLL clock (fPLL). \n\n
1989:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a VCOBYP bit of \a PLLCON0 register.
1990:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1991:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator(), XMC_SCU_CLOCK_SetSystemPllClockSource()\n\n\n
1992:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1993:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSPLLCLKSRC_t XMC_SCU_CLOCK_GetSystemPllClockSource(void)
1994:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1995:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSPLLCLKSRC_t)(SCU_PLL->PLLCON0 & SCU_PLL_PLLCON0_VCOBYP_Msk);
1996:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1997:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1998:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
1999:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2000:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2001:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of ECAT clock.\n
2002:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2003:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2004:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2005:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2006:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2007:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2008:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2009:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of ECAT clock (fECAT).\n\n
2010:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECATSEL bit of \a ECATCLKCR register.
2011:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2012:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetECATClockSource() \n\n\n
2013:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2014:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_CLOCK_SetECATClockSource(const XMC_SCU_CLOCK_ECATCLKSRC_t source)
2015:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2016:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ((uint32_t)~SCU_CLK_ECATCLKCR_ECATSEL_Msk)) |
2017:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                       ((uint32_t)source);
2018:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2019:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2020:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2021:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_ECATCLKSRC_t   Source of ECAT clock.\n
2022:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2023:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2024:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2025:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2026:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2027:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the source of ECAT clock (fECAT).
2028:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECATSEL bit of \a ECATCLKCR register.
2029:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2030:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
2031:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2032:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_ECATCLKSRC_t XMC_SCU_CLOCK_GetECATClockSource(void)
2033:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2034:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_ECATCLKSRC_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) >> SCU_C
2035:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2036:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
2037:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2038:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2039:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2040:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param divider   Ratio of fSYS clock source to the value of fSYS.
2041:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 to 256.
2042:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2043:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2044:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2045:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2046:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the ratio of system clock source to the value of system clock frequency.\n\n
2047:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is configured as \a SYSDIV bits of \a SYSCLKCR register. The divider value is 
2048:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * decremented by 1 before configuring.
2049:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2050:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2051:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2052:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider);
2053:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2054:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2055:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio of fSYS clock source to the value of fSYS.
2056:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 to 255.
2057:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2058:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2059:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the value of ratio between the source of system clock to the the value of system clock 
2060:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a SYSDIV bits of \a SYSCLKCR register.
2061:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2062:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2063:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2064:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockDivider(void)
2065:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2066:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) >> SCU_CLK_SYSCLKCR_SYSDIV_Po
2067:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2068:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2069:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2070:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2071:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of fCCU clock source to the value of fCCU.
2072:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 or 2.\n
2073:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS \n
2074:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  2-> fCCU= fSYS/2.
2075:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2076:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2077:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2078:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2079:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the divider for CCU clock source. \n\n
2080:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Capture compare unit(CCU) can take either fSYS or fSYS/2 as the source of clock.
2081:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The configuration is set to \a CCUDIV bit of \a CCUCLKCR register. The CCUDIV bit is 1 bit wide.
2082:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2083:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2084:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider() \n\n\n
2085:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2086:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t ratio);
2087:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2088:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2089:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of fCCU clock source to the value of fCCU.
2090:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 or 1.\n
2091:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  0-> fCCU= fSYS \n
2092:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS/2.
2093:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2094:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2095:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CCU clock(fCCU) to system clock(fSYS).\n\n
2096:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CCUDIV bit of \a CCUCLKCR register.
2097:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2098:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2099:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCcuClockDivider() \n\n\n
2100:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2101:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCcuClockDivider(void)
2102:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2103:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >> SCU_CLK_CCUCLKCR_CCUDIV_Po
2104:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2105:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2106:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2107:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2108:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between system clock(fSYS) and CPU clock(fCPU).
2109:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2110:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS. \n
2111:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            2-> fCPU= fSYS/2.
2112:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2113:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2114:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2115:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2116:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the CPU clock by setting the divider value for the system clock. \n\n
2117:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is set to the \a CPUDIV bit of \a CPUCLKCR register.
2118:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2119:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockDivider() \n\n\n
2120:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2121:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t ratio);
2122:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2123:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2124:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio between system clock(fSYS) and CPU clock(fCPU).
2125:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2126:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            0-> fCPU= fSYS. \n
2127:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS/2.
2128:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2129:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2130:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between system clock(fSYS) and CPU clock(fCPU). \n\n
2131:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CPUDIV bit of \a CPUCLKCR register.
2132:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2133:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCpuClockDivider() \n\n\n
2134:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2135:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockDivider(void)
2136:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2137:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_CPUDIV_Po
2138:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2139:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2140:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2141:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2142:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of peripheral clock source to the value of peripheral clock.\n
2143:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2144:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU.\n
2145:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                2-> fPERIPH= fCPU/2.
2146:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2147:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2148:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2149:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2150:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the peripheral clock by setting the divider for CPU clock(fCPU).\n\n
2151:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The peripheral clock can be equal to either fCPU or fCPU/2. The value is configured to \a PBDIV 
2152:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2153:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2154:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockDivider() \n\n\n
2155:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2156:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t ratio);
2157:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2158:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2159:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of peripheral clock source to the value of peripheral clock.\n
2160:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2161:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                0-> fPERIPH= fCPU.\n
2162:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU/2.
2163:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2164:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2165:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CPU clock(fCPU) to peripheral clock(fPERIPH).\n\n
2166:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a PBDIV bit of \a PBCLKCR register.
2167:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2168:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetPeripheralClockDivider() \n\n\n
2169:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2170:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetPeripheralClockDivider(void)
2171:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2172:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos);
2173:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2174:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2175:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2176:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2177:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2178:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 8.
2179:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2180:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2181:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2182:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2183:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the USB clock(fUSB) by setting the USB clock divider. \n\n
2184:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is decremented by 1 before setting it to \a USBDIV bits of \a USBCLKCR register.
2185:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2186:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2187:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockDivider(), XMC_SCU_CLOCK_SetUsbClockSource() \n\n\n
2188:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2189:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t ratio);
2190:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2191:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2192:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2193:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2194:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 7.
2195:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2196:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2197:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL output frequency(fPLL) and USB clock(fUSB).\n\n
2198:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a USBDIV bit of \a USBCLKCR register.
2199:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2200:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbClockSource() \n\n\n
2201:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2202:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetUsbClockDivider(void)
2203:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2204:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >> SCU_CLK_USBCLKCR_USBDIV_Po
2205:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2206:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2207:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2208:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2209:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
2210:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2211:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2212:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2213:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 64.
2214:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2215:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2216:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2217:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2218:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the EBU clock(fEBU) by setting the divider value.\n\n
2219:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The clock divider is configured to the \a EBUDIV bits of \a EBUCLKCR register.
2220:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2221:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetEbuClockDivider() \n\n\n
2222:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2223:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t ratio);
2224:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2225:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2226:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2227:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2228:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 63.
2229:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2230:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2231:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL clock(fPLL) and EBU clock(fEBU).\n\n
2232:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EBUDIV bits of \a EBUCLKCR register.
2233:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2234:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetEbuClockDivider() \n\n\n
2235:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2236:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEbuClockDivider(void)
2237:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2238:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >> SCU_CLK_EBUCLKCR_EBUDIV_Po
2239:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2240:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
2241:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2242:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2243:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2244:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between the source of WDT clock and the WDT clock.\n
2245:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 256.
2246:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2247:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2248:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2249:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2250:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the WDT clock by setting the clock divider for the WDT clock source.\n\n
2251:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a WDTDIV bits of \a WDTCLKCR register. The value of divider
2252:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring. Check the selected clock source for the WDT clock
2253:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * before configuring the divider using the API XMC_SCU_CLOCK_SetWdtClockSource().
2254:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2255:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_GetWdtClockDivider() \n\n\n
2256:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2257:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t ratio);
2258:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2259:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2260:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2261:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of WDT clock and the WDT clock.\n
2262:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 255.
2263:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2264:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2265:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the WDT parent clock and the WDT clock. \n\n
2266:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTDIV bits of \a WDTCLKCR register.
2267:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Ensure that the WDT parent clock is considered before using the value of
2268:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the divider value.
2269:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2270:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_SetWdtClockDivider() \n\n\n
2271:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2272:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetWdtClockDivider(void)
2273:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2274:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >> SCU_CLK_WDTCLKCR_WDTDIV_Po
2275:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2276:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2277:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2278:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2279:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the external output parent clock selected and the output clock.\n
2280:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 512.
2281:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2282:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2283:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2284:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2285:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the external output clock by setting the divider value for the parent clock. \n\n
2286:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKDIV bits of \a EXTCLKCR register.
2287:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The divider value is decremented by 1 before storing it to the bit fields.
2288:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Ensure that the source of external output clock is configured appropriately using the API
2289:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource().
2290:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2291:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_GetExternalOutputClockDivider() \n\n
2292:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2293:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t ratio);
2294:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2295:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2296:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2297:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the external output parent clock selected and the output clock.\
2298:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 511.
2299:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2300:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2301:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the divider value applied on parent clock before the generation of external output cloc
2302:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EXTDIV bit of \a EXTCLKCR register.
2303:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2304:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
2305:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2306:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetExternalOutputClockDivider(void)
2307:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2308:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >> SCU_CLK_EXTCLKCR_ECKDIV_Po
2309:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2310:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2311:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2312:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2313:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2314:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the source of ECAT clock and the ECAT clock.\n
2315:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 4.
2316:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2317:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2318:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2319:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2320:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the ECAT clock by setting the clock divider for the ECAT clock source.\n\n
2321:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECADIV bits of \a ECATCLKCR register. The value of divider
2322:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring.
2323:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2324:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_GetECATClockDivider() \n\n\n
2325:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2326:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider);
2327:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2328:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2329:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2330:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of ECAT clock and the ECAT clock.\n
2331:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 3.
2332:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2333:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2334:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the ECAT parent clock and the ECAT clock. \n\n
2335:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECADIV bits of \a ECATCLKCR register.
2336:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2337:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_SetECATClockDivider() \n\n\n
2338:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2339:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetECATClockDivider(void)
2340:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2341:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECADIV_Msk) >> SCU_CLK_ECATCLKCR_ECADIV
2342:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2343:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
2344:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2345:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2346:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2347:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2348:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2349:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2350:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables the high precision oscillator by configuring external crystal mode.\n\n
2351:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 0, there by configuring the 
2352:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * external clock input.
2353:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The System Oscillator Watchdog is enabled. The user should check the status 
2354:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable()
2355:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2356:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2357:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2358:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void);
2359:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2360:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2361:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2362:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2363:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2364:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables the high precision oscillator by disabling the external oscillator.\n\n
2365:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 1, there by disabling the 
2366:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * external oscillator. 
2367:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2368:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2369:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2370:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void);
2371:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2372:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2373:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2374:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return Status of high performance oscillator
2375:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2376:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2377:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_HP oscillator is stable and usable
2378:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2379:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2380:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2381:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void);
2382:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2383:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2384:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2385:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2386:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2387:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2388:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2389:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus to monitor the status of
2390:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableHighPerformanceOscillator
2391:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2392:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2393:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2394:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void);
2395:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2396:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2397:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2398:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2399:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2400:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2401:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2402:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2403:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2404:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2405:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void);
2406:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2407:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2408:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2409:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_HP XTAL1 pin
2410:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2411:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2412:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_HP XTAL1 pin.
2413:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2414:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2415:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2416:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void);
2417:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2418:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2419:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2420:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2421:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2422:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2423:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables ultra low power oscillator(ULP). \n\n
2424:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It enables the hibernate domain, configures the ultra low power oscillator
2425:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * uisng the \a MODE bits of the \a OSCULCTRL register. The \a Mode bits will be
2426:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * reset to 0 to enable the low power oscillator. Mirror register update delays 
2427:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * are handled internally.
2428:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The OSC_ULP Oscillator Watchdog is enabled. The user should check the status 
2429:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsLowPowerOscillatorStable()
2430:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2431:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() 
2432:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_IsLowPowerOscillatorStable() \n\n\n
2433:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2434:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void);
2435:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2436:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2437:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2438:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2439:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2440:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2441:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables ultra low power oscillator.\n\n
2442:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is disabled by setting the \a MODE bits of \a OSCULCTRL register to value 2.
2443:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * By default on power up, the ultra low power osciallator is disabled.
2444:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2445:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2446:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2447:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void);
2448:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2449:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2450:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2451:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return Status of low power oscillator
2452:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2453:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2454:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_ULP oscillator is stable and usable
2455:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2456:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2457:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2458:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void);
2459:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2460:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2461:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2462:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2463:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2464:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2465:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2466:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus to monitor the status of OSC_UL
2467:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableLowPowerOscillator().
2468:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2469:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \note
2470:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2471:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2472:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2473:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() \n\n\n
2474:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2475:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void);
2476:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2477:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2478:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2479:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2480:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2481:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2482:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2483:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2484:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2485:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \note
2486:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2487:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2488:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2489:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2490:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void);
2491:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2492:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2493:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2494:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_ULP XTAL1 pin 
2495:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2496:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2497:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_ULP XTAL1 pin.
2498:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2499:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2500:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2501:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void);
2502:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2503:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2504:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2505:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System frequency in Hertz.\n
2506:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            \b Range: clock frequency in Hertz. Range of the value depends on the source clock fr
2507:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            and the configured values of dividers.
2508:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2509:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2510:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the value of system PLL output clock frequency(fPLL).\n\n
2511:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API uses \a N-DIV,  \a P-DIV,  \a K1-DIV,  \a K2-DIV bits information from \a PLLCON1 regist
2512:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * VCOBYP bit information from \a PLLCON0 register. It calculates frequency of system pll clock usi
2513:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If normal Mode : fPLL = (fOSC * N)/(P * K2).
2514:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If prescaler mode: fPLL = fOSC/ K1.
2515:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2516:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2517:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2518:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void);
2519:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2520:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2521:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2522:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Source clock used for deriving system clock.\n
2523:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: fOHP frequency if external high precision frequency is used. \n
2524:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    fOFI fast internal clock frequency.
2525:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2526:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2527:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the value of the input clock frequency for deriving the system clock.
2528:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API retrieves frequency of system PLL input clock (fPLLin).
2529:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Based on \a PINSEL bits information from \a PLLCON2 register, the parent clock source is obtaine
2530:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * This bit field specifies if fOHP or fOFI is used for deriving system clock.
2531:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * System clock frequency is obtained by dividing the source clock frequency with different divider
2532:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2533:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockFrequency() \n\n\n
2534:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2535:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void);
2536:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2537:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2538:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2539:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB PLL output clock frequency.
2540:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2541:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2542:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB PLL output clock (fUSBPLL).\n\n
2543:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It obtains the \a VCOBYP bits information from \a USBPLLCON register and decides if USB PLL mode
2544:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If USB PLL mode is used, the USB clock frequency is obtained by dividing the source clock by USB
2545:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The frequency is obtained using following formula:\n
2546:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If Normal Mode : fUSBPLL = (fOSC * N)/(P * 2).\n
2547:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If Prescaler mode: fPLL = fOSC.
2548:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2549:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
2550:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2551:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void);
2552:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2553:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2554:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2555:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System clock frequency in Hertz.
2556:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2557:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2558:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of system clock (fSYS).\n\n
2559:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value obtained by dividing \a CPUDIV bits information of \a CPUCLKCR register with SystemCor
2560:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fSYS clock frequency is derived using the following formula:\n
2561:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * fSYS = fCPU << CPUDIV.
2562:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2563:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
2564:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2565:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockFrequency(void)
2566:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2567:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return SystemCoreClock << ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_
 1355              	 .loc 2 2567 0
 1356 0000 054B     	 ldr r3,.L143
 1357 0002 1A69     	 ldr r2,[r3,#16]
 1358              	.LVL95:
 1359              	.LBE17:
 1360              	.LBE16:
 758:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t frequency = 0UL;
 759:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 760:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 761:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (uint32_t)(frequency >> ((uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >>
 1361              	 .loc 1 761 0
 1362 0004 1B6A     	 ldr r3,[r3,#32]
 1363              	.LBB19:
 1364              	.LBB18:
 1365              	 .loc 2 2567 0
 1366 0006 02F00102 	 and r2,r2,#1
 1367 000a 0449     	 ldr r1,.L143+4
 1368 000c 0868     	 ldr r0,[r1]
 1369 000e 9040     	 lsls r0,r0,r2
 1370              	.LBE18:
 1371              	.LBE19:
 1372              	 .loc 1 761 0
 1373 0010 03F00103 	 and r3,r3,#1
 762:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                               SCU_CLK_CCUCLKCR_CCUDIV_Pos)));
 763:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 1374              	 .loc 1 763 0
 1375 0014 D840     	 lsrs r0,r0,r3
 1376 0016 7047     	 bx lr
 1377              	.L144:
 1378              	 .align 2
 1379              	.L143:
 1380 0018 00460050 	 .word 1342195200
 1381 001c 00000000 	 .word SystemCoreClock
 1382              	 .cfi_endproc
 1383              	.LFE217:
 1385              	 .section .text.XMC_SCU_CLOCK_GetUsbClockFrequency,"ax",%progbits
 1386              	 .align 2
 1387              	 .global XMC_SCU_CLOCK_GetUsbClockFrequency
 1388              	 .thumb
 1389              	 .thumb_func
 1391              	XMC_SCU_CLOCK_GetUsbClockFrequency:
 1392              	.LFB218:
 764:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 765:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /*
 766:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * API to retrieve USB and SDMMC clock frequency
 767:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
 768:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbClockFrequency(void)
 769:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1393              	 .loc 1 769 0
 1394              	 .cfi_startproc
 1395              	 
 1396              	 
 1397 0000 08B5     	 push {r3,lr}
 1398              	.LCFI6:
 1399              	 .cfi_def_cfa_offset 8
 1400              	 .cfi_offset 3,-8
 1401              	 .cfi_offset 14,-4
 1402              	.LVL96:
 1403              	.LBB20:
 1404              	.LBB21:
1789:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
 1405              	 .loc 2 1789 0
 1406 0002 0A4B     	 ldr r3,.L150
 1407 0004 9B69     	 ldr r3,[r3,#24]
 1408              	.LBE21:
 1409              	.LBE20:
 770:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t frequency = 0UL;
 771:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_USBCLKSRC_t clksrc;
 772:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 773:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetUsbClockSource();
 774:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 775:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_SYSPLL)
 1410              	 .loc 1 775 0
 1411 0006 13F48033 	 ands r3,r3,#65536
 1412 000a 02D0     	 beq .L146
 776:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 777:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 1413              	 .loc 1 777 0
 1414 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 1415              	.LVL97:
 1416 0010 04E0     	 b .L147
 1417              	.LVL98:
 1418              	.L146:
 778:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 779:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_USBPLL)
 1419              	 .loc 1 779 0
 1420 0012 13B9     	 cbnz r3,.L148
 780:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 781:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 1421              	 .loc 1 781 0
 1422 0014 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 1423              	.LVL99:
 1424 0018 00E0     	 b .L147
 1425              	.LVL100:
 1426              	.L148:
 770:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_USBCLKSRC_t clksrc;
 1427              	 .loc 1 770 0
 1428 001a 0020     	 movs r0,#0
 1429              	.LVL101:
 1430              	.L147:
 782:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 783:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
 784:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 785:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 786:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 787:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (uint32_t)(frequency / (((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >>
 1431              	 .loc 1 787 0
 1432 001c 034B     	 ldr r3,.L150
 1433 001e 9B69     	 ldr r3,[r3,#24]
 1434 0020 03F00703 	 and r3,r3,#7
 788:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                    SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 1435              	 .loc 1 788 0
 1436 0024 0133     	 adds r3,r3,#1
 789:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 1437              	 .loc 1 789 0
 1438 0026 B0FBF3F0 	 udiv r0,r0,r3
 1439              	.LVL102:
 1440 002a 08BD     	 pop {r3,pc}
 1441              	.L151:
 1442              	 .align 2
 1443              	.L150:
 1444 002c 00460050 	 .word 1342195200
 1445              	 .cfi_endproc
 1446              	.LFE218:
 1448              	 .section .text.XMC_SCU_CLOCK_GetEbuClockFrequency,"ax",%progbits
 1449              	 .align 2
 1450              	 .global XMC_SCU_CLOCK_GetEbuClockFrequency
 1451              	 .thumb
 1452              	 .thumb_func
 1454              	XMC_SCU_CLOCK_GetEbuClockFrequency:
 1455              	.LFB219:
 790:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 791:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if defined(EBU)
 792:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /*
 793:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * API to retrieve EBU clock frequency
 794:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
 795:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetEbuClockFrequency(void)
 796:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1456              	 .loc 1 796 0
 1457              	 .cfi_startproc
 1458              	 
 1459              	 
 1460 0000 08B5     	 push {r3,lr}
 1461              	.LCFI7:
 1462              	 .cfi_def_cfa_offset 8
 1463              	 .cfi_offset 3,-8
 1464              	 .cfi_offset 14,-4
 797:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 1465              	 .loc 1 797 0
 1466 0002 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 1467              	.LVL103:
 798:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
 799:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (uint32_t)((frequency /(((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >>
 1468              	 .loc 1 799 0
 1469 0006 044B     	 ldr r3,.L154
 1470 0008 DB69     	 ldr r3,[r3,#28]
 1471 000a 03F03F03 	 and r3,r3,#63
 800:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                    SCU_CLK_EBUCLKCR_EBUDIV_Pos) + 1UL)));
 1472              	 .loc 1 800 0
 1473 000e 0133     	 adds r3,r3,#1
 801:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 1474              	 .loc 1 801 0
 1475 0010 B0FBF3F0 	 udiv r0,r0,r3
 1476              	.LVL104:
 1477 0014 08BD     	 pop {r3,pc}
 1478              	.L155:
 1479 0016 00BF     	 .align 2
 1480              	.L154:
 1481 0018 00460050 	 .word 1342195200
 1482              	 .cfi_endproc
 1483              	.LFE219:
 1485              	 .section .text.XMC_SCU_CLOCK_GetWdtClockFrequency,"ax",%progbits
 1486              	 .align 2
 1487              	 .global XMC_SCU_CLOCK_GetWdtClockFrequency
 1488              	 .thumb
 1489              	 .thumb_func
 1491              	XMC_SCU_CLOCK_GetWdtClockFrequency:
 1492              	.LFB220:
 802:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
 803:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 804:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if defined(ECAT0)
 805:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /*
 806:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * API to retrieve ECAT clock frequency
 807:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
 808:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetECATClockFrequency(void)
 809:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 810:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t frequency;
 811:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 812:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if ((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) != 0U)
 813:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 814:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 815:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 816:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
 817:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 818:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 819:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 820:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 821:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (uint32_t)((frequency / (XMC_SCU_CLOCK_GetECATClockDivider() + 1UL)));
 822:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 823:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
 824:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 825:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /*
 826:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * API to retrieve WDT clock frequency
 827:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
 828:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetWdtClockFrequency(void)
 829:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1493              	 .loc 1 829 0
 1494              	 .cfi_startproc
 1495              	 
 1496              	 
 1497 0000 08B5     	 push {r3,lr}
 1498              	.LCFI8:
 1499              	 .cfi_def_cfa_offset 8
 1500              	 .cfi_offset 3,-8
 1501              	 .cfi_offset 14,-4
 1502              	.LVL105:
 1503              	.LBB22:
 1504              	.LBB23:
1830:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
 1505              	 .loc 2 1830 0
 1506 0002 0D4B     	 ldr r3,.L162
 1507 0004 5B6A     	 ldr r3,[r3,#36]
 1508 0006 03F44033 	 and r3,r3,#196608
 1509              	.LBE23:
 1510              	.LBE22:
 830:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t frequency = 0UL;
 831:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_WDTCLKSRC_t clksrc;
 832:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 833:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetWdtClockSource();
 834:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 835:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_PLL)
 1511              	 .loc 1 835 0
 1512 000a B3F5003F 	 cmp r3,#131072
 1513 000e 02D1     	 bne .L157
 836:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 837:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 1514              	 .loc 1 837 0
 1515 0010 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 1516              	.LVL106:
 1517 0014 08E0     	 b .L158
 1518              	.LVL107:
 1519              	.L157:
 838:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 839:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_OFI)
 1520              	 .loc 1 839 0
 1521 0016 33B1     	 cbz r3,.L159
 840:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 841:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     frequency = OFI_FREQUENCY;
 842:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 843:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_STDBY)
 844:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 845:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     frequency = OSI_FREQUENCY;
 1522              	 .loc 1 845 0
 1523 0018 B3F5803F 	 cmp r3,#65536
 1524 001c 14BF     	 ite ne
 1525 001e 0020     	 movne r0,#0
 1526 0020 4FF40040 	 moveq r0,#32768
 1527 0024 00E0     	 b .L158
 1528              	.L159:
 841:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 1529              	 .loc 1 841 0
 1530 0026 0548     	 ldr r0,.L162+4
 1531              	.LVL108:
 1532              	.L158:
 846:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 847:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
 848:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 849:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 850:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 851:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 852:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (uint32_t)((frequency / (((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >>
 1533              	 .loc 1 852 0
 1534 0028 034B     	 ldr r3,.L162
 1535 002a 5B6A     	 ldr r3,[r3,#36]
 1536 002c DBB2     	 uxtb r3,r3
 853:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                     SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 1537              	 .loc 1 853 0
 1538 002e 0133     	 adds r3,r3,#1
 854:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 1539              	 .loc 1 854 0
 1540 0030 B0FBF3F0 	 udiv r0,r0,r3
 1541              	.LVL109:
 1542 0034 08BD     	 pop {r3,pc}
 1543              	.L163:
 1544 0036 00BF     	 .align 2
 1545              	.L162:
 1546 0038 00460050 	 .word 1342195200
 1547 003c 00366E01 	 .word 24000000
 1548              	 .cfi_endproc
 1549              	.LFE220:
 1551              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency,"ax",%progbits
 1552              	 .align 2
 1553              	 .global XMC_SCU_CLOCK_GetExternalOutputClockFrequency
 1554              	 .thumb
 1555              	 .thumb_func
 1557              	XMC_SCU_CLOCK_GetExternalOutputClockFrequency:
 1558              	.LFB221:
 855:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 856:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /**
 857:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * @brief API to retrieve EXTERNAL-OUT clock frequency
 858:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * @retval Clock frequency
 859:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
 860:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetExternalOutputClockFrequency(void)
 861:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1559              	 .loc 1 861 0
 1560              	 .cfi_startproc
 1561              	 
 1562              	 
 1563 0000 08B5     	 push {r3,lr}
 1564              	.LCFI9:
 1565              	 .cfi_def_cfa_offset 8
 1566              	 .cfi_offset 3,-8
 1567              	 .cfi_offset 14,-4
 1568              	.LVL110:
 1569              	.LBB24:
 1570              	.LBB25:
1959:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
 1571              	 .loc 2 1959 0
 1572 0002 134B     	 ldr r3,.L170
 1573 0004 9B6A     	 ldr r3,[r3,#40]
 1574 0006 03F00303 	 and r3,r3,#3
 1575              	.LBE25:
 1576              	.LBE24:
 862:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t frequency = 0UL;
 863:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_t clksrc;
 864:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 865:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetExternalOutputClockSource();
 866:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 867:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL)
 1577              	 .loc 1 867 0
 1578 000a 032B     	 cmp r3,#3
 1579 000c 09D1     	 bne .L165
 868:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 869:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 1580              	 .loc 1 869 0
 1581 000e FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 1582              	.LVL111:
 870:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     
 871:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 1583              	 .loc 1 871 0
 1584 0012 0F4B     	 ldr r3,.L170
 1585 0014 9B6A     	 ldr r3,[r3,#40]
 1586 0016 C3F30843 	 ubfx r3,r3,#16,#9
 872:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 1587              	 .loc 1 872 0
 1588 001a 0133     	 adds r3,r3,#1
 871:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 1589              	 .loc 1 871 0
 1590 001c B0FBF3F0 	 udiv r0,r0,r3
 1591              	.LVL112:
 1592 0020 08BD     	 pop {r3,pc}
 1593              	.LVL113:
 1594              	.L165:
 873:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 874:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS)
 1595              	 .loc 1 874 0
 1596 0022 3BB9     	 cbnz r3,.L167
 1597              	.LBB26:
 1598              	.LBB27:
 1599              	 .loc 2 2567 0
 1600 0024 0A4B     	 ldr r3,.L170
 1601 0026 1B69     	 ldr r3,[r3,#16]
 1602 0028 03F00103 	 and r3,r3,#1
 1603 002c 094A     	 ldr r2,.L170+4
 1604 002e 1068     	 ldr r0,[r2]
 1605 0030 9840     	 lsls r0,r0,r3
 1606              	.LVL114:
 1607              	.LBE27:
 1608              	.LBE26:
 1609 0032 08BD     	 pop {r3,pc}
 1610              	.LVL115:
 1611              	.L167:
 875:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 876:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 877:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 878:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_USB)
 1612              	 .loc 1 878 0
 1613 0034 022B     	 cmp r3,#2
 1614 0036 09D1     	 bne .L168
 879:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 880:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 1615              	 .loc 1 880 0
 1616 0038 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 1617              	.LVL116:
 881:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     
 882:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 1618              	 .loc 1 882 0
 1619 003c 044B     	 ldr r3,.L170
 1620 003e 9B6A     	 ldr r3,[r3,#40]
 1621 0040 C3F30843 	 ubfx r3,r3,#16,#9
 883:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 1622              	 .loc 1 883 0
 1623 0044 0133     	 adds r3,r3,#1
 882:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 1624              	 .loc 1 882 0
 1625 0046 B0FBF3F0 	 udiv r0,r0,r3
 1626              	.LVL117:
 1627 004a 08BD     	 pop {r3,pc}
 1628              	.LVL118:
 1629              	.L168:
 862:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_t clksrc;
 1630              	 .loc 1 862 0
 1631 004c 0020     	 movs r0,#0
 1632              	.LVL119:
 884:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 885:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
 886:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 887:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 888:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 889:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 890:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (frequency);
 891:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 1633              	 .loc 1 891 0
 1634 004e 08BD     	 pop {r3,pc}
 1635              	.L171:
 1636              	 .align 2
 1637              	.L170:
 1638 0050 00460050 	 .word 1342195200
 1639 0054 00000000 	 .word SystemCoreClock
 1640              	 .cfi_endproc
 1641              	.LFE221:
 1643              	 .section .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency,"ax",%progbits
 1644              	 .align 2
 1645              	 .global XMC_SCU_CLOCK_GetPeripheralClockFrequency
 1646              	 .thumb
 1647              	 .thumb_func
 1649              	XMC_SCU_CLOCK_GetPeripheralClockFrequency:
 1650              	.LFB222:
 892:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 893:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /*
 894:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * API to retrieve clock frequency of peripherals on the peripheral bus using a shared functional c
 895:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
 896:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void)
 897:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1651              	 .loc 1 897 0
 1652              	 .cfi_startproc
 1653              	 
 1654              	 
 1655              	 
 898:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 899:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****          ((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos));  
 1656              	 .loc 1 899 0
 1657 0000 034B     	 ldr r3,.L173
 1658 0002 5B69     	 ldr r3,[r3,#20]
 898:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 1659              	 .loc 1 898 0
 1660 0004 03F00103 	 and r3,r3,#1
 1661 0008 024A     	 ldr r2,.L173+4
 1662 000a 1068     	 ldr r0,[r2]
 900:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 1663              	 .loc 1 900 0
 1664 000c D840     	 lsrs r0,r0,r3
 1665 000e 7047     	 bx lr
 1666              	.L174:
 1667              	 .align 2
 1668              	.L173:
 1669 0010 00460050 	 .word 1342195200
 1670 0014 00000000 	 .word SystemCoreClock
 1671              	 .cfi_endproc
 1672              	.LFE222:
 1674              	 .section .text.XMC_SCU_CLOCK_SetSystemClockSource,"ax",%progbits
 1675              	 .align 2
 1676              	 .global XMC_SCU_CLOCK_SetSystemClockSource
 1677              	 .thumb
 1678              	 .thumb_func
 1680              	XMC_SCU_CLOCK_SetSystemClockSource:
 1681              	.LFB223:
 901:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 902:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to select fSYS */
 903:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source)
 904:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1682              	 .loc 1 904 0
 1683              	 .cfi_startproc
 1684              	 
 1685              	 
 1686              	 
 1687              	.LVL120:
 905:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSSEL_Msk)) |
 1688              	 .loc 1 905 0
 1689 0000 034A     	 ldr r2,.L176
 1690 0002 D368     	 ldr r3,[r2,#12]
 1691 0004 23F48033 	 bic r3,r3,#65536
 1692 0008 1843     	 orrs r0,r0,r3
 1693              	.LVL121:
 1694 000a D060     	 str r0,[r2,#12]
 1695 000c 7047     	 bx lr
 1696              	.L177:
 1697 000e 00BF     	 .align 2
 1698              	.L176:
 1699 0010 00460050 	 .word 1342195200
 1700              	 .cfi_endproc
 1701              	.LFE223:
 1703              	 .section .text.XMC_SCU_CLOCK_SetUsbClockSource,"ax",%progbits
 1704              	 .align 2
 1705              	 .global XMC_SCU_CLOCK_SetUsbClockSource
 1706              	 .thumb
 1707              	 .thumb_func
 1709              	XMC_SCU_CLOCK_SetUsbClockSource:
 1710              	.LFB224:
 906:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       ((uint32_t)source);
 907:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 908:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 909:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to select fUSB */
 910:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source)
 911:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1711              	 .loc 1 911 0
 1712              	 .cfi_startproc
 1713              	 
 1714              	 
 1715              	 
 1716              	.LVL122:
 912:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBSEL_Msk)) |
 1717              	 .loc 1 912 0
 1718 0000 034A     	 ldr r2,.L179
 1719 0002 9369     	 ldr r3,[r2,#24]
 1720 0004 23F48033 	 bic r3,r3,#65536
 1721 0008 1843     	 orrs r0,r0,r3
 1722              	.LVL123:
 1723 000a 9061     	 str r0,[r2,#24]
 1724 000c 7047     	 bx lr
 1725              	.L180:
 1726 000e 00BF     	 .align 2
 1727              	.L179:
 1728 0010 00460050 	 .word 1342195200
 1729              	 .cfi_endproc
 1730              	.LFE224:
 1732              	 .section .text.XMC_SCU_CLOCK_SetWdtClockSource,"ax",%progbits
 1733              	 .align 2
 1734              	 .global XMC_SCU_CLOCK_SetWdtClockSource
 1735              	 .thumb
 1736              	 .thumb_func
 1738              	XMC_SCU_CLOCK_SetWdtClockSource:
 1739              	.LFB225:
 913:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       ((uint32_t)source);
 914:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 915:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 916:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to select fWDT */
 917:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source)
 918:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1740              	 .loc 1 918 0
 1741              	 .cfi_startproc
 1742              	 
 1743              	 
 1744              	 
 1745              	.LVL124:
 919:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTSEL_Msk)) |
 1746              	 .loc 1 919 0
 1747 0000 034A     	 ldr r2,.L182
 1748 0002 536A     	 ldr r3,[r2,#36]
 1749 0004 23F44033 	 bic r3,r3,#196608
 1750 0008 1843     	 orrs r0,r0,r3
 1751              	.LVL125:
 1752 000a 5062     	 str r0,[r2,#36]
 1753 000c 7047     	 bx lr
 1754              	.L183:
 1755 000e 00BF     	 .align 2
 1756              	.L182:
 1757 0010 00460050 	 .word 1342195200
 1758              	 .cfi_endproc
 1759              	.LFE225:
 1761              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockSource,"ax",%progbits
 1762              	 .align 2
 1763              	 .global XMC_SCU_CLOCK_SetExternalOutputClockSource
 1764              	 .thumb
 1765              	 .thumb_func
 1767              	XMC_SCU_CLOCK_SetExternalOutputClockSource:
 1768              	.LFB226:
 920:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       ((uint32_t)source);
 921:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 922:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 923:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to select fEXT */
 924:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t source)
 925:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1769              	 .loc 1 925 0
 1770              	 .cfi_startproc
 1771              	 
 1772              	 
 1773              	 
 1774              	.LVL126:
 926:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 1775              	 .loc 1 926 0
 1776 0000 034A     	 ldr r2,.L185
 1777 0002 936A     	 ldr r3,[r2,#40]
 1778 0004 23F00303 	 bic r3,r3,#3
 1779 0008 1843     	 orrs r0,r0,r3
 1780              	.LVL127:
 1781 000a 9062     	 str r0,[r2,#40]
 1782 000c 7047     	 bx lr
 1783              	.L186:
 1784 000e 00BF     	 .align 2
 1785              	.L185:
 1786 0010 00460050 	 .word 1342195200
 1787              	 .cfi_endproc
 1788              	.LFE226:
 1790              	 .section .text.XMC_SCU_CLOCK_SetSystemPllClockSource,"ax",%progbits
 1791              	 .align 2
 1792              	 .global XMC_SCU_CLOCK_SetSystemPllClockSource
 1793              	 .thumb
 1794              	 .thumb_func
 1796              	XMC_SCU_CLOCK_SetSystemPllClockSource:
 1797              	.LFB227:
 927:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       ((uint32_t)source);
 928:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 929:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 930:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to select fPLL */
 931:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source)
 932:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1798              	 .loc 1 932 0
 1799              	 .cfi_startproc
 1800              	 
 1801              	 
 1802              	 
 1803              	.LVL128:
 933:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Check input clock */
 934:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) /* Select PLLClockSource */
 1804              	 .loc 1 934 0
 1805 0000 38B9     	 cbnz r0,.L188
 935:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 936:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON2 &= (uint32_t)~(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 1806              	 .loc 1 936 0
 1807 0002 084A     	 ldr r2,.L190
 1808 0004 D368     	 ldr r3,[r2,#12]
 1809 0006 23F48073 	 bic r3,r3,#256
 1810 000a 23F00103 	 bic r3,r3,#1
 1811 000e D360     	 str r3,[r2,#12]
 1812 0010 7047     	 bx lr
 1813              	.L188:
 937:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 938:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
 939:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 940:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON2 |= (uint32_t)(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 1814              	 .loc 1 940 0
 1815 0012 044A     	 ldr r2,.L190
 1816 0014 D368     	 ldr r3,[r2,#12]
 1817 0016 43F48073 	 orr r3,r3,#256
 1818 001a 43F00103 	 orr r3,r3,#1
 1819 001e D360     	 str r3,[r2,#12]
 1820 0020 7047     	 bx lr
 1821              	.L191:
 1822 0022 00BF     	 .align 2
 1823              	.L190:
 1824 0024 10470050 	 .word 1342195472
 1825              	 .cfi_endproc
 1826              	.LFE227:
 1828              	 .section .text.XMC_SCU_HIB_SetRtcClockSource,"ax",%progbits
 1829              	 .align 2
 1830              	 .global XMC_SCU_HIB_SetRtcClockSource
 1831              	 .thumb
 1832              	 .thumb_func
 1834              	XMC_SCU_HIB_SetRtcClockSource:
 1835              	.LFB228:
 941:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 942:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 943:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 944:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to select fRTC */
 945:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source)
 946:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** { 
 1836              	 .loc 1 946 0
 1837              	 .cfi_startproc
 1838              	 
 1839              	 
 1840              	 
 1841              	.LVL129:
 947:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Wait until the update of HDCR register in hibernate domain is completed */
 948:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 1842              	 .loc 1 948 0
 1843 0000 064A     	 ldr r2,.L195
 1844              	.L193:
 1845              	 .loc 1 948 0 is_stmt 0 discriminator 1
 1846 0002 D2F8C430 	 ldr r3,[r2,#196]
 1847 0006 13F0080F 	 tst r3,#8
 1848 000a FAD1     	 bne .L193
 949:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 950:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 951:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 952:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_RCS_Msk)) |
 1849              	 .loc 1 952 0 is_stmt 1
 1850 000c 044A     	 ldr r2,.L195+4
 1851 000e D368     	 ldr r3,[r2,#12]
 1852 0010 23F04003 	 bic r3,r3,#64
 1853 0014 1843     	 orrs r0,r0,r3
 1854              	.LVL130:
 1855 0016 D060     	 str r0,[r2,#12]
 1856 0018 7047     	 bx lr
 1857              	.L196:
 1858 001a 00BF     	 .align 2
 1859              	.L195:
 1860 001c 00400050 	 .word 1342193664
 1861 0020 00430050 	 .word 1342194432
 1862              	 .cfi_endproc
 1863              	.LFE228:
 1865              	 .section .text.XMC_SCU_HIB_SetStandbyClockSource,"ax",%progbits
 1866              	 .align 2
 1867              	 .global XMC_SCU_HIB_SetStandbyClockSource
 1868              	 .thumb
 1869              	 .thumb_func
 1871              	XMC_SCU_HIB_SetStandbyClockSource:
 1872              	.LFB229:
 953:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                         ((uint32_t)source);
 954:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 955:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 956:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to select fSTDBY */
 957:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source)
 958:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1873              	 .loc 1 958 0
 1874              	 .cfi_startproc
 1875              	 
 1876              	 
 1877              	 
 1878              	.LVL131:
 959:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 1879              	 .loc 1 959 0
 1880 0000 064A     	 ldr r2,.L200
 1881              	.L198:
 1882              	 .loc 1 959 0 is_stmt 0 discriminator 1
 1883 0002 D2F8C430 	 ldr r3,[r2,#196]
 1884 0006 13F0080F 	 tst r3,#8
 1885 000a FAD1     	 bne .L198
 960:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 961:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 962:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 963:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_STDBYSEL_Msk)) |
 1886              	 .loc 1 963 0 is_stmt 1
 1887 000c 044A     	 ldr r2,.L200+4
 1888 000e D368     	 ldr r3,[r2,#12]
 1889 0010 23F08003 	 bic r3,r3,#128
 1890 0014 1843     	 orrs r0,r0,r3
 1891              	.LVL132:
 1892 0016 D060     	 str r0,[r2,#12]
 1893 0018 7047     	 bx lr
 1894              	.L201:
 1895 001a 00BF     	 .align 2
 1896              	.L200:
 1897 001c 00400050 	 .word 1342193664
 1898 0020 00430050 	 .word 1342194432
 1899              	 .cfi_endproc
 1900              	.LFE229:
 1902              	 .section .text.XMC_SCU_CLOCK_SetSystemClockDivider,"ax",%progbits
 1903              	 .align 2
 1904              	 .global XMC_SCU_CLOCK_SetSystemClockDivider
 1905              	 .thumb
 1906              	 .thumb_func
 1908              	XMC_SCU_CLOCK_SetSystemClockDivider:
 1909              	.LFB230:
 964:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                         ((uint32_t)source);
 965:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 966:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 967:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to program the divider placed between fsys and its parent */
 968:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider)
 969:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1910              	 .loc 1 969 0
 1911              	 .cfi_startproc
 1912              	 
 1913              	 
 1914              	 
 1915              	.LVL133:
 970:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSystemClockDivider:Wrong clock divider value",
 971:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****               (divider <= (SCU_CLK_SYSCLKCR_SYSDIV_Msk + 1UL)) );
 972:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 973:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSDIV_Msk)) |
 1916              	 .loc 1 973 0
 1917 0000 034A     	 ldr r2,.L203
 1918 0002 D368     	 ldr r3,[r2,#12]
 974:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 1919              	 .loc 1 974 0
 1920 0004 0138     	 subs r0,r0,#1
 1921              	.LVL134:
 973:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 1922              	 .loc 1 973 0
 1923 0006 23F0FF03 	 bic r3,r3,#255
 1924 000a 0343     	 orrs r3,r3,r0
 1925 000c D360     	 str r3,[r2,#12]
 1926 000e 7047     	 bx lr
 1927              	.L204:
 1928              	 .align 2
 1929              	.L203:
 1930 0010 00460050 	 .word 1342195200
 1931              	 .cfi_endproc
 1932              	.LFE230:
 1934              	 .section .text.XMC_SCU_CLOCK_SetCcuClockDivider,"ax",%progbits
 1935              	 .align 2
 1936              	 .global XMC_SCU_CLOCK_SetCcuClockDivider
 1937              	 .thumb
 1938              	 .thumb_func
 1940              	XMC_SCU_CLOCK_SetCcuClockDivider:
 1941              	.LFB231:
 975:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 976:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 977:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to program the divider placed between fccu and its parent */
 978:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t divider)
 979:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1942              	 .loc 1 979 0
 1943              	 .cfi_startproc
 1944              	 
 1945              	 
 1946              	 
 1947              	.LVL135:
 980:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCapcomClockDivider:Wrong clock divider value", (divider <= 2UL) );
 981:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 982:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->CCUCLKCR = (SCU_CLK->CCUCLKCR & ((uint32_t)~SCU_CLK_CCUCLKCR_CCUDIV_Msk)) |
 1948              	 .loc 1 982 0
 1949 0000 034A     	 ldr r2,.L206
 1950 0002 136A     	 ldr r3,[r2,#32]
 983:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 1951              	 .loc 1 983 0
 1952 0004 0138     	 subs r0,r0,#1
 1953              	.LVL136:
 982:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 1954              	 .loc 1 982 0
 1955 0006 23F00103 	 bic r3,r3,#1
 1956 000a 0343     	 orrs r3,r3,r0
 1957 000c 1362     	 str r3,[r2,#32]
 1958 000e 7047     	 bx lr
 1959              	.L207:
 1960              	 .align 2
 1961              	.L206:
 1962 0010 00460050 	 .word 1342195200
 1963              	 .cfi_endproc
 1964              	.LFE231:
 1966              	 .section .text.XMC_SCU_CLOCK_SetCpuClockDivider,"ax",%progbits
 1967              	 .align 2
 1968              	 .global XMC_SCU_CLOCK_SetCpuClockDivider
 1969              	 .thumb
 1970              	 .thumb_func
 1972              	XMC_SCU_CLOCK_SetCpuClockDivider:
 1973              	.LFB232:
 984:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 985:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 986:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to program the divider placed between fcpu and its parent */
 987:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t divider)
 988:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 1974              	 .loc 1 988 0
 1975              	 .cfi_startproc
 1976              	 
 1977              	 
 1978              	 
 1979              	.LVL137:
 989:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCpuClockDivider:Wrong clock divider value", (divider <= 2UL) );
 990:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 991:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->CPUCLKCR = (SCU_CLK->CPUCLKCR & ((uint32_t)~SCU_CLK_CPUCLKCR_CPUDIV_Msk)) |
 1980              	 .loc 1 991 0
 1981 0000 034A     	 ldr r2,.L209
 1982 0002 1369     	 ldr r3,[r2,#16]
 992:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 1983              	 .loc 1 992 0
 1984 0004 0138     	 subs r0,r0,#1
 1985              	.LVL138:
 991:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 1986              	 .loc 1 991 0
 1987 0006 23F00103 	 bic r3,r3,#1
 1988 000a 0343     	 orrs r3,r3,r0
 1989 000c 1361     	 str r3,[r2,#16]
 1990 000e 7047     	 bx lr
 1991              	.L210:
 1992              	 .align 2
 1993              	.L209:
 1994 0010 00460050 	 .word 1342195200
 1995              	 .cfi_endproc
 1996              	.LFE232:
 1998              	 .section .text.XMC_SCU_CLOCK_SetPeripheralClockDivider,"ax",%progbits
 1999              	 .align 2
 2000              	 .global XMC_SCU_CLOCK_SetPeripheralClockDivider
 2001              	 .thumb
 2002              	 .thumb_func
 2004              	XMC_SCU_CLOCK_SetPeripheralClockDivider:
 2005              	.LFB233:
 993:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 994:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 995:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to program the divider placed between fperiph and its parent */
 996:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t divider)
 997:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2006              	 .loc 1 997 0
 2007              	 .cfi_startproc
 2008              	 
 2009              	 
 2010              	 
 2011              	.LVL139:
 998:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetPeripheralClockDivider:Wrong clock divider value", (divider <= 2UL) 
 999:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1000:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->PBCLKCR = (SCU_CLK->PBCLKCR & ((uint32_t)~SCU_CLK_PBCLKCR_PBDIV_Msk)) |
 2012              	 .loc 1 1000 0
 2013 0000 034A     	 ldr r2,.L212
 2014 0002 5369     	 ldr r3,[r2,#20]
1001:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 2015              	 .loc 1 1001 0
 2016 0004 0138     	 subs r0,r0,#1
 2017              	.LVL140:
1000:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 2018              	 .loc 1 1000 0
 2019 0006 23F00103 	 bic r3,r3,#1
 2020 000a 0343     	 orrs r3,r3,r0
 2021 000c 5361     	 str r3,[r2,#20]
 2022 000e 7047     	 bx lr
 2023              	.L213:
 2024              	 .align 2
 2025              	.L212:
 2026 0010 00460050 	 .word 1342195200
 2027              	 .cfi_endproc
 2028              	.LFE233:
 2030              	 .section .text.XMC_SCU_CLOCK_SetUsbClockDivider,"ax",%progbits
 2031              	 .align 2
 2032              	 .global XMC_SCU_CLOCK_SetUsbClockDivider
 2033              	 .thumb
 2034              	 .thumb_func
 2036              	XMC_SCU_CLOCK_SetUsbClockDivider:
 2037              	.LFB234:
1002:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1003:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1004:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to program the divider placed between fsdmmc and its parent */
1005:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t divider)
1006:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2038              	 .loc 1 1006 0
 2039              	 .cfi_startproc
 2040              	 
 2041              	 
 2042              	 
 2043              	.LVL141:
1007:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSdmmcClockDivider:Wrong clock divider value",
1008:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****               (divider <= (SCU_CLK_USBCLKCR_USBDIV_Msk + 1UL)) );
1009:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1010:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBDIV_Msk)) |
 2044              	 .loc 1 1010 0
 2045 0000 034A     	 ldr r2,.L215
 2046 0002 9369     	 ldr r3,[r2,#24]
1011:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos); 
 2047              	 .loc 1 1011 0
 2048 0004 0138     	 subs r0,r0,#1
 2049              	.LVL142:
1010:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos); 
 2050              	 .loc 1 1010 0
 2051 0006 23F00703 	 bic r3,r3,#7
 2052 000a 0343     	 orrs r3,r3,r0
 2053 000c 9361     	 str r3,[r2,#24]
 2054 000e 7047     	 bx lr
 2055              	.L216:
 2056              	 .align 2
 2057              	.L215:
 2058 0010 00460050 	 .word 1342195200
 2059              	 .cfi_endproc
 2060              	.LFE234:
 2062              	 .section .text.XMC_SCU_CLOCK_SetEbuClockDivider,"ax",%progbits
 2063              	 .align 2
 2064              	 .global XMC_SCU_CLOCK_SetEbuClockDivider
 2065              	 .thumb
 2066              	 .thumb_func
 2068              	XMC_SCU_CLOCK_SetEbuClockDivider:
 2069              	.LFB235:
1012:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1013:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1014:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if defined(EBU)
1015:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to program the divider placed between febu and its parent */
1016:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t divider)
1017:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2070              	 .loc 1 1017 0
 2071              	 .cfi_startproc
 2072              	 
 2073              	 
 2074              	 
 2075              	.LVL143:
1018:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetEbuClockDivider:Wrong clock divider value",
1019:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****               (divider <= (SCU_CLK_EBUCLKCR_EBUDIV_Msk + 1UL) ) );
1020:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1021:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->EBUCLKCR = (SCU_CLK->EBUCLKCR & ((uint32_t)~SCU_CLK_EBUCLKCR_EBUDIV_Msk)) |
 2076              	 .loc 1 1021 0
 2077 0000 034A     	 ldr r2,.L218
 2078 0002 D369     	 ldr r3,[r2,#28]
1022:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EBUCLKCR_EBUDIV_Pos);
 2079              	 .loc 1 1022 0
 2080 0004 0138     	 subs r0,r0,#1
 2081              	.LVL144:
1021:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EBUCLKCR_EBUDIV_Pos);
 2082              	 .loc 1 1021 0
 2083 0006 23F03F03 	 bic r3,r3,#63
 2084 000a 0343     	 orrs r3,r3,r0
 2085 000c D361     	 str r3,[r2,#28]
 2086 000e 7047     	 bx lr
 2087              	.L219:
 2088              	 .align 2
 2089              	.L218:
 2090 0010 00460050 	 .word 1342195200
 2091              	 .cfi_endproc
 2092              	.LFE235:
 2094              	 .section .text.XMC_SCU_CLOCK_SetWdtClockDivider,"ax",%progbits
 2095              	 .align 2
 2096              	 .global XMC_SCU_CLOCK_SetWdtClockDivider
 2097              	 .thumb
 2098              	 .thumb_func
 2100              	XMC_SCU_CLOCK_SetWdtClockDivider:
 2101              	.LFB236:
1023:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1024:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
1025:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1026:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to program the divider placed between fwdt and its parent */
1027:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t divider)
1028:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2102              	 .loc 1 1028 0
 2103              	 .cfi_startproc
 2104              	 
 2105              	 
 2106              	 
 2107              	.LVL145:
1029:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetWdtClockDivider:Wrong clock divider value",
1030:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****               (divider <= (SCU_CLK_WDTCLKCR_WDTDIV_Msk + 1UL) ) );
1031:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1032:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTDIV_Msk)) |
 2108              	 .loc 1 1032 0
 2109 0000 034A     	 ldr r2,.L221
 2110 0002 536A     	 ldr r3,[r2,#36]
1033:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 2111              	 .loc 1 1033 0
 2112 0004 0138     	 subs r0,r0,#1
 2113              	.LVL146:
1032:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 2114              	 .loc 1 1032 0
 2115 0006 23F0FF03 	 bic r3,r3,#255
 2116 000a 0343     	 orrs r3,r3,r0
 2117 000c 5362     	 str r3,[r2,#36]
 2118 000e 7047     	 bx lr
 2119              	.L222:
 2120              	 .align 2
 2121              	.L221:
 2122 0010 00460050 	 .word 1342195200
 2123              	 .cfi_endproc
 2124              	.LFE236:
 2126              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider,"ax",%progbits
 2127              	 .align 2
 2128              	 .global XMC_SCU_CLOCK_SetExternalOutputClockDivider
 2129              	 .thumb
 2130              	 .thumb_func
 2132              	XMC_SCU_CLOCK_SetExternalOutputClockDivider:
 2133              	.LFB237:
1034:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1035:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1036:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to program the divider placed between fext and its parent */
1037:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t divider)
1038:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2134              	 .loc 1 1038 0
 2135              	 .cfi_startproc
 2136              	 
 2137              	 
 2138              	 
 2139              	.LVL147:
1039:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetExternalOutputClockDivider:Wrong clock divider value",
1040:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****               (divider <= (SCU_CLK_EXTCLKCR_ECKDIV_Msk + 1UL) ) );
1041:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1042:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKDIV_Msk)) |
 2140              	 .loc 1 1042 0
 2141 0000 054A     	 ldr r2,.L224
 2142 0002 936A     	 ldr r3,[r2,#40]
1043:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 2143              	 .loc 1 1043 0
 2144 0004 0138     	 subs r0,r0,#1
 2145              	.LVL148:
1042:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 2146              	 .loc 1 1042 0
 2147 0006 23F0FF73 	 bic r3,r3,#33423360
 2148 000a 23F48033 	 bic r3,r3,#65536
 2149 000e 43EA0043 	 orr r3,r3,r0,lsl#16
 2150 0012 9362     	 str r3,[r2,#40]
 2151 0014 7047     	 bx lr
 2152              	.L225:
 2153 0016 00BF     	 .align 2
 2154              	.L224:
 2155 0018 00460050 	 .word 1342195200
 2156              	 .cfi_endproc
 2157              	.LFE237:
 2159              	 .section .text.XMC_SCU_CLOCK_EnableClock,"ax",%progbits
 2160              	 .align 2
 2161              	 .global XMC_SCU_CLOCK_EnableClock
 2162              	 .thumb
 2163              	 .thumb_func
 2165              	XMC_SCU_CLOCK_EnableClock:
 2166              	.LFB238:
1044:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1045:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1046:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if defined(ECAT0)
1047:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to configure the ECAT clock by setting the clock divider for the ECAT clock source */
1048:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider)
1049:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1050:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ~SCU_CLK_ECATCLKCR_ECADIV_Msk) |
1051:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                        (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_ECATCLKCR_ECADIV_Pos);
1052:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1053:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
1054:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1055:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable a given module clock */
1056:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock)
1057:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2167              	 .loc 1 1057 0
 2168              	 .cfi_startproc
 2169              	 
 2170              	 
 2171              	 
 2172              	.LVL149:
1058:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->CLKSET = ((uint32_t)clock);
 2173              	 .loc 1 1058 0
 2174 0000 014B     	 ldr r3,.L227
 2175 0002 5860     	 str r0,[r3,#4]
 2176 0004 7047     	 bx lr
 2177              	.L228:
 2178 0006 00BF     	 .align 2
 2179              	.L227:
 2180 0008 00460050 	 .word 1342195200
 2181              	 .cfi_endproc
 2182              	.LFE238:
 2184              	 .section .text.XMC_SCU_CLOCK_DisableClock,"ax",%progbits
 2185              	 .align 2
 2186              	 .global XMC_SCU_CLOCK_DisableClock
 2187              	 .thumb
 2188              	 .thumb_func
 2190              	XMC_SCU_CLOCK_DisableClock:
 2191              	.LFB239:
1059:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1060:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1061:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to disable a given module clock */
1062:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock)
1063:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2192              	 .loc 1 1063 0
 2193              	 .cfi_startproc
 2194              	 
 2195              	 
 2196              	 
 2197              	.LVL150:
1064:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_CLK->CLKCLR = ((uint32_t)clock);
 2198              	 .loc 1 1064 0
 2199 0000 014B     	 ldr r3,.L230
 2200 0002 9860     	 str r0,[r3,#8]
 2201 0004 7047     	 bx lr
 2202              	.L231:
 2203 0006 00BF     	 .align 2
 2204              	.L230:
 2205 0008 00460050 	 .word 1342195200
 2206              	 .cfi_endproc
 2207              	.LFE239:
 2209              	 .section .text.XMC_SCU_CLOCK_IsClockEnabled,"ax",%progbits
 2210              	 .align 2
 2211              	 .global XMC_SCU_CLOCK_IsClockEnabled
 2212              	 .thumb
 2213              	 .thumb_func
 2215              	XMC_SCU_CLOCK_IsClockEnabled:
 2216              	.LFB240:
1065:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1066:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1067:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to determine if module clock of the given peripheral is enabled */
1068:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock)
1069:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2217              	 .loc 1 1069 0
 2218              	 .cfi_startproc
 2219              	 
 2220              	 
 2221              	 
 2222              	.LVL151:
1070:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (bool)(SCU_CLK->CLKSTAT & ((uint32_t)clock));
 2223              	 .loc 1 1070 0
 2224 0000 034B     	 ldr r3,.L233
 2225 0002 1B68     	 ldr r3,[r3]
 2226 0004 1842     	 tst r0,r3
1071:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 2227              	 .loc 1 1071 0
 2228 0006 14BF     	 ite ne
 2229 0008 0120     	 movne r0,#1
 2230              	.LVL152:
 2231 000a 0020     	 moveq r0,#0
 2232 000c 7047     	 bx lr
 2233              	.L234:
 2234 000e 00BF     	 .align 2
 2235              	.L233:
 2236 0010 00460050 	 .word 1342195200
 2237              	 .cfi_endproc
 2238              	.LFE240:
 2240              	 .section .text.XMC_SCU_POWER_GetEVR13Voltage,"ax",%progbits
 2241              	 .align 2
 2242              	 .global XMC_SCU_POWER_GetEVR13Voltage
 2243              	 .thumb
 2244              	 .thumb_func
 2246              	XMC_SCU_POWER_GetEVR13Voltage:
 2247              	.LFB241:
1072:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1073:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if defined(CLOCK_GATING_SUPPORTED)
1074:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to gate a given module clock */
1075:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1076:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1077:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t index = (peripheral & 0xf0000000UL) >> 28UL;
1078:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
1079:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1080:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   *(uint32_t *)((&(SCU_CLK->CGATSET0)) + (index * 3U)) = (uint32_t)mask;
1081:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1082:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1083:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to ungate a given module clock */
1084:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1085:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1086:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t index = (uint32_t)((peripheral & 0xf0000000UL) >> 28UL);
1087:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
1088:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1089:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   *(uint32_t *)(&(SCU_CLK->CGATCLR0) + (index * 3U)) = (uint32_t)mask;
1090:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1091:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1092:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to ungate a given module clock */
1093:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1094:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1095:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t index = ((peripheral & 0xf0000000UL) >> 28UL);
1096:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
1097:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1098:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return ((*(uint32_t *)(&(SCU_CLK->CGATSTAT0) + (index * 3U)) & mask) != 0U);
1099:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1100:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
1101:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1102:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** float XMC_SCU_POWER_GetEVR13Voltage(void)
1103:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2248              	 .loc 1 1103 0
 2249              	 .cfi_startproc
 2250              	 
 2251              	 
 2252              	 
1104:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC13V_Msk) * XMC_SCU_POWER_LSB13V;
 2253              	 .loc 1 1104 0
 2254 0000 064B     	 ldr r3,.L236
 2255 0002 5B69     	 ldr r3,[r3,#20]
 2256 0004 DBB2     	 uxtb r3,r3
 2257 0006 07EE903A 	 fmsr s15,r3
 2258 000a F8EE677A 	 fuitos s15,s15
1105:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 2259              	 .loc 1 1105 0
 2260 000e 9FED047A 	 flds s14,.L236+4
 2261 0012 67EE877A 	 fmuls s15,s15,s14
 2262 0016 17EE900A 	 fmrs r0,s15
 2263 001a 7047     	 bx lr
 2264              	.L237:
 2265              	 .align 2
 2266              	.L236:
 2267 001c 00420050 	 .word 1342194176
 2268 0020 ED0DBE3B 	 .word 1002311149
 2269              	 .cfi_endproc
 2270              	.LFE241:
 2272              	 .section .text.XMC_SCU_POWER_GetEVR33Voltage,"ax",%progbits
 2273              	 .align 2
 2274              	 .global XMC_SCU_POWER_GetEVR33Voltage
 2275              	 .thumb
 2276              	 .thumb_func
 2278              	XMC_SCU_POWER_GetEVR33Voltage:
 2279              	.LFB242:
1106:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1107:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** float XMC_SCU_POWER_GetEVR33Voltage(void)
1108:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2280              	 .loc 1 1108 0
 2281              	 .cfi_startproc
 2282              	 
 2283              	 
 2284              	 
1109:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return ((SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC33V_Msk) >> SCU_POWER_EVRVADCSTAT_VAD
 2285              	 .loc 1 1109 0
 2286 0000 074B     	 ldr r3,.L239
 2287 0002 5B69     	 ldr r3,[r3,#20]
 2288 0004 C3F30723 	 ubfx r3,r3,#8,#8
 2289 0008 07EE903A 	 fmsr s15,r3
 2290 000c F8EE677A 	 fuitos s15,s15
1110:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 2291              	 .loc 1 1110 0
 2292 0010 9FED047A 	 flds s14,.L239+4
 2293 0014 67EE877A 	 fmuls s15,s15,s14
 2294 0018 17EE900A 	 fmrs r0,s15
 2295 001c 7047     	 bx lr
 2296              	.L240:
 2297 001e 00BF     	 .align 2
 2298              	.L239:
 2299 0020 00420050 	 .word 1342194176
 2300 0024 EC51B83C 	 .word 1018712556
 2301              	 .cfi_endproc
 2302              	.LFE242:
 2304              	 .section .text.XMC_SCU_CLOCK_EnableUsbPll,"ax",%progbits
 2305              	 .align 2
 2306              	 .global XMC_SCU_CLOCK_EnableUsbPll
 2307              	 .thumb
 2308              	 .thumb_func
 2310              	XMC_SCU_CLOCK_EnableUsbPll:
 2311              	.LFB243:
1111:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1112:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable USB PLL for USB clock */
1113:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_EnableUsbPll(void)
1114:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2312              	 .loc 1 1114 0
 2313              	 .cfi_startproc
 2314              	 
 2315              	 
 2316              	 
1115:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 2317              	 .loc 1 1115 0
 2318 0000 034A     	 ldr r2,.L242
 2319 0002 5369     	 ldr r3,[r2,#20]
 2320 0004 23F48033 	 bic r3,r3,#65536
 2321 0008 23F00203 	 bic r3,r3,#2
 2322 000c 5361     	 str r3,[r2,#20]
 2323 000e 7047     	 bx lr
 2324              	.L243:
 2325              	 .align 2
 2326              	.L242:
 2327 0010 10470050 	 .word 1342195472
 2328              	 .cfi_endproc
 2329              	.LFE243:
 2331              	 .section .text.XMC_SCU_CLOCK_DisableUsbPll,"ax",%progbits
 2332              	 .align 2
 2333              	 .global XMC_SCU_CLOCK_DisableUsbPll
 2334              	 .thumb
 2335              	 .thumb_func
 2337              	XMC_SCU_CLOCK_DisableUsbPll:
 2338              	.LFB244:
1116:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1117:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1118:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to disable USB PLL for USB clock */
1119:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_DisableUsbPll(void)
1120:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2339              	 .loc 1 1120 0
 2340              	 .cfi_startproc
 2341              	 
 2342              	 
 2343              	 
1121:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 2344              	 .loc 1 1121 0
 2345 0000 034A     	 ldr r2,.L245
 2346 0002 5369     	 ldr r3,[r2,#20]
 2347 0004 43F48033 	 orr r3,r3,#65536
 2348 0008 43F00203 	 orr r3,r3,#2
 2349 000c 5361     	 str r3,[r2,#20]
 2350 000e 7047     	 bx lr
 2351              	.L246:
 2352              	 .align 2
 2353              	.L245:
 2354 0010 10470050 	 .word 1342195472
 2355              	 .cfi_endproc
 2356              	.LFE244:
 2358              	 .section .text.XMC_SCU_CLOCK_StartUsbPll,"ax",%progbits
 2359              	 .align 2
 2360              	 .global XMC_SCU_CLOCK_StartUsbPll
 2361              	 .thumb
 2362              	 .thumb_func
 2364              	XMC_SCU_CLOCK_StartUsbPll:
 2365              	.LFB245:
1122:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1123:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1124:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to configure USB PLL */
1125:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_StartUsbPll(uint32_t pdiv, uint32_t ndiv)
1126:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2366              	 .loc 1 1126 0
 2367              	 .cfi_startproc
 2368              	 
 2369              	 
 2370              	 
 2371              	.LVL153:
1127:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Go to bypass the USB PLL */
1128:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_VCOBYP_Msk;
 2372              	 .loc 1 1128 0
 2373 0000 104B     	 ldr r3,.L250
 2374 0002 5A69     	 ldr r2,[r3,#20]
 2375 0004 42F00102 	 orr r2,r2,#1
 2376 0008 5A61     	 str r2,[r3,#20]
1129:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1130:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* disconnect Oscillator from USB PLL */
1131:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_FINDIS_Msk;
 2377              	 .loc 1 1131 0
 2378 000a 5A69     	 ldr r2,[r3,#20]
 2379 000c 42F01002 	 orr r2,r2,#16
 2380 0010 5A61     	 str r2,[r3,#20]
1132:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1133:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Setup Divider settings for USB PLL */
1134:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)((uint32_t)((ndiv -1U) << SCU_PLL_USBPLLCON_NDIV_Pos) |
 2381              	 .loc 1 1134 0
 2382 0012 0139     	 subs r1,r1,#1
 2383              	.LVL154:
1135:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                        (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 2384              	 .loc 1 1135 0
 2385 0014 0138     	 subs r0,r0,#1
 2386              	.LVL155:
 2387 0016 0006     	 lsls r0,r0,#24
 2388              	.LVL156:
1134:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                        (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 2389              	 .loc 1 1134 0
 2390 0018 40EA0121 	 orr r1,r0,r1,lsl#8
 2391              	.LVL157:
 2392 001c 5961     	 str r1,[r3,#20]
1136:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1137:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Set OSCDISCDIS */
1138:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 2393              	 .loc 1 1138 0
 2394 001e 5A69     	 ldr r2,[r3,#20]
 2395 0020 42F04002 	 orr r2,r2,#64
 2396 0024 5A61     	 str r2,[r3,#20]
1139:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1140:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* connect Oscillator to USB PLL */
1141:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~SCU_PLL_USBPLLCON_FINDIS_Msk;
 2397              	 .loc 1 1141 0
 2398 0026 5A69     	 ldr r2,[r3,#20]
 2399 0028 22F01002 	 bic r2,r2,#16
 2400 002c 5A61     	 str r2,[r3,#20]
1142:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1143:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* restart PLL Lock detection */
1144:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_RESLD_Msk;
 2401              	 .loc 1 1144 0
 2402 002e 5A69     	 ldr r2,[r3,#20]
 2403 0030 42F48022 	 orr r2,r2,#262144
 2404 0034 5A61     	 str r2,[r3,#20]
1145:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1146:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 2405              	 .loc 1 1146 0
 2406 0036 1A46     	 mov r2,r3
 2407              	.L248:
 2408              	 .loc 1 1146 0 is_stmt 0 discriminator 1
 2409 0038 1369     	 ldr r3,[r2,#16]
 2410 003a 13F0040F 	 tst r3,#4
 2411 003e FBD0     	 beq .L248
1147:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1148:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* wait for PLL Lock */
1149:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1150:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1151:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 2412              	 .loc 1 1151 0 is_stmt 1
 2413 0040 7047     	 bx lr
 2414              	.L251:
 2415 0042 00BF     	 .align 2
 2416              	.L250:
 2417 0044 10470050 	 .word 1342195472
 2418              	 .cfi_endproc
 2419              	.LFE245:
 2421              	 .section .text.XMC_SCU_CLOCK_StopUsbPll,"ax",%progbits
 2422              	 .align 2
 2423              	 .global XMC_SCU_CLOCK_StopUsbPll
 2424              	 .thumb
 2425              	 .thumb_func
 2427              	XMC_SCU_CLOCK_StopUsbPll:
 2428              	.LFB246:
1152:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1153:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to disable USB PLL operation */
1154:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_StopUsbPll(void)
1155:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2429              	 .loc 1 1155 0
 2430              	 .cfi_startproc
 2431              	 
 2432              	 
 2433              	 
1156:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk |
 2434              	 .loc 1 1156 0
 2435 0000 014A     	 ldr r2,.L253
 2436 0002 024B     	 ldr r3,.L253+4
 2437 0004 5A61     	 str r2,[r3,#20]
 2438 0006 7047     	 bx lr
 2439              	.L254:
 2440              	 .align 2
 2441              	.L253:
 2442 0008 03000100 	 .word 65539
 2443 000c 10470050 	 .word 1342195472
 2444              	 .cfi_endproc
 2445              	.LFE246:
 2447              	 .section .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode,"ax",%progbits
 2448              	 .align 2
 2449              	 .global XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 2450              	 .thumb
 2451              	 .thumb_func
 2453              	XMC_SCU_CLOCK_SetBackupClockCalibrationMode:
 2454              	.LFB247:
1157:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                   SCU_PLL_USBPLLCON_VCOBYP_Msk);
1158:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1159:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1160:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to onfigure the calibration mode for internal oscillator */
1161:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_SetBackupClockCalibrationMode(XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t mode)
1162:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2455              	 .loc 1 1162 0
 2456              	 .cfi_startproc
 2457              	 
 2458              	 
 2459              	.LVL158:
 2460 0000 10B5     	 push {r4,lr}
 2461              	.LCFI10:
 2462              	 .cfi_def_cfa_offset 8
 2463              	 .cfi_offset 4,-8
 2464              	 .cfi_offset 14,-4
1163:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Enable factory calibration based trimming */
1164:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FOTR_Msk;
 2465              	 .loc 1 1164 0
 2466 0002 0B4A     	 ldr r2,.L258
 2467 0004 5368     	 ldr r3,[r2,#4]
 2468 0006 43F48013 	 orr r3,r3,#1048576
 2469 000a 5360     	 str r3,[r2,#4]
1165:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1166:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC)
 2470              	 .loc 1 1166 0
 2471 000c 0128     	 cmp r0,#1
 2472 000e 0BD1     	 bne .L256
1167:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1168:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Disable factory calibration based trimming */
1169:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FOTR_Msk;
 2473              	 .loc 1 1169 0
 2474 0010 1446     	 mov r4,r2
 2475 0012 5368     	 ldr r3,[r2,#4]
 2476 0014 23F48013 	 bic r3,r3,#1048576
 2477 0018 5360     	 str r3,[r2,#4]
1170:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     XMC_SCU_lDelay(100UL);
 2478              	 .loc 1 1170 0
 2479 001a 6420     	 movs r0,#100
 2480              	.LVL159:
 2481 001c FFF7FEFF 	 bl XMC_SCU_lDelay
 2482              	.LVL160:
1171:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1172:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Enable automatic calibration */
1173:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_AOTREN_Msk;
 2483              	 .loc 1 1173 0
 2484 0020 6368     	 ldr r3,[r4,#4]
 2485 0022 43F40023 	 orr r3,r3,#524288
 2486 0026 6360     	 str r3,[r4,#4]
 2487              	.L256:
1174:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1175:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1176:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_lDelay(100UL);
 2488              	 .loc 1 1176 0
 2489 0028 6420     	 movs r0,#100
 2490 002a FFF7FEFF 	 bl XMC_SCU_lDelay
 2491              	.LVL161:
 2492 002e 10BD     	 pop {r4,pc}
 2493              	.L259:
 2494              	 .align 2
 2495              	.L258:
 2496 0030 10470050 	 .word 1342195472
 2497              	 .cfi_endproc
 2498              	.LFE247:
 2500              	 .section .text.XMC_SCU_POWER_EnableUsb,"ax",%progbits
 2501              	 .align 2
 2502              	 .global XMC_SCU_POWER_EnableUsb
 2503              	 .thumb
 2504              	 .thumb_func
 2506              	XMC_SCU_POWER_EnableUsb:
 2507              	.LFB248:
1177:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1178:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1179:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1180:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1181:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable USB Phy and comparator */
1182:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_POWER_EnableUsb(void)
1183:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2508              	 .loc 1 1183 0
 2509              	 .cfi_startproc
 2510              	 
 2511              	 
 2512              	 
1184:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1185:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)(SCU_POWER_PWRSET_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
 2513              	 .loc 1 1185 0
 2514 0000 4FF44032 	 mov r2,#196608
 2515 0004 014B     	 ldr r3,.L261
 2516 0006 5A60     	 str r2,[r3,#4]
 2517 0008 7047     	 bx lr
 2518              	.L262:
 2519 000a 00BF     	 .align 2
 2520              	.L261:
 2521 000c 00420050 	 .word 1342194176
 2522              	 .cfi_endproc
 2523              	.LFE248:
 2525              	 .section .text.XMC_SCU_POWER_DisableUsb,"ax",%progbits
 2526              	 .align 2
 2527              	 .global XMC_SCU_POWER_DisableUsb
 2528              	 .thumb
 2529              	 .thumb_func
 2531              	XMC_SCU_POWER_DisableUsb:
 2532              	.LFB249:
1186:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #else
1187:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_USBPHYPDQ_Msk;
1188:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
1189:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1190:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1191:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to power down USB Phy and comparator */
1192:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_POWER_DisableUsb(void)
1193:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2533              	 .loc 1 1193 0
 2534              	 .cfi_startproc
 2535              	 
 2536              	 
 2537              	 
1194:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1195:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)(SCU_POWER_PWRCLR_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
 2538              	 .loc 1 1195 0
 2539 0000 4FF44032 	 mov r2,#196608
 2540 0004 014B     	 ldr r3,.L264
 2541 0006 9A60     	 str r2,[r3,#8]
 2542 0008 7047     	 bx lr
 2543              	.L265:
 2544 000a 00BF     	 .align 2
 2545              	.L264:
 2546 000c 00420050 	 .word 1342194176
 2547              	 .cfi_endproc
 2548              	.LFE249:
 2550              	 .section .text.XMC_SCU_CLOCK_IsUsbPllLocked,"ax",%progbits
 2551              	 .align 2
 2552              	 .global XMC_SCU_CLOCK_IsUsbPllLocked
 2553              	 .thumb
 2554              	 .thumb_func
 2556              	XMC_SCU_CLOCK_IsUsbPllLocked:
 2557              	.LFB250:
1196:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #else
1197:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_USBPHYPDQ_Msk;
1198:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif    
1199:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1200:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1201:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to check USB PLL is locked or not */
1202:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_CLOCK_IsUsbPllLocked(void)
1203:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2558              	 .loc 1 1203 0
 2559              	 .cfi_startproc
 2560              	 
 2561              	 
 2562              	 
1204:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (bool)((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) != 0UL);
 2563              	 .loc 1 1204 0
 2564 0000 024B     	 ldr r3,.L267
 2565 0002 1869     	 ldr r0,[r3,#16]
1205:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 2566              	 .loc 1 1205 0
 2567 0004 C0F38000 	 ubfx r0,r0,#2,#1
 2568 0008 7047     	 bx lr
 2569              	.L268:
 2570 000a 00BF     	 .align 2
 2571              	.L267:
 2572 000c 10470050 	 .word 1342195472
 2573              	 .cfi_endproc
 2574              	.LFE250:
 2576              	 .section .text.XMC_SCU_HIB_EnableHibernateDomain,"ax",%progbits
 2577              	 .align 2
 2578              	 .global XMC_SCU_HIB_EnableHibernateDomain
 2579              	 .thumb
 2580              	 .thumb_func
 2582              	XMC_SCU_HIB_EnableHibernateDomain:
 2583              	.LFB251:
1206:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1207:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to power up the hibernation domain */
1208:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_EnableHibernateDomain(void)
1209:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2584              	 .loc 1 1209 0
 2585              	 .cfi_startproc
 2586              	 
 2587              	 
 2588              	 
1210:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Power up HIB domain if and only if it is currently powered down */
1211:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 2589              	 .loc 1 1211 0
 2590 0000 0D4B     	 ldr r3,.L276
 2591 0002 1B68     	 ldr r3,[r3]
 2592 0004 13F0010F 	 tst r3,#1
 2593 0008 07D1     	 bne .L270
1212:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1213:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_HIB_Msk;
 2594              	 .loc 1 1213 0
 2595 000a 0122     	 movs r2,#1
 2596 000c 0A4B     	 ldr r3,.L276
 2597 000e 5A60     	 str r2,[r3,#4]
1214:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     
1215:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     while((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 2598              	 .loc 1 1215 0
 2599 0010 1A46     	 mov r2,r3
 2600              	.L271:
 2601              	 .loc 1 1215 0 is_stmt 0 discriminator 1
 2602 0012 1368     	 ldr r3,[r2]
 2603 0014 13F0010F 	 tst r3,#1
 2604 0018 FBD0     	 beq .L271
 2605              	.L270:
1216:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
1217:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       /* wait until HIB domain is enabled */
1218:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }    
1219:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1220:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
1221:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Remove the reset only if HIB domain were in a state of reset */
1222:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 2606              	 .loc 1 1222 0 is_stmt 1
 2607 001a 084B     	 ldr r3,.L276+4
 2608 001c 1B68     	 ldr r3,[r3]
 2609 001e 13F4007F 	 tst r3,#512
 2610 0022 08D0     	 beq .L269
1223:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1224:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_HIBRS_Msk;
 2611              	 .loc 1 1224 0
 2612 0024 4FF40072 	 mov r2,#512
 2613 0028 044B     	 ldr r3,.L276+4
 2614 002a 9A60     	 str r2,[r3,#8]
1225:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     while((SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk) != 0UL)
 2615              	 .loc 1 1225 0
 2616 002c 1A46     	 mov r2,r3
 2617              	.L273:
 2618              	 .loc 1 1225 0 is_stmt 0 discriminator 1
 2619 002e 1368     	 ldr r3,[r2]
 2620 0030 13F4007F 	 tst r3,#512
 2621 0034 FBD1     	 bne .L273
 2622              	.L269:
 2623 0036 7047     	 bx lr
 2624              	.L277:
 2625              	 .align 2
 2626              	.L276:
 2627 0038 00420050 	 .word 1342194176
 2628 003c 00440050 	 .word 1342194688
 2629              	 .cfi_endproc
 2630              	.LFE251:
 2632              	 .section .text.XMC_SCU_HIB_DisableHibernateDomain,"ax",%progbits
 2633              	 .align 2
 2634              	 .global XMC_SCU_HIB_DisableHibernateDomain
 2635              	 .thumb
 2636              	 .thumb_func
 2638              	XMC_SCU_HIB_DisableHibernateDomain:
 2639              	.LFB252:
1226:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
1227:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       /* wait until HIB domain is enabled */
1228:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
1229:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1230:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1231:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1232:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to power down the hibernation domain */
1233:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_DisableHibernateDomain(void)
1234:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2640              	 .loc 1 1234 0 is_stmt 1
 2641              	 .cfi_startproc
 2642              	 
 2643              	 
 2644              	 
1235:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Disable hibernate domain */   
1236:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_HIB_Msk;
 2645              	 .loc 1 1236 0
 2646 0000 0122     	 movs r2,#1
 2647 0002 044B     	 ldr r3,.L279
 2648 0004 9A60     	 str r2,[r3,#8]
1237:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Reset of hibernate domain reset */  
1238:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_RESET->RSTSET = (uint32_t)SCU_RESET_RSTSET_HIBRS_Msk;
 2649              	 .loc 1 1238 0
 2650 0006 4FF40072 	 mov r2,#512
 2651 000a 03F50073 	 add r3,r3,#512
 2652 000e 5A60     	 str r2,[r3,#4]
 2653 0010 7047     	 bx lr
 2654              	.L280:
 2655 0012 00BF     	 .align 2
 2656              	.L279:
 2657 0014 00420050 	 .word 1342194176
 2658              	 .cfi_endproc
 2659              	.LFE252:
 2661              	 .section .text.XMC_SCU_HIB_IsHibernateDomainEnabled,"ax",%progbits
 2662              	 .align 2
 2663              	 .global XMC_SCU_HIB_IsHibernateDomainEnabled
 2664              	 .thumb
 2665              	 .thumb_func
 2667              	XMC_SCU_HIB_IsHibernateDomainEnabled:
 2668              	.LFB253:
1239:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1240:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1241:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to check the hibernation domain is enabled or not */
1242:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_HIB_IsHibernateDomainEnabled(void)
1243:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2669              	 .loc 1 1243 0
 2670              	 .cfi_startproc
 2671              	 
 2672              	 
 2673              	 
1244:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 2674              	 .loc 1 1244 0
 2675 0000 064B     	 ldr r3,.L284
 2676 0002 1B68     	 ldr r3,[r3]
 2677 0004 13F0010F 	 tst r3,#1
 2678 0008 06D0     	 beq .L283
1245:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****           !(bool)(SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk));
 2679              	 .loc 1 1245 0 discriminator 1
 2680 000a 054B     	 ldr r3,.L284+4
 2681 000c 1868     	 ldr r0,[r3]
1244:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 2682              	 .loc 1 1244 0 discriminator 1
 2683 000e 80F40070 	 eor r0,r0,#512
 2684 0012 C0F34020 	 ubfx r0,r0,#9,#1
 2685 0016 7047     	 bx lr
 2686              	.L283:
1244:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 2687              	 .loc 1 1244 0 is_stmt 0
 2688 0018 0020     	 movs r0,#0
1246:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 2689              	 .loc 1 1246 0 is_stmt 1
 2690 001a 7047     	 bx lr
 2691              	.L285:
 2692              	 .align 2
 2693              	.L284:
 2694 001c 00420050 	 .word 1342194176
 2695 0020 00440050 	 .word 1342194688
 2696              	 .cfi_endproc
 2697              	.LFE253:
 2699              	 .section .text.XMC_SCU_HIB_EnableInternalSlowClock,"ax",%progbits
 2700              	 .align 2
 2701              	 .global XMC_SCU_HIB_EnableInternalSlowClock
 2702              	 .thumb
 2703              	 .thumb_func
 2705              	XMC_SCU_HIB_EnableInternalSlowClock:
 2706              	.LFB254:
1247:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1248:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1249:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_EnableInternalSlowClock(void)
1250:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2707              	 .loc 1 1250 0
 2708              	 .cfi_startproc
 2709              	 
 2710              	 
 2711              	 
1251:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 2712              	 .loc 1 1251 0
 2713 0000 054A     	 ldr r2,.L289
 2714              	.L287:
 2715              	 .loc 1 1251 0 is_stmt 0 discriminator 1
 2716 0002 D2F8C430 	 ldr r3,[r2,#196]
 2717 0006 13F0200F 	 tst r3,#32
 2718 000a FAD1     	 bne .L287
1252:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1253:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */  
1254:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1255:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL &= (uint32_t)~(SCU_HIBERNATE_OSCSICTRL_PWD_Msk);
 2719              	 .loc 1 1255 0 is_stmt 1
 2720 000c 034A     	 ldr r2,.L289+4
 2721 000e 5369     	 ldr r3,[r2,#20]
 2722 0010 23F00103 	 bic r3,r3,#1
 2723 0014 5361     	 str r3,[r2,#20]
 2724 0016 7047     	 bx lr
 2725              	.L290:
 2726              	 .align 2
 2727              	.L289:
 2728 0018 00400050 	 .word 1342193664
 2729 001c 00430050 	 .word 1342194432
 2730              	 .cfi_endproc
 2731              	.LFE254:
 2733              	 .section .text.XMC_SCU_HIB_DisableInternalSlowClock,"ax",%progbits
 2734              	 .align 2
 2735              	 .global XMC_SCU_HIB_DisableInternalSlowClock
 2736              	 .thumb
 2737              	 .thumb_func
 2739              	XMC_SCU_HIB_DisableInternalSlowClock:
 2740              	.LFB255:
1256:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1257:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1258:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to disable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1259:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_DisableInternalSlowClock(void)
1260:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2741              	 .loc 1 1260 0
 2742              	 .cfi_startproc
 2743              	 
 2744              	 
 2745              	 
1261:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 2746              	 .loc 1 1261 0
 2747 0000 054A     	 ldr r2,.L294
 2748              	.L292:
 2749              	 .loc 1 1261 0 is_stmt 0 discriminator 1
 2750 0002 D2F8C430 	 ldr r3,[r2,#196]
 2751 0006 13F0200F 	 tst r3,#32
 2752 000a FAD1     	 bne .L292
1262:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1263:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */  
1264:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1265:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL |= (uint32_t)SCU_HIBERNATE_OSCSICTRL_PWD_Msk;
 2753              	 .loc 1 1265 0 is_stmt 1
 2754 000c 034A     	 ldr r2,.L294+4
 2755 000e 5369     	 ldr r3,[r2,#20]
 2756 0010 43F00103 	 orr r3,r3,#1
 2757 0014 5361     	 str r3,[r2,#20]
 2758 0016 7047     	 bx lr
 2759              	.L295:
 2760              	 .align 2
 2761              	.L294:
 2762 0018 00400050 	 .word 1342193664
 2763 001c 00430050 	 .word 1342194432
 2764              	 .cfi_endproc
 2765              	.LFE255:
 2767              	 .section .text.XMC_SCU_HIB_ClearEventStatus,"ax",%progbits
 2768              	 .align 2
 2769              	 .global XMC_SCU_HIB_ClearEventStatus
 2770              	 .thumb
 2771              	 .thumb_func
 2773              	XMC_SCU_HIB_ClearEventStatus:
 2774              	.LFB256:
1266:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1267:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1268:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_ClearEventStatus(int32_t event)
1269:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2775              	 .loc 1 1269 0
 2776              	 .cfi_startproc
 2777              	 
 2778              	 
 2779              	 
 2780              	.LVL162:
1270:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 2781              	 .loc 1 1270 0
 2782 0000 044A     	 ldr r2,.L299
 2783              	.L297:
 2784              	 .loc 1 1270 0 is_stmt 0 discriminator 1
 2785 0002 D2F8C430 	 ldr r3,[r2,#196]
 2786 0006 13F0020F 	 tst r3,#2
 2787 000a FAD1     	 bne .L297
1271:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1272:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCLR register in hibernate domain is ready to accept a write */  
1273:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1274:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCLR = event;
 2788              	 .loc 1 1274 0 is_stmt 1
 2789 000c 024B     	 ldr r3,.L299+4
 2790 000e 5860     	 str r0,[r3,#4]
 2791 0010 7047     	 bx lr
 2792              	.L300:
 2793 0012 00BF     	 .align 2
 2794              	.L299:
 2795 0014 00400050 	 .word 1342193664
 2796 0018 00430050 	 .word 1342194432
 2797              	 .cfi_endproc
 2798              	.LFE256:
 2800              	 .section .text.XMC_SCU_HIB_TriggerEvent,"ax",%progbits
 2801              	 .align 2
 2802              	 .global XMC_SCU_HIB_TriggerEvent
 2803              	 .thumb
 2804              	 .thumb_func
 2806              	XMC_SCU_HIB_TriggerEvent:
 2807              	.LFB257:
1275:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1276:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1277:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_TriggerEvent(int32_t event)
1278:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2808              	 .loc 1 1278 0
 2809              	 .cfi_startproc
 2810              	 
 2811              	 
 2812              	 
 2813              	.LVL163:
1279:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDSET_Msk)
 2814              	 .loc 1 1279 0
 2815 0000 044A     	 ldr r2,.L304
 2816              	.L302:
 2817              	 .loc 1 1279 0 is_stmt 0 discriminator 1
 2818 0002 D2F8C430 	 ldr r3,[r2,#196]
 2819 0006 13F0040F 	 tst r3,#4
 2820 000a FAD1     	 bne .L302
1280:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1281:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDSET register in hibernate domain is ready to accept a write */    
1282:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1283:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDSET = event;
 2821              	 .loc 1 1283 0 is_stmt 1
 2822 000c 024B     	 ldr r3,.L304+4
 2823 000e 9860     	 str r0,[r3,#8]
 2824 0010 7047     	 bx lr
 2825              	.L305:
 2826 0012 00BF     	 .align 2
 2827              	.L304:
 2828 0014 00400050 	 .word 1342193664
 2829 0018 00430050 	 .word 1342194432
 2830              	 .cfi_endproc
 2831              	.LFE257:
 2833              	 .section .text.XMC_SCU_HIB_EnableEvent,"ax",%progbits
 2834              	 .align 2
 2835              	 .global XMC_SCU_HIB_EnableEvent
 2836              	 .thumb
 2837              	 .thumb_func
 2839              	XMC_SCU_HIB_EnableEvent:
 2840              	.LFB258:
1284:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1285:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1286:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_EnableEvent(int32_t event)
1287:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2841              	 .loc 1 1287 0
 2842              	 .cfi_startproc
 2843              	 
 2844              	 
 2845              	 
 2846              	.LVL164:
1288:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1289:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
1290:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
1291:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
1292:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
1293:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1294:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
1295:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
1296:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
1297:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
1298:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1299:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 2847              	 .loc 1 1299 0
 2848 0000 054A     	 ldr r2,.L309
 2849              	.L307:
 2850              	 .loc 1 1299 0 is_stmt 0 discriminator 1
 2851 0002 D2F8C430 	 ldr r3,[r2,#196]
 2852 0006 13F0080F 	 tst r3,#8
 2853 000a FAD1     	 bne .L307
1300:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1301:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1302:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1303:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= event;
 2854              	 .loc 1 1303 0 is_stmt 1
 2855 000c 034A     	 ldr r2,.L309+4
 2856 000e D368     	 ldr r3,[r2,#12]
 2857 0010 1843     	 orrs r0,r0,r3
 2858              	.LVL165:
 2859 0012 D060     	 str r0,[r2,#12]
 2860 0014 7047     	 bx lr
 2861              	.L310:
 2862 0016 00BF     	 .align 2
 2863              	.L309:
 2864 0018 00400050 	 .word 1342193664
 2865 001c 00430050 	 .word 1342194432
 2866              	 .cfi_endproc
 2867              	.LFE258:
 2869              	 .section .text.XMC_SCU_HIB_DisableEvent,"ax",%progbits
 2870              	 .align 2
 2871              	 .global XMC_SCU_HIB_DisableEvent
 2872              	 .thumb
 2873              	 .thumb_func
 2875              	XMC_SCU_HIB_DisableEvent:
 2876              	.LFB259:
1304:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1305:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1306:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_DisableEvent(int32_t event)
1307:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2877              	 .loc 1 1307 0
 2878              	 .cfi_startproc
 2879              	 
 2880              	 
 2881              	 
 2882              	.LVL166:
1308:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1309:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
1310:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
1311:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
1312:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
1313:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1314:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
1315:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
1316:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
1317:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
1318:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1319:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 2883              	 .loc 1 1319 0
 2884 0000 054A     	 ldr r2,.L314
 2885              	.L312:
 2886              	 .loc 1 1319 0 is_stmt 0 discriminator 1
 2887 0002 D2F8C430 	 ldr r3,[r2,#196]
 2888 0006 13F0080F 	 tst r3,#8
 2889 000a FAD1     	 bne .L312
1320:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1321:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1322:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1323:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCR &= ~event;
 2890              	 .loc 1 1323 0 is_stmt 1
 2891 000c 034A     	 ldr r2,.L314+4
 2892 000e D368     	 ldr r3,[r2,#12]
 2893 0010 23EA0000 	 bic r0,r3,r0
 2894              	.LVL167:
 2895 0014 D060     	 str r0,[r2,#12]
 2896 0016 7047     	 bx lr
 2897              	.L315:
 2898              	 .align 2
 2899              	.L314:
 2900 0018 00400050 	 .word 1342193664
 2901 001c 00430050 	 .word 1342194432
 2902              	 .cfi_endproc
 2903              	.LFE259:
 2905              	 .section .text.XMC_SCU_HIB_EnterHibernateState,"ax",%progbits
 2906              	 .align 2
 2907              	 .global XMC_SCU_HIB_EnterHibernateState
 2908              	 .thumb
 2909              	 .thumb_func
 2911              	XMC_SCU_HIB_EnterHibernateState:
 2912              	.LFB260:
1324:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1325:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1326:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateState(void) 
1327:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2913              	 .loc 1 1327 0
 2914              	 .cfi_startproc
 2915              	 
 2916              	 
 2917              	 
1328:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 2918              	 .loc 1 1328 0
 2919 0000 054A     	 ldr r2,.L319
 2920              	.L317:
 2921              	 .loc 1 1328 0 is_stmt 0 discriminator 1
 2922 0002 D2F8C430 	 ldr r3,[r2,#196]
 2923 0006 13F0080F 	 tst r3,#8
 2924 000a FAD1     	 bne .L317
1329:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1330:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1331:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1332:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_HIB_Msk;
 2925              	 .loc 1 1332 0 is_stmt 1
 2926 000c 034A     	 ldr r2,.L319+4
 2927 000e D368     	 ldr r3,[r2,#12]
 2928 0010 43F01003 	 orr r3,r3,#16
 2929 0014 D360     	 str r3,[r2,#12]
 2930 0016 7047     	 bx lr
 2931              	.L320:
 2932              	 .align 2
 2933              	.L319:
 2934 0018 00400050 	 .word 1342193664
 2935 001c 00430050 	 .word 1342194432
 2936              	 .cfi_endproc
 2937              	.LFE260:
 2939              	 .section .text.XMC_SCU_HIB_EnterHibernateStateEx,"ax",%progbits
 2940              	 .align 2
 2941              	 .global XMC_SCU_HIB_EnterHibernateStateEx
 2942              	 .thumb
 2943              	 .thumb_func
 2945              	XMC_SCU_HIB_EnterHibernateStateEx:
 2946              	.LFB261:
1333:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1334:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1335:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateStateEx(XMC_SCU_HIB_HIBERNATE_MODE_t mode)
1336:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2947              	 .loc 1 1336 0
 2948              	 .cfi_startproc
 2949              	 
 2950              	 
 2951              	.LVL168:
1337:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL)
 2952              	 .loc 1 1337 0
 2953 0000 18B9     	 cbnz r0,.L324
1336:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL)
 2954              	 .loc 1 1336 0
 2955 0002 08B5     	 push {r3,lr}
 2956              	.LCFI11:
 2957              	 .cfi_def_cfa_offset 8
 2958              	 .cfi_offset 3,-8
 2959              	 .cfi_offset 14,-4
1338:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1339:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     XMC_SCU_HIB_EnterHibernateState();
 2960              	 .loc 1 1339 0
 2961 0004 FFF7FEFF 	 bl XMC_SCU_HIB_EnterHibernateState
 2962              	.LVL169:
 2963 0008 08BD     	 pop {r3,pc}
 2964              	.LVL170:
 2965              	.L324:
 2966              	.LCFI12:
 2967              	 .cfi_def_cfa_offset 0
 2968              	 .cfi_restore 3
 2969              	 .cfi_restore 14
 2970 000a 7047     	 bx lr
 2971              	 .cfi_endproc
 2972              	.LFE261:
 2974              	 .section .text.XMC_SCU_HIB_SetWakeupTriggerInput,"ax",%progbits
 2975              	 .align 2
 2976              	 .global XMC_SCU_HIB_SetWakeupTriggerInput
 2977              	 .thumb
 2978              	 .thumb_func
 2980              	XMC_SCU_HIB_SetWakeupTriggerInput:
 2981              	.LFB262:
1340:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1341:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1342:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL)
1343:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1344:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HINTSET_Msk)
1345:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
1346:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       /* Wait until HDCR register in hibernate domain is ready to accept a write */
1347:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
1348:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_HIBERNATE->HINTSET = SCU_HIBERNATE_HINTSET_HIBNINT_Msk;
1349:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1350:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
1351:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1352:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1353:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_SetWakeupTriggerInput(XMC_SCU_HIB_IO_t pin)
1354:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 2982              	 .loc 1 1354 0
 2983              	 .cfi_startproc
 2984              	 
 2985              	 
 2986              	 
 2987              	.LVL171:
1355:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 2988              	 .loc 1 1355 0
 2989 0000 094A     	 ldr r2,.L330
 2990              	.L326:
 2991              	 .loc 1 1355 0 is_stmt 0 discriminator 1
 2992 0002 D2F8C430 	 ldr r3,[r2,#196]
 2993 0006 13F0080F 	 tst r3,#8
 2994 000a FAD1     	 bne .L326
1356:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1357:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1358:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1359:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1360:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 2995              	 .loc 1 1360 0 is_stmt 1
 2996 000c 28B9     	 cbnz r0,.L327
1361:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1362:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_WKUPSEL_Msk;
 2997              	 .loc 1 1362 0
 2998 000e 074A     	 ldr r2,.L330+4
 2999 0010 D368     	 ldr r3,[r2,#12]
 3000 0012 43F48073 	 orr r3,r3,#256
 3001 0016 D360     	 str r3,[r2,#12]
 3002 0018 7047     	 bx lr
 3003              	.L327:
1363:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1364:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
1365:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1366:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_WKUPSEL_Msk; 
 3004              	 .loc 1 1366 0
 3005 001a 044A     	 ldr r2,.L330+4
 3006 001c D368     	 ldr r3,[r2,#12]
 3007 001e 23F48073 	 bic r3,r3,#256
 3008 0022 D360     	 str r3,[r2,#12]
 3009 0024 7047     	 bx lr
 3010              	.L331:
 3011 0026 00BF     	 .align 2
 3012              	.L330:
 3013 0028 00400050 	 .word 1342193664
 3014 002c 00430050 	 .word 1342194432
 3015              	 .cfi_endproc
 3016              	.LFE262:
 3018              	 .section .text.XMC_SCU_HIB_SetPinMode,"ax",%progbits
 3019              	 .align 2
 3020              	 .global XMC_SCU_HIB_SetPinMode
 3021              	 .thumb
 3022              	 .thumb_func
 3024              	XMC_SCU_HIB_SetPinMode:
 3025              	.LFB263:
1367:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1368:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1369:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1370:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_SetPinMode(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_PIN_MODE_t mode)
1371:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3026              	 .loc 1 1371 0
 3027              	 .cfi_startproc
 3028              	 
 3029              	 
 3030              	 
 3031              	.LVL172:
1372:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3032              	 .loc 1 1372 0
 3033 0000 0A4A     	 ldr r2,.L336
 3034              	.L333:
 3035              	 .loc 1 1372 0 is_stmt 0 discriminator 1
 3036 0002 D2F8C430 	 ldr r3,[r2,#196]
 3037 0006 13F0080F 	 tst r3,#8
 3038 000a FAD1     	 bne .L333
1371:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3039              	 .loc 1 1371 0 is_stmt 1
 3040 000c 10B4     	 push {r4}
 3041              	.LCFI13:
 3042              	 .cfi_def_cfa_offset 4
 3043              	 .cfi_offset 4,-4
1373:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1374:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1375:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1376:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0SEL_Msk << (SCU_HIBERNATE
 3044              	 .loc 1 1376 0
 3045 000e 084C     	 ldr r4,.L336+4
 3046 0010 E268     	 ldr r2,[r4,#12]
 3047 0012 8000     	 lsls r0,r0,#2
 3048              	.LVL173:
 3049 0014 4FF47023 	 mov r3,#983040
 3050 0018 8340     	 lsls r3,r3,r0
 3051 001a 22EA0303 	 bic r3,r2,r3
1377:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 3052              	 .loc 1 1377 0
 3053 001e 8140     	 lsls r1,r1,r0
 3054              	.LVL174:
1376:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 3055              	 .loc 1 1376 0
 3056 0020 1943     	 orrs r1,r1,r3
 3057 0022 E160     	 str r1,[r4,#12]
1378:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3058              	 .loc 1 1378 0
 3059 0024 5DF8044B 	 ldr r4,[sp],#4
 3060              	.LCFI14:
 3061              	 .cfi_restore 4
 3062              	 .cfi_def_cfa_offset 0
 3063 0028 7047     	 bx lr
 3064              	.L337:
 3065 002a 00BF     	 .align 2
 3066              	.L336:
 3067 002c 00400050 	 .word 1342193664
 3068 0030 00430050 	 .word 1342194432
 3069              	 .cfi_endproc
 3070              	.LFE263:
 3072              	 .section .text.XMC_SCU_HIB_SetPinOutputLevel,"ax",%progbits
 3073              	 .align 2
 3074              	 .global XMC_SCU_HIB_SetPinOutputLevel
 3075              	 .thumb
 3076              	 .thumb_func
 3078              	XMC_SCU_HIB_SetPinOutputLevel:
 3079              	.LFB264:
1379:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1380:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_SetPinOutputLevel(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_IO_OUTPUT_LEVEL_t level)
1381:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3080              	 .loc 1 1381 0
 3081              	 .cfi_startproc
 3082              	 
 3083              	 
 3084              	 
 3085              	.LVL175:
1382:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3086              	 .loc 1 1382 0
 3087 0000 094A     	 ldr r2,.L342
 3088              	.L339:
 3089              	 .loc 1 1382 0 is_stmt 0 discriminator 1
 3090 0002 D2F8C430 	 ldr r3,[r2,#196]
 3091 0006 13F0080F 	 tst r3,#8
 3092 000a FAD1     	 bne .L339
1381:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3093              	 .loc 1 1381 0 is_stmt 1
 3094 000c 10B4     	 push {r4}
 3095              	.LCFI15:
 3096              	 .cfi_def_cfa_offset 4
 3097              	 .cfi_offset 4,-4
1383:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1384:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1385:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1386:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0POL_Msk << pin)) |
 3098              	 .loc 1 1386 0
 3099 000e 074C     	 ldr r4,.L342+4
 3100 0010 E268     	 ldr r2,[r4,#12]
 3101 0012 4FF48053 	 mov r3,#4096
 3102 0016 8340     	 lsls r3,r3,r0
 3103 0018 22EA0303 	 bic r3,r2,r3
1387:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                         (level << pin);
 3104              	 .loc 1 1387 0
 3105 001c 8140     	 lsls r1,r1,r0
 3106              	.LVL176:
1386:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                         (level << pin);
 3107              	 .loc 1 1386 0
 3108 001e 1943     	 orrs r1,r1,r3
 3109 0020 E160     	 str r1,[r4,#12]
1388:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3110              	 .loc 1 1388 0
 3111 0022 5DF8044B 	 ldr r4,[sp],#4
 3112              	.LCFI16:
 3113              	 .cfi_restore 4
 3114              	 .cfi_def_cfa_offset 0
 3115 0026 7047     	 bx lr
 3116              	.L343:
 3117              	 .align 2
 3118              	.L342:
 3119 0028 00400050 	 .word 1342193664
 3120 002c 00430050 	 .word 1342194432
 3121              	 .cfi_endproc
 3122              	.LFE264:
 3124              	 .section .text.XMC_SCU_HIB_SetInput0,"ax",%progbits
 3125              	 .align 2
 3126              	 .global XMC_SCU_HIB_SetInput0
 3127              	 .thumb
 3128              	 .thumb_func
 3130              	XMC_SCU_HIB_SetInput0:
 3131              	.LFB265:
1389:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1390:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_SetInput0(XMC_SCU_HIB_IO_t pin)
1391:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3132              	 .loc 1 1391 0
 3133              	 .cfi_startproc
 3134              	 
 3135              	 
 3136              	 
 3137              	.LVL177:
1392:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3138              	 .loc 1 1392 0
 3139 0000 094A     	 ldr r2,.L349
 3140              	.L345:
 3141              	 .loc 1 1392 0 is_stmt 0 discriminator 1
 3142 0002 D2F8C430 	 ldr r3,[r2,#196]
 3143 0006 13F0080F 	 tst r3,#8
 3144 000a FAD1     	 bne .L345
1393:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1394:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1395:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1396:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1397:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 3145              	 .loc 1 1397 0 is_stmt 1
 3146 000c 28B9     	 cbnz r0,.L346
1398:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1399:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_GPI0SEL_Msk;
 3147              	 .loc 1 1399 0
 3148 000e 074A     	 ldr r2,.L349+4
 3149 0010 D368     	 ldr r3,[r2,#12]
 3150 0012 43F48063 	 orr r3,r3,#1024
 3151 0016 D360     	 str r3,[r2,#12]
 3152 0018 7047     	 bx lr
 3153              	.L346:
1400:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1401:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
1402:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1403:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_GPI0SEL_Msk; 
 3154              	 .loc 1 1403 0
 3155 001a 044A     	 ldr r2,.L349+4
 3156 001c D368     	 ldr r3,[r2,#12]
 3157 001e 23F48063 	 bic r3,r3,#1024
 3158 0022 D360     	 str r3,[r2,#12]
 3159 0024 7047     	 bx lr
 3160              	.L350:
 3161 0026 00BF     	 .align 2
 3162              	.L349:
 3163 0028 00400050 	 .word 1342193664
 3164 002c 00430050 	 .word 1342194432
 3165              	 .cfi_endproc
 3166              	.LFE265:
 3168              	 .section .text.XMC_SCU_HIB_SetSR0Input,"ax",%progbits
 3169              	 .align 2
 3170              	 .global XMC_SCU_HIB_SetSR0Input
 3171              	 .thumb
 3172              	 .thumb_func
 3174              	XMC_SCU_HIB_SetSR0Input:
 3175              	.LFB266:
1404:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1405:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1406:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1407:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_SetSR0Input(XMC_SCU_HIB_SR0_INPUT_t input)
1408:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3176              	 .loc 1 1408 0
 3177              	 .cfi_startproc
 3178              	 
 3179              	 
 3180              	 
 3181              	.LVL178:
1409:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3182              	 .loc 1 1409 0
 3183 0000 064A     	 ldr r2,.L354
 3184              	.L352:
 3185              	 .loc 1 1409 0 is_stmt 0 discriminator 1
 3186 0002 D2F8C430 	 ldr r3,[r2,#196]
 3187 0006 13F0080F 	 tst r3,#8
 3188 000a FAD1     	 bne .L352
1410:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1411:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1412:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1413:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1414:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk | SCU_HIB
1415:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #else
1416:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk)) | 
 3189              	 .loc 1 1416 0 is_stmt 1
 3190 000c 044A     	 ldr r2,.L354+4
 3191 000e D368     	 ldr r3,[r2,#12]
 3192 0010 23F48063 	 bic r3,r3,#1024
 3193 0014 1843     	 orrs r0,r0,r3
 3194              	.LVL179:
 3195 0016 D060     	 str r0,[r2,#12]
 3196 0018 7047     	 bx lr
 3197              	.L355:
 3198 001a 00BF     	 .align 2
 3199              	.L354:
 3200 001c 00400050 	 .word 1342193664
 3201 0020 00430050 	 .word 1342194432
 3202              	 .cfi_endproc
 3203              	.LFE266:
 3205              	 .section .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable,"ax",%progbits
 3206              	 .align 2
 3207              	 .global XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 3208              	 .thumb
 3209              	 .thumb_func
 3211              	XMC_SCU_CLOCK_IsLowPowerOscillatorStable:
 3212              	.LFB267:
1417:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif  
1418:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                         input;
1419:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1420:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1421:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1422:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1423:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1424:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_SetSR1Input(XMC_SCU_HIB_SR1_INPUT_t input)
1425:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1426:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
1427:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1428:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1429:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1430:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI1SEL_Msk | SCU_HIB
1431:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                         input;
1432:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1433:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
1434:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1435:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetInput(XMC_SCU_HIB_LPAC_INPUT_t input)
1436:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1437:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1438:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1439:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1440:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1441:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_CMPEN_Msk
1442:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                             input;
1443:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1444:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1445:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTrigger(XMC_SCU_HIB_LPAC_TRIGGER_t trigger)
1446:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1447:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1448:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1449:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1450:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1451:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_TRIGSEL_M
1452:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                             trigger;
1453:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1454:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1455:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTiming(bool enable_delay, uint16_t interval_count, uint8_t settle_count)
1456:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1457:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t config = 0;
1458:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1459:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (enable_delay)
1460:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1461:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     config = SCU_HIBERNATE_LPACCONF_CONVDEL_Msk;
1462:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1463:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1464:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   config |= interval_count << SCU_HIBERNATE_LPACCONF_INTERVCNT_Pos;
1465:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   config |= settle_count << SCU_HIBERNATE_LPACCONF_SETTLECNT_Pos;
1466:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1467:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1468:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1469:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1470:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1471:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1472:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~(SCU_HIBERNATE_LPACCONF_CONVDEL_
1473:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                                     SCU_HIBERNATE_LPACCONF_INTERVCN
1474:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                                     SCU_HIBERNATE_LPACCONF_SETTLECN
1475:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                             config;
1476:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1477:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1478:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1479:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetVBATThresholds(uint8_t lower, uint8_t upper)
1480:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1481:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1482:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH0_Msk)
1483:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1484:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1485:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1486:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1487:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->LPACTH0 = (lower << SCU_HIBERNATE_LPACTH0_VBATLO_Pos) | (upper << SCU_HIBERNATE_LP
1488:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1489:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1490:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1491:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1492:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1493:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds(uint8_t lower, uint8_t upper)
1494:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1495:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1496:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
1497:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1498:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1499:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1500:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1501:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Ms
1502:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Pos) |
1503:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO0HI_Pos);
1504:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1505:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1506:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1507:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds(uint8_t lower, uint8_t upper)
1508:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1509:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1510:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
1511:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1512:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1513:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1514:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1515:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Ms
1516:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Pos) |
1517:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO1HI_Pos);
1518:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1519:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1520:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
1521:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** int32_t XMC_SCU_HIB_LPAC_GetStatus(void)
1522:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1523:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return SCU_HIBERNATE->LPACST;
1524:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1525:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1526:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_LPAC_ClearStatus(int32_t status)
1527:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1528:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCLR_Msk)
1529:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1530:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until LPACCLR register in hibernate domain is ready to accept a write */
1531:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1532:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->LPACCLR = status;;
1533:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1534:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1535:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_HIB_LPAC_TriggerCompare(XMC_SCU_HIB_LPAC_INPUT_t input)
1536:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1537:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACSET_Msk)
1538:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1539:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until LPACSET register in hibernate domain is ready to accept a write */
1540:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1541:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1542:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->LPACSET = input;
1543:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1544:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1545:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** #endif
1546:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1547:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void)
1548:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3213              	 .loc 1 1548 0
 3214              	 .cfi_startproc
 3215              	 
 3216              	 
 3217              	 
1549:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) == 0UL);
 3218              	 .loc 1 1549 0
 3219 0000 034B     	 ldr r3,.L357
 3220 0002 1868     	 ldr r0,[r3]
 3221 0004 80F00800 	 eor r0,r0,#8
1550:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3222              	 .loc 1 1550 0
 3223 0008 C0F3C000 	 ubfx r0,r0,#3,#1
 3224 000c 7047     	 bx lr
 3225              	.L358:
 3226 000e 00BF     	 .align 2
 3227              	.L357:
 3228 0010 00430050 	 .word 1342194432
 3229              	 .cfi_endproc
 3230              	.LFE267:
 3232              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillator,"ax",%progbits
 3233              	 .align 2
 3234              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillator
 3235              	 .thumb
 3236              	 .thumb_func
 3238              	XMC_SCU_CLOCK_EnableLowPowerOscillator:
 3239              	.LFB268:
1551:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1552:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1553:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void)
1554:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3240              	 .loc 1 1554 0
 3241              	 .cfi_startproc
 3242              	 
 3243              	 
 3244              	 
 3245              	.LVL180:
 3246              	.LBB40:
 3247              	.LBB41:
 252:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3248              	 .loc 1 252 0
 3249 0000 4FF40002 	 mov r2,#8388608
 3250 0004 144B     	 ldr r3,.L366
 3251 0006 DA60     	 str r2,[r3,#12]
 3252              	.LBE41:
 3253              	.LBE40:
1555:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Enable OSC_ULP */
1556:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED);
1557:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 3254              	 .loc 1 1557 0
 3255 0008 144A     	 ldr r2,.L366+4
 3256 000a D369     	 ldr r3,[r2,#28]
 3257 000c 23F03003 	 bic r3,r3,#48
 3258 0010 D361     	 str r3,[r2,#28]
 3259              	.LBB42:
 3260              	.LBB43:
 246:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3261              	 .loc 1 246 0
 3262 0012 A2F52372 	 sub r2,r2,#652
 3263              	.L360:
 246:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3264              	 .loc 1 246 0 is_stmt 0 discriminator 1
 3265 0016 5368     	 ldr r3,[r2,#4]
 3266              	.LBE43:
 3267              	.LBE42:
1558:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED) == 0);
 3268              	 .loc 1 1558 0 is_stmt 1 discriminator 1
 3269 0018 13F4000F 	 tst r3,#8388608
 3270 001c FBD0     	 beq .L360
 3271              	.LVL181:
 3272              	.LBB44:
 3273              	.LBB45:
 252:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3274              	 .loc 1 252 0
 3275 001e 4FF40032 	 mov r2,#131072
 3276 0022 0D4B     	 ldr r3,.L366
 3277 0024 DA60     	 str r2,[r3,#12]
 3278              	.LBE45:
 3279              	.LBE44:
1559:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1560:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Clear ULP WDG status */
1561:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED);
1562:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCLR = (uint32_t)SCU_HIBERNATE_HDCLR_ULPWDG_Msk;
 3280              	 .loc 1 1562 0
 3281 0026 0822     	 movs r2,#8
 3282 0028 03F52373 	 add r3,r3,#652
 3283 002c 5A60     	 str r2,[r3,#4]
 3284              	.LBB46:
 3285              	.LBB47:
 246:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3286              	 .loc 1 246 0
 3287 002e 0A4A     	 ldr r2,.L366
 3288              	.L361:
 246:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3289              	 .loc 1 246 0 is_stmt 0 discriminator 1
 3290 0030 5368     	 ldr r3,[r2,#4]
 3291              	.LBE47:
 3292              	.LBE46:
1563:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED) == 0);
 3293              	 .loc 1 1563 0 is_stmt 1 discriminator 1
 3294 0032 13F4003F 	 tst r3,#131072
 3295 0036 FBD0     	 beq .L361
 3296              	.LVL182:
 3297              	.LBB48:
 3298              	.LBB49:
 252:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3299              	 .loc 1 252 0
 3300 0038 4FF40022 	 mov r2,#524288
 3301 003c 064B     	 ldr r3,.L366
 3302 003e DA60     	 str r2,[r3,#12]
 3303              	.LBE49:
 3304              	.LBE48:
1564:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1565:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* Enable ULP WDG */
1566:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED);
1567:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= (uint32_t)SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 3305              	 .loc 1 1567 0
 3306 0040 064A     	 ldr r2,.L366+4
 3307 0042 D368     	 ldr r3,[r2,#12]
 3308 0044 43F00803 	 orr r3,r3,#8
 3309 0048 D360     	 str r3,[r2,#12]
 3310              	.LBB50:
 3311              	.LBB51:
 246:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3312              	 .loc 1 246 0
 3313 004a A2F52372 	 sub r2,r2,#652
 3314              	.L362:
 246:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3315              	 .loc 1 246 0 is_stmt 0 discriminator 1
 3316 004e 5368     	 ldr r3,[r2,#4]
 3317              	.LBE51:
 3318              	.LBE50:
1568:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED) == 0);
 3319              	 .loc 1 1568 0 is_stmt 1 discriminator 1
 3320 0050 13F4002F 	 tst r3,#524288
 3321 0054 FBD0     	 beq .L362
1569:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3322              	 .loc 1 1569 0
 3323 0056 7047     	 bx lr
 3324              	.L367:
 3325              	 .align 2
 3326              	.L366:
 3327 0058 74400050 	 .word 1342193780
 3328 005c 00430050 	 .word 1342194432
 3329              	 .cfi_endproc
 3330              	.LFE268:
 3332              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillator,"ax",%progbits
 3333              	 .align 2
 3334              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillator
 3335              	 .thumb
 3336              	 .thumb_func
 3338              	XMC_SCU_CLOCK_DisableLowPowerOscillator:
 3339              	.LFB269:
1570:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1571:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1572:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void)
1573:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3340              	 .loc 1 1573 0
 3341              	 .cfi_startproc
 3342              	 
 3343              	 
 3344              	 
1574:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 3345              	 .loc 1 1574 0
 3346 0000 054A     	 ldr r2,.L371
 3347              	.L369:
 3348              	 .loc 1 1574 0 is_stmt 0 discriminator 1
 3349 0002 D2F8C430 	 ldr r3,[r2,#196]
 3350 0006 13F0800F 	 tst r3,#128
 3351 000a FAD1     	 bne .L369
1575:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1576:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1577:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1578:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= (uint32_t)SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 3352              	 .loc 1 1578 0 is_stmt 1
 3353 000c 034A     	 ldr r2,.L371+4
 3354 000e D369     	 ldr r3,[r2,#28]
 3355 0010 43F03003 	 orr r3,r3,#48
 3356 0014 D361     	 str r3,[r2,#28]
 3357 0016 7047     	 bx lr
 3358              	.L372:
 3359              	 .align 2
 3360              	.L371:
 3361 0018 00400050 	 .word 1342193664
 3362 001c 00430050 	 .word 1342194432
 3363              	 .cfi_endproc
 3364              	.LFE269:
 3366              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 3367              	 .align 2
 3368              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
 3369              	 .thumb
 3370              	 .thumb_func
 3372              	XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:
 3373              	.LFB270:
1579:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1580:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1581:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void)
1582:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3374              	 .loc 1 1582 0
 3375              	 .cfi_startproc
 3376              	 
 3377              	 
 3378              	 
1583:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 3379              	 .loc 1 1583 0
 3380 0000 054A     	 ldr r2,.L376
 3381              	.L374:
 3382              	 .loc 1 1583 0 is_stmt 0 discriminator 1
 3383 0002 D2F8C430 	 ldr r3,[r2,#196]
 3384 0006 13F0800F 	 tst r3,#128
 3385 000a FAD1     	 bne .L374
1584:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1585:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1586:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1587:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= SCU_HIBERNATE_OSCULCTRL_X1DEN_Msk | SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 3386              	 .loc 1 1587 0 is_stmt 1
 3387 000c 034A     	 ldr r2,.L376+4
 3388 000e D369     	 ldr r3,[r2,#28]
 3389 0010 43F03103 	 orr r3,r3,#49
 3390 0014 D361     	 str r3,[r2,#28]
 3391 0016 7047     	 bx lr
 3392              	.L377:
 3393              	 .align 2
 3394              	.L376:
 3395 0018 00400050 	 .word 1342193664
 3396 001c 00430050 	 .word 1342194432
 3397              	 .cfi_endproc
 3398              	.LFE270:
 3400              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 3401              	 .align 2
 3402              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
 3403              	 .thumb
 3404              	 .thumb_func
 3406              	XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:
 3407              	.LFB271:
1588:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1589:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1590:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void)
1591:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3408              	 .loc 1 1591 0
 3409              	 .cfi_startproc
 3410              	 
 3411              	 
 3412              	 
1592:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 3413              	 .loc 1 1592 0
 3414 0000 064A     	 ldr r2,.L381
 3415              	.L379:
 3416              	 .loc 1 1592 0 is_stmt 0 discriminator 1
 3417 0002 D2F8C430 	 ldr r3,[r2,#196]
 3418 0006 13F0800F 	 tst r3,#128
 3419 000a FAD1     	 bne .L379
1593:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1594:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1595:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1596:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL = (SCU_HIBERNATE->OSCULCTRL & ~(uint32_t)(SCU_HIBERNATE_OSCULCTRL_X1DEN_
 3420              	 .loc 1 1596 0 is_stmt 1
 3421 000c 044A     	 ldr r2,.L381+4
 3422 000e D369     	 ldr r3,[r2,#28]
 3423 0010 23F03103 	 bic r3,r3,#49
 3424 0014 43F02003 	 orr r3,r3,#32
 3425 0018 D361     	 str r3,[r2,#28]
 3426 001a 7047     	 bx lr
 3427              	.L382:
 3428              	 .align 2
 3429              	.L381:
 3430 001c 00400050 	 .word 1342193664
 3431 0020 00430050 	 .word 1342194432
 3432              	 .cfi_endproc
 3433              	.LFE271:
 3435              	 .section .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus,"ax",%progbits
 3436              	 .align 2
 3437              	 .global XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
 3438              	 .thumb
 3439              	 .thumb_func
 3441              	XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:
 3442              	.LFB272:
1597:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                              (SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN << SCU_HIBERNATE_OSCULCTR
1598:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1599:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1600:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void)
1601:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3443              	 .loc 1 1601 0
 3444              	 .cfi_startproc
 3445              	 
 3446              	 
 3447              	 
1602:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (SCU_HIBERNATE->OSCULSTAT & SCU_HIBERNATE_OSCULSTAT_X1D_Msk);
 3448              	 .loc 1 1602 0
 3449 0000 024B     	 ldr r3,.L384
 3450 0002 9869     	 ldr r0,[r3,#24]
1603:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3451              	 .loc 1 1603 0
 3452 0004 00F00100 	 and r0,r0,#1
 3453 0008 7047     	 bx lr
 3454              	.L385:
 3455 000a 00BF     	 .align 2
 3456              	.L384:
 3457 000c 00430050 	 .word 1342194432
 3458              	 .cfi_endproc
 3459              	.LFE272:
 3461              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator,"ax",%progbits
 3462              	 .align 2
 3463              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 3464              	 .thumb
 3465              	 .thumb_func
 3467              	XMC_SCU_CLOCK_EnableHighPerformanceOscillator:
 3468              	.LFB273:
1604:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1605:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable High Precision High Speed oscillator */
1606:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void)
1607:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3469              	 .loc 1 1607 0
 3470              	 .cfi_startproc
 3471              	 
 3472              	 
 3473 0000 70B5     	 push {r4,r5,r6,lr}
 3474              	.LCFI17:
 3475              	 .cfi_def_cfa_offset 16
 3476              	 .cfi_offset 4,-16
 3477              	 .cfi_offset 5,-12
 3478              	 .cfi_offset 6,-8
 3479              	 .cfi_offset 14,-4
1608:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_PLLPWD_Msk;
 3480              	 .loc 1 1608 0
 3481 0002 0D4D     	 ldr r5,.L388
 3482 0004 6B68     	 ldr r3,[r5,#4]
 3483 0006 23F48033 	 bic r3,r3,#65536
 3484 000a 6B60     	 str r3,[r5,#4]
1609:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1610:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_OSC->OSCHPCTRL = (uint32_t)((SCU_OSC->OSCHPCTRL & ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCH
 3485              	 .loc 1 1610 0
 3486 000c 0B4E     	 ldr r6,.L388+4
 3487 000e 7468     	 ldr r4,[r6,#4]
1611:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 3488              	 .loc 1 1611 0
 3489 0010 FFF7FEFF 	 bl OSCHP_GetFrequency
 3490              	.LVL183:
 3491 0014 0A4B     	 ldr r3,.L388+8
 3492 0016 A3FB0030 	 umull r3,r0,r3,r0
 3493 001a 030D     	 lsrs r3,r0,#20
 3494 001c 581E     	 subs r0,r3,#1
1610:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 3495              	 .loc 1 1610 0
 3496 001e 24F47023 	 bic r3,r4,#983040
 3497 0022 23F03003 	 bic r3,r3,#48
 3498 0026 43EA0043 	 orr r3,r3,r0,lsl#16
 3499 002a 7360     	 str r3,[r6,#4]
1612:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1613:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   /* restart OSC Watchdog */
1614:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_OSCRES_Msk;
 3500              	 .loc 1 1614 0
 3501 002c 6B68     	 ldr r3,[r5,#4]
 3502 002e 23F40033 	 bic r3,r3,#131072
 3503 0032 6B60     	 str r3,[r5,#4]
 3504 0034 70BD     	 pop {r4,r5,r6,pc}
 3505              	.L389:
 3506 0036 00BF     	 .align 2
 3507              	.L388:
 3508 0038 10470050 	 .word 1342195472
 3509 003c 00470050 	 .word 1342195456
 3510 0040 6BCA5F6B 	 .word 1801439851
 3511              	 .cfi_endproc
 3512              	.LFE273:
 3514              	 .section .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable,"ax",%progbits
 3515              	 .align 2
 3516              	 .global XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 3517              	 .thumb
 3518              	 .thumb_func
 3520              	XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:
 3521              	.LFB274:
1615:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1616:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1617:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void)
1618:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3522              	 .loc 1 1618 0
 3523              	 .cfi_startproc
 3524              	 
 3525              	 
 3526              	 
1619:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return ((SCU_PLL->PLLSTAT & XMC_SCU_PLL_PLLSTAT_OSC_USABLE) == XMC_SCU_PLL_PLLSTAT_OSC_USABLE);
 3527              	 .loc 1 1619 0
 3528 0000 044B     	 ldr r3,.L391
 3529 0002 1868     	 ldr r0,[r3]
 3530 0004 00F46070 	 and r0,r0,#896
1620:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3531              	 .loc 1 1620 0
 3532 0008 B0F5607F 	 cmp r0,#896
 3533 000c 14BF     	 ite ne
 3534 000e 0020     	 movne r0,#0
 3535 0010 0120     	 moveq r0,#1
 3536 0012 7047     	 bx lr
 3537              	.L392:
 3538              	 .align 2
 3539              	.L391:
 3540 0014 10470050 	 .word 1342195472
 3541              	 .cfi_endproc
 3542              	.LFE274:
 3544              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator,"ax",%progbits
 3545              	 .align 2
 3546              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillator
 3547              	 .thumb
 3548              	 .thumb_func
 3550              	XMC_SCU_CLOCK_DisableHighPerformanceOscillator:
 3551              	.LFB275:
1621:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1622:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to disable High Precision High Speed oscillator */
1623:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void)
1624:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3552              	 .loc 1 1624 0
 3553              	 .cfi_startproc
 3554              	 
 3555              	 
 3556              	 
1625:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= (uint32_t)SCU_OSC_OSCHPCTRL_MODE_Msk;
 3557              	 .loc 1 1625 0
 3558 0000 024A     	 ldr r2,.L394
 3559 0002 5368     	 ldr r3,[r2,#4]
 3560 0004 43F03003 	 orr r3,r3,#48
 3561 0008 5360     	 str r3,[r2,#4]
 3562 000a 7047     	 bx lr
 3563              	.L395:
 3564              	 .align 2
 3565              	.L394:
 3566 000c 00470050 	 .word 1342195456
 3567              	 .cfi_endproc
 3568              	.LFE275:
 3570              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 3571              	 .align 2
 3572              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
 3573              	 .thumb
 3574              	 .thumb_func
 3576              	XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:
 3577              	.LFB276:
1626:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1627:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1628:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void)
1629:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3578              	 .loc 1 1629 0
 3579              	 .cfi_startproc
 3580              	 
 3581              	 
 3582              	 
1630:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 3583              	 .loc 1 1630 0
 3584 0000 024A     	 ldr r2,.L397
 3585 0002 5368     	 ldr r3,[r2,#4]
 3586 0004 43F00103 	 orr r3,r3,#1
 3587 0008 5360     	 str r3,[r2,#4]
 3588 000a 7047     	 bx lr
 3589              	.L398:
 3590              	 .align 2
 3591              	.L397:
 3592 000c 00470050 	 .word 1342195456
 3593              	 .cfi_endproc
 3594              	.LFE276:
 3596              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 3597              	 .align 2
 3598              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
 3599              	 .thumb
 3600              	 .thumb_func
 3602              	XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:
 3603              	.LFB277:
1631:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1632:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1633:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void)
1634:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3604              	 .loc 1 1634 0
 3605              	 .cfi_startproc
 3606              	 
 3607              	 
 3608              	 
1635:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_OSC->OSCHPCTRL &= ~SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 3609              	 .loc 1 1635 0
 3610 0000 024A     	 ldr r2,.L400
 3611 0002 5368     	 ldr r3,[r2,#4]
 3612 0004 23F00103 	 bic r3,r3,#1
 3613 0008 5360     	 str r3,[r2,#4]
 3614 000a 7047     	 bx lr
 3615              	.L401:
 3616              	 .align 2
 3617              	.L400:
 3618 000c 00470050 	 .word 1342195456
 3619              	 .cfi_endproc
 3620              	.LFE277:
 3622              	 .section .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus,"ax",%progbits
 3623              	 .align 2
 3624              	 .global XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
 3625              	 .thumb
 3626              	 .thumb_func
 3628              	XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:
 3629              	.LFB278:
1636:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1637:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1638:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void)
1639:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3630              	 .loc 1 1639 0
 3631              	 .cfi_startproc
 3632              	 
 3633              	 
 3634              	 
1640:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (SCU_OSC->OSCHPSTAT & SCU_OSC_OSCHPSTAT_X1D_Msk);
 3635              	 .loc 1 1640 0
 3636 0000 024B     	 ldr r3,.L403
 3637 0002 1868     	 ldr r0,[r3]
1641:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 3638              	 .loc 1 1641 0
 3639 0004 00F00100 	 and r0,r0,#1
 3640 0008 7047     	 bx lr
 3641              	.L404:
 3642 000a 00BF     	 .align 2
 3643              	.L403:
 3644 000c 00470050 	 .word 1342195456
 3645              	 .cfi_endproc
 3646              	.LFE278:
 3648              	 .section .text.XMC_SCU_CLOCK_EnableSystemPll,"ax",%progbits
 3649              	 .align 2
 3650              	 .global XMC_SCU_CLOCK_EnableSystemPll
 3651              	 .thumb
 3652              	 .thumb_func
 3654              	XMC_SCU_CLOCK_EnableSystemPll:
 3655              	.LFB279:
1642:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1643:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to enable main PLL */
1644:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_EnableSystemPll(void)
1645:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3656              	 .loc 1 1645 0
 3657              	 .cfi_startproc
 3658              	 
 3659              	 
 3660              	 
1646:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 3661              	 .loc 1 1646 0
 3662 0000 034A     	 ldr r2,.L406
 3663 0002 5368     	 ldr r3,[r2,#4]
 3664 0004 23F48033 	 bic r3,r3,#65536
 3665 0008 23F00203 	 bic r3,r3,#2
 3666 000c 5360     	 str r3,[r2,#4]
 3667 000e 7047     	 bx lr
 3668              	.L407:
 3669              	 .align 2
 3670              	.L406:
 3671 0010 10470050 	 .word 1342195472
 3672              	 .cfi_endproc
 3673              	.LFE279:
 3675              	 .section .text.XMC_SCU_CLOCK_DisableSystemPll,"ax",%progbits
 3676              	 .align 2
 3677              	 .global XMC_SCU_CLOCK_DisableSystemPll
 3678              	 .thumb
 3679              	 .thumb_func
 3681              	XMC_SCU_CLOCK_DisableSystemPll:
 3682              	.LFB280:
1647:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1648:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1649:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to disable main PLL */
1650:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_DisableSystemPll(void)
1651:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3683              	 .loc 1 1651 0
 3684              	 .cfi_startproc
 3685              	 
 3686              	 
 3687              	 
1652:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 3688              	 .loc 1 1652 0
 3689 0000 034A     	 ldr r2,.L409
 3690 0002 5368     	 ldr r3,[r2,#4]
 3691 0004 43F48033 	 orr r3,r3,#65536
 3692 0008 43F00203 	 orr r3,r3,#2
 3693 000c 5360     	 str r3,[r2,#4]
 3694 000e 7047     	 bx lr
 3695              	.L410:
 3696              	 .align 2
 3697              	.L409:
 3698 0010 10470050 	 .word 1342195472
 3699              	 .cfi_endproc
 3700              	.LFE280:
 3702              	 .section .text.XMC_SCU_CLOCK_StopSystemPll,"ax",%progbits
 3703              	 .align 2
 3704              	 .global XMC_SCU_CLOCK_StopSystemPll
 3705              	 .thumb
 3706              	 .thumb_func
 3708              	XMC_SCU_CLOCK_StopSystemPll:
 3709              	.LFB282:
1653:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1654:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1655:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to configure main PLL */
1656:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_StartSystemPll(XMC_SCU_CLOCK_SYSPLLCLKSRC_t source,
1657:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                   XMC_SCU_CLOCK_SYSPLL_MODE_t mode,
1658:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                   uint32_t pdiv,
1659:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                   uint32_t ndiv,
1660:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                   uint32_t kdiv)
1661:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
1662:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1663:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t vco_frequency; /* Q10.22, max VCO frequency = 520MHz */
1664:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t kdiv_temp;
1665:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1666:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemPllClockSource(source);
1667:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1668:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)
1669:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1670:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Calculate initial step to be close to fOFI */
1671:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP)
1672:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
1673:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       vco_frequency = (OSCHP_GetFrequency() / 1000000U) << 22;
1674:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
1675:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     else
1676:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
1677:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       vco_frequency = (OFI_FREQUENCY / 1000000U) << 22;
1678:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
1679:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     vco_frequency = ((vco_frequency * ndiv) / pdiv);
1680:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     kdiv_temp = (vco_frequency / (OFI_FREQUENCY / 1000000U)) >> 22;
1681:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1682:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Switch to prescaler mode */
1683:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
1684:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1685:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* disconnect Oscillator from PLL */
1686:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FINDIS_Msk;
1687:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1688:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Setup divider settings for main PLL */
1689:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~(SCU_PLL_PLLCON1_NDIV_Msk | SCU_PLL_PLLCON1_
1690:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
1691:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                    ((kdiv_temp - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos) |
1692:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                    ((pdiv - 1UL)<< SCU_PLL_PLLCON1_PDIV_Pos));
1693:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1694:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Set OSCDISCDIS, OSC clock remains connected to the VCO in case of loss of lock */
1695:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
1696:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1697:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* connect Oscillator to PLL */
1698:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FINDIS_Msk;
1699:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1700:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* restart PLL Lock detection */
1701:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_RESLD_Msk;
1702:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
1703:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
1704:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       /* wait for PLL Lock */
1705:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
1706:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1707:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Switch to normal mode */
1708:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_VCOBYP_Msk;
1709:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
1710:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
1711:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       /* wait for normal mode */
1712:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
1713:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1714:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Ramp up PLL frequency in steps */
1715:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     kdiv_temp = (vco_frequency / 60UL) >> 22;
1716:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     if (kdiv < kdiv_temp)
1717:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
1718:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
1719:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
1720:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1721:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     kdiv_temp = (vco_frequency / 90UL) >> 22;
1722:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     if (kdiv < kdiv_temp)
1723:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
1724:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
1725:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
1726:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1727:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv);
1728:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1729:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
1730:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1731:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K1DIV_Msk) |
1732:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                        ((kdiv -1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
1733:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1734:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     /* Switch to prescaler mode */
1735:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
1736:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1737:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) == 0U)
1738:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
1739:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       /* wait for prescaler mode */
1740:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
1741:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1742:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1743:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1744:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to stop main PLL operation */
1745:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_StopSystemPll(void)
1746:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3710              	 .loc 1 1746 0
 3711              	 .cfi_startproc
 3712              	 
 3713              	 
 3714              	 
1747:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_PLLPWD_Msk;
 3715              	 .loc 1 1747 0
 3716 0000 024A     	 ldr r2,.L412
 3717 0002 5368     	 ldr r3,[r2,#4]
 3718 0004 43F48033 	 orr r3,r3,#65536
 3719 0008 5360     	 str r3,[r2,#4]
 3720 000a 7047     	 bx lr
 3721              	.L413:
 3722              	 .align 2
 3723              	.L412:
 3724 000c 10470050 	 .word 1342195472
 3725              	 .cfi_endproc
 3726              	.LFE282:
 3728              	 .section .text.XMC_SCU_CLOCK_StepSystemPllFrequency,"ax",%progbits
 3729              	 .align 2
 3730              	 .global XMC_SCU_CLOCK_StepSystemPllFrequency
 3731              	 .thumb
 3732              	 .thumb_func
 3734              	XMC_SCU_CLOCK_StepSystemPllFrequency:
 3735              	.LFB283:
1748:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1749:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1750:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to step up/down the main PLL frequency */
1751:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_CLOCK_StepSystemPllFrequency(uint32_t kdiv)
1752:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 3736              	 .loc 1 1752 0
 3737              	 .cfi_startproc
 3738              	 
 3739              	 
 3740              	.LVL184:
 3741 0000 08B5     	 push {r3,lr}
 3742              	.LCFI18:
 3743              	 .cfi_def_cfa_offset 8
 3744              	 .cfi_offset 3,-8
 3745              	 .cfi_offset 14,-4
1753:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 3746              	 .loc 1 1753 0
 3747 0002 064A     	 ldr r2,.L416
 3748 0004 9368     	 ldr r3,[r2,#8]
1754:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                      ((kdiv - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos));
 3749              	 .loc 1 1754 0
 3750 0006 0138     	 subs r0,r0,#1
 3751              	.LVL185:
1753:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 3752              	 .loc 1 1753 0
 3753 0008 23F4FE03 	 bic r3,r3,#8323072
 3754 000c 43EA0043 	 orr r3,r3,r0,lsl#16
 3755 0010 9360     	 str r3,[r2,#8]
1755:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1756:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_lDelay(50U);
 3756              	 .loc 1 1756 0
 3757 0012 3220     	 movs r0,#50
 3758              	.LVL186:
 3759 0014 FFF7FEFF 	 bl XMC_SCU_lDelay
 3760              	.LVL187:
 3761 0018 08BD     	 pop {r3,pc}
 3762              	.L417:
 3763 001a 00BF     	 .align 2
 3764              	.L416:
 3765 001c 10470050 	 .word 1342195472
 3766              	 .cfi_endproc
 3767              	.LFE283:
 3769              	 .section .text.XMC_SCU_CLOCK_StartSystemPll,"ax",%progbits
 3770              	 .align 2
 3771              	 .global XMC_SCU_CLOCK_StartSystemPll
 3772              	 .thumb
 3773              	 .thumb_func
 3775              	XMC_SCU_CLOCK_StartSystemPll:
 3776              	.LFB281:
1661:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 3777              	 .loc 1 1661 0
 3778              	 .cfi_startproc
 3779              	 
 3780              	 
 3781              	.LVL188:
 3782 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 3783              	.LCFI19:
 3784              	 .cfi_def_cfa_offset 24
 3785              	 .cfi_offset 4,-24
 3786              	 .cfi_offset 5,-20
 3787              	 .cfi_offset 6,-16
 3788              	 .cfi_offset 7,-12
 3789              	 .cfi_offset 8,-8
 3790              	 .cfi_offset 14,-4
 3791 0004 8046     	 mov r8,r0
 3792 0006 0C46     	 mov r4,r1
 3793 0008 1746     	 mov r7,r2
 3794 000a 1E46     	 mov r6,r3
 3795 000c 069D     	 ldr r5,[sp,#24]
1666:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 3796              	 .loc 1 1666 0
 3797 000e FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemPllClockSource
 3798              	.LVL189:
1668:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 3799              	 .loc 1 1668 0
 3800 0012 012C     	 cmp r4,#1
 3801 0014 5AD1     	 bne .L419
1671:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
 3802              	 .loc 1 1671 0
 3803 0016 B8F1000F 	 cmp r8,#0
 3804 001a 07D1     	 bne .L427
1673:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
 3805              	 .loc 1 1673 0
 3806 001c FFF7FEFF 	 bl OSCHP_GetFrequency
 3807              	.LVL190:
 3808 0020 334C     	 ldr r4,.L432
 3809 0022 A4FB0034 	 umull r3,r4,r4,r0
 3810 0026 A40C     	 lsrs r4,r4,#18
 3811 0028 A405     	 lsls r4,r4,#22
 3812              	.LVL191:
 3813 002a 01E0     	 b .L420
 3814              	.LVL192:
 3815              	.L427:
1677:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
 3816              	 .loc 1 1677 0
 3817 002c 4FF0C064 	 mov r4,#100663296
 3818              	.L420:
 3819              	.LVL193:
1679:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     kdiv_temp = (vco_frequency / (OFI_FREQUENCY / 1000000U)) >> 22;
 3820              	 .loc 1 1679 0
 3821 0030 06FB04F4 	 mul r4,r6,r4
 3822              	.LVL194:
 3823 0034 B4FBF7F4 	 udiv r4,r4,r7
 3824              	.LVL195:
1683:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 3825              	 .loc 1 1683 0
 3826 0038 2E49     	 ldr r1,.L432+4
 3827 003a 4B68     	 ldr r3,[r1,#4]
 3828 003c 43F00103 	 orr r3,r3,#1
 3829 0040 4B60     	 str r3,[r1,#4]
1686:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 3830              	 .loc 1 1686 0
 3831 0042 4B68     	 ldr r3,[r1,#4]
 3832 0044 43F01003 	 orr r3,r3,#16
 3833 0048 4B60     	 str r3,[r1,#4]
1689:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 3834              	 .loc 1 1689 0
 3835 004a 8A68     	 ldr r2,[r1,#8]
1692:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 3836              	 .loc 1 1692 0
 3837 004c 013F     	 subs r7,r7,#1
 3838              	.LVL196:
1689:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 3839              	 .loc 1 1689 0
 3840 004e 2A4B     	 ldr r3,.L432+8
 3841 0050 1340     	 ands r3,r3,r2
 3842 0052 43EA0763 	 orr r3,r3,r7,lsl#24
1690:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                    ((kdiv_temp - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos) |
 3843              	 .loc 1 1690 0
 3844 0056 013E     	 subs r6,r6,#1
 3845              	.LVL197:
 3846 0058 43EA0623 	 orr r3,r3,r6,lsl#8
1680:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 3847              	 .loc 1 1680 0
 3848 005c 274A     	 ldr r2,.L432+12
 3849 005e A2FB0402 	 umull r0,r2,r2,r4
 3850 0062 920E     	 lsrs r2,r2,#26
1691:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                    ((pdiv - 1UL)<< SCU_PLL_PLLCON1_PDIV_Pos));
 3851              	 .loc 1 1691 0
 3852 0064 013A     	 subs r2,r2,#1
1689:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 3853              	 .loc 1 1689 0
 3854 0066 43EA0243 	 orr r3,r3,r2,lsl#16
 3855 006a 8B60     	 str r3,[r1,#8]
1695:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 3856              	 .loc 1 1695 0
 3857 006c 4B68     	 ldr r3,[r1,#4]
 3858 006e 43F04003 	 orr r3,r3,#64
 3859 0072 4B60     	 str r3,[r1,#4]
1698:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 3860              	 .loc 1 1698 0
 3861 0074 4B68     	 ldr r3,[r1,#4]
 3862 0076 23F01003 	 bic r3,r3,#16
 3863 007a 4B60     	 str r3,[r1,#4]
1701:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 3864              	 .loc 1 1701 0
 3865 007c 4B68     	 ldr r3,[r1,#4]
 3866 007e 43F48023 	 orr r3,r3,#262144
 3867 0082 4B60     	 str r3,[r1,#4]
1702:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
 3868              	 .loc 1 1702 0
 3869 0084 0A46     	 mov r2,r1
 3870              	.L421:
1702:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
 3871              	 .loc 1 1702 0 is_stmt 0 discriminator 1
 3872 0086 1368     	 ldr r3,[r2]
 3873 0088 13F0040F 	 tst r3,#4
 3874 008c FBD0     	 beq .L421
1708:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 3875              	 .loc 1 1708 0 is_stmt 1
 3876 008e 194A     	 ldr r2,.L432+4
 3877 0090 5368     	 ldr r3,[r2,#4]
 3878 0092 23F00103 	 bic r3,r3,#1
 3879 0096 5360     	 str r3,[r2,#4]
 3880              	.L422:
1709:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
 3881              	 .loc 1 1709 0 discriminator 1
 3882 0098 1368     	 ldr r3,[r2]
 3883 009a 13F0010F 	 tst r3,#1
 3884 009e FBD1     	 bne .L422
1715:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     if (kdiv < kdiv_temp)
 3885              	 .loc 1 1715 0
 3886 00a0 1748     	 ldr r0,.L432+16
 3887 00a2 A0FB0430 	 umull r3,r0,r0,r4
 3888 00a6 C00E     	 lsrs r0,r0,#27
 3889              	.LVL198:
1716:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
 3890              	 .loc 1 1716 0
 3891 00a8 A842     	 cmp r0,r5
 3892 00aa 01D9     	 bls .L423
1718:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
 3893              	 .loc 1 1718 0
 3894 00ac FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 3895              	.LVL199:
 3896              	.L423:
1721:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     if (kdiv < kdiv_temp)
 3897              	 .loc 1 1721 0
 3898 00b0 6408     	 lsrs r4,r4,#1
 3899              	.LVL200:
 3900 00b2 1448     	 ldr r0,.L432+20
 3901 00b4 A0FB0430 	 umull r3,r0,r0,r4
 3902 00b8 C00E     	 lsrs r0,r0,#27
 3903              	.LVL201:
1722:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
 3904              	 .loc 1 1722 0
 3905 00ba 8542     	 cmp r5,r0
 3906 00bc 01D2     	 bcs .L424
1724:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }
 3907              	 .loc 1 1724 0
 3908 00be FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 3909              	.LVL202:
 3910              	.L424:
1727:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 3911              	 .loc 1 1727 0
 3912 00c2 2846     	 mov r0,r5
 3913 00c4 FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 3914              	.LVL203:
 3915 00c8 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3916              	.LVL204:
 3917              	.L419:
1731:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                        ((kdiv -1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 3918              	 .loc 1 1731 0
 3919 00cc 094A     	 ldr r2,.L432+4
 3920 00ce 9368     	 ldr r3,[r2,#8]
1732:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 3921              	 .loc 1 1732 0
 3922 00d0 013D     	 subs r5,r5,#1
1731:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                        ((kdiv -1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 3923              	 .loc 1 1731 0
 3924 00d2 23F07F03 	 bic r3,r3,#127
 3925 00d6 2B43     	 orrs r3,r3,r5
 3926 00d8 9360     	 str r3,[r2,#8]
1735:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 3927              	 .loc 1 1735 0
 3928 00da 5368     	 ldr r3,[r2,#4]
 3929 00dc 43F00103 	 orr r3,r3,#1
 3930 00e0 5360     	 str r3,[r2,#4]
 3931              	.L426:
1737:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
 3932              	 .loc 1 1737 0 discriminator 1
 3933 00e2 1368     	 ldr r3,[r2]
 3934 00e4 13F0010F 	 tst r3,#1
 3935 00e8 FBD0     	 beq .L426
 3936 00ea BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3937              	.LVL205:
 3938              	.L433:
 3939 00ee 00BF     	 .align 2
 3940              	.L432:
 3941 00f0 83DE1B43 	 .word 1125899907
 3942 00f4 10470050 	 .word 1342195472
 3943 00f8 FF8080F0 	 .word -260013825
 3944 00fc ABAAAAAA 	 .word -1431655765
 3945 0100 89888888 	 .word -2004318071
 3946 0104 B7600BB6 	 .word -1240768329
 3947              	 .cfi_endproc
 3948              	.LFE281:
 3950              	 .section .text.XMC_SCU_CLOCK_Init,"ax",%progbits
 3951              	 .align 2
 3952              	 .global XMC_SCU_CLOCK_Init
 3953              	 .thumb
 3954              	 .thumb_func
 3956              	XMC_SCU_CLOCK_Init:
 3957              	.LFB197:
 504:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_ASSERT("", config->fsys_clkdiv != 0);
 3958              	 .loc 1 504 0
 3959              	 .cfi_startproc
 3960              	 
 3961              	 
 3962              	.LVL206:
 3963 0000 30B5     	 push {r4,r5,lr}
 3964              	.LCFI20:
 3965              	 .cfi_def_cfa_offset 12
 3966              	 .cfi_offset 4,-12
 3967              	 .cfi_offset 5,-8
 3968              	 .cfi_offset 14,-4
 3969 0002 83B0     	 sub sp,sp,#12
 3970              	.LCFI21:
 3971              	 .cfi_def_cfa_offset 24
 3972 0004 0446     	 mov r4,r0
 527:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 3973              	 .loc 1 527 0
 3974 0006 0020     	 movs r0,#0
 3975              	.LVL207:
 3976 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 3977              	.LVL208:
 529:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 3978              	 .loc 1 529 0
 3979 000c FFF7FEFF 	 bl XMC_SCU_HIB_EnableHibernateDomain
 3980              	.LVL209:
 531:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 3981              	 .loc 1 531 0
 3982 0010 E379     	 ldrb r3,[r4,#7]
 3983 0012 2BB1     	 cbz r3,.L435
 533:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     while (XMC_SCU_CLOCK_IsLowPowerOscillatorStable() == false);
 3984              	 .loc 1 533 0
 3985 0014 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableLowPowerOscillator
 3986              	.LVL210:
 3987              	.L436:
 534:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 3988              	 .loc 1 534 0 discriminator 1
 3989 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 3990              	.LVL211:
 3991 001c 0028     	 cmp r0,#0
 3992 001e FBD0     	 beq .L436
 3993              	.L435:
 537:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while (XMC_SCU_GetMirrorStatus() != 0)
 3994              	 .loc 1 537 0
 3995 0020 607A     	 ldrb r0,[r4,#9]
 3996 0022 FFF7FEFF 	 bl XMC_SCU_HIB_SetStandbyClockSource
 3997              	.LVL212:
 3998              	.LBB52:
 3999              	.LBB53:
 4000              	 .file 3 "C:/Files/Projects/Git/XMCLib/inc/xmc_scu.h"
   1:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
   2:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @date 2016-03-09
   4:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
   5:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
   9:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 
  18:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 
  21:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  36:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  39:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  41:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  42:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  43:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  46:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  47:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  53:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  54:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  55:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *      
  56:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  57:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  58:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *      
  59:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @endcond 
  60:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  61:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
  62:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  63:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  64:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  
  65:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  66:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  67:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  68:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #include <xmc_common.h>
  69:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
  70:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
  71:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @{
  73:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
  74:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  
  75:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
  76:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  77:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  79:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  82:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Power control
  83:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC4 
  84:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control 
  85:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
  86:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  87:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  88:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  90:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  96:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
  97:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC4
  99:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
 107:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC1
 108:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
 111:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 112:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 113:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC4
 114:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
 117:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC1
 118:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif <br>
 121:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 122:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 123:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 127:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC4
 128:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 129:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 134:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 135:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 137:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 138:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 141:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 142:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
 144:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 145:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 146:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC4
 148:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC1
 153:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
 157:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @{
 158:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 159:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  
 160:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 161:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * MACROS
 162:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 163:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 164:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 165:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * ENUMS
 166:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 167:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 168:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 170:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 172:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 177:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 179:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 180:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 181:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 182:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 183:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 184:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 185:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 187:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 189:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 190:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 191:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 192:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 193:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #include <xmc1_scu.h>
 195:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #include <xmc4_scu.h>
 197:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #else
 198:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 199:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #endif
 200:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 201:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 202:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 203:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 204:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 205:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 206:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** extern "C" {
 207:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 209:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 210:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 211:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 212:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 216:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 217:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 218:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 219:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 220:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 227:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 230:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 232:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 233:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** }
 234:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 235:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 236:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 237:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 238:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 239:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 240:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 241:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 242:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 243:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 244:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 245:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 246:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 247:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 248:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 249:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 250:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 251:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 252:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 253:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 254:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 255:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 256:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 257:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 258:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** }
 259:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 260:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 261:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 262:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for 
 263:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 264:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 265:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 266:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 267:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 268:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 269:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 270:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 271:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 272:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 273:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 274:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 275:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock. 
 276:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration. 
 277:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 278:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 279:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 280:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 281:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 282:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 283:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 284:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 285:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 286:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 287:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 288:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 289:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 290:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 291:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 292:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 293:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 294:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 295:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 296:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 297:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 298:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 299:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 300:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 301:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 302:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 303:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 304:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 306:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 307:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 308:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 309:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 310:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 311:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 312:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 313:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 314:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 315:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 316:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 317:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 318:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 319:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 320:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 321:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 322:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 323:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 324:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 325:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 326:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 327:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 328:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 329:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 330:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 331:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 332:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 333:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 334:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 335:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 336:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 337:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 338:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 339:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 340:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 341:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 342:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 343:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 344:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 345:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 346:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular 
 347:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 348:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 349:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation. 
 350:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 351:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 352:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 353:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 354:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 355:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 356:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 357:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 358:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 359:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 360:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 361:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 362:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 363:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 364:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 365:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 366:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 367:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 368:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 369:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 370:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 371:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 372:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 373:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 374:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 375:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 376:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 377:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 378:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 379:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 380:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 381:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 382:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * the cause of reset. 
 383:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in 
 384:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 385:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 386:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 387:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 388:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 389:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 390:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 391:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 392:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 393:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 394:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** }
 395:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 396:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None 
 397:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 398:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 399:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 400:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 401:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 402:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 403:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 405:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 406:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 407:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 408:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 409:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 410:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** }
 411:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  
 412:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 413:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 414:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 415:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 416:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 417:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 418:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 419:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 420:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 421:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 422:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 423:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 424:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 425:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 426:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 427:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 428:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** }
 429:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 430:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 431:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 432:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 433:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 434:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 435:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 436:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 437:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 438:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 439:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void); 
 440:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 441:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 442:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  
 443:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 444:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 445:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 446:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 447:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 448:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 449:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 450:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 451:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 452:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 453:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 454:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 455:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 456:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 457:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 458:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * bit fields are handled internally.
 459:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 460:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 461:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 462:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 463:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 464:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 465:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 
 466:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 467:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 468:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 469:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 470:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 471:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 472:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 473:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  
 474:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 475:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 476:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 477:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral.
 478:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 479:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 480:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 481:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 482:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 483:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the 
 484:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * peripherals that support clock gating.
 485:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 486:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 487:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 488:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 489:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 490:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 491:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 492:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 493:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 494:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 495:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 496:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 497:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 498:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 499:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 500:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 501:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 502:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 503:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 504:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done. 
 505:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 506:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 507:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 508:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 509:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 510:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 511:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 512:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 513:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 514:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 515:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 516:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 517:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 518:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * It is recommended to use this API before
 519:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 520:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 521:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 522:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 523:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 524:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 525:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #endif
 526:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 527:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 528:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 529:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 530:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 531:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 532:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    using \a OR operation.
 533:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 534:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 535:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 536:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 537:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 538:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 539:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 540:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 541:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 542:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 543:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 544:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 545:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   return(SCU_GENERAL->MIRRSTS);
 4001              	 .loc 3 545 0
 4002 0026 1B4A     	 ldr r2,.L447
 4003              	.L437:
 4004              	 .loc 3 545 0 is_stmt 0 discriminator 1
 4005 0028 D2F8C430 	 ldr r3,[r2,#196]
 4006              	.LBE53:
 4007              	.LBE52:
 538:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 4008              	 .loc 1 538 0 is_stmt 1 discriminator 1
 4009 002c 002B     	 cmp r3,#0
 4010 002e FBD1     	 bne .L437
 543:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 4011              	 .loc 1 543 0
 4012 0030 207A     	 ldrb r0,[r4,#8]
 4013 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 4014              	.LVL213:
 545:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_SetCpuClockDivider((uint32_t)config->fcpu_clkdiv);
 4015              	 .loc 1 545 0
 4016 0036 207C     	 ldrb r0,[r4,#16]
 4017 0038 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockDivider
 4018              	.LVL214:
 546:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_SetCcuClockDivider((uint32_t)config->fccu_clkdiv);
 4019              	 .loc 1 546 0
 4020 003c 607C     	 ldrb r0,[r4,#17]
 4021 003e FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCpuClockDivider
 4022              	.LVL215:
 547:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_CLOCK_SetPeripheralClockDivider((uint32_t)config->fperipheral_clkdiv);
 4023              	 .loc 1 547 0
 4024 0042 A07C     	 ldrb r0,[r4,#18]
 4025 0044 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCcuClockDivider
 4026              	.LVL216:
 548:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 4027              	 .loc 1 548 0
 4028 0048 E07C     	 ldrb r0,[r4,#19]
 4029 004a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetPeripheralClockDivider
 4030              	.LVL217:
 550:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 4031              	 .loc 1 550 0
 4032 004e A379     	 ldrb r3,[r4,#6]
 4033 0050 2BB1     	 cbz r3,.L438
 552:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     while(XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable() == false);
 4034              	 .loc 1 552 0
 4035 0052 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 4036              	.LVL218:
 4037              	.L439:
 553:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 4038              	 .loc 1 553 0 discriminator 1
 4039 0056 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 4040              	.LVL219:
 4041 005a 0028     	 cmp r0,#0
 4042 005c FBD0     	 beq .L439
 4043              	.L438:
 556:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 4044              	 .loc 1 556 0
 4045 005e E378     	 ldrb r3,[r4,#3]
 4046 0060 13B9     	 cbnz r3,.L440
 558:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 4047              	 .loc 1 558 0
 4048 0062 FFF7FEFF 	 bl XMC_SCU_CLOCK_DisableSystemPll
 4049              	.LVL220:
 4050 0066 09E0     	 b .L441
 4051              	.L440:
 563:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 4052              	 .loc 1 563 0
 4053 0068 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableSystemPll
 4054              	.LVL221:
 564:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                  config->syspll_config.mode,
 4055              	 .loc 1 564 0
 4056 006c A088     	 ldrh r0,[r4,#4]
 4057 006e E178     	 ldrb r1,[r4,#3]
 4058 0070 6278     	 ldrb r2,[r4,#1]
 4059 0072 2378     	 ldrb r3,[r4]
 4060 0074 A578     	 ldrb r5,[r4,#2]
 4061 0076 0095     	 str r5,[sp]
 4062 0078 FFF7FEFF 	 bl XMC_SCU_CLOCK_StartSystemPll
 4063              	.LVL222:
 4064              	.L441:
 572:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 4065              	 .loc 1 572 0
 4066 007c E368     	 ldr r3,[r4,#12]
 4067 007e B3F5803F 	 cmp r3,#65536
 4068 0082 03D1     	 bne .L442
 574:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 4069              	 .loc 1 574 0
 4070 0084 4FF48030 	 mov r0,#65536
 4071 0088 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 4072              	.LVL223:
 4073              	.L442:
 576:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 4074              	 .loc 1 576 0
 4075 008c FFF7FEFF 	 bl SystemCoreClockUpdate
 4076              	.LVL224:
 577:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
 4077              	 .loc 1 577 0
 4078 0090 03B0     	 add sp,sp,#12
 4079              	.LCFI22:
 4080              	 .cfi_def_cfa_offset 12
 4081              	 
 4082 0092 30BD     	 pop {r4,r5,pc}
 4083              	.LVL225:
 4084              	.L448:
 4085              	 .align 2
 4086              	.L447:
 4087 0094 00400050 	 .word 1342193664
 4088              	 .cfi_endproc
 4089              	.LFE197:
 4091              	 .section .text.XMC_SCU_CLOCK_IsSystemPllLocked,"ax",%progbits
 4092              	 .align 2
 4093              	 .global XMC_SCU_CLOCK_IsSystemPllLocked
 4094              	 .thumb
 4095              	 .thumb_func
 4097              	XMC_SCU_CLOCK_IsSystemPllLocked:
 4098              	.LFB284:
1757:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
1758:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1759:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /* API to check main PLL is locked or not */
1760:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** bool XMC_SCU_CLOCK_IsSystemPllLocked(void)
1761:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 4099              	 .loc 1 1761 0
 4100              	 .cfi_startproc
 4101              	 
 4102              	 
 4103              	 
1762:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (bool)((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) != 0UL);
 4104              	 .loc 1 1762 0
 4105 0000 024B     	 ldr r3,.L450
 4106 0002 1868     	 ldr r0,[r3]
1763:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 4107              	 .loc 1 1763 0
 4108 0004 C0F38000 	 ubfx r0,r0,#2,#1
 4109 0008 7047     	 bx lr
 4110              	.L451:
 4111 000a 00BF     	 .align 2
 4112              	.L450:
 4113 000c 10470050 	 .word 1342195472
 4114              	 .cfi_endproc
 4115              	.LFE284:
 4117              	 .section .text.XMC_SCU_INTERRUPT_SetEventHandler,"ax",%progbits
 4118              	 .align 2
 4119              	 .global XMC_SCU_INTERRUPT_SetEventHandler
 4120              	 .thumb
 4121              	 .thumb_func
 4123              	XMC_SCU_INTERRUPT_SetEventHandler:
 4124              	.LFB285:
1764:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1765:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /*
1766:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * API to assign the event handler function to be executed on occurrence of the selected event.
1767:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
1768:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_INTERRUPT_SetEventHandler(const XMC_SCU_INTERRUPT_EVENT_t event,
1769:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****                                                    const XMC_SCU_INTERRUPT_EVENT_HANDLER_t handler)
1770:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 4125              	 .loc 1 1770 0
 4126              	 .cfi_startproc
 4127              	 
 4128              	 
 4129              	 
 4130              	.LVL226:
1771:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t index;
1772:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_STATUS_t status;
1773:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
1774:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   index = 0U;
1775:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 4131              	 .loc 1 1775 0
 4132 0000 10F0010F 	 tst r0,#1
 4133 0004 0DD1     	 bne .L457
 4134 0006 0023     	 movs r3,#0
 4135              	.LVL227:
 4136              	.L455:
1776:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1777:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     index++;
 4137              	 .loc 1 1777 0
 4138 0008 0133     	 adds r3,r3,#1
 4139              	.LVL228:
1775:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 4140              	 .loc 1 1775 0
 4141 000a 20FA03F2 	 lsr r2,r0,r3
 4142 000e 12F0010F 	 tst r2,#1
 4143 0012 03D1     	 bne .L454
1775:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 4144              	 .loc 1 1775 0 is_stmt 0 discriminator 1
 4145 0014 202B     	 cmp r3,#32
 4146 0016 F7D1     	 bne .L455
1778:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1779:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
1780:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   if (index == XMC_SCU_INTERRUPT_EVENT_MAX)
1781:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1782:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 4147              	 .loc 1 1782 0 is_stmt 1
 4148 0018 0120     	 movs r0,#1
 4149              	.LVL229:
 4150 001a 7047     	 bx lr
 4151              	.LVL230:
 4152              	.L454:
1780:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
 4153              	 .loc 1 1780 0
 4154 001c 202B     	 cmp r3,#32
 4155 001e 01D1     	 bne .L453
 4156 0020 05E0     	 b .L458
 4157              	.LVL231:
 4158              	.L457:
1774:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 4159              	 .loc 1 1774 0
 4160 0022 0023     	 movs r3,#0
 4161              	.LVL232:
 4162              	.L453:
1783:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1784:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   else
1785:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {
1786:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     event_handler_list[index] = handler;
 4163              	 .loc 1 1786 0
 4164 0024 034A     	 ldr r2,.L460
 4165 0026 42F82310 	 str r1,[r2,r3,lsl#2]
 4166              	.LVL233:
1787:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     status = XMC_SCU_STATUS_OK;      
 4167              	 .loc 1 1787 0
 4168 002a 0020     	 movs r0,#0
 4169              	.LVL234:
 4170 002c 7047     	 bx lr
 4171              	.LVL235:
 4172              	.L458:
1782:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
 4173              	 .loc 1 1782 0
 4174 002e 0120     	 movs r0,#1
 4175              	.LVL236:
1788:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   }
1789:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
1790:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   return (status);
1791:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 4176              	 .loc 1 1791 0
 4177 0030 7047     	 bx lr
 4178              	.L461:
 4179 0032 00BF     	 .align 2
 4180              	.L460:
 4181 0034 00000000 	 .word .LANCHOR0
 4182              	 .cfi_endproc
 4183              	.LFE285:
 4185              	 .section .text.XMC_SCU_IRQHandler,"ax",%progbits
 4186              	 .align 2
 4187              	 .global XMC_SCU_IRQHandler
 4188              	 .thumb
 4189              	 .thumb_func
 4191              	XMC_SCU_IRQHandler:
 4192              	.LFB286:
1792:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** 
1793:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** /*
1794:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  * API to execute callback functions for multiple events.
1795:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****  */
1796:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** void XMC_SCU_IRQHandler(uint32_t sr_num)
1797:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** {
 4193              	 .loc 1 1797 0
 4194              	 .cfi_startproc
 4195              	 
 4196              	 
 4197              	.LVL237:
 4198 0000 10B5     	 push {r4,lr}
 4199              	.LCFI23:
 4200              	 .cfi_def_cfa_offset 8
 4201              	 .cfi_offset 4,-8
 4202              	 .cfi_offset 14,-4
 4203              	.LVL238:
 4204              	.LBB58:
 4205              	.LBB59:
 246:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 4206              	 .loc 1 246 0
 4207 0002 0E4B     	 ldr r3,.L471
 4208 0004 5968     	 ldr r1,[r3,#4]
 4209              	.LBE59:
 4210              	.LBE58:
1798:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   uint32_t index;
1799:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_t event;
1800:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler;
1801:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
1802:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   XMC_UNUSED_ARG(sr_num);
1803:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   
1804:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   index = 0U;
1805:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = XMC_SCU_INTERUPT_GetEventStatus();
1806:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   while (index < XMC_SCU_INTERRUPT_EVENT_MAX)
1807:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {    
1808:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     if ((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) != 0U)
 4211              	 .loc 1 1808 0
 4212 0006 11F0010F 	 tst r1,#1
 4213 000a 07D1     	 bne .L468
 4214 000c 0123     	 movs r3,#1
 4215              	.LVL239:
 4216              	.L467:
 4217 000e 1C46     	 mov r4,r3
 4218 0010 21FA03F2 	 lsr r2,r1,r3
 4219 0014 12F0010F 	 tst r2,#1
 4220 0018 0CD0     	 beq .L464
 4221 001a 01E0     	 b .L463
 4222              	.LVL240:
 4223              	.L468:
 4224 001c 0024     	 movs r4,#0
1804:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   event = XMC_SCU_INTERUPT_GetEventStatus();
 4225              	 .loc 1 1804 0
 4226 001e 2346     	 mov r3,r4
 4227              	.LVL241:
 4228              	.L463:
1809:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     {
1810:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       event_handler = event_handler_list[index];
 4229              	 .loc 1 1810 0
 4230 0020 074A     	 ldr r2,.L471+4
 4231 0022 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4232              	.LVL242:
1811:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       if (event_handler != NULL)
 4233              	 .loc 1 1811 0
 4234 0026 03B1     	 cbz r3,.L465
1812:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       {
1813:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****           (event_handler)();
 4235              	 .loc 1 1813 0
 4236 0028 9847     	 blx r3
 4237              	.LVL243:
 4238              	.L465:
1814:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       }
1815:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       
1816:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       XMC_SCU_INTERRUPT_ClearEventStatus((uint32_t)(1UL << index));
 4239              	 .loc 1 1816 0
 4240 002a 0123     	 movs r3,#1
 4241 002c A340     	 lsls r3,r3,r4
 4242              	.LVL244:
 4243              	.LBB60:
 4244              	.LBB61:
 252:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c **** }
 4245              	 .loc 1 252 0
 4246 002e 034A     	 ldr r2,.L471
 4247 0030 D360     	 str r3,[r2,#12]
 4248 0032 10BD     	 pop {r4,pc}
 4249              	.LVL245:
 4250              	.L464:
 4251              	.LBE61:
 4252              	.LBE60:
1817:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       
1818:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****       break;
1819:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     }   
1820:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****     index++;    
 4253              	 .loc 1 1820 0
 4254 0034 0133     	 adds r3,r3,#1
 4255              	.LVL246:
1806:C:/Files/Projects/Git/XMCLib/src\xmc4_scu.c ****   {    
 4256              	 .loc 1 1806 0
 4257 0036 202B     	 cmp r3,#32
 4258 0038 E9D1     	 bne .L467
 4259 003a 10BD     	 pop {r4,pc}
 4260              	.L472:
 4261              	 .align 2
 4262              	.L471:
 4263 003c 74400050 	 .word 1342193780
 4264 0040 00000000 	 .word .LANCHOR0
 4265              	 .cfi_endproc
 4266              	.LFE286:
 4268              	 .global event_handler_list
 4269              	 .section .bss.event_handler_list,"aw",%nobits
 4270              	 .align 2
 4271              	 .set .LANCHOR0,.+0
 4274              	event_handler_list:
 4275 0000 00000000 	 .space 128
 4275      00000000 
 4275      00000000 
 4275      00000000 
 4275      00000000 
 4276              	 .text
 4277              	.Letext0:
 4278              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4279              	 .file 5 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4280              	 .file 6 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 4281              	 .file 7 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
 4282              	 .file 8 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
 4283              	 .file 9 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_scu.c
    {standard input}:20     .text.XMC_SCU_lDelay:00000000 $t
    {standard input}:24     .text.XMC_SCU_lDelay:00000000 XMC_SCU_lDelay
    {standard input}:70     .text.XMC_SCU_lDelay:00000028 $d
    {standard input}:76     .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 $t
    {standard input}:81     .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 XMC_SCU_INTERRUPT_EnableEvent
    {standard input}:99     .text.XMC_SCU_INTERRUPT_EnableEvent:0000000c $d
    {standard input}:104    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 $t
    {standard input}:109    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 XMC_SCU_INTERRUPT_DisableEvent
    {standard input}:127    .text.XMC_SCU_INTERRUPT_DisableEvent:0000000c $d
    {standard input}:132    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 $t
    {standard input}:137    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 XMC_SCU_INTERRUPT_TriggerEvent
    {standard input}:155    .text.XMC_SCU_INTERRUPT_TriggerEvent:0000000c $d
    {standard input}:160    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 $t
    {standard input}:165    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 XMC_SCU_INTERUPT_GetEventStatus
    {standard input}:180    .text.XMC_SCU_INTERUPT_GetEventStatus:00000008 $d
    {standard input}:185    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 $t
    {standard input}:190    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 XMC_SCU_INTERRUPT_ClearEventStatus
    {standard input}:205    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000008 $d
    {standard input}:210    .text.XMC_SCU_GetBootMode:00000000 $t
    {standard input}:215    .text.XMC_SCU_GetBootMode:00000000 XMC_SCU_GetBootMode
    {standard input}:231    .text.XMC_SCU_GetBootMode:0000000c $d
    {standard input}:236    .text.XMC_SCU_SetBootMode:00000000 $t
    {standard input}:241    .text.XMC_SCU_SetBootMode:00000000 XMC_SCU_SetBootMode
    {standard input}:256    .text.XMC_SCU_SetBootMode:00000008 $d
    {standard input}:261    .text.XMC_SCU_ReadGPR:00000000 $t
    {standard input}:266    .text.XMC_SCU_ReadGPR:00000000 XMC_SCU_ReadGPR
    {standard input}:284    .text.XMC_SCU_ReadGPR:00000008 $d
    {standard input}:289    .text.XMC_SCU_WriteGPR:00000000 $t
    {standard input}:294    .text.XMC_SCU_WriteGPR:00000000 XMC_SCU_WriteGPR
    {standard input}:311    .text.XMC_SCU_WriteGPR:00000008 $d
    {standard input}:316    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 $t
    {standard input}:321    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 XMC_SCU_EnableOutOfRangeComparator
    {standard input}:344    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 $t
    {standard input}:349    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 XMC_SCU_DisableOutOfRangeComparator
    {standard input}:372    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 $t
    {standard input}:377    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 XMC_SCU_CalibrateTemperatureSensor
    {standard input}:399    .text.XMC_SCU_CalibrateTemperatureSensor:00000014 $d
    {standard input}:404    .text.XMC_SCU_EnableTemperatureSensor:00000000 $t
    {standard input}:409    .text.XMC_SCU_EnableTemperatureSensor:00000000 XMC_SCU_EnableTemperatureSensor
    {standard input}:425    .text.XMC_SCU_EnableTemperatureSensor:00000010 $d
    {standard input}:430    .text.XMC_SCU_DisableTemperatureSensor:00000000 $t
    {standard input}:435    .text.XMC_SCU_DisableTemperatureSensor:00000000 XMC_SCU_DisableTemperatureSensor
    {standard input}:451    .text.XMC_SCU_DisableTemperatureSensor:00000010 $d
    {standard input}:456    .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 $t
    {standard input}:461    .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 XMC_SCU_IsTemperatureSensorEnabled
    {standard input}:478    .text.XMC_SCU_IsTemperatureSensorEnabled:00000010 $d
    {standard input}:483    .text.XMC_SCU_IsTemperatureSensorReady:00000000 $t
    {standard input}:488    .text.XMC_SCU_IsTemperatureSensorReady:00000000 XMC_SCU_IsTemperatureSensorReady
    {standard input}:504    .text.XMC_SCU_IsTemperatureSensorReady:0000000c $d
    {standard input}:509    .text.XMC_SCU_GetTemperatureMeasurement:00000000 $t
    {standard input}:514    .text.XMC_SCU_GetTemperatureMeasurement:00000000 XMC_SCU_GetTemperatureMeasurement
    {standard input}:545    .text.XMC_SCU_GetTemperatureMeasurement:0000001c $d
    {standard input}:550    .text.XMC_SCU_IsTemperatureSensorBusy:00000000 $t
    {standard input}:555    .text.XMC_SCU_IsTemperatureSensorBusy:00000000 XMC_SCU_IsTemperatureSensorBusy
    {standard input}:571    .text.XMC_SCU_IsTemperatureSensorBusy:0000000c $d
    {standard input}:576    .text.XMC_SCU_StartTemperatureMeasurement:00000000 $t
    {standard input}:581    .text.XMC_SCU_StartTemperatureMeasurement:00000000 XMC_SCU_StartTemperatureMeasurement
    {standard input}:622    .text.XMC_SCU_StartTemperatureMeasurement:00000028 $d
    {standard input}:627    .text.XMC_SCU_WriteToRetentionMemory:00000000 $t
    {standard input}:632    .text.XMC_SCU_WriteToRetentionMemory:00000000 XMC_SCU_WriteToRetentionMemory
    {standard input}:665    .text.XMC_SCU_WriteToRetentionMemory:00000024 $d
    {standard input}:670    .text.XMC_SCU_ReadFromRetentionMemory:00000000 $t
    {standard input}:675    .text.XMC_SCU_ReadFromRetentionMemory:00000000 XMC_SCU_ReadFromRetentionMemory
    {standard input}:708    .text.XMC_SCU_ReadFromRetentionMemory:00000020 $d
    {standard input}:713    .text.XMC_SCU_TRAP_Enable:00000000 $t
    {standard input}:718    .text.XMC_SCU_TRAP_Enable:00000000 XMC_SCU_TRAP_Enable
    {standard input}:736    .text.XMC_SCU_TRAP_Enable:0000000c $d
    {standard input}:741    .text.XMC_SCU_TRAP_Disable:00000000 $t
    {standard input}:746    .text.XMC_SCU_TRAP_Disable:00000000 XMC_SCU_TRAP_Disable
    {standard input}:764    .text.XMC_SCU_TRAP_Disable:0000000c $d
    {standard input}:769    .text.XMC_SCU_TRAP_GetStatus:00000000 $t
    {standard input}:774    .text.XMC_SCU_TRAP_GetStatus:00000000 XMC_SCU_TRAP_GetStatus
    {standard input}:789    .text.XMC_SCU_TRAP_GetStatus:00000008 $d
    {standard input}:794    .text.XMC_SCU_TRAP_Trigger:00000000 $t
    {standard input}:799    .text.XMC_SCU_TRAP_Trigger:00000000 XMC_SCU_TRAP_Trigger
    {standard input}:814    .text.XMC_SCU_TRAP_Trigger:00000008 $d
    {standard input}:819    .text.XMC_SCU_TRAP_ClearStatus:00000000 $t
    {standard input}:824    .text.XMC_SCU_TRAP_ClearStatus:00000000 XMC_SCU_TRAP_ClearStatus
    {standard input}:839    .text.XMC_SCU_TRAP_ClearStatus:00000008 $d
    {standard input}:844    .text.XMC_SCU_PARITY_ClearStatus:00000000 $t
    {standard input}:849    .text.XMC_SCU_PARITY_ClearStatus:00000000 XMC_SCU_PARITY_ClearStatus
    {standard input}:867    .text.XMC_SCU_PARITY_ClearStatus:0000000c $d
    {standard input}:872    .text.XMC_SCU_PARITY_GetStatus:00000000 $t
    {standard input}:877    .text.XMC_SCU_PARITY_GetStatus:00000000 XMC_SCU_PARITY_GetStatus
    {standard input}:892    .text.XMC_SCU_PARITY_GetStatus:00000008 $d
    {standard input}:897    .text.XMC_SCU_PARITY_Enable:00000000 $t
    {standard input}:902    .text.XMC_SCU_PARITY_Enable:00000000 XMC_SCU_PARITY_Enable
    {standard input}:920    .text.XMC_SCU_PARITY_Enable:0000000c $d
    {standard input}:925    .text.XMC_SCU_PARITY_Disable:00000000 $t
    {standard input}:930    .text.XMC_SCU_PARITY_Disable:00000000 XMC_SCU_PARITY_Disable
    {standard input}:948    .text.XMC_SCU_PARITY_Disable:0000000c $d
    {standard input}:953    .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 $t
    {standard input}:958    .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 XMC_SCU_PARITY_EnableTrapGeneration
    {standard input}:976    .text.XMC_SCU_PARITY_EnableTrapGeneration:0000000c $d
    {standard input}:981    .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 $t
    {standard input}:986    .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 XMC_SCU_PARITY_DisableTrapGeneration
    {standard input}:1004   .text.XMC_SCU_PARITY_DisableTrapGeneration:0000000c $d
    {standard input}:1009   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 $t
    {standard input}:1014   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 XMC_SCU_INTERRUPT_EnableNmiRequest
    {standard input}:1032   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:0000000c $d
    {standard input}:1037   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 $t
    {standard input}:1042   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 XMC_SCU_INTERRUPT_DisableNmiRequest
    {standard input}:1060   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:0000000c $d
    {standard input}:1065   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 $t
    {standard input}:1070   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 XMC_SCU_RESET_AssertPeripheralReset
    {standard input}:1094   .text.XMC_SCU_RESET_AssertPeripheralReset:00000014 $d
    {standard input}:1099   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 $t
    {standard input}:1104   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 XMC_SCU_RESET_DeassertPeripheralReset
    {standard input}:1128   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000014 $d
    {standard input}:1133   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 $t
    {standard input}:1138   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 XMC_SCU_RESET_IsPeripheralResetAsserted
    {standard input}:1166   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:0000001c $d
    {standard input}:1171   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 $t
    {standard input}:1176   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
    {standard input}:1206   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000018 $d
    {standard input}:1212   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 $t
    {standard input}:1217   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockFrequency
    {standard input}:1278   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000044 $d
    {standard input}:1283   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 $t
    {standard input}:1288   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbPllClockFrequency
    {standard input}:1334   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:0000002c $d
    {standard input}:1339   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 $t
    {standard input}:1344   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 XMC_SCU_CLOCK_GetCcuClockFrequency
    {standard input}:1380   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000018 $d
    {standard input}:1386   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 $t
    {standard input}:1391   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbClockFrequency
    {standard input}:1444   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:0000002c $d
    {standard input}:1449   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000000 $t
    {standard input}:1454   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000000 XMC_SCU_CLOCK_GetEbuClockFrequency
    {standard input}:1481   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000018 $d
    {standard input}:1486   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 $t
    {standard input}:1491   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 XMC_SCU_CLOCK_GetWdtClockFrequency
    {standard input}:1546   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000038 $d
    {standard input}:1552   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 $t
    {standard input}:1557   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 XMC_SCU_CLOCK_GetExternalOutputClockFrequency
    {standard input}:1638   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000050 $d
    {standard input}:1644   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 $t
    {standard input}:1649   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 XMC_SCU_CLOCK_GetPeripheralClockFrequency
    {standard input}:1669   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000010 $d
    {standard input}:1675   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 $t
    {standard input}:1680   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 XMC_SCU_CLOCK_SetSystemClockSource
    {standard input}:1699   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000010 $d
    {standard input}:1704   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 $t
    {standard input}:1709   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 XMC_SCU_CLOCK_SetUsbClockSource
    {standard input}:1728   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000010 $d
    {standard input}:1733   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 $t
    {standard input}:1738   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 XMC_SCU_CLOCK_SetWdtClockSource
    {standard input}:1757   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000010 $d
    {standard input}:1762   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 $t
    {standard input}:1767   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_SetExternalOutputClockSource
    {standard input}:1786   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000010 $d
    {standard input}:1791   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 $t
    {standard input}:1796   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 XMC_SCU_CLOCK_SetSystemPllClockSource
    {standard input}:1824   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000024 $d
    {standard input}:1829   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 $t
    {standard input}:1834   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 XMC_SCU_HIB_SetRtcClockSource
    {standard input}:1860   .text.XMC_SCU_HIB_SetRtcClockSource:0000001c $d
    {standard input}:1866   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 $t
    {standard input}:1871   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 XMC_SCU_HIB_SetStandbyClockSource
    {standard input}:1897   .text.XMC_SCU_HIB_SetStandbyClockSource:0000001c $d
    {standard input}:1903   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 $t
    {standard input}:1908   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 XMC_SCU_CLOCK_SetSystemClockDivider
    {standard input}:1930   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000010 $d
    {standard input}:1935   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 $t
    {standard input}:1940   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 XMC_SCU_CLOCK_SetCcuClockDivider
    {standard input}:1962   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000010 $d
    {standard input}:1967   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 $t
    {standard input}:1972   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 XMC_SCU_CLOCK_SetCpuClockDivider
    {standard input}:1994   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000010 $d
    {standard input}:1999   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 $t
    {standard input}:2004   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 XMC_SCU_CLOCK_SetPeripheralClockDivider
    {standard input}:2026   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000010 $d
    {standard input}:2031   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 $t
    {standard input}:2036   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 XMC_SCU_CLOCK_SetUsbClockDivider
    {standard input}:2058   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000010 $d
    {standard input}:2063   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000000 $t
    {standard input}:2068   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000000 XMC_SCU_CLOCK_SetEbuClockDivider
    {standard input}:2090   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000010 $d
    {standard input}:2095   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 $t
    {standard input}:2100   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 XMC_SCU_CLOCK_SetWdtClockDivider
    {standard input}:2122   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000010 $d
    {standard input}:2127   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 $t
    {standard input}:2132   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 XMC_SCU_CLOCK_SetExternalOutputClockDivider
    {standard input}:2155   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000018 $d
    {standard input}:2160   .text.XMC_SCU_CLOCK_EnableClock:00000000 $t
    {standard input}:2165   .text.XMC_SCU_CLOCK_EnableClock:00000000 XMC_SCU_CLOCK_EnableClock
    {standard input}:2180   .text.XMC_SCU_CLOCK_EnableClock:00000008 $d
    {standard input}:2185   .text.XMC_SCU_CLOCK_DisableClock:00000000 $t
    {standard input}:2190   .text.XMC_SCU_CLOCK_DisableClock:00000000 XMC_SCU_CLOCK_DisableClock
    {standard input}:2205   .text.XMC_SCU_CLOCK_DisableClock:00000008 $d
    {standard input}:2210   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 $t
    {standard input}:2215   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 XMC_SCU_CLOCK_IsClockEnabled
    {standard input}:2236   .text.XMC_SCU_CLOCK_IsClockEnabled:00000010 $d
    {standard input}:2241   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 $t
    {standard input}:2246   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 XMC_SCU_POWER_GetEVR13Voltage
    {standard input}:2267   .text.XMC_SCU_POWER_GetEVR13Voltage:0000001c $d
    {standard input}:2273   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 $t
    {standard input}:2278   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 XMC_SCU_POWER_GetEVR33Voltage
    {standard input}:2299   .text.XMC_SCU_POWER_GetEVR33Voltage:00000020 $d
    {standard input}:2305   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 $t
    {standard input}:2310   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 XMC_SCU_CLOCK_EnableUsbPll
    {standard input}:2327   .text.XMC_SCU_CLOCK_EnableUsbPll:00000010 $d
    {standard input}:2332   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 $t
    {standard input}:2337   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 XMC_SCU_CLOCK_DisableUsbPll
    {standard input}:2354   .text.XMC_SCU_CLOCK_DisableUsbPll:00000010 $d
    {standard input}:2359   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 $t
    {standard input}:2364   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 XMC_SCU_CLOCK_StartUsbPll
    {standard input}:2417   .text.XMC_SCU_CLOCK_StartUsbPll:00000044 $d
    {standard input}:2422   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 $t
    {standard input}:2427   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 XMC_SCU_CLOCK_StopUsbPll
    {standard input}:2442   .text.XMC_SCU_CLOCK_StopUsbPll:00000008 $d
    {standard input}:2448   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 $t
    {standard input}:2453   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 XMC_SCU_CLOCK_SetBackupClockCalibrationMode
    {standard input}:2496   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000030 $d
    {standard input}:2501   .text.XMC_SCU_POWER_EnableUsb:00000000 $t
    {standard input}:2506   .text.XMC_SCU_POWER_EnableUsb:00000000 XMC_SCU_POWER_EnableUsb
    {standard input}:2521   .text.XMC_SCU_POWER_EnableUsb:0000000c $d
    {standard input}:2526   .text.XMC_SCU_POWER_DisableUsb:00000000 $t
    {standard input}:2531   .text.XMC_SCU_POWER_DisableUsb:00000000 XMC_SCU_POWER_DisableUsb
    {standard input}:2546   .text.XMC_SCU_POWER_DisableUsb:0000000c $d
    {standard input}:2551   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 $t
    {standard input}:2556   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 XMC_SCU_CLOCK_IsUsbPllLocked
    {standard input}:2572   .text.XMC_SCU_CLOCK_IsUsbPllLocked:0000000c $d
    {standard input}:2577   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 $t
    {standard input}:2582   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 XMC_SCU_HIB_EnableHibernateDomain
    {standard input}:2627   .text.XMC_SCU_HIB_EnableHibernateDomain:00000038 $d
    {standard input}:2633   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 $t
    {standard input}:2638   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 XMC_SCU_HIB_DisableHibernateDomain
    {standard input}:2657   .text.XMC_SCU_HIB_DisableHibernateDomain:00000014 $d
    {standard input}:2662   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 $t
    {standard input}:2667   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 XMC_SCU_HIB_IsHibernateDomainEnabled
    {standard input}:2694   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:0000001c $d
    {standard input}:2700   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 $t
    {standard input}:2705   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 XMC_SCU_HIB_EnableInternalSlowClock
    {standard input}:2728   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000018 $d
    {standard input}:2734   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 $t
    {standard input}:2739   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 XMC_SCU_HIB_DisableInternalSlowClock
    {standard input}:2762   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000018 $d
    {standard input}:2768   .text.XMC_SCU_HIB_ClearEventStatus:00000000 $t
    {standard input}:2773   .text.XMC_SCU_HIB_ClearEventStatus:00000000 XMC_SCU_HIB_ClearEventStatus
    {standard input}:2795   .text.XMC_SCU_HIB_ClearEventStatus:00000014 $d
    {standard input}:2801   .text.XMC_SCU_HIB_TriggerEvent:00000000 $t
    {standard input}:2806   .text.XMC_SCU_HIB_TriggerEvent:00000000 XMC_SCU_HIB_TriggerEvent
    {standard input}:2828   .text.XMC_SCU_HIB_TriggerEvent:00000014 $d
    {standard input}:2834   .text.XMC_SCU_HIB_EnableEvent:00000000 $t
    {standard input}:2839   .text.XMC_SCU_HIB_EnableEvent:00000000 XMC_SCU_HIB_EnableEvent
    {standard input}:2864   .text.XMC_SCU_HIB_EnableEvent:00000018 $d
    {standard input}:2870   .text.XMC_SCU_HIB_DisableEvent:00000000 $t
    {standard input}:2875   .text.XMC_SCU_HIB_DisableEvent:00000000 XMC_SCU_HIB_DisableEvent
    {standard input}:2900   .text.XMC_SCU_HIB_DisableEvent:00000018 $d
    {standard input}:2906   .text.XMC_SCU_HIB_EnterHibernateState:00000000 $t
    {standard input}:2911   .text.XMC_SCU_HIB_EnterHibernateState:00000000 XMC_SCU_HIB_EnterHibernateState
    {standard input}:2934   .text.XMC_SCU_HIB_EnterHibernateState:00000018 $d
    {standard input}:2940   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 $t
    {standard input}:2945   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 XMC_SCU_HIB_EnterHibernateStateEx
    {standard input}:2975   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 $t
    {standard input}:2980   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 XMC_SCU_HIB_SetWakeupTriggerInput
    {standard input}:3013   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000028 $d
    {standard input}:3019   .text.XMC_SCU_HIB_SetPinMode:00000000 $t
    {standard input}:3024   .text.XMC_SCU_HIB_SetPinMode:00000000 XMC_SCU_HIB_SetPinMode
    {standard input}:3067   .text.XMC_SCU_HIB_SetPinMode:0000002c $d
    {standard input}:3073   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 $t
    {standard input}:3078   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 XMC_SCU_HIB_SetPinOutputLevel
    {standard input}:3119   .text.XMC_SCU_HIB_SetPinOutputLevel:00000028 $d
    {standard input}:3125   .text.XMC_SCU_HIB_SetInput0:00000000 $t
    {standard input}:3130   .text.XMC_SCU_HIB_SetInput0:00000000 XMC_SCU_HIB_SetInput0
    {standard input}:3163   .text.XMC_SCU_HIB_SetInput0:00000028 $d
    {standard input}:3169   .text.XMC_SCU_HIB_SetSR0Input:00000000 $t
    {standard input}:3174   .text.XMC_SCU_HIB_SetSR0Input:00000000 XMC_SCU_HIB_SetSR0Input
    {standard input}:3200   .text.XMC_SCU_HIB_SetSR0Input:0000001c $d
    {standard input}:3206   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 $t
    {standard input}:3211   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 XMC_SCU_CLOCK_IsLowPowerOscillatorStable
    {standard input}:3228   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000010 $d
    {standard input}:3233   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 $t
    {standard input}:3238   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillator
    {standard input}:3327   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000058 $d
    {standard input}:3333   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 $t
    {standard input}:3338   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillator
    {standard input}:3361   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000018 $d
    {standard input}:3367   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:3372   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
    {standard input}:3395   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000018 $d
    {standard input}:3401   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:3406   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
    {standard input}:3430   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:0000001c $d
    {standard input}:3436   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:3441   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
    {standard input}:3457   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:0000000c $d
    {standard input}:3462   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 $t
    {standard input}:3467   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillator
    {standard input}:3508   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000038 $d
    {standard input}:3515   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 $t
    {standard input}:3520   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
    {standard input}:3540   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000014 $d
    {standard input}:3545   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 $t
    {standard input}:3550   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillator
    {standard input}:3566   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:0000000c $d
    {standard input}:3571   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:3576   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:3592   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:0000000c $d
    {standard input}:3597   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:3602   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:3618   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:0000000c $d
    {standard input}:3623   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:3628   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
    {standard input}:3644   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:0000000c $d
    {standard input}:3649   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 $t
    {standard input}:3654   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 XMC_SCU_CLOCK_EnableSystemPll
    {standard input}:3671   .text.XMC_SCU_CLOCK_EnableSystemPll:00000010 $d
    {standard input}:3676   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 $t
    {standard input}:3681   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 XMC_SCU_CLOCK_DisableSystemPll
    {standard input}:3698   .text.XMC_SCU_CLOCK_DisableSystemPll:00000010 $d
    {standard input}:3703   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 $t
    {standard input}:3708   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 XMC_SCU_CLOCK_StopSystemPll
    {standard input}:3724   .text.XMC_SCU_CLOCK_StopSystemPll:0000000c $d
    {standard input}:3729   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 $t
    {standard input}:3734   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 XMC_SCU_CLOCK_StepSystemPllFrequency
    {standard input}:3765   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:0000001c $d
    {standard input}:3770   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 $t
    {standard input}:3775   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 XMC_SCU_CLOCK_StartSystemPll
    {standard input}:3941   .text.XMC_SCU_CLOCK_StartSystemPll:000000f0 $d
    {standard input}:3951   .text.XMC_SCU_CLOCK_Init:00000000 $t
    {standard input}:3956   .text.XMC_SCU_CLOCK_Init:00000000 XMC_SCU_CLOCK_Init
    {standard input}:4087   .text.XMC_SCU_CLOCK_Init:00000094 $d
    {standard input}:4092   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 $t
    {standard input}:4097   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 XMC_SCU_CLOCK_IsSystemPllLocked
    {standard input}:4113   .text.XMC_SCU_CLOCK_IsSystemPllLocked:0000000c $d
    {standard input}:4118   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 $t
    {standard input}:4123   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 XMC_SCU_INTERRUPT_SetEventHandler
    {standard input}:4181   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000034 $d
    {standard input}:4186   .text.XMC_SCU_IRQHandler:00000000 $t
    {standard input}:4191   .text.XMC_SCU_IRQHandler:00000000 XMC_SCU_IRQHandler
    {standard input}:4263   .text.XMC_SCU_IRQHandler:0000003c $d
    {standard input}:4274   .bss.event_handler_list:00000000 event_handler_list
    {standard input}:4270   .bss.event_handler_list:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClockUpdate
SystemCoreClock
OSCHP_GetFrequency
