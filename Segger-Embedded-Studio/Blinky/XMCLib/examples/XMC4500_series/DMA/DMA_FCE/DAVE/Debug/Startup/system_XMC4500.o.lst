   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "system_XMC4500.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.delay,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	delay:
  25              	.LFB132:
  26              	 .file 1 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source/system_XMC4500.c"
   1:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /**************************************************************************************************
   2:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * @file     system_XMC4500.c
   3:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * @brief    CMSIS Cortex-M4 Device Peripheral Access Layer Header File for the Infineon XMC4500 De
   4:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * @version  V3.1.5
   5:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * @date     26. Sep 2017
   6:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *
   7:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * @cond
   8:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  **************************************************************************************************
   9:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * Copyright (c) 2014-2018, Infineon Technologies AG
  10:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * All rights reserved.
  11:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *
  12:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * following conditions are met:
  14:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *
  15:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * disclaimer.
  17:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *
  18:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.
  20:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *
  21:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * products derived from this software without specific prior written permission.
  23:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *
  24:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *
  32:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * Infineon Technologies AG dave@infineon.com).
  34:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  **************************************************************************************************
  35:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *
  36:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  ********************** Version History ***************************************
  37:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * V3.1.0, Dec 2014, Added options to configure clock settings
  38:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * V3.1.1, 01. Jun 2016, Fix masking of OSCHPCTRL value 
  39:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * V3.1.2, 09. Feb 2017, Fix activation of USBPLL when SDMMC clock is enabled
  40:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * V3.1.3, 19. Jun 2017, Rely on cmsis_compiler.h instead of defining __WEAK
  41:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *                       Added support for ARM Compiler 6 (armclang)
  42:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * V3.1.4, 26. Sep 2017, Disable FPU if FPU_USED is zero   
  43:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *                       Fixed include files
  44:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * V3.1.5, 29. Oct 2018, Fix variable location of SystemCoreClock and g_chipid for ARMCC compiler
  45:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  ******************************************************************************
  46:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * @endcond
  47:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  */
  48:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
  49:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*******************************************************************************
  50:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * HEADER FILES
  51:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *******************************************************************************/
  52:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #include <string.h>
  53:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
  54:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #include <XMC4500.h>
  55:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #include "system_XMC4500.h"
  56:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
  57:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*******************************************************************************
  58:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * MACROS
  59:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *******************************************************************************/
  60:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define CHIPID_LOC ((uint8_t *)0x20000000UL)
  61:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
  62:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PMU_FLASH_WS          (0x3U)
  63:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
  64:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define FPLL_FREQUENCY        (120000000U)
  65:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define FOSCREF               (2500000U)
  66:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define DELAY_CNT_50US_50MHZ  (2500UL)
  67:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define DELAY_CNT_150US_50MHZ (7500UL)
  68:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define DELAY_CNT_50US_60MHZ  (3000UL)
  69:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define DELAY_CNT_50US_90MHZ  (4500UL)
  70:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define DELAY_CNT_50US_120MHZ (6000UL)
  71:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
  72:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
  73:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****                                      SCU_PLL_PLLSTAT_PLLLV_Msk | \
  74:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****                                      SCU_PLL_PLLSTAT_PLLSP_Msk)
  75:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
  76:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*
  77:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //-------- <<< Use Configuration Wizard in Context Menu >>> ------------------
  78:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** */
  79:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
  80:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*
  81:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** // <h> Clock configuration
  82:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** */
  83:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
  84:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*
  85:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    <o> External crystal frequency [Hz]
  86:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //       <8000000=> 8MHz
  87:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //       <12000000=> 12MHz
  88:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //       <16000000=> 16MHz
  89:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    <i> Defines external crystal frequency
  90:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    <i> Default: 8MHz
  91:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** */
  92:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define OSCHP_FREQUENCY (12000000U)
  93:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
  94:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if OSCHP_FREQUENCY == 8000000U
  95:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define USB_PDIV (1U)
  96:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define USB_NDIV (95U)
  97:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define USB_DIV (3U)
  98:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
  99:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #elif OSCHP_FREQUENCY == 12000000U
 100:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define USB_PDIV (1U)
 101:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define USB_NDIV (63U)
 102:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define USB_DIV (3U)
 103:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 104:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #elif OSCHP_FREQUENCY == 16000000U
 105:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define USB_PDIV (1U)
 106:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define USB_NDIV (47U)
 107:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define USB_DIV (3U)
 108:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 109:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #else
 110:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #error "External crystal frequency not supported"
 111:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 112:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif
 113:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 114:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*
 115:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    <o> System clock (fSYS) source selection
 116:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //       <0=> Backup clock (24MHz)
 117:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //       <1=> Maximum clock frequency using PLL (120MHz)
 118:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    <i> Default: Maximum clock frequency using PLL (120MHz)
 119:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** */
 120:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SYS_CLOCK_SRC 1
 121:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SYS_CLOCK_SRC_OFI 0
 122:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SYS_CLOCK_SRC_PLL 1
 123:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 124:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*
 125:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    <o> Backup clock calibration mode
 126:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //       <0=> Factory calibration
 127:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //       <1=> Automatic calibration
 128:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    <i> Default: Automatic calibration
 129:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** */
 130:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define FOFI_CALIBRATION_MODE 1
 131:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define FOFI_CALIBRATION_MODE_FACTORY 0
 132:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define FOFI_CALIBRATION_MODE_AUTOMATIC 1
 133:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 134:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*
 135:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    <o> Standby clock (fSTDBY) source selection
 136:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //       <0=> Internal slow oscillator (32768Hz)
 137:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //       <1=> External crystal (32768Hz)
 138:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    <i> Default: Internal slow oscillator (32768Hz)
 139:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** */
 140:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define STDBY_CLOCK_SRC 0
 141:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define STDBY_CLOCK_SRC_OSI 0
 142:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define STDBY_CLOCK_SRC_OSCULP 1
 143:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 144:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*
 145:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    <o> PLL clock source selection
 146:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //       <0=> External crystal
 147:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //       <1=> External direct input
 148:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //       <2=> Internal fast oscillator
 149:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    <i> Default: External crystal
 150:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** */
 151:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_CLOCK_SRC 0
 152:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_CLOCK_SRC_EXT_XTAL 0
 153:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_CLOCK_SRC_EXT_DIRECT 1
 154:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_CLOCK_SRC_OFI 2
 155:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 156:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if PLL_CLOCK_SRC == PLL_CLOCK_SRC_EXT_XTAL
 157:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if OSCHP_FREQUENCY == 8000000U
 158:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_PDIV (1U)
 159:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_NDIV (89U)
 160:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_K2DIV (2U)
 161:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 162:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #elif OSCHP_FREQUENCY == 12000000U
 163:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_PDIV (1U)
 164:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_NDIV (79U)
 165:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_K2DIV (3U)
 166:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 167:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #elif OSCHP_FREQUENCY == 16000000U
 168:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_PDIV (1U)
 169:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_NDIV (59U)
 170:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_K2DIV (3U)
 171:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 172:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #else
 173:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #error "External crystal frequency not supported"
 174:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 175:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif
 176:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 177:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define VCO ((OSCHP_FREQUENCY / (PLL_PDIV + 1UL)) * (PLL_NDIV + 1UL))
 178:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 179:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #else /* PLL_CLOCK_SRC == PLL_CLOCK_SRC_EXT_XTAL */
 180:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 181:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_PDIV (1U)
 182:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_NDIV (39U)
 183:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_K2DIV (3U)
 184:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 185:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define VCO ((OFI_FREQUENCY / (PLL_PDIV + 1UL)) * (PLL_NDIV + 1UL))
 186:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 187:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif /* PLL_CLOCK_SRC == PLL_CLOCK_SRC_OFI */
 188:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 189:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_K2DIV_0 ((VCO / OFI_FREQUENCY) - 1UL)
 190:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_K2DIV_1 ((VCO / 60000000U) - 1UL)
 191:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PLL_K2DIV_2 ((VCO / 90000000U) - 1UL)
 192:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 193:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_CLKCLR_ENABLE_USBCLK SCU_CLK_CLKCLR_USBCDI_Msk
 194:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_CLKCLR_ENABLE_MMCCLK SCU_CLK_CLKCLR_MMCCDI_Msk
 195:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_CLKCLR_ENABLE_ETHCLK SCU_CLK_CLKCLR_ETH0CDI_Msk
 196:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_CLKCLR_ENABLE_EBUCLK SCU_CLK_CLKCLR_EBUCDI_Msk
 197:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_CLKCLR_ENABLE_CCUCLK SCU_CLK_CLKCLR_CCUCDI_Msk
 198:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_CLKCLR_ENABLE_WDTCLK SCU_CLK_CLKCLR_WDTCDI_Msk
 199:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 200:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_USBCLKCR_USBSEL_USBPLL (0U << SCU_CLK_USBCLKCR_USBSEL_Pos)
 201:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_USBCLKCR_USBSEL_PLL    (1U << SCU_CLK_USBCLKCR_USBSEL_Pos)
 202:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 203:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_OFI      (0U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 204:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_STANDBY  (1U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 205:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_PLL      (2U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 206:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 207:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_SYS      (0U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 208:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_USBPLL   (2U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 209:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_PLL      (3U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 210:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 211:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define EXTCLK_PIN_P0_8  (0)
 212:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define EXTCLK_PIN_P1_15 (1)
 213:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 214:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*
 215:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    <h> Clock tree
 216:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        <o1.0> CPU clock divider
 217:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                   <0=> fCPU = fSYS
 218:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                   <1=> fCPU = fSYS / 2
 219:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        <o2.0>  Peripheral clock divider
 220:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                     <0=> fPB	= fCPU
 221:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                     <1=> fPB	= fCPU / 2
 222:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        <e.4> Enable CCU clock
 223:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //             <o3.0>  CCU clock divider
 224:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                     <0=> fCCU = fCPU
 225:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                     <1=> fCCU = fCPU / 2
 226:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        </e>
 227:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        <e.5> Enable WDT clock
 228:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //             <o4.0..7>  WDT clock divider <1-256><#-1>
 229:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //             <o4.16..17> WDT clock source <0=> fOFI
 230:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                                          <1=> fSTDBY
 231:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                                          <2=> fPLL
 232:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        </e>
 233:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        <e.3> Enable EBU clock
 234:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //             <o5.0..5>  EBU clock divider  <1-64><#-1>
 235:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        </e>
 236:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        <e.2> Enable ETH clock
 237:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        </e>
 238:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        <e.1> Enable MMC clock
 239:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        </e>
 240:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        <e.0> Enable USB clock
 241:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //             <o6.16> USB clock source <0=> USBPLL
 242:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                                      <1=> PLL
 243:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        </e>
 244:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        <e7> External Clock configuration
 245:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //            <o8.0..1> External Clock Source Selection
 246:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                  <0=> System clock
 247:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                  <2=> USB PLL clock
 248:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                  <3=> PLL clock
 249:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //            <o8.16..24> External Clock divider <1-512><#-1>
 250:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //            <i> Only valid for USB PLL and PLL clocks
 251:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //            <o9.0> External Clock Pin Selection
 252:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                  <0=> P0.8
 253:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //                  <1=> P1.15
 254:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //        </e>
 255:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //    </h>
 256:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** */
 257:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define ENABLE_SCUCLK (0U)
 258:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define CPUCLKDIV (0U)
 259:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define PBCLKDIV (0U)
 260:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define CCUCLKDIV (0U)
 261:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define WDTCLKDIV (0U | SCU_CLK_WDTCLKCR_WDTSEL_OFI)
 262:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define EBUCLKDIV (0U)
 263:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define USBCLKDIV (0U | SCU_CLK_USBCLKCR_USBSEL_USBPLL | USB_DIV)
 264:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 265:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define ENABLE_EXTCLK (0U)
 266:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define EXTCLKDIV (0U | SCU_CLK_EXTCLKCR_ECKSEL_SYS)
 267:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define EXTCLK_PIN (0U)
 268:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 269:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define ENABLE_PLL \
 270:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     (SYS_CLOCK_SRC == SYS_CLOCK_SRC_PLL) || \
 271:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     ((ENABLE_SCUCLK & SCU_CLK_CLKSET_EBUCEN_Msk) != 0) || \
 272:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     (((ENABLE_SCUCLK & SCU_CLK_CLKSET_USBCEN_Msk) != 0) && ((USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_Ms
 273:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     (((ENABLE_SCUCLK & SCU_CLK_CLKSET_WDTCEN_Msk) != 0) && ((WDTCLKDIV & SCU_CLK_WDTCLKCR_WDTSEL_Ms
 274:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 275:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #define ENABLE_USBPLL \
 276:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     ((((ENABLE_SCUCLK & SCU_CLK_CLKSET_USBCEN_Msk) != 0) && ((USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_M
 277:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****      (((ENABLE_SCUCLK & SCU_CLK_CLKCLR_ENABLE_MMCCLK) != 0) && ((USBCLKDIV & SCU_CLK_USBCLKCR_USBSE
 278:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*
 279:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** // </h>
 280:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** */
 281:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 282:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*
 283:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** //-------- <<< end of configuration section >>> ------------------
 284:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** */
 285:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****                                      
 286:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*******************************************************************************
 287:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * GLOBAL VARIABLES
 288:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *******************************************************************************/
 289:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if defined ( __CC_ARM )
 290:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** uint32_t SystemCoreClock __attribute__((at(0x2000FFC0)));
 291:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** uint8_t g_chipid[16] __attribute__((at(0x2000FFC4)));
 292:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 293:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** uint32_t SystemCoreClock __attribute__((section(".bss.ARM.__at_0x2000FFC0")));
 294:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** uint8_t g_chipid[16] __attribute__((section(".bss.ARM.__at_0x2000FFC4")));
 295:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #elif defined ( __ICCARM__ )
 296:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** __no_init uint32_t SystemCoreClock;
 297:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** __no_init uint8_t g_chipid[16];
 298:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #elif defined ( __GNUC__ )
 299:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** uint32_t SystemCoreClock __attribute__((section(".no_init")));
 300:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** uint8_t g_chipid[16] __attribute__((section(".no_init")));
 301:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #elif defined ( __TASKING__ )
 302:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** uint32_t SystemCoreClock __at( 0x2000FFC0 );
 303:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** uint8_t g_chipid[16] __at( 0x2000FFC4 );
 304:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif
 305:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 306:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** extern uint32_t __Vectors;
 307:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 308:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*******************************************************************************
 309:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * LOCAL FUNCTIONS
 310:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *******************************************************************************/
 311:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** static void delay(uint32_t cycles)
 312:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** {
  27              	 .loc 1 312 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 82B0     	 sub sp,sp,#8
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
 313:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   volatile uint32_t i;
 314:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 315:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   for(i = 0UL; i < cycles ;++i)
  36              	 .loc 1 315 0
  37 0002 0023     	 movs r3,#0
  38 0004 0193     	 str r3,[sp,#4]
  39 0006 019B     	 ldr r3,[sp,#4]
  40 0008 9842     	 cmp r0,r3
  41 000a 06D9     	 bls .L1
  42              	.L4:
 316:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 317:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     __NOP();
  43              	 .loc 1 317 0 discriminator 3
  44              	
  45 000c 00BF     	 nop
  46              	
 315:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
  47              	 .loc 1 315 0 discriminator 3
  48              	 .thumb
  49 000e 019B     	 ldr r3,[sp,#4]
  50 0010 0133     	 adds r3,r3,#1
  51 0012 0193     	 str r3,[sp,#4]
  52 0014 019B     	 ldr r3,[sp,#4]
  53 0016 8342     	 cmp r3,r0
  54 0018 F8D3     	 bcc .L4
  55              	.L1:
 318:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 319:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** }
  56              	 .loc 1 319 0
  57 001a 02B0     	 add sp,sp,#8
  58              	.LCFI1:
  59              	 .cfi_def_cfa_offset 0
  60              	 
  61 001c 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE132:
  65 001e 00BF     	 .section .text.SystemCoreSetup,"ax",%progbits
  66              	 .align 2
  67              	 .weak SystemCoreSetup
  68              	 .thumb
  69              	 .thumb_func
  71              	SystemCoreSetup:
  72              	.LFB134:
 320:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 321:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** /*******************************************************************************
 322:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  * API IMPLEMENTATION
 323:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****  *******************************************************************************/
 324:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 325:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** __WEAK void SystemInit(void)
 326:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** {
 327:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   memcpy(g_chipid, CHIPID_LOC, 16);
 328:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 329:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SystemCoreSetup();
 330:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SystemCoreClockSetup(); 
 331:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** }
 332:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 333:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** __WEAK void SystemCoreSetup(void)
 334:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** {
  73              	 .loc 1 334 0
  74              	 .cfi_startproc
  75              	 
  76              	 
  77              	 
  78              	.LBB8:
  79              	.LBB9:
  80              	 .file 2 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
   1:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.2.0
   5:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * @date     08. May 2019
   6:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /*
   8:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  *
  10:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  *
  12:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  *
  16:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  *
  18:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
  24:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
  25:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
  28:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  38:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
  39:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  43:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                               inline
  45:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  46:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  49:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif                                           
  52:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  55:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  56:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  58:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  61:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  64:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  67:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  70:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  78:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  86:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  94:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 102:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 110:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 113:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 116:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 119:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 120:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 122:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 124:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 125:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            in the used linker script.
 129:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 130:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 131:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 133:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 135:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   typedef struct {
 136:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     uint32_t const* src;
 137:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     uint32_t* dest;
 138:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     uint32_t  wlen;
 139:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   } __copy_table_t;
 140:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 141:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   typedef struct {
 142:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     uint32_t* dest;
 143:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     uint32_t  wlen;
 144:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   } __zero_table_t;
 145:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 146:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 151:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     }
 155:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   }
 156:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  
 157:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     }
 161:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   }
 162:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  
 163:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   _start();
 164:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 165:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 166:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 168:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 169:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 172:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 173:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 176:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 177:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 180:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 181:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 184:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 185:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   @{
 189:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 190:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 191:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 192:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 196:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 198:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 200:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 201:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 202:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 203:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 207:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 209:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  81              	 .loc 2 209 0
  82              	
  83 0000 72B6     	 cpsid i
  84              	
  85              	 .thumb
  86              	.LBE9:
  87              	.LBE8:
 335:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   uint32_t temp;
 336:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 	
 337:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* relocate vector table */
 338:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   __disable_irq();
 339:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCB->VTOR = (uint32_t)(&__Vectors);
  88              	 .loc 1 339 0
  89 0002 0D4B     	 ldr r3,.L8
  90 0004 0D4A     	 ldr r2,.L8+4
  91 0006 9A60     	 str r2,[r3,#8]
  92              	.LBB10:
  93              	.LBB11:
 210:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 211:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 212:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 213:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 214:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 215:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 217:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 218:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 220:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 221:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 222:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 224:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 225:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 226:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 227:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 229:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 232:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 233:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 235:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 236:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 237:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 239:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 240:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 241:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 242:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 243:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 244:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 245:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 248:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 250:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 252:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 253:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 254:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 256:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 260:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 262:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 264:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 265:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 266:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 267:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 268:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 269:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 271:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 272:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 274:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 275:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 276:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 278:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 279:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 280:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 281:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 282:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 283:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 285:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 286:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 288:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 289:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 290:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 292:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 293:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 294:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 295:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 296:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 297:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 299:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 300:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 302:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 303:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 304:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 306:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 307:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 308:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 309:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 310:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 313:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 314:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 316:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 317:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 318:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 320:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 321:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 322:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 323:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 325:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 328:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 329:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 331:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 332:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 333:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 335:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 336:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 337:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 338:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 339:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 340:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 344:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 346:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 348:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 349:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 350:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 352:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 356:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 358:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 360:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 361:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 362:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 363:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 364:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 367:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 368:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 370:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 371:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 372:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 374:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 375:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 376:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 377:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 379:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 382:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 383:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 385:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 386:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 387:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 389:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 390:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 391:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 392:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 393:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 394:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 398:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 400:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 402:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 403:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 404:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 406:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 410:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 412:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 414:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 415:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 416:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 417:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 419:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               SP Register value
 422:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 423:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 425:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 426:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 427:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 429:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 430:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 431:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 432:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 433:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 437:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 439:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 441:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 442:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 443:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 444:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 445:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 446:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 448:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 449:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 451:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 452:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 453:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 455:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 456:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 457:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 458:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 460:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 463:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 464:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 466:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 467:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 468:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 470:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 471:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 472:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 473:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 474:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 475:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 476:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 479:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 481:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 483:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 484:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 485:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 487:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 491:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 493:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 495:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 496:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 497:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 498:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 502:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 503:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 506:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 508:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 510:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 511:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 512:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 513:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 514:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 517:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 519:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 521:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 522:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 523:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 524:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 525:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 527:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 528:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 530:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 531:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 532:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 534:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 535:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 536:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 537:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 539:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 542:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 543:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 545:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 546:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 547:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 549:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 550:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 551:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 552:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 553:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 554:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 555:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 558:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 560:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 562:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 563:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 564:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 566:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 570:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 572:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 574:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 575:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 576:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 577:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 578:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 583:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 585:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 587:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 588:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 589:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 590:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 591:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 593:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 594:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 596:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 597:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 598:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 600:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 601:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 602:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 603:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 605:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 608:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 609:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 611:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 612:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 613:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 615:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 616:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 617:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 618:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 619:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 620:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 621:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 624:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 626:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 628:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 629:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 630:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 632:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 636:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 638:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 640:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 641:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 642:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 646:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 647:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 650:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 651:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   mode.
 655:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 656:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 658:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 659:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 661:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 665:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 666:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 667:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return result;
 669:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 670:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 671:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 672:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 674:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 678:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 680:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 681:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 683:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 686:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 687:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 688:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return result;
 690:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 691:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 692:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 693:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 694:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 695:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 696:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   mode.
 700:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 701:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 704:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 706:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 711:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 713:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 714:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 715:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 716:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 718:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 722:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 725:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 727:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 731:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 733:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 734:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 735:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 736:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 737:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 738:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   mode.
 742:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 743:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 745:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 746:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 748:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 752:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 753:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 754:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return result;
 756:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 757:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 758:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 759:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 760:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 762:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 766:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 768:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 769:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 771:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 774:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 775:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 776:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return result;
 778:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 779:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 780:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 781:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 782:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 783:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 784:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   mode.
 788:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 789:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 792:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 794:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 799:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 801:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 802:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 803:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 804:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 806:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 810:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 813:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 815:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 819:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 821:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 822:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 823:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 824:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 827:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 828:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 829:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 830:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 833:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 835:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 843:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 844:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 845:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 847:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 848:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 849:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(0U);
 850:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 851:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 852:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 853:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 854:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 855:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 856:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 859:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 861:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 869:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 871:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 872:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 873:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 874:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 875:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 876:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 877:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 879:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 880:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 883:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   @{
 884:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** */
 885:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 886:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 894:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 898:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 899:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 900:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 901:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 903:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 905:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 906:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 909:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 911:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 912:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 913:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 914:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 917:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 919:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 920:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 921:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 922:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 924:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 926:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 927:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 928:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 932:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 933:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 935:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 937:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 938:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 939:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 940:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 944:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 946:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  94              	 .loc 2 946 0
  95              	
  96 0008 BFF34F8F 	 dsb 0xF
  97              	
  98              	 .thumb
  99              	.LBE11:
 100              	.LBE10:
 101              	.LBB12:
 102              	.LBB13:
 198:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 103              	 .loc 2 198 0
 104              	
 105 000c 62B6     	 cpsie i
 106              	
 107              	 .thumb
 108              	.LBE13:
 109              	.LBE12:
 340:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   __DSB();
 341:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   __enable_irq();
 342:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     
 343:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* __FPU_PRESENT = 1 defined in device header file */
 344:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* __FPU_USED value depends on compiler/linker options. */
 345:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* __FPU_USED = 0 if -mfloat-abi=soft is selected */
 346:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* __FPU_USED = 1 if -mfloat-abi=softfp or –mfloat-abi=hard */
 347:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 348:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if ((__FPU_PRESENT == 1) && (__FPU_USED == 1))
 349:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCB->CPACR |= ((3UL << 10*2) |                 /* set CP10 Full Access */
 110              	 .loc 1 349 0
 111 000e D3F88820 	 ldr r2,[r3,#136]
 112 0012 42F47002 	 orr r2,r2,#15728640
 113 0016 C3F88820 	 str r2,[r3,#136]
 350:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****                  (3UL << 11*2)  );               /* set CP11 Full Access */
 351:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #else
 352:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCB->CPACR = 0;
 353:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif
 354:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 355:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Enable unaligned memory access - SCB_CCR.UNALIGN_TRP = 0 */
 356:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCB->CCR &= ~(SCB_CCR_UNALIGN_TRP_Msk);
 114              	 .loc 1 356 0
 115 001a 5A69     	 ldr r2,[r3,#20]
 116 001c 22F00802 	 bic r2,r2,#8
 117 0020 5A61     	 str r2,[r3,#20]
 357:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 358:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   temp = FLASH0->FCON;
 118              	 .loc 1 358 0
 119 0022 0749     	 ldr r1,.L8+8
 120 0024 41F21402 	 movw r2,#4116
 121 0028 8B58     	 ldr r3,[r1,r2]
 122              	.LVL1:
 359:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   temp &= ~FLASH_FCON_WSPFLASH_Msk;
 123              	 .loc 1 359 0
 124 002a 23F00F03 	 bic r3,r3,#15
 125              	.LVL2:
 360:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   temp |= PMU_FLASH_WS;
 126              	 .loc 1 360 0
 127 002e 43F00303 	 orr r3,r3,#3
 128              	.LVL3:
 361:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   FLASH0->FCON = temp;
 129              	 .loc 1 361 0
 130 0032 8B50     	 str r3,[r1,r2]
 131 0034 7047     	 bx lr
 132              	.L9:
 133 0036 00BF     	 .align 2
 134              	.L8:
 135 0038 00ED00E0 	 .word -536810240
 136 003c 00000000 	 .word __Vectors
 137 0040 00100058 	 .word 1476399104
 138              	 .cfi_endproc
 139              	.LFE134:
 141              	 .section .text.OSCHP_GetFrequency,"ax",%progbits
 142              	 .align 2
 143              	 .weak OSCHP_GetFrequency
 144              	 .thumb
 145              	 .thumb_func
 147              	OSCHP_GetFrequency:
 148              	.LFB137:
 362:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** }
 363:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 364:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** __WEAK void SystemCoreClockSetup(void)
 365:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** {
 366:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_FACTORY
 367:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Enable factory calibration */
 368:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FOTR_Msk;
 369:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #else
 370:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Automatic calibration uses the fSTDBY */
 371:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 372:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Enable HIB domain */
 373:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Power up HIB domain if and only if it is currently powered down */
 374:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   if((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 375:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 376:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     SCU_POWER->PWRSET |= SCU_POWER_PWRSET_HIB_Msk;
 377:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 378:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     while((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 379:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 380:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       /* wait until HIB domain is enabled */
 381:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 382:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 383:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 384:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Remove the reset only if HIB domain were in a state of reset */
 385:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   if((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 386:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 387:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     SCU_RESET->RSTCLR |= SCU_RESET_RSTCLR_HIBRS_Msk;
 388:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     delay(DELAY_CNT_150US_50MHZ);
 389:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 390:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   
 391:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP
 392:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Enable OSC_ULP */
 393:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   if ((SCU_HIBERNATE->OSCULCTRL & SCU_HIBERNATE_OSCULCTRL_MODE_Msk) != 0UL)
 394:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 395:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /*enable OSC_ULP*/
 396:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 397:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 398:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 399:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 400:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 401:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 402:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* Check if the clock is OK using OSCULP Oscillator Watchdog*/
 403:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 404:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 405:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 406:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 407:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 408:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 409:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* wait till clock is stable */
 410:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     do
 411:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 412:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 413:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       {
 414:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 415:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       }
 416:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       SCU_HIBERNATE->HDCLR |= SCU_HIBERNATE_HDCLR_ULPWDG_Msk;
 417:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 418:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       delay(DELAY_CNT_50US_50MHZ);
 419:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 420:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     } while ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) != 0UL);
 421:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 422:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 423:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 424:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* now OSC_ULP is running and can be used*/
 425:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Select OSC_ULP as the clock source for RTC and STDBY*/
 426:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 427:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 428:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 429:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 430:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_RCS_Msk | SCU_HIBERNATE_HDCR_STDBYSEL_Msk;
 431:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 432:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif /* STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP */
 433:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 434:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Enable automatic calibration of internal fast oscillator */
 435:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_AOTREN_Msk;
 436:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif /* FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_AUTOMATIC */
 437:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 438:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   delay(DELAY_CNT_50US_50MHZ);
 439:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 440:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if ENABLE_PLL
 441:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 442:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* enable PLL */
 443:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 444:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 445:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI
 446:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* enable OSC_HP */
 447:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 448:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 449:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Msk);
 450:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 451:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 452:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* select OSC_HP clock as PLL input */
 453:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     SCU_PLL->PLLCON2 &= ~SCU_PLL_PLLCON2_PINSEL_Msk;
 454:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 455:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* restart OSC Watchdog */
 456:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 457:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 458:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 459:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 460:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       /* wait till OSC_HP output frequency is usable */
 461:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 462:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 463:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #else /* PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI */
 464:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 465:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* select backup clock as PLL input */
 466:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON2 |= SCU_PLL_PLLCON2_PINSEL_Msk;
 467:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif
 468:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 469:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Go to bypass the Main PLL */
 470:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_VCOBYP_Msk;
 471:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 472:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* disconnect Oscillator from PLL */
 473:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FINDIS_Msk;
 474:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 475:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Setup divider settings for main PLL */
 476:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 477:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****                       (PLL_K2DIV_0 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 478:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****                       (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 479:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 480:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Set OSCDISCDIS */
 481:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 482:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 483:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* connect Oscillator to PLL */
 484:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_FINDIS_Msk;
 485:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 486:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* restart PLL Lock detection */
 487:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_RESLD_Msk;
 488:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 489:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 490:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 491:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* wait for PLL Lock */
 492:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 493:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 494:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Disable bypass- put PLL clock back */
 495:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_VCOBYP_Msk;
 496:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 497:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 498:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* wait for normal mode */
 499:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 500:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif /* ENABLE_PLL */
 501:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 502:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if (SYS_CLOCK_SRC == SYS_CLOCK_SRC_PLL)
 503:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Switch system clock to PLL */
 504:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->SYSCLKCR |= SCU_CLK_SYSCLKCR_SYSSEL_Msk;
 505:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #else
 506:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Switch system clock to backup clock */
 507:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->SYSCLKCR &= ~SCU_CLK_SYSCLKCR_SYSSEL_Msk;
 508:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif
 509:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 510:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Before scaling to final frequency we need to setup the clock dividers */
 511:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->PBCLKCR = PBCLKDIV;
 512:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->CPUCLKCR = CPUCLKDIV;
 513:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->CCUCLKCR = CCUCLKDIV;
 514:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->WDTCLKCR = WDTCLKDIV;
 515:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->EBUCLKCR = EBUCLKDIV;
 516:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->USBCLKCR = USBCLKDIV;
 517:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 518:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if ENABLE_PLL
 519:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* PLL frequency stepping...*/
 520:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Reset OSCDISCDIS */
 521:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 522:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 523:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 524:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 	                    (PLL_K2DIV_1 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 525:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 526:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 527:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 528:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   delay(DELAY_CNT_50US_60MHZ);
 529:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 530:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 531:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* wait for PLL Lock */
 532:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 533:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 534:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 535:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 	                    (PLL_K2DIV_2 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 536:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 537:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 538:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 539:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   delay(DELAY_CNT_50US_90MHZ);
 540:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 541:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 542:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* wait for PLL Lock */
 543:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 544:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 545:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 546:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 	                    (PLL_K2DIV << SCU_PLL_PLLCON1_K2DIV_Pos) |
 547:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 548:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 549:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 550:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   delay(DELAY_CNT_50US_120MHZ);
 551:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 552:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 553:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* wait for PLL Lock */
 554:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 555:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 556:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_TRAP->TRAPCLR = SCU_TRAP_TRAPCLR_SOSCWDGT_Msk | SCU_TRAP_TRAPCLR_SVCOLCKT_Msk;
 557:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif /* ENABLE_PLL */
 558:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 559:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if ENABLE_USBPLL
 560:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* enable USB PLL first */
 561:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->USBPLLCON &= ~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 562:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 563:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* USB PLL uses as clock input the OSC_HP */
 564:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* check and if not already running enable OSC_HP */
 565:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 566:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 567:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* check if Main PLL is switched on for OSC WDG*/
 568:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     if ((SCU_PLL->PLLCON0 &(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk)) != 0UL)
 569:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 570:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       /* enable PLL first */
 571:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 572:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 573:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 574:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Msk);
 575:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 576:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 577:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* restart OSC Watchdog */
 578:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 579:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 580:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 581:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 582:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       /* wait till OSC_HP output frequency is usable */
 583:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 584:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 585:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 586:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Setup USB PLL */
 587:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Go to bypass the USB PLL */
 588:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_VCOBYP_Msk;
 589:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 590:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* disconnect Oscillator from USB PLL */
 591:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_FINDIS_Msk;
 592:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 593:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Setup Divider settings for USB PLL */
 594:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->USBPLLCON = ((USB_NDIV << SCU_PLL_USBPLLCON_NDIV_Pos) |
 595:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****                         (USB_PDIV << SCU_PLL_USBPLLCON_PDIV_Pos));
 596:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 597:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Set OSCDISCDIS */
 598:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 599:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 600:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* connect Oscillator to USB PLL */
 601:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->USBPLLCON &= ~SCU_PLL_USBPLLCON_FINDIS_Msk;
 602:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 603:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* restart PLL Lock detection */
 604:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_RESLD_Msk;
 605:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 606:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 607:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 608:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* wait for PLL Lock */
 609:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 610:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif /* (USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_Msk) */
 611:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 612:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Enable selected clocks */
 613:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->CLKSET = ENABLE_SCUCLK;
 614:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 615:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if ENABLE_EXTCLK == 1
 616:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* Configure external clock */
 617:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->EXTCLKCR = EXTCLKDIV;
 618:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 619:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if EXTCLK_PIN == EXTCLK_PIN_P1_15
 620:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* P1.15 */
 621:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   PORT1->PDR1 &= ~PORT1_PDR1_PD15_Msk;
 622:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   PORT1->IOCR12 = (PORT1->IOCR12 & ~PORT0_IOCR12_PC15_Msk) | (0x11U << PORT0_IOCR12_PC15_Pos);
 623:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #else
 624:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   /* P0.8 */
 625:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   PORT0->HWSEL &= ~PORT0_HWSEL_HW8_Msk;
 626:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   PORT0->PDR1 &= ~PORT0_PDR1_PD8_Msk;
 627:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   PORT0->IOCR8 = (PORT0->IOCR8 & ~PORT0_IOCR8_PC8_Msk) | (0x11U << PORT0_IOCR8_PC8_Pos);
 628:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif
 629:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 630:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif  /* ENABLE_EXTCLK == 1  */
 631:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 632:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SystemCoreClockUpdate();
 633:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** }
 634:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 635:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** __WEAK void SystemCoreClockUpdate(void)
 636:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** {
 637:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   uint32_t pdiv;
 638:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   uint32_t ndiv;
 639:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   uint32_t kdiv;
 640:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   uint32_t temp;
 641:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 642:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   if (SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk)
 643:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 644:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* fPLL is clock source for fSYS */
 645:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     if(SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk)
 646:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 647:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       /* PLL input clock is the backup clock (fOFI) */
 648:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       temp = OFI_FREQUENCY;
 649:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 650:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     else
 651:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 652:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       /* PLL input clock is the high performance osicllator (fOSCHP) */
 653:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       temp = OSCHP_GetFrequency();
 654:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 655:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 656:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* check if PLL is locked */
 657:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     if (SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk)
 658:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 659:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       /* PLL normal mode */
 660:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       /* read back divider settings */
 661:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       pdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Pos) + 1;
 662:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       ndiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Pos) + 1;
 663:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       kdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_Pos) + 1;
 664:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 665:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       temp = (temp / (pdiv * kdiv)) * ndiv;
 666:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 667:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     else
 668:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 669:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       /* PLL prescalar mode */
 670:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       /* read back divider settings */
 671:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       kdiv  = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_Pos) + 1;
 672:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       
 673:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       temp = (temp / kdiv);
 674:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 675:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 676:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   else
 677:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 678:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     /* fOFI is clock source for fSYS */    
 679:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     temp = OFI_FREQUENCY;
 680:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 681:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 682:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   temp = temp / ((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) + 1);
 683:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   temp = temp / ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) + 1);
 684:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 685:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SystemCoreClock = temp;
 686:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** }
 687:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 688:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 689:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** {
 149              	 .loc 1 689 0
 150              	 .cfi_startproc
 151              	 
 152              	 
 153              	 
 690:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   return OSCHP_FREQUENCY;
 691:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** }
 154              	 .loc 1 691 0
 155 0000 0048     	 ldr r0,.L11
 156 0002 7047     	 bx lr
 157              	.L12:
 158              	 .align 2
 159              	.L11:
 160 0004 001BB700 	 .word 12000000
 161              	 .cfi_endproc
 162              	.LFE137:
 164              	 .section .text.SystemCoreClockUpdate,"ax",%progbits
 165              	 .align 2
 166              	 .weak SystemCoreClockUpdate
 167              	 .thumb
 168              	 .thumb_func
 170              	SystemCoreClockUpdate:
 171              	.LFB136:
 636:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   uint32_t pdiv;
 172              	 .loc 1 636 0
 173              	 .cfi_startproc
 174              	 
 175              	 
 176 0000 10B5     	 push {r4,lr}
 177              	.LCFI2:
 178              	 .cfi_def_cfa_offset 8
 179              	 .cfi_offset 4,-8
 180              	 .cfi_offset 14,-4
 642:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 181              	 .loc 1 642 0
 182 0002 1E4B     	 ldr r3,.L20
 183 0004 DB68     	 ldr r3,[r3,#12]
 184 0006 13F4803F 	 tst r3,#65536
 185 000a 27D0     	 beq .L17
 645:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 186              	 .loc 1 645 0
 187 000c 1C4B     	 ldr r3,.L20+4
 188 000e DB68     	 ldr r3,[r3,#12]
 189 0010 13F0010F 	 tst r3,#1
 190 0014 02D1     	 bne .L18
 653:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 191              	 .loc 1 653 0
 192 0016 FFF7FEFF 	 bl OSCHP_GetFrequency
 193              	.LVL4:
 194 001a 00E0     	 b .L15
 195              	.LVL5:
 196              	.L18:
 648:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 197              	 .loc 1 648 0
 198 001c 1948     	 ldr r0,.L20+8
 199              	.L15:
 200              	.LVL6:
 657:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 201              	 .loc 1 657 0
 202 001e 184B     	 ldr r3,.L20+4
 203 0020 1B68     	 ldr r3,[r3]
 204 0022 13F0040F 	 tst r3,#4
 205 0026 11D0     	 beq .L16
 661:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       ndiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Pos) + 1;
 206              	 .loc 1 661 0
 207 0028 154A     	 ldr r2,.L20+4
 208 002a 9468     	 ldr r4,[r2,#8]
 209              	.LVL7:
 662:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       kdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_Pos) + 1;
 210              	 .loc 1 662 0
 211 002c 9368     	 ldr r3,[r2,#8]
 212              	.LVL8:
 663:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 213              	 .loc 1 663 0
 214 002e 9168     	 ldr r1,[r2,#8]
 215              	.LVL9:
 216 0030 C1F30642 	 ubfx r2,r1,#16,#7
 661:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       ndiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Pos) + 1;
 217              	 .loc 1 661 0
 218 0034 C4F30364 	 ubfx r4,r4,#24,#4
 219              	.LVL10:
 220 0038 611C     	 adds r1,r4,#1
 221              	.LVL11:
 665:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 222              	 .loc 1 665 0
 223 003a 02FB0111 	 mla r1,r2,r1,r1
 224 003e B0FBF1F0 	 udiv r0,r0,r1
 225              	.LVL12:
 662:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       kdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_Pos) + 1;
 226              	 .loc 1 662 0
 227 0042 C3F30623 	 ubfx r3,r3,#8,#7
 228              	.LVL13:
 665:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 229              	 .loc 1 665 0
 230 0046 03FB0002 	 mla r2,r3,r0,r0
 231              	.LVL14:
 232 004a 08E0     	 b .L14
 233              	.LVL15:
 234              	.L16:
 671:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****       
 235              	 .loc 1 671 0
 236 004c 0C4B     	 ldr r3,.L20+4
 237 004e 9B68     	 ldr r3,[r3,#8]
 238              	.LVL16:
 239 0050 03F07F03 	 and r3,r3,#127
 240              	.LVL17:
 241 0054 0133     	 adds r3,r3,#1
 242              	.LVL18:
 673:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     }
 243              	 .loc 1 673 0
 244 0056 B0FBF3F2 	 udiv r2,r0,r3
 245              	.LVL19:
 246 005a 00E0     	 b .L14
 247              	.LVL20:
 248              	.L17:
 679:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 249              	 .loc 1 679 0
 250 005c 094A     	 ldr r2,.L20+8
 251              	.L14:
 252              	.LVL21:
 682:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   temp = temp / ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) + 1);
 253              	 .loc 1 682 0
 254 005e 0749     	 ldr r1,.L20
 255 0060 C868     	 ldr r0,[r1,#12]
 256 0062 C0B2     	 uxtb r0,r0
 257 0064 0130     	 adds r0,r0,#1
 258 0066 B2FBF0F3 	 udiv r3,r2,r0
 259              	.LVL22:
 683:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 260              	 .loc 1 683 0
 261 006a 0869     	 ldr r0,[r1,#16]
 262              	.LVL23:
 263 006c 00F00100 	 and r0,r0,#1
 264              	.LVL24:
 265 0070 0130     	 adds r0,r0,#1
 266 0072 B3FBF0F0 	 udiv r0,r3,r0
 267              	.LVL25:
 685:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** }
 268              	 .loc 1 685 0
 269 0076 044B     	 ldr r3,.L20+12
 270 0078 1860     	 str r0,[r3]
 271 007a 10BD     	 pop {r4,pc}
 272              	.L21:
 273              	 .align 2
 274              	.L20:
 275 007c 00460050 	 .word 1342195200
 276 0080 10470050 	 .word 1342195472
 277 0084 00366E01 	 .word 24000000
 278 0088 00000000 	 .word .LANCHOR0
 279              	 .cfi_endproc
 280              	.LFE136:
 282              	 .section .text.SystemCoreClockSetup,"ax",%progbits
 283              	 .align 2
 284              	 .weak SystemCoreClockSetup
 285              	 .thumb
 286              	 .thumb_func
 288              	SystemCoreClockSetup:
 289              	.LFB135:
 365:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #if FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_FACTORY
 290              	 .loc 1 365 0
 291              	 .cfi_startproc
 292              	 
 293              	 
 294 0000 10B5     	 push {r4,lr}
 295              	.LCFI3:
 296              	 .cfi_def_cfa_offset 8
 297              	 .cfi_offset 4,-8
 298              	 .cfi_offset 14,-4
 374:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 299              	 .loc 1 374 0
 300 0002 5B4B     	 ldr r3,.L41
 301 0004 1B68     	 ldr r3,[r3]
 302 0006 13F0010F 	 tst r3,#1
 303 000a 08D1     	 bne .L23
 376:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 304              	 .loc 1 376 0
 305 000c 584A     	 ldr r2,.L41
 306 000e 5368     	 ldr r3,[r2,#4]
 307 0010 43F00103 	 orr r3,r3,#1
 308 0014 5360     	 str r3,[r2,#4]
 309              	.L24:
 378:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 310              	 .loc 1 378 0 discriminator 1
 311 0016 1368     	 ldr r3,[r2]
 312 0018 13F0010F 	 tst r3,#1
 313 001c FBD0     	 beq .L24
 314              	.L23:
 385:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 315              	 .loc 1 385 0
 316 001e 554B     	 ldr r3,.L41+4
 317 0020 1B68     	 ldr r3,[r3]
 318 0022 13F4007F 	 tst r3,#512
 319 0026 08D0     	 beq .L25
 387:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     delay(DELAY_CNT_150US_50MHZ);
 320              	 .loc 1 387 0
 321 0028 524A     	 ldr r2,.L41+4
 322 002a 9368     	 ldr r3,[r2,#8]
 323 002c 43F40073 	 orr r3,r3,#512
 324 0030 9360     	 str r3,[r2,#8]
 388:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   }
 325              	 .loc 1 388 0
 326 0032 41F64C50 	 movw r0,#7500
 327 0036 FFF7FEFF 	 bl delay
 328              	.LVL26:
 329              	.L25:
 435:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif /* FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_AUTOMATIC */
 330              	 .loc 1 435 0
 331 003a 4F4C     	 ldr r4,.L41+8
 332 003c 6368     	 ldr r3,[r4,#4]
 333 003e 43F40023 	 orr r3,r3,#524288
 334 0042 6360     	 str r3,[r4,#4]
 438:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 335              	 .loc 1 438 0
 336 0044 40F6C410 	 movw r0,#2500
 337 0048 FFF7FEFF 	 bl delay
 338              	.LVL27:
 443:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 339              	 .loc 1 443 0
 340 004c 6368     	 ldr r3,[r4,#4]
 341 004e 23F48033 	 bic r3,r3,#65536
 342 0052 23F00203 	 bic r3,r3,#2
 343 0056 6360     	 str r3,[r4,#4]
 447:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 344              	 .loc 1 447 0
 345 0058 484B     	 ldr r3,.L41+12
 346 005a 5B68     	 ldr r3,[r3,#4]
 347 005c 13F0300F 	 tst r3,#48
 348 0060 21D0     	 beq .L26
 449:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 349              	 .loc 1 449 0
 350 0062 103C     	 subs r4,r4,#16
 351 0064 6368     	 ldr r3,[r4,#4]
 352 0066 23F47023 	 bic r3,r3,#983040
 353 006a 23F03003 	 bic r3,r3,#48
 354 006e 6360     	 str r3,[r4,#4]
 450:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 355              	 .loc 1 450 0
 356 0070 FFF7FEFF 	 bl OSCHP_GetFrequency
 357              	.LVL28:
 358 0074 6268     	 ldr r2,[r4,#4]
 359 0076 424B     	 ldr r3,.L41+16
 360 0078 A3FB0013 	 umull r1,r3,r3,r0
 361 007c 1B0D     	 lsrs r3,r3,#20
 362 007e 013B     	 subs r3,r3,#1
 363 0080 42EA0343 	 orr r3,r2,r3,lsl#16
 364 0084 6360     	 str r3,[r4,#4]
 453:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 365              	 .loc 1 453 0
 366 0086 3C4B     	 ldr r3,.L41+8
 367 0088 DA68     	 ldr r2,[r3,#12]
 368 008a 22F00102 	 bic r2,r2,#1
 369 008e DA60     	 str r2,[r3,#12]
 456:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 370              	 .loc 1 456 0
 371 0090 5A68     	 ldr r2,[r3,#4]
 372 0092 22F40032 	 bic r2,r2,#131072
 373 0096 5A60     	 str r2,[r3,#4]
 458:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 374              	 .loc 1 458 0
 375 0098 1A46     	 mov r2,r3
 376              	.L27:
 458:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****     {
 377              	 .loc 1 458 0 is_stmt 0 discriminator 1
 378 009a 1368     	 ldr r3,[r2]
 379 009c 03F46073 	 and r3,r3,#896
 380 00a0 B3F5607F 	 cmp r3,#896
 381 00a4 F9D1     	 bne .L27
 382              	.L26:
 470:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 383              	 .loc 1 470 0 is_stmt 1
 384 00a6 344B     	 ldr r3,.L41+8
 385 00a8 5A68     	 ldr r2,[r3,#4]
 386 00aa 42F00102 	 orr r2,r2,#1
 387 00ae 5A60     	 str r2,[r3,#4]
 473:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 388              	 .loc 1 473 0
 389 00b0 5A68     	 ldr r2,[r3,#4]
 390 00b2 42F01002 	 orr r2,r2,#16
 391 00b6 5A60     	 str r2,[r3,#4]
 476:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****                       (PLL_K2DIV_0 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 392              	 .loc 1 476 0
 393 00b8 324A     	 ldr r2,.L41+20
 394 00ba 9A60     	 str r2,[r3,#8]
 481:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 395              	 .loc 1 481 0
 396 00bc 5A68     	 ldr r2,[r3,#4]
 397 00be 42F04002 	 orr r2,r2,#64
 398 00c2 5A60     	 str r2,[r3,#4]
 484:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 399              	 .loc 1 484 0
 400 00c4 5A68     	 ldr r2,[r3,#4]
 401 00c6 22F01002 	 bic r2,r2,#16
 402 00ca 5A60     	 str r2,[r3,#4]
 487:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 403              	 .loc 1 487 0
 404 00cc 5A68     	 ldr r2,[r3,#4]
 405 00ce 42F48022 	 orr r2,r2,#262144
 406 00d2 5A60     	 str r2,[r3,#4]
 489:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 407              	 .loc 1 489 0
 408 00d4 1A46     	 mov r2,r3
 409              	.L28:
 489:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 410              	 .loc 1 489 0 is_stmt 0 discriminator 1
 411 00d6 1368     	 ldr r3,[r2]
 412 00d8 13F0040F 	 tst r3,#4
 413 00dc FBD0     	 beq .L28
 495:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 414              	 .loc 1 495 0 is_stmt 1
 415 00de 264A     	 ldr r2,.L41+8
 416 00e0 5368     	 ldr r3,[r2,#4]
 417 00e2 23F00103 	 bic r3,r3,#1
 418 00e6 5360     	 str r3,[r2,#4]
 419              	.L29:
 496:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 420              	 .loc 1 496 0 discriminator 1
 421 00e8 1368     	 ldr r3,[r2]
 422 00ea 13F0010F 	 tst r3,#1
 423 00ee FBD1     	 bne .L29
 504:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #else
 424              	 .loc 1 504 0
 425 00f0 254B     	 ldr r3,.L41+24
 426 00f2 DA68     	 ldr r2,[r3,#12]
 427 00f4 42F48032 	 orr r2,r2,#65536
 428 00f8 DA60     	 str r2,[r3,#12]
 511:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->CPUCLKCR = CPUCLKDIV;
 429              	 .loc 1 511 0
 430 00fa 0022     	 movs r2,#0
 431 00fc 5A61     	 str r2,[r3,#20]
 512:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->CCUCLKCR = CCUCLKDIV;
 432              	 .loc 1 512 0
 433 00fe 1A61     	 str r2,[r3,#16]
 513:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->WDTCLKCR = WDTCLKDIV;
 434              	 .loc 1 513 0
 435 0100 1A62     	 str r2,[r3,#32]
 514:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->EBUCLKCR = EBUCLKDIV;
 436              	 .loc 1 514 0
 437 0102 5A62     	 str r2,[r3,#36]
 515:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SCU_CLK->USBCLKCR = USBCLKDIV;
 438              	 .loc 1 515 0
 439 0104 DA61     	 str r2,[r3,#28]
 516:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 440              	 .loc 1 516 0
 441 0106 0322     	 movs r2,#3
 442 0108 9A61     	 str r2,[r3,#24]
 521:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 443              	 .loc 1 521 0
 444 010a 03F58873 	 add r3,r3,#272
 445 010e 5A68     	 ldr r2,[r3,#4]
 446 0110 22F04002 	 bic r2,r2,#64
 447 0114 5A60     	 str r2,[r3,#4]
 523:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 	                    (PLL_K2DIV_1 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 448              	 .loc 1 523 0
 449 0116 1D4A     	 ldr r2,.L41+28
 450 0118 9A60     	 str r2,[r3,#8]
 528:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 451              	 .loc 1 528 0
 452 011a 40F6B830 	 movw r0,#3000
 453 011e FFF7FEFF 	 bl delay
 454              	.LVL29:
 529:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 455              	 .loc 1 529 0
 456 0122 154A     	 ldr r2,.L41+8
 457              	.L30:
 529:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 458              	 .loc 1 529 0 is_stmt 0 discriminator 1
 459 0124 1368     	 ldr r3,[r2]
 460 0126 13F0040F 	 tst r3,#4
 461 012a FBD0     	 beq .L30
 534:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 	                    (PLL_K2DIV_2 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 462              	 .loc 1 534 0 is_stmt 1
 463 012c 184A     	 ldr r2,.L41+32
 464 012e 124B     	 ldr r3,.L41+8
 465 0130 9A60     	 str r2,[r3,#8]
 539:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 466              	 .loc 1 539 0
 467 0132 41F29410 	 movw r0,#4500
 468 0136 FFF7FEFF 	 bl delay
 469              	.LVL30:
 540:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 470              	 .loc 1 540 0
 471 013a 0F4A     	 ldr r2,.L41+8
 472              	.L31:
 540:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 473              	 .loc 1 540 0 is_stmt 0 discriminator 1
 474 013c 1368     	 ldr r3,[r2]
 475 013e 13F0040F 	 tst r3,#4
 476 0142 FBD0     	 beq .L31
 545:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 	                    (PLL_K2DIV << SCU_PLL_PLLCON1_K2DIV_Pos) |
 477              	 .loc 1 545 0 is_stmt 1
 478 0144 134A     	 ldr r2,.L41+36
 479 0146 0C4B     	 ldr r3,.L41+8
 480 0148 9A60     	 str r2,[r3,#8]
 550:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 481              	 .loc 1 550 0
 482 014a 41F27070 	 movw r0,#6000
 483 014e FFF7FEFF 	 bl delay
 484              	.LVL31:
 551:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 485              	 .loc 1 551 0
 486 0152 094A     	 ldr r2,.L41+8
 487              	.L32:
 551:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   {
 488              	 .loc 1 551 0 is_stmt 0 discriminator 1
 489 0154 1368     	 ldr r3,[r2]
 490 0156 13F0040F 	 tst r3,#4
 491 015a FBD0     	 beq .L32
 556:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** #endif /* ENABLE_PLL */
 492              	 .loc 1 556 0 is_stmt 1
 493 015c 0522     	 movs r2,#5
 494 015e 0E4B     	 ldr r3,.L41+40
 495 0160 DA60     	 str r2,[r3,#12]
 613:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 496              	 .loc 1 613 0
 497 0162 0022     	 movs r2,#0
 498 0164 03F59463 	 add r3,r3,#1184
 499 0168 5A60     	 str r2,[r3,#4]
 632:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** }
 500              	 .loc 1 632 0
 501 016a FFF7FEFF 	 bl SystemCoreClockUpdate
 502              	.LVL32:
 503 016e 10BD     	 pop {r4,pc}
 504              	.L42:
 505              	 .align 2
 506              	.L41:
 507 0170 00420050 	 .word 1342194176
 508 0174 00440050 	 .word 1342194688
 509 0178 10470050 	 .word 1342195472
 510 017c 00470050 	 .word 1342195456
 511 0180 6BCA5F6B 	 .word 1801439851
 512 0184 004F1301 	 .word 18042624
 513 0188 00460050 	 .word 1342195200
 514 018c 004F0701 	 .word 17256192
 515 0190 004F0401 	 .word 17059584
 516 0194 004F0301 	 .word 16994048
 517 0198 60410050 	 .word 1342194016
 518              	 .cfi_endproc
 519              	.LFE135:
 521              	 .section .text.SystemInit,"ax",%progbits
 522              	 .align 2
 523              	 .weak SystemInit
 524              	 .thumb
 525              	 .thumb_func
 527              	SystemInit:
 528              	.LFB133:
 326:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   memcpy(g_chipid, CHIPID_LOC, 16);
 529              	 .loc 1 326 0
 530              	 .cfi_startproc
 531              	 
 532              	 
 533 0000 10B5     	 push {r4,lr}
 534              	.LCFI4:
 535              	 .cfi_def_cfa_offset 8
 536              	 .cfi_offset 4,-8
 537              	 .cfi_offset 14,-4
 327:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** 
 538              	 .loc 1 327 0
 539 0002 4FF00053 	 mov r3,#536870912
 540 0006 044C     	 ldr r4,.L45
 541 0008 0FCB     	 ldmia r3,{r0,r1,r2,r3}
 542 000a 84E80F00 	 stmia r4,{r0,r1,r2,r3}
 329:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c ****   SystemCoreClockSetup(); 
 543              	 .loc 1 329 0
 544 000e FFF7FEFF 	 bl SystemCoreSetup
 545              	.LVL33:
 330:C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Source\system_XMC4500.c **** }
 546              	 .loc 1 330 0
 547 0012 FFF7FEFF 	 bl SystemCoreClockSetup
 548              	.LVL34:
 549 0016 10BD     	 pop {r4,pc}
 550              	.L46:
 551              	 .align 2
 552              	.L45:
 553 0018 04000000 	 .word .LANCHOR0+4
 554              	 .cfi_endproc
 555              	.LFE133:
 557              	 .global g_chipid
 558              	 .global SystemCoreClock
 559              	 .section .no_init,"aw",%progbits
 560              	 .align 2
 561              	 .set .LANCHOR0,.+0
 564              	SystemCoreClock:
 565 0000 00000000 	 .space 4
 568              	g_chipid:
 569 0004 00000000 	 .space 16
 569      00000000 
 569      00000000 
 569      00000000 
 570              	 .text
 571              	.Letext0:
 572              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 573              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 574              	 .file 5 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
 575              	 .file 6 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_XMC4500.c
    {standard input}:20     .text.delay:00000000 $t
    {standard input}:24     .text.delay:00000000 delay
    {standard input}:66     .text.SystemCoreSetup:00000000 $t
    {standard input}:71     .text.SystemCoreSetup:00000000 SystemCoreSetup
    {standard input}:135    .text.SystemCoreSetup:00000038 $d
    {standard input}:142    .text.OSCHP_GetFrequency:00000000 $t
    {standard input}:147    .text.OSCHP_GetFrequency:00000000 OSCHP_GetFrequency
    {standard input}:160    .text.OSCHP_GetFrequency:00000004 $d
    {standard input}:165    .text.SystemCoreClockUpdate:00000000 $t
    {standard input}:170    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
    {standard input}:275    .text.SystemCoreClockUpdate:0000007c $d
    {standard input}:283    .text.SystemCoreClockSetup:00000000 $t
    {standard input}:288    .text.SystemCoreClockSetup:00000000 SystemCoreClockSetup
    {standard input}:507    .text.SystemCoreClockSetup:00000170 $d
    {standard input}:522    .text.SystemInit:00000000 $t
    {standard input}:527    .text.SystemInit:00000000 SystemInit
    {standard input}:553    .text.SystemInit:00000018 $d
    {standard input}:568    .no_init:00000004 g_chipid
    {standard input}:564    .no_init:00000000 SystemCoreClock
    {standard input}:560    .no_init:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__Vectors
