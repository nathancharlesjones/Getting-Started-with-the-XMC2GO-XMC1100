   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_rtc.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_RTC_Start,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_RTC_Start
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_RTC_Start:
  26              	.LFB177:
  27              	 .file 1 "C:/Files/Projects/Git/XMCLib/src/xmc_rtc.c"
   1:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /**
   2:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * @file xmc_rtc.c
   3:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * @date 2019-05-07
   4:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *
   5:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *
   9:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * 
  18:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * 
  21:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *
  36:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *
  39:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *     - Initial <br>
  41:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *      
  42:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * 2015-06-20:
  43:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *     - Removed GetDriverVersion API
  44:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * 
  45:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * 2016-05-19:
  46:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *     - Added XMC_RTC_SetTimeStdFormat() and XMC_RTC_SetAlarmStdFormat()
  47:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *
  48:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * 2018-06-21:
  49:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *     - Fixed value of XMC_RTC_MAXSECONDS, XMC_RTC_MAXMINUTES, XMC_RTC_MAXHOURS macros
  50:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *     - Fixed assertion on XMC_RTC_MAXDAYS
  51:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *
  52:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * 2019-05-07:
  53:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *     - Fixed compilation warnings
  54:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *
  55:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * @endcond 
  56:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *
  57:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
  58:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
  59:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /**
  60:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *
  61:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * @brief RTC driver for XMC microcontroller family.
  62:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  *
  63:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
  64:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
  65:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /**************************************************************************************************
  66:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * HEADER FILES
  67:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  **************************************************************************************************
  68:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  
  69:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #include "xmc_scu.h"
  70:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #include "xmc_rtc.h"
  71:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
  72:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /**************************************************************************************************
  73:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * MACROS
  74:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  **************************************************************************************************
  75:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
  76:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #define XMC_RTC_MAXSECONDS  (60U)   /**< RTC time : Maximum seconds */
  77:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #define XMC_RTC_MAXMINUTES  (60U)   /**< RTC time : Maximum minutes */
  78:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #define XMC_RTC_MAXHOURS    (24U)   /**< RTC time : Maximum hours */
  79:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #define XMC_RTC_MAXDAYS     (31U)   /**< RTC time : Maximum days */
  80:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #define XMC_RTC_MAXDAYSOFWEEK  (7U) /**< RTC time : Maximum days of week */
  81:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #define XMC_RTC_MAXMONTH  (12U)     /**< RTC time : Maximum month */
  82:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #define XMC_RTC_MAXYEAR  (0xFFFFU)  /**< RTC time : Maximum year */
  83:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #define XMC_RTC_MAXPRESCALER  (0xFFFFU)  /**< RTC time : Maximum prescaler */
  84:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #define XMC_RTC_YEAR_OFFSET (1900U)      /**< RTC year offset : Year offset */
  85:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
  86:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #if (UC_FAMILY == XMC4)
  87:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (1U)
  88:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #endif
  89:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #if (UC_FAMILY == XMC1)
  90:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (0U)
  91:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** #endif
  92:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
  93:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /**************************************************************************************************
  94:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * API IMPLEMENTATION
  95:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  **************************************************************************************************
  96:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
  97:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /*
  98:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Enables RTC peripheral to start counting time
  99:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
 100:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** void XMC_RTC_Start(void)
 101:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** {
  28              	 .loc 1 101 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LBB16:
  34              	.LBB17:
  35              	 .file 2 "C:/Files/Projects/Git/XMCLib/inc/xmc_scu.h"
   1:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
   2:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @date 2016-03-09
   4:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
   5:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
   9:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 
  18:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 
  21:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  36:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  39:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  41:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  42:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  43:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  46:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  47:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  53:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  54:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  55:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *      
  56:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  57:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  58:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *      
  59:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @endcond 
  60:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  61:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
  62:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  63:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  64:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  
  65:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  66:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  67:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  68:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #include <xmc_common.h>
  69:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
  70:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
  71:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @{
  73:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
  74:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  
  75:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
  76:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  77:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  79:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  82:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Power control
  83:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC4 
  84:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control 
  85:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
  86:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  87:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  88:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  90:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
  96:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
  97:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC4
  99:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
 107:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC1
 108:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
 111:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 112:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 113:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC4
 114:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
 117:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC1
 118:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif <br>
 121:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 122:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 123:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 127:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC4
 128:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 129:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 134:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 135:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 137:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 138:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 141:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 142:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
 144:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 145:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 146:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC4
 148:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \if XMC1
 153:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  \endif
 157:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @{
 158:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 159:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  
 160:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 161:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * MACROS
 162:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 163:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 164:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 165:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * ENUMS
 166:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 167:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 168:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 170:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 172:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 177:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 179:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 180:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 181:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 182:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 183:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 184:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 185:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 187:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 189:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 190:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 191:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 192:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 193:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #include <xmc1_scu.h>
 195:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #include <xmc4_scu.h>
 197:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #else
 198:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 199:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #endif
 200:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 201:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 202:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 203:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 204:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 205:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 206:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** extern "C" {
 207:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 209:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 210:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 211:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 212:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 216:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 217:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 218:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 219:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 220:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 227:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 230:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 232:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 233:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** }
 234:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 235:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 236:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 237:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 238:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 239:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 240:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 241:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 242:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 243:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 244:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 245:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 246:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 247:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 248:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 249:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 250:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 251:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 252:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 253:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 254:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 255:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 256:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 257:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 258:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** }
 259:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 260:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 261:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 262:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for 
 263:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 264:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 265:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 266:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 267:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 268:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 269:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 270:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 271:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 272:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 273:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 274:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 275:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock. 
 276:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration. 
 277:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 278:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 279:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 280:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 281:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 282:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 283:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 284:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 285:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 286:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 287:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 288:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 289:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 290:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 291:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 292:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 293:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 294:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 295:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 296:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 297:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 298:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 299:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 300:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 301:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 302:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 303:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 304:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 306:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 307:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 308:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 309:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 310:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 311:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 312:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 313:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 314:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 315:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 316:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 317:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 318:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 319:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 320:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 321:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 322:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 323:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 324:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 325:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 326:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 327:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 328:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 329:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 330:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 331:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 332:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 333:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 334:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 335:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 336:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 337:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 338:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 339:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 340:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 341:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 342:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 343:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 344:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 345:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 346:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular 
 347:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 348:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 349:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation. 
 350:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 351:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 352:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 353:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 354:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 355:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 356:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 357:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 358:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 359:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 360:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 361:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 362:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 363:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 364:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 365:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 366:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 367:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 368:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 369:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 370:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 371:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 372:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 373:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 374:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 375:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 376:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 377:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 378:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 379:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 380:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 381:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 382:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * the cause of reset. 
 383:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in 
 384:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 385:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 386:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 387:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 388:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 389:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 390:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 391:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 392:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 393:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 394:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** }
 395:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 396:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None 
 397:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 398:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 399:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 400:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 401:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 402:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 403:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 405:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 406:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 407:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 408:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 409:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 410:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** }
 411:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  
 412:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 413:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 414:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 415:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 416:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 417:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 418:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 419:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 420:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 421:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 422:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 423:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 424:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 425:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 426:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 427:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 428:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** }
 429:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 430:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 431:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 432:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 433:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 434:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 435:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 436:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 437:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 438:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 439:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void); 
 440:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 441:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 442:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  
 443:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 444:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 445:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 446:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 447:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 448:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 449:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 450:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 451:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 452:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 453:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 454:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 455:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 456:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 457:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 458:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * bit fields are handled internally.
 459:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 460:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 461:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 462:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 463:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 464:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 465:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * 
 466:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 467:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 468:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 469:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 470:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 471:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 472:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 473:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  
 474:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 475:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 476:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 477:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral.
 478:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 479:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return None
 480:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 481:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 482:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 483:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the 
 484:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * peripherals that support clock gating.
 485:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 486:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 487:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 488:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 489:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 490:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 491:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 492:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 493:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 494:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 495:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 496:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 497:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 498:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 499:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 500:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 501:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 502:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 503:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 504:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done. 
 505:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 506:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 507:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 508:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 509:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 510:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 511:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 512:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 513:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 514:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 515:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 516:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 517:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \endif
 518:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * It is recommended to use this API before
 519:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 520:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 521:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 522:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 523:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 524:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 525:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** #endif
 526:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 527:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** 
 528:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** /**
 529:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 530:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 531:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 532:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *                    using \a OR operation.
 533:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  *
 534:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 535:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 536:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 537:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 538:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 539:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 540:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 541:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 542:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****  */
 543:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 544:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h **** {
 545:C:/Files/Projects/Git/XMCLib/inc\xmc_scu.h ****   return(SCU_GENERAL->MIRRSTS);
  36              	 .loc 2 545 0
  37 0000 054A     	 ldr r2,.L4
  38              	.L2:
  39              	 .loc 2 545 0 is_stmt 0 discriminator 1
  40 0002 D2F8C430 	 ldr r3,[r2,#196]
  41              	.LBE17:
  42              	.LBE16:
 102:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
  43              	 .loc 1 102 0 is_stmt 1 discriminator 1
  44 0006 13F4807F 	 tst r3,#256
  45 000a FAD1     	 bne .L2
 103:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   {
 104:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 105:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   }
 106:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   RTC->CTR |= (uint32_t)RTC_CTR_ENB_Msk;
  46              	 .loc 1 106 0
  47 000c 034A     	 ldr r2,.L4+4
  48 000e 5368     	 ldr r3,[r2,#4]
  49 0010 43F00103 	 orr r3,r3,#1
  50 0014 5360     	 str r3,[r2,#4]
  51 0016 7047     	 bx lr
  52              	.L5:
  53              	 .align 2
  54              	.L4:
  55 0018 00400050 	 .word 1342193664
  56 001c 004A0050 	 .word 1342196224
  57              	 .cfi_endproc
  58              	.LFE177:
  60              	 .section .text.XMC_RTC_Stop,"ax",%progbits
  61              	 .align 2
  62              	 .global XMC_RTC_Stop
  63              	 .thumb
  64              	 .thumb_func
  66              	XMC_RTC_Stop:
  67              	.LFB178:
 107:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** }
 108:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 109:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /*
 110:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Disables RTC peripheral to start counting time
 111:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
 112:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** void XMC_RTC_Stop(void)
 113:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** {
  68              	 .loc 1 113 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72              	 
  73              	.LBB18:
  74              	.LBB19:
  75              	 .loc 2 545 0
  76 0000 054A     	 ldr r2,.L9
  77              	.L7:
  78              	 .loc 2 545 0 is_stmt 0 discriminator 1
  79 0002 D2F8C430 	 ldr r3,[r2,#196]
  80              	.LBE19:
  81              	.LBE18:
 114:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
  82              	 .loc 1 114 0 is_stmt 1 discriminator 1
  83 0006 13F4807F 	 tst r3,#256
  84 000a FAD1     	 bne .L7
 115:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   {
 116:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 117:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   }
 118:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   RTC->CTR &= ~(uint32_t)RTC_CTR_ENB_Msk;
  85              	 .loc 1 118 0
  86 000c 034A     	 ldr r2,.L9+4
  87 000e 5368     	 ldr r3,[r2,#4]
  88 0010 23F00103 	 bic r3,r3,#1
  89 0014 5360     	 str r3,[r2,#4]
  90 0016 7047     	 bx lr
  91              	.L10:
  92              	 .align 2
  93              	.L9:
  94 0018 00400050 	 .word 1342193664
  95 001c 004A0050 	 .word 1342196224
  96              	 .cfi_endproc
  97              	.LFE178:
  99              	 .section .text.XMC_RTC_SetPrescaler,"ax",%progbits
 100              	 .align 2
 101              	 .global XMC_RTC_SetPrescaler
 102              	 .thumb
 103              	 .thumb_func
 105              	XMC_RTC_SetPrescaler:
 106              	.LFB179:
 119:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** }
 120:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 121:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /*
 122:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Sets the RTC module prescaler value
 123:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
 124:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** void XMC_RTC_SetPrescaler(uint16_t prescaler)
 125:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** {
 107              	 .loc 1 125 0
 108              	 .cfi_startproc
 109              	 
 110              	 
 111              	 
 112              	.LVL0:
 113              	.LBB20:
 114              	.LBB21:
 115              	 .loc 2 545 0
 116 0000 064A     	 ldr r2,.L14
 117              	.L12:
 118              	 .loc 2 545 0 is_stmt 0 discriminator 1
 119 0002 D2F8C430 	 ldr r3,[r2,#196]
 120              	.LBE21:
 121              	.LBE20:
 126:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetPrescaler:Wrong prescaler value", (prescaler < XMC_RTC_MAXPRESCALER));
 127:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   
 128:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 122              	 .loc 1 128 0 is_stmt 1 discriminator 1
 123 0006 13F4807F 	 tst r3,#256
 124 000a FAD1     	 bne .L12
 129:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   {
 130:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 131:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   }
 132:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   RTC->CTR = (RTC->CTR & ~(uint32_t)RTC_CTR_DIV_Msk) |
 125              	 .loc 1 132 0
 126 000c 044A     	 ldr r2,.L14+4
 127 000e 5368     	 ldr r3,[r2,#4]
 128 0010 9BB2     	 uxth r3,r3
 129 0012 43EA0040 	 orr r0,r3,r0,lsl#16
 130              	.LVL1:
 131 0016 5060     	 str r0,[r2,#4]
 132 0018 7047     	 bx lr
 133              	.L15:
 134 001a 00BF     	 .align 2
 135              	.L14:
 136 001c 00400050 	 .word 1342193664
 137 0020 004A0050 	 .word 1342196224
 138              	 .cfi_endproc
 139              	.LFE179:
 141              	 .section .text.XMC_RTC_SetTime,"ax",%progbits
 142              	 .align 2
 143              	 .global XMC_RTC_SetTime
 144              	 .thumb
 145              	 .thumb_func
 147              	XMC_RTC_SetTime:
 148              	.LFB180:
 133:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 134:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** }
 135:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 136:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /*
 137:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Sets the RTC_TIM0, RTC_TIM1 registers with time values
 138:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
 139:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** void XMC_RTC_SetTime(const XMC_RTC_TIME_t *const time)
 140:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** {
 149              	 .loc 1 140 0
 150              	 .cfi_startproc
 151              	 
 152              	 
 153              	 
 154              	.LVL2:
 155              	.LBB22:
 156              	.LBB23:
 157              	 .loc 2 545 0
 158 0000 094A     	 ldr r2,.L21
 159              	.L17:
 160              	 .loc 2 545 0 is_stmt 0 discriminator 1
 161 0002 D2F8C430 	 ldr r3,[r2,#196]
 162              	.LBE23:
 163              	.LBE22:
 141:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong seconds value", ((uint32_t)time->seconds < XMC_RTC_MAXSECONDS))
 142:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong minutes value", ((uint32_t)time->minutes < XMC_RTC_MAXMINUTES))
 143:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong hours value", ((uint32_t)time->hours < XMC_RTC_MAXHOURS));
 144:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong week day value", ((uint32_t)time->daysofweek < XMC_RTC_MAXDAYSO
 145:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong month value", ((uint32_t)time->month < XMC_RTC_MAXMONTH));
 146:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong year value", ((uint32_t)time->year < XMC_RTC_MAXYEAR));
 147:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 148:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 1U)
 149:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk) != 0U)
 164              	 .loc 1 149 0 is_stmt 1 discriminator 1
 165 0006 13F4006F 	 tst r3,#2048
 166 000a FAD1     	 bne .L17
 150:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       { 
 151:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****          /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 152:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       }
 153:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       RTC->TIM0 = time->raw0;
 167              	 .loc 1 153 0
 168 000c 0268     	 ldr r2,[r0]
 169 000e 074B     	 ldr r3,.L21+4
 170 0010 1A62     	 str r2,[r3,#32]
 171              	.LBB24:
 172              	.LBB25:
 173              	 .loc 2 545 0
 174 0012 054A     	 ldr r2,.L21
 175              	.L18:
 176              	 .loc 2 545 0 is_stmt 0 discriminator 1
 177 0014 D2F8C430 	 ldr r3,[r2,#196]
 178              	.LBE25:
 179              	.LBE24:
 154:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       
 155:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM1_Msk) != 0U)
 180              	 .loc 1 155 0 is_stmt 1 discriminator 1
 181 0018 13F4805F 	 tst r3,#4096
 182 001c FAD1     	 bne .L18
 156:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       {
 157:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 158:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       }
 159:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       RTC->TIM1 = time->raw1;	     
 183              	 .loc 1 159 0
 184 001e 4268     	 ldr r2,[r0,#4]
 185 0020 024B     	 ldr r3,.L21+4
 186 0022 5A62     	 str r2,[r3,#36]
 187 0024 7047     	 bx lr
 188              	.L22:
 189 0026 00BF     	 .align 2
 190              	.L21:
 191 0028 00400050 	 .word 1342193664
 192 002c 004A0050 	 .word 1342196224
 193              	 .cfi_endproc
 194              	.LFE180:
 196              	 .section .text.XMC_RTC_GetTime,"ax",%progbits
 197              	 .align 2
 198              	 .global XMC_RTC_GetTime
 199              	 .thumb
 200              	 .thumb_func
 202              	XMC_RTC_GetTime:
 203              	.LFB181:
 160:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   #endif
 161:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 0U)
 162:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk | SCU_GENERAL_MIRRSTS_R
 163:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       {
 164:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 165:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       }
 166:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       RTC->TIM0 = time->raw0;
 167:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       RTC->TIM1 = time->raw1;	; 
 168:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   #endif  
 169:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** }
 170:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 171:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /*
 172:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Gets the RTC module time value
 173:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
 174:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** void XMC_RTC_GetTime(XMC_RTC_TIME_t *const time)
 175:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** {
 204              	 .loc 1 175 0
 205              	 .cfi_startproc
 206              	 
 207              	 
 208              	 
 209              	.LVL3:
 176:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   time->raw0 = RTC->TIM0;
 210              	 .loc 1 176 0
 211 0000 024B     	 ldr r3,.L24
 212 0002 1A6A     	 ldr r2,[r3,#32]
 213 0004 0260     	 str r2,[r0]
 177:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   time->raw1 = RTC->TIM1;
 214              	 .loc 1 177 0
 215 0006 5B6A     	 ldr r3,[r3,#36]
 216 0008 4360     	 str r3,[r0,#4]
 217 000a 7047     	 bx lr
 218              	.L25:
 219              	 .align 2
 220              	.L24:
 221 000c 004A0050 	 .word 1342196224
 222              	 .cfi_endproc
 223              	.LFE181:
 225              	 .section .text.XMC_RTC_SetTimeStdFormat,"ax",%progbits
 226              	 .align 2
 227              	 .global XMC_RTC_SetTimeStdFormat
 228              	 .thumb
 229              	 .thumb_func
 231              	XMC_RTC_SetTimeStdFormat:
 232              	.LFB182:
 178:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** }
 179:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 180:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /*
 181:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Sets the RTC module time values in standard format
 182:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
 183:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** void XMC_RTC_SetTimeStdFormat(const struct tm *const stdtime)
 184:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** {
 233              	 .loc 1 184 0
 234              	 .cfi_startproc
 235              	 
 236              	 
 237              	.LVL4:
 238 0000 00B5     	 push {lr}
 239              	.LCFI0:
 240              	 .cfi_def_cfa_offset 4
 241              	 .cfi_offset 14,-4
 242 0002 83B0     	 sub sp,sp,#12
 243              	.LCFI1:
 244              	 .cfi_def_cfa_offset 16
 185:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 186:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_RTC_TIME_t time;
 187:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 188:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   time.seconds = stdtime->tm_sec;
 245              	 .loc 1 188 0
 246 0004 0268     	 ldr r2,[r0]
 247 0006 9DF80030 	 ldrb r3,[sp]
 248 000a 62F30503 	 bfi r3,r2,#0,#6
 249 000e 8DF80030 	 strb r3,[sp]
 189:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   time.minutes = stdtime->tm_min;
 250              	 .loc 1 189 0
 251 0012 4268     	 ldr r2,[r0,#4]
 252 0014 9DF80130 	 ldrb r3,[sp,#1]
 253 0018 62F30503 	 bfi r3,r2,#0,#6
 254 001c 8DF80130 	 strb r3,[sp,#1]
 190:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   time.hours = stdtime->tm_hour;
 255              	 .loc 1 190 0
 256 0020 8268     	 ldr r2,[r0,#8]
 257 0022 9DF80230 	 ldrb r3,[sp,#2]
 258 0026 62F30403 	 bfi r3,r2,#0,#5
 259 002a 8DF80230 	 strb r3,[sp,#2]
 191:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   time.days = stdtime->tm_mday - 1;
 260              	 .loc 1 191 0
 261 002e C368     	 ldr r3,[r0,#12]
 262 0030 013B     	 subs r3,r3,#1
 263 0032 9DF80320 	 ldrb r2,[sp,#3]
 264 0036 63F30402 	 bfi r2,r3,#0,#5
 265 003a 8DF80320 	 strb r2,[sp,#3]
 192:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   time.month = stdtime->tm_mon;
 266              	 .loc 1 192 0
 267 003e 0269     	 ldr r2,[r0,#16]
 268 0040 9DF80530 	 ldrb r3,[sp,#5]
 269 0044 62F30303 	 bfi r3,r2,#0,#4
 270 0048 8DF80530 	 strb r3,[sp,#5]
 193:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   time.year = stdtime->tm_year + XMC_RTC_YEAR_OFFSET;
 271              	 .loc 1 193 0
 272 004c 4369     	 ldr r3,[r0,#20]
 273 004e 03F26C73 	 addw r3,r3,#1900
 274 0052 ADF80630 	 strh r3,[sp,#6]
 194:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   time.daysofweek = stdtime->tm_wday;
 275              	 .loc 1 194 0
 276 0056 8269     	 ldr r2,[r0,#24]
 277 0058 9DF80430 	 ldrb r3,[sp,#4]
 278 005c 62F30203 	 bfi r3,r2,#0,#3
 279 0060 8DF80430 	 strb r3,[sp,#4]
 195:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 196:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_RTC_SetTime(&time);
 280              	 .loc 1 196 0
 281 0064 6846     	 mov r0,sp
 282              	.LVL5:
 283 0066 FFF7FEFF 	 bl XMC_RTC_SetTime
 284              	.LVL6:
 197:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** }
 285              	 .loc 1 197 0
 286 006a 03B0     	 add sp,sp,#12
 287              	.LCFI2:
 288              	 .cfi_def_cfa_offset 4
 289              	 
 290 006c 5DF804FB 	 ldr pc,[sp],#4
 291              	 .cfi_endproc
 292              	.LFE182:
 294              	 .section .text.XMC_RTC_GetTimeStdFormat,"ax",%progbits
 295              	 .align 2
 296              	 .global XMC_RTC_GetTimeStdFormat
 297              	 .thumb
 298              	 .thumb_func
 300              	XMC_RTC_GetTimeStdFormat:
 301              	.LFB183:
 198:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 199:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /*
 200:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Gets the RTC module time values in standard format
 201:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
 202:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** void XMC_RTC_GetTimeStdFormat(struct tm *const stdtime)
 203:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** {
 302              	 .loc 1 203 0
 303              	 .cfi_startproc
 304              	 
 305              	 
 306              	 
 307              	.LVL7:
 308 0000 82B0     	 sub sp,sp,#8
 309              	.LCFI3:
 310              	 .cfi_def_cfa_offset 8
 204:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_RTC_TIME_t time;
 205:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   time.raw0 = RTC->TIM0;
 311              	 .loc 1 205 0
 312 0002 124B     	 ldr r3,.L30
 313 0004 1A6A     	 ldr r2,[r3,#32]
 314 0006 0092     	 str r2,[sp]
 206:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   time.raw1 = RTC->TIM1;
 315              	 .loc 1 206 0
 316 0008 5B6A     	 ldr r3,[r3,#36]
 207:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   
 208:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_sec = (int8_t)time.seconds;
 317              	 .loc 1 208 0
 318 000a 9DF80020 	 ldrb r2,[sp]
 319 000e 02F03F02 	 and r2,r2,#63
 320 0012 0260     	 str r2,[r0]
 209:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_min = (int8_t)time.minutes;
 321              	 .loc 1 209 0
 322 0014 9DF80120 	 ldrb r2,[sp,#1]
 323 0018 02F03F02 	 and r2,r2,#63
 324 001c 4260     	 str r2,[r0,#4]
 210:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_hour = (int8_t)time.hours;
 325              	 .loc 1 210 0
 326 001e 9DF80220 	 ldrb r2,[sp,#2]
 327 0022 02F01F02 	 and r2,r2,#31
 328 0026 8260     	 str r2,[r0,#8]
 211:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)time.days + (int8_t)1);
 329              	 .loc 1 211 0
 330 0028 9DF80320 	 ldrb r2,[sp,#3]
 331 002c 02F01F02 	 and r2,r2,#31
 332 0030 0132     	 adds r2,r2,#1
 333 0032 C260     	 str r2,[r0,#12]
 212:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_mon = (int8_t)time.month;
 334              	 .loc 1 212 0
 335 0034 C3F30322 	 ubfx r2,r3,#8,#4
 336 0038 0261     	 str r2,[r0,#16]
 213:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_year = (int32_t)time.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 337              	 .loc 1 213 0
 338 003a 1A0C     	 lsrs r2,r3,#16
 339 003c A2F26C72 	 subw r2,r2,#1900
 340 0040 4261     	 str r2,[r0,#20]
 214:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_wday = (int8_t)time.daysofweek;
 341              	 .loc 1 214 0
 342 0042 03F00703 	 and r3,r3,#7
 343 0046 8361     	 str r3,[r0,#24]
 215:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** }
 344              	 .loc 1 215 0
 345 0048 02B0     	 add sp,sp,#8
 346              	.LCFI4:
 347              	 .cfi_def_cfa_offset 0
 348              	 
 349 004a 7047     	 bx lr
 350              	.L31:
 351              	 .align 2
 352              	.L30:
 353 004c 004A0050 	 .word 1342196224
 354              	 .cfi_endproc
 355              	.LFE183:
 357              	 .section .text.XMC_RTC_SetAlarm,"ax",%progbits
 358              	 .align 2
 359              	 .global XMC_RTC_SetAlarm
 360              	 .thumb
 361              	 .thumb_func
 363              	XMC_RTC_SetAlarm:
 364              	.LFB184:
 216:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 217:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /*
 218:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Sets the RTC module alarm time value
 219:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
 220:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** void XMC_RTC_SetAlarm(const XMC_RTC_ALARM_t *const alarm)
 221:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** {
 365              	 .loc 1 221 0
 366              	 .cfi_startproc
 367              	 
 368              	 
 369              	 
 370              	.LVL8:
 371              	.LBB26:
 372              	.LBB27:
 373              	 .loc 2 545 0
 374 0000 094A     	 ldr r2,.L37
 375              	.L33:
 376              	 .loc 2 545 0 is_stmt 0 discriminator 1
 377 0002 D2F8C430 	 ldr r3,[r2,#196]
 378              	.LBE27:
 379              	.LBE26:
 222:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong seconds value", ((uint32_t)alarm->seconds < XMC_RTC_MAXSECONDS
 223:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong minutes value", ((uint32_t)alarm->minutes < XMC_RTC_MAXMINUTES
 224:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong hours value", ((uint32_t)alarm->hours < XMC_RTC_MAXHOURS));
 225:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong month value", ((uint32_t)alarm->month < XMC_RTC_MAXMONTH));
 226:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong year value", ((uint32_t)alarm->year < XMC_RTC_MAXYEAR));
 227:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 228:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 1U)
 229:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk) != 0U)
 380              	 .loc 1 229 0 is_stmt 1 discriminator 1
 381 0006 13F4007F 	 tst r3,#512
 382 000a FAD1     	 bne .L33
 230:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       {
 231:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 232:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       }
 233:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       RTC->ATIM0 = alarm->raw0;
 383              	 .loc 1 233 0
 384 000c 0268     	 ldr r2,[r0]
 385 000e 074B     	 ldr r3,.L37+4
 386 0010 9A61     	 str r2,[r3,#24]
 387              	.LBB28:
 388              	.LBB29:
 389              	 .loc 2 545 0
 390 0012 054A     	 ldr r2,.L37
 391              	.L34:
 392              	 .loc 2 545 0 is_stmt 0 discriminator 1
 393 0014 D2F8C430 	 ldr r3,[r2,#196]
 394              	.LBE29:
 395              	.LBE28:
 234:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       
 235:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM1_Msk) != 0U)
 396              	 .loc 1 235 0 is_stmt 1 discriminator 1
 397 0018 13F4806F 	 tst r3,#1024
 398 001c FAD1     	 bne .L34
 236:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       {
 237:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 238:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       }
 239:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 399              	 .loc 1 239 0
 400 001e 4268     	 ldr r2,[r0,#4]
 401 0020 024B     	 ldr r3,.L37+4
 402 0022 DA61     	 str r2,[r3,#28]
 403 0024 7047     	 bx lr
 404              	.L38:
 405 0026 00BF     	 .align 2
 406              	.L37:
 407 0028 00400050 	 .word 1342193664
 408 002c 004A0050 	 .word 1342196224
 409              	 .cfi_endproc
 410              	.LFE184:
 412              	 .section .text.XMC_RTC_GetAlarm,"ax",%progbits
 413              	 .align 2
 414              	 .global XMC_RTC_GetAlarm
 415              	 .thumb
 416              	 .thumb_func
 418              	XMC_RTC_GetAlarm:
 419              	.LFB185:
 240:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   #endif
 241:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 0U)
 242:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk | SCU_GENERAL_MIRRSTS_
 243:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       {
 244:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 245:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       }
 246:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       RTC->ATIM0 = alarm->raw0;
 247:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 248:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   #endif  
 249:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** }
 250:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 251:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /*
 252:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Gets the RTC module alarm time value
 253:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
 254:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** void XMC_RTC_GetAlarm(XMC_RTC_ALARM_t *const alarm)
 255:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** {
 420              	 .loc 1 255 0
 421              	 .cfi_startproc
 422              	 
 423              	 
 424              	 
 425              	.LVL9:
 256:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   alarm->raw0 = RTC->ATIM0;
 426              	 .loc 1 256 0
 427 0000 024B     	 ldr r3,.L40
 428 0002 9A69     	 ldr r2,[r3,#24]
 429 0004 0260     	 str r2,[r0]
 257:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   alarm->raw1 = RTC->ATIM1;
 430              	 .loc 1 257 0
 431 0006 DB69     	 ldr r3,[r3,#28]
 432 0008 4360     	 str r3,[r0,#4]
 433 000a 7047     	 bx lr
 434              	.L41:
 435              	 .align 2
 436              	.L40:
 437 000c 004A0050 	 .word 1342196224
 438              	 .cfi_endproc
 439              	.LFE185:
 441              	 .section .text.XMC_RTC_SetAlarmStdFormat,"ax",%progbits
 442              	 .align 2
 443              	 .global XMC_RTC_SetAlarmStdFormat
 444              	 .thumb
 445              	 .thumb_func
 447              	XMC_RTC_SetAlarmStdFormat:
 448              	.LFB186:
 258:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** }
 259:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 260:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 261:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /*
 262:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Sets the RTC module alarm time value in standard format
 263:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
 264:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** void XMC_RTC_SetAlarmStdFormat(const struct tm *const stdtime)
 265:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** {
 449              	 .loc 1 265 0
 450              	 .cfi_startproc
 451              	 
 452              	 
 453              	.LVL10:
 454 0000 00B5     	 push {lr}
 455              	.LCFI5:
 456              	 .cfi_def_cfa_offset 4
 457              	 .cfi_offset 14,-4
 458 0002 83B0     	 sub sp,sp,#12
 459              	.LCFI6:
 460              	 .cfi_def_cfa_offset 16
 266:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 267:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   
 268:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 269:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   alarm.seconds = stdtime->tm_sec;
 461              	 .loc 1 269 0
 462 0004 0268     	 ldr r2,[r0]
 463 0006 9DF80030 	 ldrb r3,[sp]
 464 000a 62F30503 	 bfi r3,r2,#0,#6
 465 000e 8DF80030 	 strb r3,[sp]
 270:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   alarm.minutes = stdtime->tm_min;
 466              	 .loc 1 270 0
 467 0012 4268     	 ldr r2,[r0,#4]
 468 0014 9DF80130 	 ldrb r3,[sp,#1]
 469 0018 62F30503 	 bfi r3,r2,#0,#6
 470 001c 8DF80130 	 strb r3,[sp,#1]
 271:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   alarm.hours = stdtime->tm_hour;
 471              	 .loc 1 271 0
 472 0020 8268     	 ldr r2,[r0,#8]
 473 0022 9DF80230 	 ldrb r3,[sp,#2]
 474 0026 62F30403 	 bfi r3,r2,#0,#5
 475 002a 8DF80230 	 strb r3,[sp,#2]
 272:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   alarm.days = stdtime->tm_mday - 1;
 476              	 .loc 1 272 0
 477 002e C368     	 ldr r3,[r0,#12]
 478 0030 013B     	 subs r3,r3,#1
 479 0032 9DF80320 	 ldrb r2,[sp,#3]
 480 0036 63F30402 	 bfi r2,r3,#0,#5
 481 003a 8DF80320 	 strb r2,[sp,#3]
 273:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   alarm.month = stdtime->tm_mon;
 482              	 .loc 1 273 0
 483 003e 0269     	 ldr r2,[r0,#16]
 484 0040 9DF80530 	 ldrb r3,[sp,#5]
 485 0044 62F30303 	 bfi r3,r2,#0,#4
 486 0048 8DF80530 	 strb r3,[sp,#5]
 274:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   alarm.year = stdtime->tm_year + XMC_RTC_YEAR_OFFSET;
 487              	 .loc 1 274 0
 488 004c 4369     	 ldr r3,[r0,#20]
 489 004e 03F26C73 	 addw r3,r3,#1900
 490 0052 ADF80630 	 strh r3,[sp,#6]
 275:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 276:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_RTC_SetAlarm(&alarm);
 491              	 .loc 1 276 0
 492 0056 6846     	 mov r0,sp
 493              	.LVL11:
 494 0058 FFF7FEFF 	 bl XMC_RTC_SetAlarm
 495              	.LVL12:
 277:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** }
 496              	 .loc 1 277 0
 497 005c 03B0     	 add sp,sp,#12
 498              	.LCFI7:
 499              	 .cfi_def_cfa_offset 4
 500              	 
 501 005e 5DF804FB 	 ldr pc,[sp],#4
 502              	 .cfi_endproc
 503              	.LFE186:
 505 0062 00BF     	 .section .text.XMC_RTC_GetAlarmStdFormat,"ax",%progbits
 506              	 .align 2
 507              	 .global XMC_RTC_GetAlarmStdFormat
 508              	 .thumb
 509              	 .thumb_func
 511              	XMC_RTC_GetAlarmStdFormat:
 512              	.LFB187:
 278:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 279:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /*
 280:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Gets the RTC module alarm time value in standard format
 281:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
 282:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** void XMC_RTC_GetAlarmStdFormat(struct tm *const stdtime)
 283:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** {
 513              	 .loc 1 283 0
 514              	 .cfi_startproc
 515              	 
 516              	 
 517              	 
 518              	.LVL13:
 519 0000 82B0     	 sub sp,sp,#8
 520              	.LCFI8:
 521              	 .cfi_def_cfa_offset 8
 284:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 285:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   
 286:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   alarm.raw0 = RTC->ATIM0;
 522              	 .loc 1 286 0
 523 0002 114B     	 ldr r3,.L46
 524 0004 9A69     	 ldr r2,[r3,#24]
 525 0006 0092     	 str r2,[sp]
 287:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   alarm.raw1 = RTC->ATIM1;
 526              	 .loc 1 287 0
 527 0008 DB69     	 ldr r3,[r3,#28]
 288:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 289:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_sec = (int8_t)alarm.seconds;
 528              	 .loc 1 289 0
 529 000a 9DF80020 	 ldrb r2,[sp]
 530 000e 02F03F02 	 and r2,r2,#63
 531 0012 0260     	 str r2,[r0]
 290:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_min = (int8_t)alarm.minutes;
 532              	 .loc 1 290 0
 533 0014 9DF80120 	 ldrb r2,[sp,#1]
 534 0018 02F03F02 	 and r2,r2,#63
 535 001c 4260     	 str r2,[r0,#4]
 291:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_hour = (int8_t)alarm.hours;
 536              	 .loc 1 291 0
 537 001e 9DF80220 	 ldrb r2,[sp,#2]
 538 0022 02F01F02 	 and r2,r2,#31
 539 0026 8260     	 str r2,[r0,#8]
 292:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)alarm.days + (int8_t)1);
 540              	 .loc 1 292 0
 541 0028 9DF80320 	 ldrb r2,[sp,#3]
 542 002c 02F01F02 	 and r2,r2,#31
 543 0030 0132     	 adds r2,r2,#1
 544 0032 C260     	 str r2,[r0,#12]
 293:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_mon = (int8_t)alarm.month;
 545              	 .loc 1 293 0
 546 0034 C3F30322 	 ubfx r2,r3,#8,#4
 547 0038 0261     	 str r2,[r0,#16]
 294:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   stdtime->tm_year = (int32_t)alarm.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 548              	 .loc 1 294 0
 549 003a 1B0C     	 lsrs r3,r3,#16
 550 003c A3F26C73 	 subw r3,r3,#1900
 551 0040 4361     	 str r3,[r0,#20]
 295:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** }
 552              	 .loc 1 295 0
 553 0042 02B0     	 add sp,sp,#8
 554              	.LCFI9:
 555              	 .cfi_def_cfa_offset 0
 556              	 
 557 0044 7047     	 bx lr
 558              	.L47:
 559 0046 00BF     	 .align 2
 560              	.L46:
 561 0048 004A0050 	 .word 1342196224
 562              	 .cfi_endproc
 563              	.LFE187:
 565              	 .section .text.XMC_RTC_GetEventStatus,"ax",%progbits
 566              	 .align 2
 567              	 .global XMC_RTC_GetEventStatus
 568              	 .thumb
 569              	 .thumb_func
 571              	XMC_RTC_GetEventStatus:
 572              	.LFB188:
 296:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** 
 297:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** /*
 298:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  * Gets the RTC periodic and alarm event(s) status
 299:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****  */
 300:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** uint32_t XMC_RTC_GetEventStatus(void)
 301:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** {
 573              	 .loc 1 301 0
 574              	 .cfi_startproc
 575              	 
 576              	 
 577              	 
 302:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c ****   return RTC->STSSR;
 578              	 .loc 1 302 0
 579 0000 014B     	 ldr r3,.L49
 580 0002 D868     	 ldr r0,[r3,#12]
 303:C:/Files/Projects/Git/XMCLib/src\xmc_rtc.c **** }
 581              	 .loc 1 303 0
 582 0004 7047     	 bx lr
 583              	.L50:
 584 0006 00BF     	 .align 2
 585              	.L49:
 586 0008 004A0050 	 .word 1342196224
 587              	 .cfi_endproc
 588              	.LFE188:
 590              	 .text
 591              	.Letext0:
 592              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 593              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 594              	 .file 5 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 595              	 .file 6 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\time.h"
 596              	 .file 7 "C:/Files/Projects/Git/XMCLib/inc/xmc_rtc.h"
 597              	 .file 8 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
 598              	 .file 9 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
 599              	 .file 10 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_rtc.c
    {standard input}:20     .text.XMC_RTC_Start:00000000 $t
    {standard input}:25     .text.XMC_RTC_Start:00000000 XMC_RTC_Start
    {standard input}:55     .text.XMC_RTC_Start:00000018 $d
    {standard input}:61     .text.XMC_RTC_Stop:00000000 $t
    {standard input}:66     .text.XMC_RTC_Stop:00000000 XMC_RTC_Stop
    {standard input}:94     .text.XMC_RTC_Stop:00000018 $d
    {standard input}:100    .text.XMC_RTC_SetPrescaler:00000000 $t
    {standard input}:105    .text.XMC_RTC_SetPrescaler:00000000 XMC_RTC_SetPrescaler
    {standard input}:136    .text.XMC_RTC_SetPrescaler:0000001c $d
    {standard input}:142    .text.XMC_RTC_SetTime:00000000 $t
    {standard input}:147    .text.XMC_RTC_SetTime:00000000 XMC_RTC_SetTime
    {standard input}:191    .text.XMC_RTC_SetTime:00000028 $d
    {standard input}:197    .text.XMC_RTC_GetTime:00000000 $t
    {standard input}:202    .text.XMC_RTC_GetTime:00000000 XMC_RTC_GetTime
    {standard input}:221    .text.XMC_RTC_GetTime:0000000c $d
    {standard input}:226    .text.XMC_RTC_SetTimeStdFormat:00000000 $t
    {standard input}:231    .text.XMC_RTC_SetTimeStdFormat:00000000 XMC_RTC_SetTimeStdFormat
    {standard input}:295    .text.XMC_RTC_GetTimeStdFormat:00000000 $t
    {standard input}:300    .text.XMC_RTC_GetTimeStdFormat:00000000 XMC_RTC_GetTimeStdFormat
    {standard input}:353    .text.XMC_RTC_GetTimeStdFormat:0000004c $d
    {standard input}:358    .text.XMC_RTC_SetAlarm:00000000 $t
    {standard input}:363    .text.XMC_RTC_SetAlarm:00000000 XMC_RTC_SetAlarm
    {standard input}:407    .text.XMC_RTC_SetAlarm:00000028 $d
    {standard input}:413    .text.XMC_RTC_GetAlarm:00000000 $t
    {standard input}:418    .text.XMC_RTC_GetAlarm:00000000 XMC_RTC_GetAlarm
    {standard input}:437    .text.XMC_RTC_GetAlarm:0000000c $d
    {standard input}:442    .text.XMC_RTC_SetAlarmStdFormat:00000000 $t
    {standard input}:447    .text.XMC_RTC_SetAlarmStdFormat:00000000 XMC_RTC_SetAlarmStdFormat
    {standard input}:506    .text.XMC_RTC_GetAlarmStdFormat:00000000 $t
    {standard input}:511    .text.XMC_RTC_GetAlarmStdFormat:00000000 XMC_RTC_GetAlarmStdFormat
    {standard input}:561    .text.XMC_RTC_GetAlarmStdFormat:00000048 $d
    {standard input}:566    .text.XMC_RTC_GetEventStatus:00000000 $t
    {standard input}:571    .text.XMC_RTC_GetEventStatus:00000000 XMC_RTC_GetEventStatus
    {standard input}:586    .text.XMC_RTC_GetEventStatus:00000008 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
