   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usic.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_Disable,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_USIC_CH_Disable
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_USIC_CH_Disable:
  26              	.LFB237:
  27              	 .file 1 "C:/Files/Projects/Git/XMCLib/src/xmc_usic.c"
   1:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** /**
   2:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * @file xmc_usic.c
   3:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * @date 2019-05-07
   4:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *
   5:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *
   9:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * 
  18:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * 
  21:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *
  36:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *
  39:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *     - Initial draft <br>
  41:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *     - Documentation improved <br>
  42:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *
  43:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * 2015-05-08:
  44:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *     - Clearing bit fields PDIV, PCTQ, PPPEN in XMC_USIC_CH_SetBaudrate() API <br>
  45:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *      
  46:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * 2015-06-20:
  47:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *
  49:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * 2015-08-27:
  50:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  51:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *
  52:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * 2015-08-28:
  53:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *     - Added asserts to XMC_USIC_CH_ConfigExternalInputSignalToBRG() <br>
  54:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *
  55:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * 2015-09-01:
  56:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *     - Fixed warning in the asserts <br>
  57:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *
  58:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * 2018-09-29:
  59:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  60:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * 
  61:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * 2019-03-30:
  62:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *     - Changed XMC_USIC_Enable() adding polling to check clock ungate
  63:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *
  64:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * 2019-05-07:
  65:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  66:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *
  67:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * @endcond
  68:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *
  69:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  */
  70:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
  71:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** /*******************************************************************************
  72:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * HEADER FILES
  73:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *******************************************************************************/
  74:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
  75:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #include "xmc_usic.h"
  76:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #include "xmc_scu.h"
  77:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
  78:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #include <stdlib.h>     /* abs */
  79:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
  80:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** /*******************************************************************************
  81:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * MACROS
  82:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *******************************************************************************/
  83:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
  84:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #define USIC_CH_INPR_Msk       (0x7UL)
  85:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
  86:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** /*******************************************************************************
  87:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  * API IMPLEMENTATION
  88:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****  *******************************************************************************/
  89:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
  90:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel)
  91:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
  92:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
  93:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
  94:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   if ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1))
  95:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
  96:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC0);
  97:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
  98:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(USIC1)
  99:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else if((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1))
 100:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 101:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC1);
 102:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 103:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif
 104:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(USIC2)
 105:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else if((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1))
 106:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 107:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC2);
 108:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 109:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif
 110:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else
 111:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 112:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0U/*Always*/);
 113:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 114:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 115:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* USIC channel switched on*/
 116:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->KSCFG = (USIC_CH_KSCFG_MODEN_Msk | USIC_CH_KSCFG_BPMODEN_Msk);
 117:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 118:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 119:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     /* Wait till the channel is enabled */
 120:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 121:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 122:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* Set USIC channel in IDLE mode */
 123:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->CCR &= (uint32_t)~USIC_CH_CCR_MODE_Msk;
 124:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 125:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 126:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel)
 127:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
  28              	 .loc 1 127 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
 128:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
  34              	 .loc 1 128 0
  35 0000 C368     	 ldr r3,[r0,#12]
  36 0002 23F00303 	 bic r3,r3,#3
  37 0006 43F00203 	 orr r3,r3,#2
  38 000a C360     	 str r3,[r0,#12]
  39 000c 7047     	 bx lr
  40              	 .cfi_endproc
  41              	.LFE237:
  43 000e 00BF     	 .section .text.XMC_USIC_CH_SetBaudrate,"ax",%progbits
  44              	 .align 2
  45              	 .global XMC_USIC_CH_SetBaudrate
  46              	 .thumb
  47              	 .thumb_func
  49              	XMC_USIC_CH_SetBaudrate:
  50              	.LFB238:
 129:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 130:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 131:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 132:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
  51              	 .loc 1 132 0
  52              	 .cfi_startproc
  53              	 
  54              	 
  55              	.LVL1:
 133:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 134:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   
 135:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t peripheral_clock;
 136:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   
 137:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t clock_divider;
 138:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t clock_divider_min;
 139:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 140:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t pdiv;
 141:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t pdiv_int;
 142:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t pdiv_int_min;
 143:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   
 144:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t pdiv_frac;
 145:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t pdiv_frac_min;
 146:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 147:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* The rate and peripheral clock are divided by 100 to be able to use only 32bit arithmetic */
 148:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   if ((rate >= 100U) && (oversampling != 0U))
  56              	 .loc 1 148 0
  57 0000 6329     	 cmp r1,#99
  58 0002 3DD9     	 bls .L6
  59              	 .loc 1 148 0 is_stmt 0 discriminator 1
  60 0004 002A     	 cmp r2,#0
  61 0006 3DD0     	 beq .L7
 132:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
  62              	 .loc 1 132 0 is_stmt 1
  63 0008 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
  64              	.LCFI0:
  65              	 .cfi_def_cfa_offset 24
  66              	 .cfi_offset 4,-24
  67              	 .cfi_offset 5,-20
  68              	 .cfi_offset 6,-16
  69              	 .cfi_offset 7,-12
  70              	 .cfi_offset 8,-8
  71              	 .cfi_offset 14,-4
  72 000c 1746     	 mov r7,r2
  73 000e 0C46     	 mov r4,r1
  74 0010 8046     	 mov r8,r0
 149:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 150:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / 100U;
  75              	 .loc 1 150 0
  76 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
  77              	.LVL2:
  78 0016 1C4E     	 ldr r6,.L11
  79 0018 A6FB0032 	 umull r3,r2,r6,r0
  80 001c 5209     	 lsrs r2,r2,#5
  81              	.LVL3:
 151:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     rate = rate / 100U;
  82              	 .loc 1 151 0
  83 001e A6FB0436 	 umull r3,r6,r6,r4
  84 0022 7609     	 lsrs r6,r6,#5
 152:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 153:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     clock_divider_min = 1U;
 154:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     pdiv_int_min = 1U;
 155:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
 156:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 157:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     for(clock_divider = 1023U; clock_divider > 0U; --clock_divider)
 158:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     {
 159:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       pdiv = ((peripheral_clock * clock_divider) / (rate * oversampling));
  85              	 .loc 1 159 0
  86 0024 07FB06F6 	 mul r6,r7,r6
  87 0028 C2EB8224 	 rsb r4,r2,r2,lsl#10
  88              	.LVL4:
 155:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
  89              	 .loc 1 155 0
  90 002c 40F2FF30 	 movw r0,#1023
 154:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
  91              	 .loc 1 154 0
  92 0030 4FF0010E 	 mov lr,#1
 153:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     pdiv_int_min = 1U;
  93              	 .loc 1 153 0
  94 0034 F446     	 mov ip,lr
 157:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     {
  95              	 .loc 1 157 0
  96 0036 0146     	 mov r1,r0
  97              	.LVL5:
  98              	.L5:
  99              	 .loc 1 159 0
 100 0038 B4FBF6F3 	 udiv r3,r4,r6
 101              	.LVL6:
 160:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 102              	 .loc 1 160 0
 103 003c 9D0A     	 lsrs r5,r3,#10
 104              	.LVL7:
 161:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 162:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 163:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       if ((pdiv_int < 1024U) && (pdiv_frac < pdiv_frac_min))
 105              	 .loc 1 163 0
 106 003e B5F5806F 	 cmp r5,#1024
 107 0042 06D2     	 bcs .L4
 161:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 108              	 .loc 1 161 0 discriminator 1
 109 0044 C3F30903 	 ubfx r3,r3,#0,#10
 110              	.LVL8:
 111              	 .loc 1 163 0 discriminator 1
 112 0048 8342     	 cmp r3,r0
 113 004a 02D2     	 bcs .L4
 164:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       {
 165:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****         pdiv_frac_min = pdiv_frac;
 114              	 .loc 1 165 0
 115 004c 1846     	 mov r0,r3
 116              	.LVL9:
 166:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****         pdiv_int_min = pdiv_int;
 117              	 .loc 1 166 0
 118 004e AE46     	 mov lr,r5
 163:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       {
 119              	 .loc 1 163 0
 120 0050 8C46     	 mov ip,r1
 121              	.L4:
 122              	.LVL10:
 123 0052 A41A     	 subs r4,r4,r2
 124              	.LVL11:
 157:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     {
 125              	 .loc 1 157 0 discriminator 2
 126 0054 0139     	 subs r1,r1,#1
 127              	.LVL12:
 128 0056 EFD1     	 bne .L5
 167:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****         clock_divider_min = clock_divider;
 168:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       }
 169:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     }
 170:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 171:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL |
 129              	 .loc 1 171 0
 130 0058 4CF40043 	 orr r3,ip,#32768
 131 005c C8F81030 	 str r3,[r8,#16]
 172:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    (clock_divider_min << USIC_CH_FDR_STEP_Pos);
 173:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 174:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 132              	 .loc 1 174 0
 133 0060 D8F81420 	 ldr r2,[r8,#20]
 134              	.LVL13:
 175:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 176:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 177:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 178:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 135              	 .loc 1 178 0
 136 0064 013F     	 subs r7,r7,#1
 137              	.LVL14:
 174:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 138              	 .loc 1 174 0
 139 0066 094B     	 ldr r3,.L11+4
 140 0068 1340     	 ands r3,r3,r2
 177:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 141              	 .loc 1 177 0
 142 006a 43EA8723 	 orr r3,r3,r7,lsl#10
 179:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 143              	 .loc 1 179 0
 144 006e 0EF1FF3E 	 add lr,lr,#-1
 178:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 145              	 .loc 1 178 0
 146 0072 43EA0E43 	 orr r3,r3,lr,lsl#16
 174:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 147              	 .loc 1 174 0
 148 0076 C8F81430 	 str r3,[r8,#20]
 149              	.LVL15:
 180:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                     
 181:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 150              	 .loc 1 181 0
 151 007a 0020     	 movs r0,#0
 152              	.LVL16:
 153 007c BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 154              	.LVL17:
 155              	.L6:
 156              	.LCFI1:
 157              	 .cfi_def_cfa_offset 0
 158              	 .cfi_restore 4
 159              	 .cfi_restore 5
 160              	 .cfi_restore 6
 161              	 .cfi_restore 7
 162              	 .cfi_restore 8
 163              	 .cfi_restore 14
 182:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 183:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else 
 184:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 185:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 164              	 .loc 1 185 0
 165 0080 0120     	 movs r0,#1
 166              	.LVL18:
 167 0082 7047     	 bx lr
 168              	.LVL19:
 169              	.L7:
 170 0084 0120     	 movs r0,#1
 171              	.LVL20:
 172 0086 7047     	 bx lr
 173              	.L12:
 174              	 .align 2
 175              	.L11:
 176 0088 1F85EB51 	 .word 1374389535
 177 008c EF8000FC 	 .word -67075857
 178              	 .cfi_endproc
 179              	.LFE238:
 181              	 .section .text.XMC_USIC_CH_SetBaudrateEx,"ax",%progbits
 182              	 .align 2
 183              	 .global XMC_USIC_CH_SetBaudrateEx
 184              	 .thumb
 185              	 .thumb_func
 187              	XMC_USIC_CH_SetBaudrateEx:
 188              	.LFB239:
 186:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 187:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   
 188:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   return status;
 189:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 190:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 191:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 192:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 189              	 .loc 1 192 0
 190              	 .cfi_startproc
 191              	 
 192              	 
 193              	.LVL21:
 194 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 195              	.LCFI2:
 196              	 .cfi_def_cfa_offset 24
 197              	 .cfi_offset 3,-24
 198              	 .cfi_offset 4,-20
 199              	 .cfi_offset 5,-16
 200              	 .cfi_offset 6,-12
 201              	 .cfi_offset 7,-8
 202              	 .cfi_offset 14,-4
 203 0002 0546     	 mov r5,r0
 204 0004 0F46     	 mov r7,r1
 205 0006 1646     	 mov r6,r2
 193:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   int32_t peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 206              	 .loc 1 193 0
 207 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 208              	.LVL22:
 194:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   int32_t brg_clock = rate * oversampling;
 209              	 .loc 1 194 0
 210 000c 06FB07F3 	 mul r3,r6,r7
 211              	.LVL23:
 195:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   int32_t actual_rate_upper;
 196:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   int32_t actual_rate_lower;
 197:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t pdiv = 1;
 198:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t divider_step;
 199:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 200:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 201:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   if (peripheral_clock > brg_clock)
 212              	 .loc 1 201 0
 213 0010 9842     	 cmp r0,r3
 214 0012 3CDD     	 ble .L18
 215 0014 0146     	 mov r1,r0
 202:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 203:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 216              	 .loc 1 203 0
 217 0016 90FBF3F2 	 sdiv r2,r0,r3
 218              	.LVL24:
 204:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     while (divider_step >= 1023)
 219              	 .loc 1 204 0
 220 001a 40F2FE34 	 movw r4,#1022
 221 001e A242     	 cmp r2,r4
 222 0020 0BD9     	 bls .L19
 223 0022 9C46     	 mov ip,r3
 224 0024 5B00     	 lsls r3,r3,#1
 225              	.LVL25:
 226 0026 0124     	 movs r4,#1
 227 0028 40F2FE3E 	 movw lr,#1022
 228              	.LVL26:
 229              	.L16:
 205:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     {
 206:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       pdiv++;
 230              	 .loc 1 206 0
 231 002c 0134     	 adds r4,r4,#1
 232              	.LVL27:
 207:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       brg_clock = rate * oversampling * pdiv;
 208:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 233              	 .loc 1 208 0
 234 002e 91FBF3F2 	 sdiv r2,r1,r3
 235              	.LVL28:
 236 0032 6344     	 add r3,r3,ip
 237              	.LVL29:
 204:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     {
 238              	 .loc 1 204 0
 239 0034 7245     	 cmp r2,lr
 240 0036 F9D8     	 bhi .L16
 241 0038 00E0     	 b .L15
 242              	.LVL30:
 243              	.L19:
 197:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t divider_step;
 244              	 .loc 1 197 0
 245 003a 0124     	 movs r4,#1
 246              	.LVL31:
 247              	.L15:
 209:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     }
 210:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     actual_rate_upper = peripheral_clock / (divider_step * oversampling * pdiv);
 211:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     actual_rate_lower = peripheral_clock / ((divider_step + 1) * oversampling * pdiv);
 248              	 .loc 1 211 0
 249 003c 511C     	 adds r1,r2,#1
 250              	.LVL32:
 251 003e 06FB04F3 	 mul r3,r6,r4
 252 0042 01FB03F3 	 mul r3,r1,r3
 253 0046 B0FBF3F3 	 udiv r3,r0,r3
 254              	.LVL33:
 212:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 213:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     // choose better approximation if the peripheral frequency is not a multiple of the baudrate
 214:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     if (abs(rate - actual_rate_lower) < abs(rate - actual_rate_upper))
 255              	 .loc 1 214 0
 256 004a FB1A     	 subs r3,r7,r3
 257              	.LVL34:
 258 004c 002B     	 cmp r3,#0
 259 004e B8BF     	 it lt
 260 0050 5B42     	 rsblt r3,r3,#0
 261 0052 02FB04FE 	 mul lr,r2,r4
 210:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     actual_rate_lower = peripheral_clock / ((divider_step + 1) * oversampling * pdiv);
 262              	 .loc 1 210 0
 263 0056 06FB0EFE 	 mul lr,r6,lr
 264 005a B0FBFEF0 	 udiv r0,r0,lr
 265              	.LVL35:
 266              	 .loc 1 214 0
 267 005e 381A     	 subs r0,r7,r0
 268 0060 0028     	 cmp r0,#0
 269 0062 B8BF     	 it lt
 270 0064 4042     	 rsblt r0,r0,#0
 215:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     {
 216:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       divider_step += 1;
 271              	 .loc 1 216 0
 272 0066 8342     	 cmp r3,r0
 273 0068 B8BF     	 it lt
 274 006a 0A46     	 movlt r2,r1
 275              	.LVL36:
 217:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     }
 218:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 219:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     divider_step = 1024 - divider_step;
 276              	 .loc 1 219 0
 277 006c C2F58062 	 rsb r2,r2,#1024
 220:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 221:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 222:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL |
 278              	 .loc 1 222 0
 279 0070 42F48042 	 orr r2,r2,#16384
 280 0074 2A61     	 str r2,[r5,#16]
 223:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    (divider_step << USIC_CH_FDR_STEP_Pos);
 224:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 225:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 281              	 .loc 1 225 0
 282 0076 6A69     	 ldr r2,[r5,#20]
 226:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 227:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 228:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 229:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 283              	 .loc 1 229 0
 284 0078 013E     	 subs r6,r6,#1
 285              	.LVL37:
 225:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 286              	 .loc 1 225 0
 287 007a 064B     	 ldr r3,.L22
 288 007c 1340     	 ands r3,r3,r2
 228:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 289              	 .loc 1 228 0
 290 007e 43EA8626 	 orr r6,r3,r6,lsl#10
 291              	.LVL38:
 230:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 292              	 .loc 1 230 0
 293 0082 013C     	 subs r4,r4,#1
 229:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 294              	 .loc 1 229 0
 295 0084 46EA0444 	 orr r4,r6,r4,lsl#16
 225:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 296              	 .loc 1 225 0
 297 0088 6C61     	 str r4,[r5,#20]
 298              	.LVL39:
 231:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 232:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 299              	 .loc 1 232 0
 300 008a 0020     	 movs r0,#0
 301 008c F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 302              	.LVL40:
 303              	.L18:
 233:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 234:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else
 235:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 236:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 304              	 .loc 1 236 0
 305 008e 0120     	 movs r0,#1
 306              	.LVL41:
 237:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 238:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 239:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   return status;
 240:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 307              	 .loc 1 240 0
 308 0090 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 309              	.LVL42:
 310              	.L23:
 311 0092 00BF     	 .align 2
 312              	.L22:
 313 0094 EF8000FC 	 .word -67075857
 314              	 .cfi_endproc
 315              	.LFE239:
 317              	 .section .text.XMC_USIC_CH_GetBaudrate,"ax",%progbits
 318              	 .align 2
 319              	 .global XMC_USIC_CH_GetBaudrate
 320              	 .thumb
 321              	 .thumb_func
 323              	XMC_USIC_CH_GetBaudrate:
 324              	.LFB240:
 241:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 242:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel)
 243:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 325              	 .loc 1 243 0
 326              	 .cfi_startproc
 327              	 
 328              	 
 329              	.LVL43:
 330 0000 38B5     	 push {r3,r4,r5,lr}
 331              	.LCFI3:
 332              	 .cfi_def_cfa_offset 16
 333              	 .cfi_offset 3,-16
 334              	 .cfi_offset 4,-12
 335              	 .cfi_offset 5,-8
 336              	 .cfi_offset 14,-4
 337 0002 0446     	 mov r4,r0
 244:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t divider;
 245:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   if ((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) == USIC_CH_BRG_CTQSEL_Msk)
 338              	 .loc 1 245 0
 339 0004 4369     	 ldr r3,[r0,#20]
 340 0006 03F0C003 	 and r3,r3,#192
 341 000a C02B     	 cmp r3,#192
 342 000c 15D0     	 beq .L29
 246:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 247:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 	// CTQSEL = 3
 248:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     divider = 2;
 249:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 250:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else
 251:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 252:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 	// CTQSEL = 0, 1, or 2
 253:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 343              	 .loc 1 253 0
 344 000e 4369     	 ldr r3,[r0,#20]
 345 0010 03F01003 	 and r3,r3,#16
 346 0014 002B     	 cmp r3,#0
 347 0016 14BF     	 ite ne
 348 0018 0221     	 movne r1,#2
 349 001a 0121     	 moveq r1,#1
 350              	.LVL44:
 254:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   
 255:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x1) == 0)
 351              	 .loc 1 255 0
 352 001c 4369     	 ldr r3,[r0,#20]
 353 001e 13F0400F 	 tst r3,#64
 354 0022 0BD1     	 bne .L25
 256:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     {
 257:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 	  // CTQSEL = 0 or 2
 258:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 355              	 .loc 1 258 0
 356 0024 4369     	 ldr r3,[r0,#20]
 357 0026 C3F30943 	 ubfx r3,r3,#16,#10
 358 002a 03FB0111 	 mla r1,r3,r1,r1
 359              	.LVL45:
 259:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x2) != 0)
 360              	 .loc 1 259 0
 361 002e 4369     	 ldr r3,[r0,#20]
 362 0030 13F0800F 	 tst r3,#128
 363 0034 02D0     	 beq .L25
 260:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       {
 261:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****         // CTQSEL = 2
 262:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****         divider *= 2;
 364              	 .loc 1 262 0
 365 0036 4900     	 lsls r1,r1,#1
 366              	.LVL46:
 367 0038 00E0     	 b .L25
 368              	.LVL47:
 369              	.L29:
 248:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 370              	 .loc 1 248 0
 371 003a 0221     	 movs r1,#2
 372              	.L25:
 373              	.LVL48:
 263:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****       }
 264:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     }
 265:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 266:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 267:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PCTQ_Msk) >> USIC_CH_BRG_PCTQ_Pos) + 1;
 374              	 .loc 1 267 0
 375 003c 6269     	 ldr r2,[r4,#20]
 376              	.LVL49:
 268:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 377              	 .loc 1 268 0
 378 003e 6369     	 ldr r3,[r4,#20]
 379 0040 C3F38420 	 ubfx r0,r3,#10,#5
 380              	.LVL50:
 267:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 381              	 .loc 1 267 0
 382 0044 C2F30122 	 ubfx r2,r2,#8,#2
 383              	.LVL51:
 384 0048 531C     	 adds r3,r2,#1
 385 004a 00FB0333 	 mla r3,r0,r3,r3
 386              	 .loc 1 268 0
 387 004e 01FB03F5 	 mul r5,r1,r3
 388              	.LVL52:
 269:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 270:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 389              	 .loc 1 270 0
 390 0052 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 391              	.LVL53:
 392 0056 07EE900A 	 fmsr s15,r0
 393              	.LVL54:
 271:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   float baudrate;
 272:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 394              	 .loc 1 272 0
 395 005a 2369     	 ldr r3,[r4,#16]
 396 005c 03F44043 	 and r3,r3,#49152
 397 0060 B3F5004F 	 cmp r3,#32768
 398 0064 0BD1     	 bne .L27
 273:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 274:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 	baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 399              	 .loc 1 274 0
 400 0066 2369     	 ldr r3,[r4,#16]
 401 0068 F8EE676A 	 fuitos s13,s15
 402 006c C3F30903 	 ubfx r3,r3,#0,#10
 403 0070 07EE903A 	 fmsr s15,r3
 404 0074 FBEECB7A 	 vcvt.f32.u32 s15,s15,#10
 405 0078 26EEA77A 	 fmuls s14,s13,s15
 406              	.LVL55:
 407 007c 10E0     	 b .L28
 408              	.LVL56:
 409              	.L27:
 275:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 276:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else
 277:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 278:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     /* Normal divider mode */
 279:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 410              	 .loc 1 279 0
 411 007e 2369     	 ldr r3,[r4,#16]
 412 0080 F8EE676A 	 fuitos s13,s15
 413 0084 C3F30903 	 ubfx r3,r3,#0,#10
 414 0088 C3F58063 	 rsb r3,r3,#1024
 415 008c 07EE903A 	 fmsr s15,r3
 416 0090 F8EE677A 	 fuitos s15,s15
 417 0094 B7EE007A 	 fconsts s14,#112
 418 0098 C7EE277A 	 fdivs s15,s14,s15
 419 009c 26EEA77A 	 fmuls s14,s13,s15
 420              	.LVL57:
 421              	.L28:
 280:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 281:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 282:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   baudrate /= divider;
 422              	 .loc 1 282 0
 423 00a0 07EE905A 	 fmsr s15,r5
 424 00a4 F8EE677A 	 fuitos s15,s15
 425 00a8 C7EE277A 	 fdivs s15,s14,s15
 426              	.LVL58:
 283:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 284:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   return baudrate;
 285:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 427              	 .loc 1 285 0
 428 00ac FCEEE77A 	 ftouizs s15,s15
 429              	.LVL59:
 430 00b0 17EE900A 	 fmrs r0,s15
 431              	.LVL60:
 432 00b4 38BD     	 pop {r3,r4,r5,pc}
 433              	 .cfi_endproc
 434              	.LFE240:
 436 00b6 00BF     	 .section .text.XMC_USIC_CH_GetSCLKFrequency,"ax",%progbits
 437              	 .align 2
 438              	 .global XMC_USIC_CH_GetSCLKFrequency
 439              	 .thumb
 440              	 .thumb_func
 442              	XMC_USIC_CH_GetSCLKFrequency:
 443              	.LFB241:
 286:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 287:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel)
 288:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 444              	 .loc 1 288 0
 445              	 .cfi_startproc
 446              	 
 447              	 
 448              	.LVL61:
 449 0000 38B5     	 push {r3,r4,r5,lr}
 450              	.LCFI4:
 451              	 .cfi_def_cfa_offset 16
 452              	 .cfi_offset 3,-16
 453              	 .cfi_offset 4,-12
 454              	 .cfi_offset 5,-8
 455              	 .cfi_offset 14,-4
 456 0002 0546     	 mov r5,r0
 289:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t divider;
 290:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 457              	 .loc 1 290 0
 458 0004 4369     	 ldr r3,[r0,#20]
 459 0006 03F01003 	 and r3,r3,#16
 460 000a 002B     	 cmp r3,#0
 461 000c 14BF     	 ite ne
 462 000e 0222     	 movne r2,#2
 463 0010 0122     	 moveq r2,#1
 464              	.LVL62:
 291:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 465              	 .loc 1 291 0
 466 0012 4369     	 ldr r3,[r0,#20]
 467              	.LVL63:
 468 0014 C3F30943 	 ubfx r3,r3,#16,#10
 469              	.LVL64:
 470 0018 0133     	 adds r3,r3,#1
 471 001a 5B00     	 lsls r3,r3,#1
 292:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   divider *= 2;
 472              	 .loc 1 292 0
 473 001c 02FB03F4 	 mul r4,r2,r3
 474              	.LVL65:
 293:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 294:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 475              	 .loc 1 294 0
 476 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 477              	.LVL66:
 478 0024 07EE900A 	 fmsr s15,r0
 479              	.LVL67:
 295:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   float baudrate;
 296:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 480              	 .loc 1 296 0
 481 0028 2B69     	 ldr r3,[r5,#16]
 482 002a 03F44043 	 and r3,r3,#49152
 483 002e B3F5004F 	 cmp r3,#32768
 484 0032 0BD1     	 bne .L34
 297:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 298:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     /* Fractional divider mode */
 299:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 485              	 .loc 1 299 0
 486 0034 2B69     	 ldr r3,[r5,#16]
 487 0036 F8EE676A 	 fuitos s13,s15
 488 003a C3F30903 	 ubfx r3,r3,#0,#10
 489 003e 07EE903A 	 fmsr s15,r3
 490 0042 FBEECB7A 	 vcvt.f32.u32 s15,s15,#10
 491 0046 26EEA77A 	 fmuls s14,s13,s15
 492              	.LVL68:
 493 004a 10E0     	 b .L35
 494              	.LVL69:
 495              	.L34:
 300:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 301:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else
 302:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 303:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     /* Normal divider mode */
 304:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 496              	 .loc 1 304 0
 497 004c 2B69     	 ldr r3,[r5,#16]
 498 004e F8EE676A 	 fuitos s13,s15
 499 0052 C3F30903 	 ubfx r3,r3,#0,#10
 500 0056 C3F58063 	 rsb r3,r3,#1024
 501 005a 07EE103A 	 fmsr s14,r3
 502 005e B8EE477A 	 fuitos s14,s14
 503 0062 F7EE007A 	 fconsts s15,#112
 504 0066 87EE877A 	 fdivs s14,s15,s14
 505 006a 26EE877A 	 fmuls s14,s13,s14
 506              	.LVL70:
 507              	.L35:
 305:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 306:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 307:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   baudrate /= divider;
 508              	 .loc 1 307 0
 509 006e 07EE904A 	 fmsr s15,r4
 510 0072 F8EE677A 	 fuitos s15,s15
 511 0076 C7EE277A 	 fdivs s15,s14,s15
 512              	.LVL71:
 308:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 309:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   return baudrate;
 310:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 513              	 .loc 1 310 0
 514 007a FCEEE77A 	 ftouizs s15,s15
 515              	.LVL72:
 516 007e 17EE900A 	 fmrs r0,s15
 517              	.LVL73:
 518 0082 38BD     	 pop {r3,r4,r5,pc}
 519              	 .cfi_endproc
 520              	.LFE241:
 522              	 .section .text.XMC_USIC_CH_GetMCLKFrequency,"ax",%progbits
 523              	 .align 2
 524              	 .global XMC_USIC_CH_GetMCLKFrequency
 525              	 .thumb
 526              	 .thumb_func
 528              	XMC_USIC_CH_GetMCLKFrequency:
 529              	.LFB242:
 311:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 312:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel)
 313:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 530              	 .loc 1 313 0
 531              	 .cfi_startproc
 532              	 
 533              	 
 534              	.LVL74:
 535 0000 10B5     	 push {r4,lr}
 536              	.LCFI5:
 537              	 .cfi_def_cfa_offset 8
 538              	 .cfi_offset 4,-8
 539              	 .cfi_offset 14,-4
 540 0002 0446     	 mov r4,r0
 314:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 541              	 .loc 1 314 0
 542 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 543              	.LVL75:
 544 0008 07EE900A 	 fmsr s15,r0
 545              	.LVL76:
 315:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 316:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   float baudrate;
 317:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 546              	 .loc 1 317 0
 547 000c 2369     	 ldr r3,[r4,#16]
 548 000e 03F44043 	 and r3,r3,#49152
 549 0012 B3F5004F 	 cmp r3,#32768
 550 0016 11D1     	 bne .L39
 318:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 319:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     /* Fractional divider mode */
 320:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 551              	 .loc 1 320 0
 552 0018 2369     	 ldr r3,[r4,#16]
 553 001a B8EE677A 	 fuitos s14,s15
 554 001e C3F30903 	 ubfx r3,r3,#0,#10
 555 0022 C3F58063 	 rsb r3,r3,#1024
 556 0026 07EE903A 	 fmsr s15,r3
 557 002a F8EE677A 	 fuitos s15,s15
 558 002e F7EE006A 	 fconsts s13,#112
 559 0032 C6EEA77A 	 fdivs s15,s13,s15
 560 0036 67EE277A 	 fmuls s15,s14,s15
 561              	.LVL77:
 562 003a 0AE0     	 b .L40
 563              	.LVL78:
 564              	.L39:
 321:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 322:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else
 323:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 324:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     /* Normal divider mode */
 325:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     baudrate = fperi / (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 565              	 .loc 1 325 0
 566 003c 2369     	 ldr r3,[r4,#16]
 567 003e B8EE677A 	 fuitos s14,s15
 568 0042 C3F30903 	 ubfx r3,r3,#0,#10
 569 0046 07EE903A 	 fmsr s15,r3
 570 004a FBEECB7A 	 vcvt.f32.u32 s15,s15,#10
 571 004e C7EE277A 	 fdivs s15,s14,s15
 572              	.LVL79:
 573              	.L40:
 326:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 327:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 328:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   baudrate /= 2;
 574              	 .loc 1 328 0
 575 0052 B6EE007A 	 fconsts s14,#96
 576 0056 67EE877A 	 fmuls s15,s15,s14
 577              	.LVL80:
 329:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 330:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   return baudrate;
 331:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 578              	 .loc 1 331 0
 579 005a FCEEE77A 	 ftouizs s15,s15
 580              	.LVL81:
 581 005e 17EE900A 	 fmrs r0,s15
 582              	.LVL82:
 583 0062 10BD     	 pop {r4,pc}
 584              	 .cfi_endproc
 585              	.LFE242:
 587              	 .section .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG,"ax",%progbits
 588              	 .align 2
 589              	 .global XMC_USIC_CH_ConfigExternalInputSignalToBRG
 590              	 .thumb
 591              	 .thumb_func
 593              	XMC_USIC_CH_ConfigExternalInputSignalToBRG:
 594              	.LFB243:
 332:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 333:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 334:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 335:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 		                                        const uint16_t pdiv,
 336:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 												const uint32_t oversampling,
 337:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 												const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
 338:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 595              	 .loc 1 338 0
 596              	 .cfi_startproc
 597              	 
 598              	 
 599              	 
 600              	.LVL83:
 601 0000 10B4     	 push {r4}
 602              	.LCFI6:
 603              	 .cfi_def_cfa_offset 4
 604              	 .cfi_offset 4,-4
 605              	.LVL84:
 606              	.LBB6:
 607              	.LBB7:
 608              	 .file 2 "C:/Files/Projects/Git/XMCLib/inc/xmc_usic.h"
   1:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @date 2019-05-07
   4:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  83:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  84:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  85:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 
  86:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  87:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  88:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  89:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @endcond
  90:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
  91:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
  92:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
  93:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  94:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  95:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  96:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  97:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  98:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
  99:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 100:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 101:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 102:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 103:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @{
 104:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 105:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 106:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 107:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 108:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 109:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 110:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 111:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 112:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 113:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 114:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 115:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 116:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 117:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 
 118:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 119:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 120:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 121:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  friendly format.
 122:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 123:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 124:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 125:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 126:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 127:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @{
 128:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 129:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 130:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 131:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * MACROS
 132:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 133:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 134:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 135:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 136:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 137:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 138:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 139:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 140:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 141:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 142:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #endif
 143:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 144:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 145:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 146:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 147:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 148:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #endif
 149:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 150:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 151:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 152:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 153:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 154:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 155:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 156:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 157:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 158:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 159:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 160:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 161:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 162:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 163:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 164:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #endif
 165:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 166:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 167:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 168:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #endif
 169:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 170:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 171:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * ENUMS
 172:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 173:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 174:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 175:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 176:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 177:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 178:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 179:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 180:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 181:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 182:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 183:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 184:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 185:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 186:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 187:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 188:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 189:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 190:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 191:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 192:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 193:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 194:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 195:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 196:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 197:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 198:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 199:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 200:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 201:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 202:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 203:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 204:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 205:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 206:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 207:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 208:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 209:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 210:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 211:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 212:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 213:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 214:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 215:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 216:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 217:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 218:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 219:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 220:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 221:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 222:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 223:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 224:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 225:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 226:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 227:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 228:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 229:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 230:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 231:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 232:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 233:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 234:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 235:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 236:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 237:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 238:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 239:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 240:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 241:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 242:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 243:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 244:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 245:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 246:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 247:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 248:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 249:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 250:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 251:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 252:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 253:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 254:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 255:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 256:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 257:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 258:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 259:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 260:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 261:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 262:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 263:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 264:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 265:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 266:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 267:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 268:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 269:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 270:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 271:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 272:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 273:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 274:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 275:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 276:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 277:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 278:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 279:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 280:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 281:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 282:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 283:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 284:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 285:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 286:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 287:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 288:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 289:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 290:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 291:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 292:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 293:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 294:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 295:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 296:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 297:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 298:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 299:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 300:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 301:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 302:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 303:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 304:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 305:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 306:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 307:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 308:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 309:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 310:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 311:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 312:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 313:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 314:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 315:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 316:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 317:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 318:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 319:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 320:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 321:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 322:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 323:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 324:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 325:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 326:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 327:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 328:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 329:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 330:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 331:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 332:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 333:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 334:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 335:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 336:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 337:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 338:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 339:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 340:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 341:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 342:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 343:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 344:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 345:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 346:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 347:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 348:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 349:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 350:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 351:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 352:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 353:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 354:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 355:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 356:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 357:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 358:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 359:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 360:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 361:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 362:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 363:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 364:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 365:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 366:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 367:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 368:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 369:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 370:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 371:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 372:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 373:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 374:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 375:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 376:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 377:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 378:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 379:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 380:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 381:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 382:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 383:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 384:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 385:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 386:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 387:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 388:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 389:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 390:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 391:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 392:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 393:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 394:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 395:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 396:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 397:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 398:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 399:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 400:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 401:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 402:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 403:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 404:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 405:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 406:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 407:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 408:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 409:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 410:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 411:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 412:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 413:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 414:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 415:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 416:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 417:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 418:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 419:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 420:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 421:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 422:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 423:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 424:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 425:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 426:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 427:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 428:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 429:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 430:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 431:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 432:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 433:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 434:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 435:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 436:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 437:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 438:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 439:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 440:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 441:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 442:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 443:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 444:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 445:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 446:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 447:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 448:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 449:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 450:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 451:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 452:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 453:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 454:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 455:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 456:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 457:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 458:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** */
 459:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 460:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 461:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 462:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 463:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 464:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 465:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 466:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 467:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 468:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 469:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 470:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 471:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 472:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   #pragma push
 473:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 474:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 475:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 476:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #endif
 477:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 478:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 479:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 480:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 481:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 482:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 483:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 484:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 485:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 486:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 487:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 488:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 489:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 490:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 491:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 492:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 493:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 494:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 495:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 496:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 497:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 498:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 499:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 500:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 501:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 502:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 503:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   union {
 504:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 505:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 506:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 507:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 508:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 509:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   };
 510:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 511:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 512:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 513:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   union {
 514:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 515:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 516:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 517:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 518:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 519:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   };
 520:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 521:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 522:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 523:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 524:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 525:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 526:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 527:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 528:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 529:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 530:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 531:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 532:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 533:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 534:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 535:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 536:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 537:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 538:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 539:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 540:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 541:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 542:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 543:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 544:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 545:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 546:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   #pragma pop
 547:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 548:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 549:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #endif
 550:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 551:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 552:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 553:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 554:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 555:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 556:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** extern "C" {
 557:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #endif
 558:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 559:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 560:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 561:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   bool tmp;
 562:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 563:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 564:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 565:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 566:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #endif
 567:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 568:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 569:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #endif
 570:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 571:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   return tmp;
 572:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 573:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 574:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 575:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 576:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   bool tmp;
 577:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 578:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 579:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 580:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 581:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #endif
 582:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 583:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 584:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** #endif
 585:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 586:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   return tmp;
 587:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 588:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 589:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 590:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 591:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 592:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 593:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 594:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 595:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 
 596:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 597:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 598:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 599:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 600:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 601:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 602:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 603:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 604:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 605:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 606:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 607:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 608:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 609:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 610:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 611:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 612:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 613:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 614:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 615:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 616:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 617:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 618:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 619:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 620:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 621:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 622:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 623:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 624:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 625:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 626:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 627:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 628:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 629:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 630:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 631:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 632:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 633:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 634:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 635:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 636:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 637:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 638:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 639:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 640:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 641:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 642:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 643:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 644:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 645:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 646:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 647:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 648:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 649:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 650:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 651:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 652:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 653:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 654:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 655:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 656:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 657:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 658:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 659:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 660:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 661:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 662:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 663:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * baudrate.
 664:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 665:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 666:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 667:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 668:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 669:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 670:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 671:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 673:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 674:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 675:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 676:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 677:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 678:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 679:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 680:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 681:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 682:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 683:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 684:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 685:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * baudrate.
 686:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 687:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 688:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 689:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 690:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 691:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 692:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 693:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 694:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 695:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 696:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 697:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 698:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 699:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 700:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 701:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 702:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 703:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 704:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 705:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 706:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 707:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 708:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 709:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 710:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 711:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 712:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 713:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 714:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 715:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 716:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 717:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 718:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 719:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 720:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 721:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 722:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 723:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 724:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 725:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 726:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 727:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 728:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 729:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 730:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 731:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 732:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 733:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 734:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 735:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 736:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 737:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 738:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 739:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 740:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 741:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 742:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 743:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 744:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 745:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 746:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 747:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 748:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 749:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 750:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 751:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 752:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 753:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 754:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 755:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 756:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 757:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 758:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 759:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 760:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 761:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 762:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 763:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 764:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 765:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 766:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 767:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 768:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 769:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 770:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 771:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 772:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 773:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 774:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 775:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 776:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 777:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *  
 778:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 779:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 780:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 781:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 782:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 783:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 784:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 785:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 786:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 787:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 788:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 789:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 790:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 791:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 792:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 793:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 794:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 795:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 796:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 797:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 798:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 799:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 800:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 801:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 802:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 803:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 804:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 805:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 806:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 807:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 808:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 809:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 810:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 811:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 812:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 813:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 814:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 815:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 816:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 817:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * This setting is used
 818:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 819:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 820:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 821:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 822:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 823:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 824:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 825:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 826:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 827:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 828:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 829:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 830:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 831:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 832:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 833:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 834:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 835:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 836:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 837:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 838:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 839:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 841:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 842:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 843:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 844:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 845:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 846:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 847:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 848:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 849:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 850:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 851:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 852:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 853:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 854:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 855:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 856:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 857:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 858:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 859:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 860:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 861:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 862:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 863:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 864:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 865:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 866:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 867:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 868:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 869:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 870:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 871:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 872:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 873:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 875:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 876:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 877:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 878:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 879:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 880:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 881:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 882:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 883:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 884:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 885:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 886:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 887:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 888:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 889:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 890:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 891:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 892:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 893:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 894:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 895:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 896:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 897:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 898:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 899:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 900:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 901:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 902:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 903:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 904:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 905:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 906:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 907:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 908:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 909:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 910:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 911:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 912:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 913:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 914:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 915:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 916:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 917:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 918:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 919:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 920:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 921:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 922:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 923:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 924:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 925:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 926:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 927:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 928:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 929:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 930:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 931:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 932:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 933:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 934:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 935:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 936:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 937:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 938:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 939:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 940:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 941:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 942:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 943:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 944:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 945:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 946:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 947:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 948:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 949:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 950:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 951:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 952:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 953:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 954:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 955:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 956:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 957:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 958:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 959:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 960:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 961:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 962:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 963:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 964:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 965:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 966:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 967:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 968:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 969:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 970:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 971:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 972:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 973:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 974:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 975:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 976:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 977:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 978:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
 979:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 980:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 981:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 982:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
 983:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 984:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 985:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
 986:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 987:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 988:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 989:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
 990:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 991:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 992:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
 993:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
 994:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
 995:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 996:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 997:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 998:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 999:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1000:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
1001:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
1002:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1003:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1004:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
1005:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1006:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1007:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
1008:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1009:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
1010:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
1011:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
1012:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1013:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1014:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** }
1015:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** 
1016:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** /**
1017:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1018:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1019:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1020:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * @return None
1021:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
1022:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1024:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  *
1025:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1026:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1027:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****  */
1028:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1029:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h **** {
1030:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 609              	 .loc 2 1030 0
 610 0002 4469     	 ldr r4,[r0,#20]
 611 0004 24F00304 	 bic r4,r4,#3
 612 0008 44F00204 	 orr r4,r4,#2
 613 000c 4461     	 str r4,[r0,#20]
 614              	.LVL85:
 615              	.LBE7:
 616              	.LBE6:
 617              	.LBB8:
 618              	.LBB9:
1012:C:/Files/Projects/Git/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
 619              	 .loc 2 1012 0
 620 000e 046A     	 ldr r4,[r0,#32]
 621 0010 24F44064 	 bic r4,r4,#3072
 622 0014 44EA8323 	 orr r3,r4,r3,lsl#10
 623              	.LVL86:
 624 0018 0362     	 str r3,[r0,#32]
 625              	.LBE9:
 626              	.LBE8:
 339:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Divider out of range", ((1U < pdiv) || (p
 340:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Oversampling out of range", ((1U < oversa
 341:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 342:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* Setting the external input frequency source through DX1 */
 343:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   XMC_USIC_CH_SetBRGInputClockSource(channel, XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T);
 344:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 345:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* Setting the trigger combination mode */
 346:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   XMC_USIC_CH_SetInputTriggerCombinationMode(channel,XMC_USIC_CH_INPUT_DX1,combination_mode);
 347:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 348:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* Configuring the dividers and oversampling */
 349:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 627              	 .loc 1 349 0
 628 001a 4469     	 ldr r4,[r0,#20]
 350:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 351:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                    USIC_CH_BRG_PCTQ_Msk |
 352:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                    USIC_CH_BRG_PPPEN_Msk)) |
 353:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 629              	 .loc 1 353 0
 630 001c 013A     	 subs r2,r2,#1
 631              	.LVL87:
 354:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 632              	 .loc 1 354 0
 633 001e 0139     	 subs r1,r1,#1
 634              	.LVL88:
 635 0020 0904     	 lsls r1,r1,#16
 636 0022 41EA8222 	 orr r2,r1,r2,lsl#10
 637              	.LVL89:
 349:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 638              	 .loc 1 349 0
 639 0026 034B     	 ldr r3,.L44
 640 0028 2340     	 ands r3,r3,r4
 353:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 641              	 .loc 1 353 0
 642 002a 1343     	 orrs r3,r3,r2
 349:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 643              	 .loc 1 349 0
 644 002c 4361     	 str r3,[r0,#20]
 355:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 645              	 .loc 1 355 0
 646 002e 5DF8044B 	 ldr r4,[sp],#4
 647              	.LCFI7:
 648              	 .cfi_restore 4
 649              	 .cfi_def_cfa_offset 0
 650 0032 7047     	 bx lr
 651              	.L45:
 652              	 .align 2
 653              	.L44:
 654 0034 EF8000FC 	 .word -67075857
 655              	 .cfi_endproc
 656              	.LFE243:
 658              	 .section .text.XMC_USIC_CH_TXFIFO_Configure,"ax",%progbits
 659              	 .align 2
 660              	 .global XMC_USIC_CH_TXFIFO_Configure
 661              	 .thumb
 662              	 .thumb_func
 664              	XMC_USIC_CH_TXFIFO_Configure:
 665              	.LFB244:
 356:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 357:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
 358:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                   const uint32_t data_pointer,
 359:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 360:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                   const uint32_t limit)
 361:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 666              	 .loc 1 361 0
 667              	 .cfi_startproc
 668              	 
 669              	 
 670              	 
 671              	.LVL90:
 672 0000 30B4     	 push {r4,r5}
 673              	.LCFI8:
 674              	 .cfi_def_cfa_offset 8
 675              	 .cfi_offset 4,-8
 676              	 .cfi_offset 5,-4
 362:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* Disable FIFO */
 363:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 677              	 .loc 1 363 0
 678 0002 D0F80841 	 ldr r4,[r0,#264]
 679 0006 24F0E064 	 bic r4,r4,#117440512
 680 000a C0F80841 	 str r4,[r0,#264]
 364:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 365:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* LOF = 0, A standard transmit buffer event occurs when the filling level equals the limit value
 366:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****    * lower due to transmission of a data word
 367:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****    * STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 368:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 369:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****    */
 370:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->TBCTR = (uint32_t)(channel->TBCTR & (uint32_t)~(USIC_CH_TBCTR_LIMIT_Msk |
 681              	 .loc 1 370 0
 682 000e D0F80851 	 ldr r5,[r0,#264]
 683 0012 054C     	 ldr r4,.L48
 684 0014 2C40     	 ands r4,r4,r5
 685 0016 2143     	 orrs r1,r1,r4
 686              	.LVL91:
 687 0018 41EA0262 	 orr r2,r1,r2,lsl#24
 688              	.LVL92:
 371:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 372:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                                            USIC_CH_TBCTR_SIZE_Msk)) |
 689              	 .loc 1 372 0
 690 001c 42EA0323 	 orr r3,r2,r3,lsl#8
 691              	.LVL93:
 370:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 692              	 .loc 1 370 0
 693 0020 C0F80831 	 str r3,[r0,#264]
 373:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 374:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 375:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 376:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 694              	 .loc 1 376 0
 695 0024 30BC     	 pop {r4,r5}
 696              	.LCFI9:
 697              	 .cfi_restore 5
 698              	 .cfi_restore 4
 699              	 .cfi_def_cfa_offset 0
 700 0026 7047     	 bx lr
 701              	.L49:
 702              	 .align 2
 703              	.L48:
 704 0028 C0C0FFF8 	 .word -117456704
 705              	 .cfi_endproc
 706              	.LFE244:
 708              	 .section .text.XMC_USIC_CH_RXFIFO_Configure,"ax",%progbits
 709              	 .align 2
 710              	 .global XMC_USIC_CH_RXFIFO_Configure
 711              	 .thumb
 712              	 .thumb_func
 714              	XMC_USIC_CH_RXFIFO_Configure:
 715              	.LFB245:
 377:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 378:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 379:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
 380:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                   const uint32_t data_pointer,
 381:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 382:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                   const uint32_t limit)
 383:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 716              	 .loc 1 383 0
 717              	 .cfi_startproc
 718              	 
 719              	 
 720              	 
 721              	.LVL94:
 722 0000 30B4     	 push {r4,r5}
 723              	.LCFI10:
 724              	 .cfi_def_cfa_offset 8
 725              	 .cfi_offset 4,-8
 726              	 .cfi_offset 5,-4
 384:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* Disable FIFO */
 385:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 727              	 .loc 1 385 0
 728 0002 D0F80C41 	 ldr r4,[r0,#268]
 729 0006 24F0E064 	 bic r4,r4,#117440512
 730 000a C0F80C41 	 str r4,[r0,#268]
 386:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 387:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* LOF = 1, A standard receive buffer event occurs when the filling level equals the limit value 
 388:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****    *  due to the reception of a new data word
 389:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****    */
 390:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (uint32_t)~(USIC_CH_RBCTR_LIMIT_Msk |
 731              	 .loc 1 390 0
 732 000e D0F80C51 	 ldr r5,[r0,#268]
 733 0012 064C     	 ldr r4,.L52
 734 0014 2C40     	 ands r4,r4,r5
 735 0016 44F08054 	 orr r4,r4,#268435456
 736 001a 2143     	 orrs r1,r1,r4
 737              	.LVL95:
 738 001c 41EA0262 	 orr r2,r1,r2,lsl#24
 739              	.LVL96:
 740 0020 42EA0323 	 orr r3,r2,r3,lsl#8
 741              	.LVL97:
 742 0024 C0F80C31 	 str r3,[r0,#268]
 391:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 392:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                                             USIC_CH_RBCTR_LOF_Msk)) |
 393:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    ((limit << USIC_CH_RBCTR_LIMIT_Pos) |
 394:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 395:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos) |
 396:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    (uint32_t)USIC_CH_RBCTR_LOF_Msk));
 397:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 743              	 .loc 1 397 0
 744 0028 30BC     	 pop {r4,r5}
 745              	.LCFI11:
 746              	 .cfi_restore 5
 747              	 .cfi_restore 4
 748              	 .cfi_def_cfa_offset 0
 749 002a 7047     	 bx lr
 750              	.L53:
 751              	 .align 2
 752              	.L52:
 753 002c C0C0FFEF 	 .word -268451648
 754              	 .cfi_endproc
 755              	.LFE245:
 757              	 .section .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit,"ax",%progbits
 758              	 .align 2
 759              	 .global XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
 760              	 .thumb
 761              	 .thumb_func
 763              	XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:
 764              	.LFB246:
 398:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 399:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 400:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 401:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                             const uint32_t limit)
 402:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 765              	 .loc 1 402 0
 766              	 .cfi_startproc
 767              	 
 768              	 
 769              	 
 770              	.LVL98:
 403:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* Disable FIFO */
 404:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 771              	 .loc 1 404 0
 772 0000 D0F80831 	 ldr r3,[r0,#264]
 773 0004 23F0E063 	 bic r3,r3,#117440512
 774 0008 C0F80831 	 str r3,[r0,#264]
 405:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 406:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 407:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 408:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****    */
 409:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->TBCTR = (uint32_t)((uint32_t)(channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) |
 775              	 .loc 1 409 0
 776 000c D0F80831 	 ldr r3,[r0,#264]
 410:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 411:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 777              	 .loc 1 411 0
 778 0010 0906     	 lsls r1,r1,#24
 779              	.LVL99:
 780 0012 41EA0222 	 orr r2,r1,r2,lsl#8
 781              	.LVL100:
 409:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 782              	 .loc 1 409 0
 783 0016 23F47C53 	 bic r3,r3,#16128
 784 001a 1343     	 orrs r3,r3,r2
 785 001c C0F80831 	 str r3,[r0,#264]
 786 0020 7047     	 bx lr
 787              	 .cfi_endproc
 788              	.LFE246:
 790 0022 00BF     	 .section .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit,"ax",%progbits
 791              	 .align 2
 792              	 .global XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 793              	 .thumb
 794              	 .thumb_func
 796              	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:
 797              	.LFB247:
 412:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 413:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 414:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 415:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 416:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                             const uint32_t limit)
 417:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 798              	 .loc 1 417 0
 799              	 .cfi_startproc
 800              	 
 801              	 
 802              	 
 803              	.LVL101:
 418:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   /* Disable FIFO */
 419:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 804              	 .loc 1 419 0
 805 0000 D0F80C31 	 ldr r3,[r0,#268]
 806 0004 23F0E063 	 bic r3,r3,#117440512
 807 0008 C0F80C31 	 str r3,[r0,#268]
 420:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 421:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->RBCTR = (uint32_t)((uint32_t)(channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) |
 808              	 .loc 1 421 0
 809 000c D0F80C31 	 ldr r3,[r0,#268]
 422:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 423:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos));
 810              	 .loc 1 423 0
 811 0010 0906     	 lsls r1,r1,#24
 812              	.LVL102:
 813 0012 41EA0222 	 orr r2,r1,r2,lsl#8
 814              	.LVL103:
 421:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 815              	 .loc 1 421 0
 816 0016 23F47C53 	 bic r3,r3,#16128
 817 001a 1343     	 orrs r3,r3,r2
 818 001c C0F80C31 	 str r3,[r0,#268]
 819 0020 7047     	 bx lr
 820              	 .cfi_endproc
 821              	.LFE247:
 823 0022 00BF     	 .section .text.XMC_USIC_CH_SetInterruptNodePointer,"ax",%progbits
 824              	 .align 2
 825              	 .global XMC_USIC_CH_SetInterruptNodePointer
 826              	 .thumb
 827              	 .thumb_func
 829              	XMC_USIC_CH_SetInterruptNodePointer:
 830              	.LFB248:
 424:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 425:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 426:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 427:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 428:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                          const uint32_t service_request)
 429:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 831              	 .loc 1 429 0
 832              	 .cfi_startproc
 833              	 
 834              	 
 835              	 
 836              	.LVL104:
 837 0000 10B4     	 push {r4}
 838              	.LCFI12:
 839              	 .cfi_def_cfa_offset 4
 840              	 .cfi_offset 4,-4
 430:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 841              	 .loc 1 430 0
 842 0002 8469     	 ldr r4,[r0,#24]
 843 0004 0723     	 movs r3,#7
 844 0006 8B40     	 lsls r3,r3,r1
 845 0008 24EA0303 	 bic r3,r4,r3
 431:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                   (service_request << (uint32_t)interrupt_node));
 846              	 .loc 1 431 0
 847 000c 8A40     	 lsls r2,r2,r1
 848              	.LVL105:
 430:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 849              	 .loc 1 430 0
 850 000e 1A43     	 orrs r2,r2,r3
 851 0010 8261     	 str r2,[r0,#24]
 432:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 852              	 .loc 1 432 0
 853 0012 5DF8044B 	 ldr r4,[sp],#4
 854              	.LCFI13:
 855              	 .cfi_restore 4
 856              	 .cfi_def_cfa_offset 0
 857 0016 7047     	 bx lr
 858              	 .cfi_endproc
 859              	.LFE248:
 861              	 .section .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer,"ax",%progbits
 862              	 .align 2
 863              	 .global XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 864              	 .thumb
 865              	 .thumb_func
 867              	XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:
 868              	.LFB249:
 433:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 434:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 435:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
 436:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                                 const uint32_t service_request)
 437:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 869              	 .loc 1 437 0
 870              	 .cfi_startproc
 871              	 
 872              	 
 873              	 
 874              	.LVL106:
 875 0000 10B4     	 push {r4}
 876              	.LCFI14:
 877              	 .cfi_def_cfa_offset 4
 878              	 .cfi_offset 4,-4
 438:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 879              	 .loc 1 438 0
 880 0002 D0F80841 	 ldr r4,[r0,#264]
 881 0006 0723     	 movs r3,#7
 882 0008 8B40     	 lsls r3,r3,r1
 883 000a 24EA0303 	 bic r3,r4,r3
 439:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 884              	 .loc 1 439 0
 885 000e 8A40     	 lsls r2,r2,r1
 886              	.LVL107:
 438:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 887              	 .loc 1 438 0
 888 0010 1A43     	 orrs r2,r2,r3
 889 0012 C0F80821 	 str r2,[r0,#264]
 440:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 890              	 .loc 1 440 0
 891 0016 5DF8044B 	 ldr r4,[sp],#4
 892              	.LCFI15:
 893              	 .cfi_restore 4
 894              	 .cfi_def_cfa_offset 0
 895 001a 7047     	 bx lr
 896              	 .cfi_endproc
 897              	.LFE249:
 899              	 .section .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer,"ax",%progbits
 900              	 .align 2
 901              	 .global XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 902              	 .thumb
 903              	 .thumb_func
 905              	XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:
 906              	.LFB250:
 441:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 442:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 443:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
 444:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                                                 const uint32_t service_request)
 445:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 907              	 .loc 1 445 0
 908              	 .cfi_startproc
 909              	 
 910              	 
 911              	 
 912              	.LVL108:
 913 0000 10B4     	 push {r4}
 914              	.LCFI16:
 915              	 .cfi_def_cfa_offset 4
 916              	 .cfi_offset 4,-4
 446:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 917              	 .loc 1 446 0
 918 0002 D0F80C41 	 ldr r4,[r0,#268]
 919 0006 0723     	 movs r3,#7
 920 0008 8B40     	 lsls r3,r3,r1
 921 000a 24EA0303 	 bic r3,r4,r3
 447:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 922              	 .loc 1 447 0
 923 000e 8A40     	 lsls r2,r2,r1
 924              	.LVL109:
 446:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 925              	 .loc 1 446 0
 926 0010 1A43     	 orrs r2,r2,r3
 927 0012 C0F80C21 	 str r2,[r0,#268]
 448:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 928              	 .loc 1 448 0
 929 0016 5DF8044B 	 ldr r4,[sp],#4
 930              	.LCFI17:
 931              	 .cfi_restore 4
 932              	 .cfi_def_cfa_offset 0
 933 001a 7047     	 bx lr
 934              	 .cfi_endproc
 935              	.LFE250:
 937              	 .section .text.XMC_USIC_Enable,"ax",%progbits
 938              	 .align 2
 939              	 .global XMC_USIC_Enable
 940              	 .thumb
 941              	 .thumb_func
 943              	XMC_USIC_Enable:
 944              	.LFB251:
 449:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 450:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** void XMC_USIC_Enable(XMC_USIC_t *const usic)
 451:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 945              	 .loc 1 451 0
 946              	 .cfi_startproc
 947              	 
 948              	 
 949              	.LVL110:
 950 0000 10B5     	 push {r4,lr}
 951              	.LCFI18:
 952              	 .cfi_def_cfa_offset 8
 953              	 .cfi_offset 4,-8
 954              	 .cfi_offset 14,-4
 452:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   if (usic == USIC0)
 955              	 .loc 1 452 0
 956 0002 144B     	 ldr r3,.L73
 957 0004 9842     	 cmp r0,r3
 958 0006 0BD1     	 bne .L63
 453:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 454:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 455:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 456:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC0));
 457:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif
 458:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 459:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 959              	 .loc 1 459 0
 960 0008 4FF40060 	 mov r0,#2048
 961              	.LVL111:
 962 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 963              	.LVL112:
 460:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC0));
 964              	 .loc 1 460 0
 965 0010 4FF40064 	 mov r4,#2048
 966              	.L64:
 967              	 .loc 1 460 0 is_stmt 0 discriminator 1
 968 0014 2046     	 mov r0,r4
 969 0016 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 970              	.LVL113:
 971 001a 0028     	 cmp r0,#0
 972 001c FAD1     	 bne .L64
 973 001e 10BD     	 pop {r4,pc}
 974              	.LVL114:
 975              	.L63:
 461:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif 
 462:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 463:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(USIC1)  
 464:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else if (usic == USIC1)
 976              	 .loc 1 464 0 is_stmt 1
 977 0020 0D4B     	 ldr r3,.L73+4
 978 0022 9842     	 cmp r0,r3
 979 0024 09D1     	 bne .L66
 465:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 466:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 467:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 468:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC1));
 469:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif 
 470:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 471:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 980              	 .loc 1 471 0
 981 0026 0D48     	 ldr r0,.L73+8
 982              	.LVL115:
 983 0028 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 984              	.LVL116:
 472:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC1));
 985              	 .loc 1 472 0
 986 002c 0B4C     	 ldr r4,.L73+8
 987              	.L67:
 988              	 .loc 1 472 0 is_stmt 0 discriminator 1
 989 002e 2046     	 mov r0,r4
 990 0030 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 991              	.LVL117:
 992 0034 0028     	 cmp r0,#0
 993 0036 FAD1     	 bne .L67
 994 0038 10BD     	 pop {r4,pc}
 995              	.LVL118:
 996              	.L66:
 473:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif 
 474:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 475:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif  
 476:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(USIC2)  
 477:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else if (usic == USIC2)
 997              	 .loc 1 477 0 is_stmt 1
 998 003a 094B     	 ldr r3,.L73+12
 999 003c 9842     	 cmp r0,r3
 1000 003e 08D1     	 bne .L62
 478:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 479:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 480:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 481:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC2));
 482:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif
 483:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 484:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 1001              	 .loc 1 484 0
 1002 0040 0848     	 ldr r0,.L73+16
 1003              	.LVL119:
 1004 0042 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 1005              	.LVL120:
 485:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC2));
 1006              	 .loc 1 485 0
 1007 0046 074C     	 ldr r4,.L73+16
 1008              	.L68:
 1009              	 .loc 1 485 0 is_stmt 0 discriminator 1
 1010 0048 2046     	 mov r0,r4
 1011 004a FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 1012              	.LVL121:
 1013 004e 0028     	 cmp r0,#0
 1014 0050 FAD1     	 bne .L68
 1015              	.L62:
 1016 0052 10BD     	 pop {r4,pc}
 1017              	.L74:
 1018              	 .align 2
 1019              	.L73:
 1020 0054 08000340 	 .word 1073938440
 1021 0058 08000248 	 .word 1208090632
 1022 005c 80000010 	 .word 268435584
 1023 0060 08400248 	 .word 1208107016
 1024 0064 00010010 	 .word 268435712
 1025              	 .cfi_endproc
 1026              	.LFE251:
 1028              	 .section .text.XMC_USIC_CH_Enable,"ax",%progbits
 1029              	 .align 2
 1030              	 .global XMC_USIC_CH_Enable
 1031              	 .thumb
 1032              	 .thumb_func
 1034              	XMC_USIC_CH_Enable:
 1035              	.LFB236:
  91:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
 1036              	 .loc 1 91 0 is_stmt 1
 1037              	 .cfi_startproc
 1038              	 
 1039              	 
 1040              	.LVL122:
 1041 0000 10B5     	 push {r4,lr}
 1042              	.LCFI19:
 1043              	 .cfi_def_cfa_offset 8
 1044              	 .cfi_offset 4,-8
 1045              	 .cfi_offset 14,-4
 1046 0002 0446     	 mov r4,r0
  94:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 1047              	 .loc 1 94 0
 1048 0004 154B     	 ldr r3,.L85
 1049 0006 9842     	 cmp r0,r3
 1050 0008 03D0     	 beq .L76
  94:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 1051              	 .loc 1 94 0 is_stmt 0 discriminator 1
 1052 000a 03F50073 	 add r3,r3,#512
 1053 000e 9842     	 cmp r0,r3
 1054 0010 03D1     	 bne .L77
 1055              	.L76:
  96:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 1056              	 .loc 1 96 0 is_stmt 1
 1057 0012 1348     	 ldr r0,.L85+4
 1058              	.LVL123:
 1059 0014 FFF7FEFF 	 bl XMC_USIC_Enable
 1060              	.LVL124:
 1061 0018 14E0     	 b .L78
 1062              	.LVL125:
 1063              	.L77:
  99:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 1064              	 .loc 1 99 0
 1065 001a 124B     	 ldr r3,.L85+8
 1066 001c 9842     	 cmp r0,r3
 1067 001e 03D0     	 beq .L79
  99:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 1068              	 .loc 1 99 0 is_stmt 0 discriminator 1
 1069 0020 03F50073 	 add r3,r3,#512
 1070 0024 9842     	 cmp r0,r3
 1071 0026 03D1     	 bne .L80
 1072              	.L79:
 101:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 1073              	 .loc 1 101 0 is_stmt 1
 1074 0028 0F48     	 ldr r0,.L85+12
 1075              	.LVL126:
 1076 002a FFF7FEFF 	 bl XMC_USIC_Enable
 1077              	.LVL127:
 1078 002e 09E0     	 b .L78
 1079              	.LVL128:
 1080              	.L80:
 105:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 1081              	 .loc 1 105 0
 1082 0030 0E4B     	 ldr r3,.L85+16
 1083 0032 9842     	 cmp r0,r3
 1084 0034 03D0     	 beq .L81
 105:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 1085              	 .loc 1 105 0 is_stmt 0 discriminator 1
 1086 0036 03F50073 	 add r3,r3,#512
 1087 003a 9842     	 cmp r0,r3
 1088 003c 02D1     	 bne .L78
 1089              	.L81:
 107:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 1090              	 .loc 1 107 0 is_stmt 1
 1091 003e 0C48     	 ldr r0,.L85+20
 1092              	.LVL129:
 1093 0040 FFF7FEFF 	 bl XMC_USIC_Enable
 1094              	.LVL130:
 1095              	.L78:
 116:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 1096              	 .loc 1 116 0
 1097 0044 0323     	 movs r3,#3
 1098 0046 E360     	 str r3,[r4,#12]
 1099              	.L82:
 117:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 1100              	 .loc 1 117 0 discriminator 1
 1101 0048 E368     	 ldr r3,[r4,#12]
 1102 004a 13F0010F 	 tst r3,#1
 1103 004e FBD0     	 beq .L82
 123:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 1104              	 .loc 1 123 0
 1105 0050 236C     	 ldr r3,[r4,#64]
 1106 0052 23F00F03 	 bic r3,r3,#15
 1107 0056 2364     	 str r3,[r4,#64]
 1108 0058 10BD     	 pop {r4,pc}
 1109              	.LVL131:
 1110              	.L86:
 1111 005a 00BF     	 .align 2
 1112              	.L85:
 1113 005c 00000340 	 .word 1073938432
 1114 0060 08000340 	 .word 1073938440
 1115 0064 00000248 	 .word 1208090624
 1116 0068 08000248 	 .word 1208090632
 1117 006c 00400248 	 .word 1208107008
 1118 0070 08400248 	 .word 1208107016
 1119              	 .cfi_endproc
 1120              	.LFE236:
 1122              	 .section .text.XMC_USIC_Disable,"ax",%progbits
 1123              	 .align 2
 1124              	 .global XMC_USIC_Disable
 1125              	 .thumb
 1126              	 .thumb_func
 1128              	XMC_USIC_Disable:
 1129              	.LFB252:
 486:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif 
 487:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 488:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif  
 489:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else
 490:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 491:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 492:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 493:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** }
 494:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** 
 495:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** void XMC_USIC_Disable(XMC_USIC_t *const usic)
 496:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** {
 1130              	 .loc 1 496 0
 1131              	 .cfi_startproc
 1132              	 
 1133              	 
 1134              	.LVL132:
 1135 0000 08B5     	 push {r3,lr}
 1136              	.LCFI20:
 1137              	 .cfi_def_cfa_offset 8
 1138              	 .cfi_offset 3,-8
 1139              	 .cfi_offset 14,-4
 497:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   if (usic == (XMC_USIC_t *)USIC0)
 1140              	 .loc 1 497 0
 1141 0002 0B4B     	 ldr r3,.L92
 1142 0004 9842     	 cmp r0,r3
 1143 0006 04D1     	 bne .L88
 498:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 499:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 500:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 1144              	 .loc 1 500 0
 1145 0008 4FF40060 	 mov r0,#2048
 1146              	.LVL133:
 1147 000c FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1148              	.LVL134:
 1149 0010 08BD     	 pop {r3,pc}
 1150              	.LVL135:
 1151              	.L88:
 501:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif	
 502:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 503:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 504:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif
 505:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 506:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(USIC1)  
 507:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC1)
 1152              	 .loc 1 507 0
 1153 0012 084B     	 ldr r3,.L92+4
 1154 0014 9842     	 cmp r0,r3
 1155 0016 03D1     	 bne .L90
 508:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 509:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 510:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 1156              	 .loc 1 510 0
 1157 0018 0748     	 ldr r0,.L92+8
 1158              	.LVL136:
 1159 001a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1160              	.LVL137:
 1161 001e 08BD     	 pop {r3,pc}
 1162              	.LVL138:
 1163              	.L90:
 511:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif	
 512:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 513:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 514:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif
 515:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   }
 516:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #endif  
 517:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(USIC2)  
 518:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC2)
 1164              	 .loc 1 518 0
 1165 0020 064B     	 ldr r3,.L92+12
 1166 0022 9842     	 cmp r0,r3
 1167 0024 02D1     	 bne .L87
 519:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****   {
 520:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 521:C:/Files/Projects/Git/XMCLib/src\xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 1168              	 .loc 1 521 0
 1169 0026 0648     	 ldr r0,.L92+16
 1170              	.LVL139:
 1171 0028 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1172              	.LVL140:
 1173              	.L87:
 1174 002c 08BD     	 pop {r3,pc}
 1175              	.L93:
 1176 002e 00BF     	 .align 2
 1177              	.L92:
 1178 0030 08000340 	 .word 1073938440
 1179 0034 08000248 	 .word 1208090632
 1180 0038 80000010 	 .word 268435584
 1181 003c 08400248 	 .word 1208107016
 1182 0040 00010010 	 .word 268435712
 1183              	 .cfi_endproc
 1184              	.LFE252:
 1186              	 .text
 1187              	.Letext0:
 1188              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1189              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1190              	 .file 5 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1191              	 .file 6 "C:/Files/Projects/Git/XMCLib/inc/xmc4_scu.h"
 1192              	 .file 7 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
 1193              	 .file 8 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
 1194              	 .file 9 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
 1195              	 .file 10 "C:/Files/Projects/Git/XMCLib/inc/xmc_scu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usic.c
    {standard input}:20     .text.XMC_USIC_CH_Disable:00000000 $t
    {standard input}:25     .text.XMC_USIC_CH_Disable:00000000 XMC_USIC_CH_Disable
    {standard input}:44     .text.XMC_USIC_CH_SetBaudrate:00000000 $t
    {standard input}:49     .text.XMC_USIC_CH_SetBaudrate:00000000 XMC_USIC_CH_SetBaudrate
    {standard input}:176    .text.XMC_USIC_CH_SetBaudrate:00000088 $d
    {standard input}:182    .text.XMC_USIC_CH_SetBaudrateEx:00000000 $t
    {standard input}:187    .text.XMC_USIC_CH_SetBaudrateEx:00000000 XMC_USIC_CH_SetBaudrateEx
    {standard input}:313    .text.XMC_USIC_CH_SetBaudrateEx:00000094 $d
    {standard input}:318    .text.XMC_USIC_CH_GetBaudrate:00000000 $t
    {standard input}:323    .text.XMC_USIC_CH_GetBaudrate:00000000 XMC_USIC_CH_GetBaudrate
    {standard input}:437    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 $t
    {standard input}:442    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 XMC_USIC_CH_GetSCLKFrequency
    {standard input}:523    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 $t
    {standard input}:528    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 XMC_USIC_CH_GetMCLKFrequency
    {standard input}:588    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 $t
    {standard input}:593    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 XMC_USIC_CH_ConfigExternalInputSignalToBRG
    {standard input}:654    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000034 $d
    {standard input}:659    .text.XMC_USIC_CH_TXFIFO_Configure:00000000 $t
    {standard input}:664    .text.XMC_USIC_CH_TXFIFO_Configure:00000000 XMC_USIC_CH_TXFIFO_Configure
    {standard input}:704    .text.XMC_USIC_CH_TXFIFO_Configure:00000028 $d
    {standard input}:709    .text.XMC_USIC_CH_RXFIFO_Configure:00000000 $t
    {standard input}:714    .text.XMC_USIC_CH_RXFIFO_Configure:00000000 XMC_USIC_CH_RXFIFO_Configure
    {standard input}:753    .text.XMC_USIC_CH_RXFIFO_Configure:0000002c $d
    {standard input}:758    .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:763    .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
    {standard input}:791    .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:796    .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
    {standard input}:824    .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:829    .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 XMC_USIC_CH_SetInterruptNodePointer
    {standard input}:862    .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:867    .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
    {standard input}:900    .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:905    .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
    {standard input}:938    .text.XMC_USIC_Enable:00000000 $t
    {standard input}:943    .text.XMC_USIC_Enable:00000000 XMC_USIC_Enable
    {standard input}:1020   .text.XMC_USIC_Enable:00000054 $d
    {standard input}:1029   .text.XMC_USIC_CH_Enable:00000000 $t
    {standard input}:1034   .text.XMC_USIC_CH_Enable:00000000 XMC_USIC_CH_Enable
    {standard input}:1113   .text.XMC_USIC_CH_Enable:0000005c $d
    {standard input}:1123   .text.XMC_USIC_Disable:00000000 $t
    {standard input}:1128   .text.XMC_USIC_Disable:00000000 XMC_USIC_Disable
    {standard input}:1178   .text.XMC_USIC_Disable:00000030 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_GetPeripheralClockFrequency
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_RESET_AssertPeripheralReset
