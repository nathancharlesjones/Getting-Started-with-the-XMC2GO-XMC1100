   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4_flash.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_FLASH_lEnterPageModeCommand,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_FLASH_lEnterPageModeCommand
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_FLASH_lEnterPageModeCommand:
  26              	.LFB151:
  27              	 .file 1 "C:/Files/Projects/Git/XMCLib/src/xmc4_flash.c"
   1:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /**
   2:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * @file xmc4_flash.c
   3:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * @date 2016-01-08
   4:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *
   5:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *
   9:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * 
  18:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * 
  21:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *
  36:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *
  39:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * 2015-02-10:
  40:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *     - Initial <br>
  41:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *
  42:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * 2015-06-20: 
  43:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *     - Removed definition of GetDriverVersion API 
  44:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *
  45:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * 2015-08-17: 
  46:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *     - Added the below API's to the public interface.
  47:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *       1. XMC_FLASH_Reset
  48:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *       2. XMC_FLASH_ErasePhysicalSector
  49:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *       3. XMC_FLASH_EraseUCB
  50:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *       4. XMC_FLASH_ResumeProtection
  51:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *       5. XMC_FLASH_RepairPhysicalSector
  52:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *
  53:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * 2016-01-08: 
  54:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *     - Wait until operation is finished for the next functions:
  55:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *       1. XMC_FLASH_InstallProtection
  56:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *       2. XMC_FLASH_ConfirmProtection
  57:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *       3. XMC_FLASH_ProgramPage
  58:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *       4. XMC_FLASH_EraseSector
  59:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *       5. XMC_FLASH_ErasePhysicalSector
  60:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *       6. XMC_FLASH_EraseUCB
  61:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *     - Fix XMC_FLASH_VerifyReadProtection and XMC_FLASH_VerifyWriteProtection
  62:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *
  63:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * 2018-02-08
  64:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *     - Added implementation of XMC_FLASH_InstallBMI()
  65:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *
  66:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * @endcond 
  67:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  *
  68:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
  69:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
  70:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** #include "xmc_flash.h"
  71:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
  72:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** #if UC_FAMILY == XMC4
  73:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
  74:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /**************************************************************************************************
  75:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * MACROS
  76:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  **************************************************************************************************
  77:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
  78:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** #define XMC_FLASH_PROTECTION_CONFIGURATION_WORDS (8UL) /* Used to upadte the assembly buffer during
  79:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****                                                           configuration */
  80:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** #define XMC_FLASH_BMI_STRING_WORDS (10UL) /* Used to upadte the assembly buffer during BMI String
  81:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****                                                           configuration */
  82:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
  83:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_OFFSET (512UL) /* Offset address for UCB page */
  84:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_WORDS  (4UL)
  85:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_CODE   (0x8AFE15C3UL)
  86:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
  87:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /**************************************************************************************************
  88:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * LOCAL FUNCTIONS
  89:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  **************************************************************************************************
  90:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void);
  91:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word);
  92:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address);
  93:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address);
  94:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address);
  95:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
  96:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1);
  97:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lRepairPhysicalSectorCommand(void);
  98:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address);
  99:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void);
 100:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 101:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 102:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to program the PFLASH in to page mode, so that assembly buffer is used 
 103:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 104:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void)
 105:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
  28              	 .loc 1 105 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
 106:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 107:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 108:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 109:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = (uint32_t)0x50U;
  34              	 .loc 1 109 0
  35 0000 5022     	 movs r2,#80
  36 0002 014B     	 ldr r3,.L2
  37 0004 1A60     	 str r2,[r3]
  38 0006 7047     	 bx lr
  39              	.L3:
  40              	 .align 2
  41              	.L2:
  42 0008 5455000C 	 .word 201348436
  43              	 .cfi_endproc
  44              	.LFE151:
  46              	 .section .text.XMC_FLASH_lLoadPageCommand,"ax",%progbits
  47              	 .align 2
  48              	 .global XMC_FLASH_lLoadPageCommand
  49              	 .thumb
  50              	 .thumb_func
  52              	XMC_FLASH_lLoadPageCommand:
  53              	.LFB152:
 110:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 111:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 112:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 113:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to load the data into the page assembly buffer 
 114:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 115:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word)
 116:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
  54              	 .loc 1 116 0
  55              	 .cfi_startproc
  56              	 
  57              	 
  58              	 
  59              	.LVL1:
 117:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 118:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 119:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f0U);
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = low_word;
  60              	 .loc 1 120 0
  61 0000 024B     	 ldr r3,.L5
  62 0002 1860     	 str r0,[r3]
  63              	.LVL2:
 121:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = high_word;
  64              	 .loc 1 122 0
  65 0004 0433     	 adds r3,r3,#4
  66 0006 1960     	 str r1,[r3]
  67 0008 7047     	 bx lr
  68              	.L6:
  69 000a 00BF     	 .align 2
  70              	.L5:
  71 000c F055000C 	 .word 201348592
  72              	 .cfi_endproc
  73              	.LFE152:
  75              	 .section .text.XMC_FLASH_lWritePageCommand,"ax",%progbits
  76              	 .align 2
  77              	 .global XMC_FLASH_lWritePageCommand
  78              	 .thumb
  79              	 .thumb_func
  81              	XMC_FLASH_lWritePageCommand:
  82              	.LFB153:
 123:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 124:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 125:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 126:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to start the programming of one page with data from the assembly buffer
 127:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 128:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address)
 129:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
  83              	 .loc 1 129 0
  84              	 .cfi_startproc
  85              	 
  86              	 
  87              	 
  88              	.LVL3:
  89 0000 10B4     	 push {r4}
  90              	.LCFI0:
  91              	 .cfi_def_cfa_offset 4
  92              	 .cfi_offset 4,-4
  93              	.LVL4:
 130:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 131:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 132:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 133:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
  94              	 .loc 1 133 0
  95 0002 064A     	 ldr r2,.L9
  96 0004 AA23     	 movs r3,#170
  97 0006 1360     	 str r3,[r2]
  98              	.LVL5:
 134:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 135:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x55U;
  99              	 .loc 1 135 0
 100 0008 5524     	 movs r4,#85
 101 000a 0549     	 ldr r1,.L9+4
 102 000c 0C60     	 str r4,[r1]
 103              	.LVL6:
 136:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 137:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xa0U;
 104              	 .loc 1 137 0
 105 000e A021     	 movs r1,#160
 106 0010 1160     	 str r1,[r2]
 107              	.LVL7:
 138:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = page_start_address;
 139:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 108              	 .loc 1 139 0
 109 0012 0360     	 str r3,[r0]
 140:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 110              	 .loc 1 140 0
 111 0014 5DF8044B 	 ldr r4,[sp],#4
 112              	.LCFI1:
 113              	 .cfi_restore 4
 114              	 .cfi_def_cfa_offset 0
 115 0018 7047     	 bx lr
 116              	.L10:
 117 001a 00BF     	 .align 2
 118              	.L9:
 119 001c 5455000C 	 .word 201348436
 120 0020 A8AA000C 	 .word 201370280
 121              	 .cfi_endproc
 122              	.LFE153:
 124              	 .section .text.XMC_FLASH_lWriteUCBPageCommand,"ax",%progbits
 125              	 .align 2
 126              	 .global XMC_FLASH_lWriteUCBPageCommand
 127              	 .thumb
 128              	 .thumb_func
 130              	XMC_FLASH_lWriteUCBPageCommand:
 131              	.LFB154:
 141:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 142:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 143:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to start the programming of UCB page with data from the assembly buffer
 144:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 145:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address)
 146:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 132              	 .loc 1 146 0
 133              	 .cfi_startproc
 134              	 
 135              	 
 136              	 
 137              	.LVL8:
 138 0000 10B4     	 push {r4}
 139              	.LCFI2:
 140              	 .cfi_def_cfa_offset 4
 141              	 .cfi_offset 4,-4
 142              	.LVL9:
 147:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 148:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 149:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 150:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 143              	 .loc 1 150 0
 144 0002 064A     	 ldr r2,.L13
 145 0004 AA23     	 movs r3,#170
 146 0006 1360     	 str r3,[r2]
 147              	.LVL10:
 151:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 152:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x55U;
 148              	 .loc 1 152 0
 149 0008 5524     	 movs r4,#85
 150 000a 0549     	 ldr r1,.L13+4
 151 000c 0C60     	 str r4,[r1]
 152              	.LVL11:
 153:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 154:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xc0U;
 153              	 .loc 1 154 0
 154 000e C021     	 movs r1,#192
 155 0010 1160     	 str r1,[r2]
 156              	.LVL12:
 155:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = page_start_address;
 156:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 157              	 .loc 1 156 0
 158 0012 0360     	 str r3,[r0]
 157:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 159              	 .loc 1 157 0
 160 0014 5DF8044B 	 ldr r4,[sp],#4
 161              	.LCFI3:
 162              	 .cfi_restore 4
 163              	 .cfi_def_cfa_offset 0
 164 0018 7047     	 bx lr
 165              	.L14:
 166 001a 00BF     	 .align 2
 167              	.L13:
 168 001c 5455000C 	 .word 201348436
 169 0020 A8AA000C 	 .word 201370280
 170              	 .cfi_endproc
 171              	.LFE154:
 173              	 .section .text.XMC_FLASH_lEraseSectorCommand,"ax",%progbits
 174              	 .align 2
 175              	 .global XMC_FLASH_lEraseSectorCommand
 176              	 .thumb
 177              	 .thumb_func
 179              	XMC_FLASH_lEraseSectorCommand:
 180              	.LFB155:
 158:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 159:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 160:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to erase sector which is starting with the specified address
 161:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 162:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address)
 163:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 181              	 .loc 1 163 0
 182              	 .cfi_startproc
 183              	 
 184              	 
 185              	 
 186              	.LVL13:
 187 0000 30B4     	 push {r4,r5}
 188              	.LCFI4:
 189              	 .cfi_def_cfa_offset 8
 190              	 .cfi_offset 4,-8
 191              	 .cfi_offset 5,-4
 192              	.LVL14:
 164:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 165:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 166:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 167:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 193              	 .loc 1 167 0
 194 0002 074B     	 ldr r3,.L17
 195 0004 AA24     	 movs r4,#170
 196 0006 1C60     	 str r4,[r3]
 197              	.LVL15:
 168:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 169:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x55U;
 198              	 .loc 1 169 0
 199 0008 064A     	 ldr r2,.L17+4
 200 000a 5521     	 movs r1,#85
 201 000c 1160     	 str r1,[r2]
 202              	.LVL16:
 170:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 171:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x80U;
 203              	 .loc 1 171 0
 204 000e 8025     	 movs r5,#128
 205 0010 1D60     	 str r5,[r3]
 172:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 173:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 206              	 .loc 1 173 0
 207 0012 1C60     	 str r4,[r3]
 208              	.LVL17:
 174:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 175:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x55U;
 209              	 .loc 1 175 0
 210 0014 1160     	 str r1,[r2]
 211              	.LVL18:
 176:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = sector_start_address;
 177:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x30U;
 212              	 .loc 1 177 0
 213 0016 3023     	 movs r3,#48
 214 0018 0360     	 str r3,[r0]
 178:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 215              	 .loc 1 178 0
 216 001a 30BC     	 pop {r4,r5}
 217              	.LCFI5:
 218              	 .cfi_restore 5
 219              	 .cfi_restore 4
 220              	 .cfi_def_cfa_offset 0
 221 001c 7047     	 bx lr
 222              	.L18:
 223 001e 00BF     	 .align 2
 224              	.L17:
 225 0020 5455000C 	 .word 201348436
 226 0024 A8AA000C 	 .word 201370280
 227              	 .cfi_endproc
 228              	.LFE155:
 230              	 .section .text.XMC_FLASH_lDisableSectorWriteProtectionCommand,"ax",%progbits
 231              	 .align 2
 232              	 .global XMC_FLASH_lDisableSectorWriteProtectionCommand
 233              	 .thumb
 234              	 .thumb_func
 236              	XMC_FLASH_lDisableSectorWriteProtectionCommand:
 237              	.LFB156:
 179:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 180:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 181:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 182:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to temporarily disables the write protection belonging to the the USER specified, when p
 183:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * configured values
 184:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 185:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
 186:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 238              	 .loc 1 186 0
 239              	 .cfi_startproc
 240              	 
 241              	 
 242              	 
 243              	.LVL19:
 244 0000 10B4     	 push {r4}
 245              	.LCFI6:
 246              	 .cfi_def_cfa_offset 4
 247              	 .cfi_offset 4,-4
 248              	.LVL20:
 187:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 188:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 189:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 190:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 249              	 .loc 1 190 0
 250 0002 AA24     	 movs r4,#170
 251 0004 094B     	 ldr r3,.L21
 252 0006 1C60     	 str r4,[r3]
 253              	.LVL21:
 191:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 192:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x55U;
 254              	 .loc 1 192 0
 255 0008 03F5AA43 	 add r3,r3,#21760
 256 000c 5433     	 adds r3,r3,#84
 257 000e 5524     	 movs r4,#85
 258 0010 1C60     	 str r4,[r3]
 259              	.LVL22:
 193:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 194:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = user;
 260              	 .loc 1 194 0
 261 0012 074C     	 ldr r4,.L21+4
 262 0014 2060     	 str r0,[r4]
 263              	.LVL23:
 195:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 196:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = password_0;
 264              	 .loc 1 196 0
 265 0016 1960     	 str r1,[r3]
 197:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 198:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = password_1;
 266              	 .loc 1 198 0
 267 0018 1A60     	 str r2,[r3]
 268              	.LVL24:
 199:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 200:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x05U;
 269              	 .loc 1 200 0
 270 001a 0522     	 movs r2,#5
 271              	.LVL25:
 272 001c A3F5AA43 	 sub r3,r3,#21760
 273              	.LVL26:
 274 0020 503B     	 subs r3,r3,#80
 275              	.LVL27:
 276 0022 1A60     	 str r2,[r3]
 277              	.LVL28:
 201:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 278              	 .loc 1 201 0
 279 0024 5DF8044B 	 ldr r4,[sp],#4
 280              	.LCFI7:
 281              	 .cfi_restore 4
 282              	 .cfi_def_cfa_offset 0
 283 0028 7047     	 bx lr
 284              	.L22:
 285 002a 00BF     	 .align 2
 286              	.L21:
 287 002c 5455000C 	 .word 201348436
 288 0030 3C55000C 	 .word 201348412
 289              	 .cfi_endproc
 290              	.LFE156:
 292              	 .section .text.XMC_FLASH_lDisableReadProtectionCommand,"ax",%progbits
 293              	 .align 2
 294              	 .global XMC_FLASH_lDisableReadProtectionCommand
 295              	 .thumb
 296              	 .thumb_func
 298              	XMC_FLASH_lDisableReadProtectionCommand:
 299              	.LFB157:
 202:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 203:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 204:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to temporarily disables the read protection along with write protection, when passwords 
 205:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * configured values
 206:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 207:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1)
 208:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 300              	 .loc 1 208 0
 301              	 .cfi_startproc
 302              	 
 303              	 
 304              	 
 305              	.LVL29:
 306 0000 10B4     	 push {r4}
 307              	.LCFI8:
 308              	 .cfi_def_cfa_offset 4
 309              	 .cfi_offset 4,-4
 310              	.LVL30:
 209:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 210:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 211:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 212:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 311              	 .loc 1 212 0
 312 0002 AA22     	 movs r2,#170
 313 0004 094B     	 ldr r3,.L25
 314 0006 1A60     	 str r2,[r3]
 315              	.LVL31:
 213:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 214:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x55U;
 316              	 .loc 1 214 0
 317 0008 03F5AA43 	 add r3,r3,#21760
 318 000c 5433     	 adds r3,r3,#84
 319 000e 5522     	 movs r2,#85
 320 0010 1A60     	 str r2,[r3]
 321              	.LVL32:
 215:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 216:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x00U;
 322              	 .loc 1 216 0
 323 0012 0024     	 movs r4,#0
 324 0014 064A     	 ldr r2,.L25+4
 325 0016 1460     	 str r4,[r2]
 326              	.LVL33:
 217:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 218:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = password_0;
 327              	 .loc 1 218 0
 328 0018 1860     	 str r0,[r3]
 219:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 220:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = password_1;
 329              	 .loc 1 220 0
 330 001a 1960     	 str r1,[r3]
 331              	.LVL34:
 221:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 222:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x08U;
 332              	 .loc 1 222 0
 333 001c 0822     	 movs r2,#8
 334 001e A3F5AA43 	 sub r3,r3,#21760
 335 0022 503B     	 subs r3,r3,#80
 336 0024 1A60     	 str r2,[r3]
 223:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 337              	 .loc 1 223 0
 338 0026 5DF8044B 	 ldr r4,[sp],#4
 339              	.LCFI9:
 340              	 .cfi_restore 4
 341              	 .cfi_def_cfa_offset 0
 342 002a 7047     	 bx lr
 343              	.L26:
 344              	 .align 2
 345              	.L25:
 346 002c 5455000C 	 .word 201348436
 347 0030 3C55000C 	 .word 201348412
 348              	 .cfi_endproc
 349              	.LFE157:
 351              	 .section .text.XMC_FLASH_lClearStatusCommand,"ax",%progbits
 352              	 .align 2
 353              	 .global XMC_FLASH_lClearStatusCommand
 354              	 .thumb
 355              	 .thumb_func
 357              	XMC_FLASH_lClearStatusCommand:
 358              	.LFB158:
 224:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 225:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 226:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to clear FSR.PROG and FSR.ERASE and the error flags in FSR such as PFOPER, SQER, PROER, 
 227:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 228:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void)
 229:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 359              	 .loc 1 229 0
 360              	 .cfi_startproc
 361              	 
 362              	 
 363              	 
 364              	.LVL35:
 230:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 231:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 232:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 233:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xf5U;
 365              	 .loc 1 233 0
 366 0000 F522     	 movs r2,#245
 367 0002 014B     	 ldr r3,.L28
 368 0004 1A60     	 str r2,[r3]
 369 0006 7047     	 bx lr
 370              	.L29:
 371              	 .align 2
 372              	.L28:
 373 0008 5455000C 	 .word 201348436
 374              	 .cfi_endproc
 375              	.LFE158:
 377              	 .section .text.XMC_FLASH_ClearStatus,"ax",%progbits
 378              	 .align 2
 379              	 .global XMC_FLASH_ClearStatus
 380              	 .thumb
 381              	 .thumb_func
 383              	XMC_FLASH_ClearStatus:
 384              	.LFB159:
 234:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 235:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 236:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /**************************************************************************************************
 237:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * API IMPLEMENTATION
 238:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  **************************************************************************************************
 239:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 240:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  /*
 241:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * This API shall clear Program, erase and error flags(PFOPER, SQER, PROER, PFDBER, ORIER, VER) of 
 242:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 243:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_ClearStatus(void)
 244:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 385              	 .loc 1 244 0
 386              	 .cfi_startproc
 387              	 
 388              	 
 389              	 
 390              	.LVL36:
 391              	.LBB4:
 392              	.LBB5:
 233:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 393              	 .loc 1 233 0
 394 0000 F522     	 movs r2,#245
 395 0002 014B     	 ldr r3,.L31
 396 0004 1A60     	 str r2,[r3]
 397 0006 7047     	 bx lr
 398              	.L32:
 399              	 .align 2
 400              	.L31:
 401 0008 5455000C 	 .word 201348436
 402              	.LBE5:
 403              	.LBE4:
 404              	 .cfi_endproc
 405              	.LFE159:
 407              	 .section .text.XMC_FLASH_GetStatus,"ax",%progbits
 408              	 .align 2
 409              	 .global XMC_FLASH_GetStatus
 410              	 .thumb
 411              	 .thumb_func
 413              	XMC_FLASH_GetStatus:
 414              	.LFB160:
 245:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 246:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 247:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 248:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 249:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * This API returns the FSR register value
 250:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 251:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** uint32_t XMC_FLASH_GetStatus(void)
 252:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 415              	 .loc 1 252 0
 416              	 .cfi_startproc
 417              	 
 418              	 
 419              	 
 253:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   return FLASH0->FSR;
 420              	 .loc 1 253 0
 421 0000 41F21003 	 movw r3,#4112
 422 0004 014A     	 ldr r2,.L34
 423 0006 D058     	 ldr r0,[r2,r3]
 254:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 424              	 .loc 1 254 0
 425 0008 7047     	 bx lr
 426              	.L35:
 427 000a 00BF     	 .align 2
 428              	.L34:
 429 000c 00100058 	 .word 1476399104
 430              	 .cfi_endproc
 431              	.LFE160:
 433              	 .section .text.XMC_FLASH_EnableEvent,"ax",%progbits
 434              	 .align 2
 435              	 .global XMC_FLASH_EnableEvent
 436              	 .thumb
 437              	 .thumb_func
 439              	XMC_FLASH_EnableEvent:
 440              	.LFB161:
 255:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 256:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 257:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * This API enables the events which required to trigger the ISR 
 258:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 259:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_EnableEvent(const uint32_t event_msk)
 260:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 441              	 .loc 1 260 0
 442              	 .cfi_startproc
 443              	 
 444              	 
 445              	 
 446              	.LVL37:
 261:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   FLASH0->FCON |= event_msk;
 447              	 .loc 1 261 0
 448 0000 0349     	 ldr r1,.L37
 449 0002 41F21402 	 movw r2,#4116
 450 0006 8B58     	 ldr r3,[r1,r2]
 451 0008 1843     	 orrs r0,r0,r3
 452              	.LVL38:
 453 000a 8850     	 str r0,[r1,r2]
 454 000c 7047     	 bx lr
 455              	.L38:
 456 000e 00BF     	 .align 2
 457              	.L37:
 458 0010 00100058 	 .word 1476399104
 459              	 .cfi_endproc
 460              	.LFE161:
 462              	 .section .text.XMC_FLASH_DisableEvent,"ax",%progbits
 463              	 .align 2
 464              	 .global XMC_FLASH_DisableEvent
 465              	 .thumb
 466              	 .thumb_func
 468              	XMC_FLASH_DisableEvent:
 469              	.LFB162:
 262:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 263:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 264:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 265:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * This API disables the event generation 
 266:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 267:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_DisableEvent(const uint32_t event_msk)
 268:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 470              	 .loc 1 268 0
 471              	 .cfi_startproc
 472              	 
 473              	 
 474              	 
 475              	.LVL39:
 269:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   FLASH0->FCON &= ~event_msk;
 476              	 .loc 1 269 0
 477 0000 0349     	 ldr r1,.L40
 478 0002 41F21402 	 movw r2,#4116
 479 0006 8B58     	 ldr r3,[r1,r2]
 480 0008 23EA0000 	 bic r0,r3,r0
 481              	.LVL40:
 482 000c 8850     	 str r0,[r1,r2]
 483 000e 7047     	 bx lr
 484              	.L41:
 485              	 .align 2
 486              	.L40:
 487 0010 00100058 	 .word 1476399104
 488              	 .cfi_endproc
 489              	.LFE162:
 491              	 .section .text.XMC_FLASH_ProgramPage,"ax",%progbits
 492              	 .align 2
 493              	 .global XMC_FLASH_ProgramPage
 494              	 .thumb
 495              	 .thumb_func
 497              	XMC_FLASH_ProgramPage:
 498              	.LFB163:
 270:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 271:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 272:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 273:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * This API write the PFLASH page
 274:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 275:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_ProgramPage(uint32_t *address, const uint32_t *data)
 276:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 499              	 .loc 1 276 0
 500              	 .cfi_startproc
 501              	 
 502              	 
 503              	.LVL41:
 504 0000 70B5     	 push {r4,r5,r6,lr}
 505              	.LCFI10:
 506              	 .cfi_def_cfa_offset 16
 507              	 .cfi_offset 4,-16
 508              	 .cfi_offset 5,-12
 509              	 .cfi_offset 6,-8
 510              	 .cfi_offset 14,-4
 511              	.LVL42:
 512              	.LBB12:
 513              	.LBB13:
 233:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 514              	 .loc 1 233 0
 515 0002 0C4B     	 ldr r3,.L48
 516 0004 F522     	 movs r2,#245
 517 0006 1A60     	 str r2,[r3]
 518              	.LVL43:
 519              	.LBE13:
 520              	.LBE12:
 521              	.LBB14:
 522              	.LBB15:
 109:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 523              	 .loc 1 109 0
 524 0008 5022     	 movs r2,#80
 525 000a 1A60     	 str r2,[r3]
 526              	.LVL44:
 527 000c 0B46     	 mov r3,r1
 528 000e 01F58071 	 add r1,r1,#256
 529              	.LVL45:
 530              	.LBE15:
 531              	.LBE14:
 532              	.LBB16:
 533              	.LBB17:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 534              	 .loc 1 120 0
 535 0012 094E     	 ldr r6,.L48+4
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 536              	 .loc 1 122 0
 537 0014 094D     	 ldr r5,.L48+8
 538              	.LVL46:
 539              	.L43:
 540              	.LBE17:
 541              	.LBE16:
 277:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   uint32_t idx;
 278:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 279:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();  
 280:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 281:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 282:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   for (idx = 0U; idx < XMC_FLASH_WORDS_PER_PAGE; idx += 2U)
 283:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   {
 284:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(data[idx], data[idx + 1U]);
 542              	 .loc 1 284 0 discriminator 3
 543 0016 1C68     	 ldr r4,[r3]
 544 0018 5A68     	 ldr r2,[r3,#4]
 545              	.LVL47:
 546              	.LBB19:
 547              	.LBB18:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 548              	 .loc 1 120 0 discriminator 3
 549 001a 3460     	 str r4,[r6]
 550              	.LVL48:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 551              	 .loc 1 122 0 discriminator 3
 552 001c 2A60     	 str r2,[r5]
 553 001e 0833     	 adds r3,r3,#8
 554              	.LBE18:
 555              	.LBE19:
 282:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   {
 556              	 .loc 1 282 0 discriminator 3
 557 0020 8B42     	 cmp r3,r1
 558 0022 F8D1     	 bne .L43
 285:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   }
 286:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 287:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lWritePageCommand(address);    
 559              	 .loc 1 287 0
 560 0024 FFF7FEFF 	 bl XMC_FLASH_lWritePageCommand
 561              	.LVL49:
 288:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 289:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   /* wait until the operation is completed */
 290:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 562              	 .loc 1 290 0
 563 0028 054A     	 ldr r2,.L48+12
 564              	.L44:
 565              	 .loc 1 290 0 is_stmt 0 discriminator 1
 566 002a 1368     	 ldr r3,[r2]
 567 002c 13F0010F 	 tst r3,#1
 568 0030 FBD1     	 bne .L44
 291:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 569              	 .loc 1 291 0 is_stmt 1
 570 0032 70BD     	 pop {r4,r5,r6,pc}
 571              	.LVL50:
 572              	.L49:
 573              	 .align 2
 574              	.L48:
 575 0034 5455000C 	 .word 201348436
 576 0038 F055000C 	 .word 201348592
 577 003c F455000C 	 .word 201348596
 578 0040 10200058 	 .word 1476403216
 579              	 .cfi_endproc
 580              	.LFE163:
 582              	 .section .text.XMC_FLASH_EraseSector,"ax",%progbits
 583              	 .align 2
 584              	 .global XMC_FLASH_EraseSector
 585              	 .thumb
 586              	 .thumb_func
 588              	XMC_FLASH_EraseSector:
 589              	.LFB164:
 292:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 293:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 294:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * This API erase the logical sector
 295:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 296:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_EraseSector(uint32_t *address)
 297:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 590              	 .loc 1 297 0
 591              	 .cfi_startproc
 592              	 
 593              	 
 594              	.LVL51:
 595 0000 08B5     	 push {r3,lr}
 596              	.LCFI11:
 597              	 .cfi_def_cfa_offset 8
 598              	 .cfi_offset 3,-8
 599              	 .cfi_offset 14,-4
 600              	.LVL52:
 601              	.LBB22:
 602              	.LBB23:
 233:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 603              	 .loc 1 233 0
 604 0002 F522     	 movs r2,#245
 605 0004 044B     	 ldr r3,.L54
 606 0006 1A60     	 str r2,[r3]
 607              	.LBE23:
 608              	.LBE22:
 298:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 299:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lEraseSectorCommand(address);
 609              	 .loc 1 299 0
 610 0008 FFF7FEFF 	 bl XMC_FLASH_lEraseSectorCommand
 611              	.LVL53:
 300:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 301:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   /* wait until the operation is completed */
 302:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 612              	 .loc 1 302 0
 613 000c 034A     	 ldr r2,.L54+4
 614              	.L51:
 615              	 .loc 1 302 0 is_stmt 0 discriminator 1
 616 000e 1368     	 ldr r3,[r2]
 617 0010 13F0010F 	 tst r3,#1
 618 0014 FBD1     	 bne .L51
 303:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 619              	 .loc 1 303 0 is_stmt 1
 620 0016 08BD     	 pop {r3,pc}
 621              	.L55:
 622              	 .align 2
 623              	.L54:
 624 0018 5455000C 	 .word 201348436
 625 001c 10200058 	 .word 1476403216
 626              	 .cfi_endproc
 627              	.LFE164:
 629              	 .section .text.XMC_FLASH_lErasePhysicalSectorCommand,"ax",%progbits
 630              	 .align 2
 631              	 .global XMC_FLASH_lErasePhysicalSectorCommand
 632              	 .thumb
 633              	 .thumb_func
 635              	XMC_FLASH_lErasePhysicalSectorCommand:
 636              	.LFB165:
 304:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 305:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 306:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to erase physical sector which is starting with the specified address
 307:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 308:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address)
 309:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 637              	 .loc 1 309 0
 638              	 .cfi_startproc
 639              	 
 640              	 
 641              	 
 642              	.LVL54:
 643 0000 30B4     	 push {r4,r5}
 644              	.LCFI12:
 645              	 .cfi_def_cfa_offset 8
 646              	 .cfi_offset 4,-8
 647              	 .cfi_offset 5,-4
 648              	.LVL55:
 310:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 311:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 312:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 313:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 649              	 .loc 1 313 0
 650 0002 074B     	 ldr r3,.L58
 651 0004 AA24     	 movs r4,#170
 652 0006 1C60     	 str r4,[r3]
 653              	.LVL56:
 314:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 315:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x55U;
 654              	 .loc 1 315 0
 655 0008 064A     	 ldr r2,.L58+4
 656 000a 5521     	 movs r1,#85
 657 000c 1160     	 str r1,[r2]
 658              	.LVL57:
 316:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 317:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x80U;
 659              	 .loc 1 317 0
 660 000e 8025     	 movs r5,#128
 661 0010 1D60     	 str r5,[r3]
 318:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 319:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 662              	 .loc 1 319 0
 663 0012 1C60     	 str r4,[r3]
 664              	.LVL58:
 320:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 321:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x55U;
 665              	 .loc 1 321 0
 666 0014 1160     	 str r1,[r2]
 667              	.LVL59:
 322:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = sector_start_address;
 323:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x40U;
 668              	 .loc 1 323 0
 669 0016 4023     	 movs r3,#64
 670 0018 0360     	 str r3,[r0]
 324:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 671              	 .loc 1 324 0
 672 001a 30BC     	 pop {r4,r5}
 673              	.LCFI13:
 674              	 .cfi_restore 5
 675              	 .cfi_restore 4
 676              	 .cfi_def_cfa_offset 0
 677 001c 7047     	 bx lr
 678              	.L59:
 679 001e 00BF     	 .align 2
 680              	.L58:
 681 0020 5455000C 	 .word 201348436
 682 0024 A8AA000C 	 .word 201370280
 683              	 .cfi_endproc
 684              	.LFE165:
 686              	 .section .text.XMC_FLASH_lRepairPhysicalSectorCommand,"ax",%progbits
 687              	 .align 2
 688              	 .global XMC_FLASH_lRepairPhysicalSectorCommand
 689              	 .thumb
 690              	 .thumb_func
 692              	XMC_FLASH_lRepairPhysicalSectorCommand:
 693              	.LFB166:
 325:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 326:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 327:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to erase physical sector-4 which is starting with the specified address
 328:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * This command is only available if PROCON1.PRS = 1.
 329:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 330:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_lRepairPhysicalSectorCommand(void)
 331:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 694              	 .loc 1 331 0
 695              	 .cfi_startproc
 696              	 
 697              	 
 698              	 
 699 0000 10B4     	 push {r4}
 700              	.LCFI14:
 701              	 .cfi_def_cfa_offset 4
 702              	 .cfi_offset 4,-4
 703              	.LVL60:
 332:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 333:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 334:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 335:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 704              	 .loc 1 335 0
 705 0002 084B     	 ldr r3,.L62
 706 0004 AA20     	 movs r0,#170
 707 0006 1860     	 str r0,[r3]
 708              	.LVL61:
 336:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 337:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x55U;
 709              	 .loc 1 337 0
 710 0008 074A     	 ldr r2,.L62+4
 711 000a 5521     	 movs r1,#85
 712 000c 1160     	 str r1,[r2]
 713              	.LVL62:
 338:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 339:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x80U;
 714              	 .loc 1 339 0
 715 000e 8024     	 movs r4,#128
 716 0010 1C60     	 str r4,[r3]
 340:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 341:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 717              	 .loc 1 341 0
 718 0012 1860     	 str r0,[r3]
 719              	.LVL63:
 342:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 343:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x55U;
 720              	 .loc 1 343 0
 721 0014 1160     	 str r1,[r2]
 722              	.LVL64:
 344:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = XMC_FLASH_PHY_SECTOR_4;
 345:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x40U;
 723              	 .loc 1 345 0
 724 0016 4022     	 movs r2,#64
 725 0018 044B     	 ldr r3,.L62+8
 726 001a 1A60     	 str r2,[r3]
 346:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 727              	 .loc 1 346 0
 728 001c 5DF8044B 	 ldr r4,[sp],#4
 729              	.LCFI15:
 730              	 .cfi_restore 4
 731              	 .cfi_def_cfa_offset 0
 732 0020 7047     	 bx lr
 733              	.L63:
 734 0022 00BF     	 .align 2
 735              	.L62:
 736 0024 5455000C 	 .word 201348436
 737 0028 A8AA000C 	 .word 201370280
 738 002c 0000010C 	 .word 201392128
 739              	 .cfi_endproc
 740              	.LFE166:
 742              	 .section .text.XMC_FLASH_ErasePhysicalSector,"ax",%progbits
 743              	 .align 2
 744              	 .global XMC_FLASH_ErasePhysicalSector
 745              	 .thumb
 746              	 .thumb_func
 748              	XMC_FLASH_ErasePhysicalSector:
 749              	.LFB167:
 347:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 348:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  /* 
 349:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   * This API erase the physical sector
 350:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   */
 351:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_ErasePhysicalSector(uint32_t *address)
 352:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 750              	 .loc 1 352 0
 751              	 .cfi_startproc
 752              	 
 753              	 
 754              	.LVL65:
 755 0000 08B5     	 push {r3,lr}
 756              	.LCFI16:
 757              	 .cfi_def_cfa_offset 8
 758              	 .cfi_offset 3,-8
 759              	 .cfi_offset 14,-4
 760              	.LVL66:
 761              	.LBB26:
 762              	.LBB27:
 233:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 763              	 .loc 1 233 0
 764 0002 F522     	 movs r2,#245
 765 0004 044B     	 ldr r3,.L68
 766 0006 1A60     	 str r2,[r3]
 767              	.LBE27:
 768              	.LBE26:
 353:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 354:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lErasePhysicalSectorCommand(address);
 769              	 .loc 1 354 0
 770 0008 FFF7FEFF 	 bl XMC_FLASH_lErasePhysicalSectorCommand
 771              	.LVL67:
 355:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 356:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   /* wait until the operation is completed */
 357:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 772              	 .loc 1 357 0
 773 000c 034A     	 ldr r2,.L68+4
 774              	.L65:
 775              	 .loc 1 357 0 is_stmt 0 discriminator 1
 776 000e 1368     	 ldr r3,[r2]
 777 0010 13F0010F 	 tst r3,#1
 778 0014 FBD1     	 bne .L65
 358:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 779              	 .loc 1 358 0 is_stmt 1
 780 0016 08BD     	 pop {r3,pc}
 781              	.L69:
 782              	 .align 2
 783              	.L68:
 784 0018 5455000C 	 .word 201348436
 785 001c 10200058 	 .word 1476403216
 786              	 .cfi_endproc
 787              	.LFE167:
 789              	 .section .text.XMC_FLASH_RepairPhysicalSector,"ax",%progbits
 790              	 .align 2
 791              	 .global XMC_FLASH_RepairPhysicalSector
 792              	 .thumb
 793              	 .thumb_func
 795              	XMC_FLASH_RepairPhysicalSector:
 796              	.LFB168:
 359:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 360:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 361:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * This API repair the physical sector
 362:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 363:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_RepairPhysicalSector(void)
 364:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 797              	 .loc 1 364 0
 798              	 .cfi_startproc
 799              	 
 800              	 
 801 0000 08B5     	 push {r3,lr}
 802              	.LCFI17:
 803              	 .cfi_def_cfa_offset 8
 804              	 .cfi_offset 3,-8
 805              	 .cfi_offset 14,-4
 806              	.LVL68:
 807              	.LBB30:
 808              	.LBB31:
 233:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 809              	 .loc 1 233 0
 810 0002 F522     	 movs r2,#245
 811 0004 024B     	 ldr r3,.L72
 812 0006 1A60     	 str r2,[r3]
 813              	.LBE31:
 814              	.LBE30:
 365:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 366:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lRepairPhysicalSectorCommand();
 815              	 .loc 1 366 0
 816 0008 FFF7FEFF 	 bl XMC_FLASH_lRepairPhysicalSectorCommand
 817              	.LVL69:
 818 000c 08BD     	 pop {r3,pc}
 819              	.L73:
 820 000e 00BF     	 .align 2
 821              	.L72:
 822 0010 5455000C 	 .word 201348436
 823              	 .cfi_endproc
 824              	.LFE168:
 826              	 .section .text.XMC_FLASH_EraseUCB,"ax",%progbits
 827              	 .align 2
 828              	 .global XMC_FLASH_EraseUCB
 829              	 .thumb
 830              	 .thumb_func
 832              	XMC_FLASH_EraseUCB:
 833              	.LFB169:
 367:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 368:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 369:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 370:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to erase UCB sector which is starting with the specified address
 371:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 372:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_EraseUCB(uint32_t *ucb_sector_start_address)
 373:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 834              	 .loc 1 373 0
 835              	 .cfi_startproc
 836              	 
 837              	 
 838              	 
 839              	.LVL70:
 840 0000 30B4     	 push {r4,r5}
 841              	.LCFI18:
 842              	 .cfi_def_cfa_offset 8
 843              	 .cfi_offset 4,-8
 844              	 .cfi_offset 5,-4
 845              	.LVL71:
 374:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 375:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 376:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 377:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 846              	 .loc 1 377 0
 847 0002 094B     	 ldr r3,.L78
 848 0004 AA24     	 movs r4,#170
 849 0006 1C60     	 str r4,[r3]
 850              	.LVL72:
 378:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 379:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x55U;
 851              	 .loc 1 379 0
 852 0008 084A     	 ldr r2,.L78+4
 853 000a 5521     	 movs r1,#85
 854 000c 1160     	 str r1,[r2]
 855              	.LVL73:
 380:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 381:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x80U;
 856              	 .loc 1 381 0
 857 000e 8025     	 movs r5,#128
 858 0010 1D60     	 str r5,[r3]
 382:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 383:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xaaU;
 859              	 .loc 1 383 0
 860 0012 1C60     	 str r4,[r3]
 861              	.LVL74:
 384:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 385:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x55U;
 862              	 .loc 1 385 0
 863 0014 1160     	 str r1,[r2]
 864              	.LVL75:
 386:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = ucb_sector_start_address;
 387:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xc0U;
 865              	 .loc 1 387 0
 866 0016 C023     	 movs r3,#192
 867 0018 0360     	 str r3,[r0]
 388:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 389:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   /* wait until the operation is completed */
 390:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 868              	 .loc 1 390 0
 869 001a 054A     	 ldr r2,.L78+8
 870              	.L75:
 871              	 .loc 1 390 0 is_stmt 0 discriminator 1
 872 001c 1368     	 ldr r3,[r2]
 873 001e 13F0010F 	 tst r3,#1
 874 0022 FBD1     	 bne .L75
 391:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 875              	 .loc 1 391 0 is_stmt 1
 876 0024 30BC     	 pop {r4,r5}
 877              	.LCFI19:
 878              	 .cfi_restore 5
 879              	 .cfi_restore 4
 880              	 .cfi_def_cfa_offset 0
 881 0026 7047     	 bx lr
 882              	.L79:
 883              	 .align 2
 884              	.L78:
 885 0028 5455000C 	 .word 201348436
 886 002c A8AA000C 	 .word 201370280
 887 0030 10200058 	 .word 1476403216
 888              	 .cfi_endproc
 889              	.LFE169:
 891              	 .section .text.XMC_FLASH_Reset,"ax",%progbits
 892              	 .align 2
 893              	 .global XMC_FLASH_Reset
 894              	 .thumb
 895              	 .thumb_func
 897              	XMC_FLASH_Reset:
 898              	.LFB170:
 392:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 393:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 394:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to reset the status of the PFLASH
 395:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 396:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_Reset(void)
 397:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 899              	 .loc 1 397 0
 900              	 .cfi_startproc
 901              	 
 902              	 
 903              	 
 904              	.LVL76:
 398:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 399:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 400:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 401:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0xf0U;
 905              	 .loc 1 401 0
 906 0000 F022     	 movs r2,#240
 907 0002 014B     	 ldr r3,.L81
 908 0004 1A60     	 str r2,[r3]
 909 0006 7047     	 bx lr
 910              	.L82:
 911              	 .align 2
 912              	.L81:
 913 0008 5455000C 	 .word 201348436
 914              	 .cfi_endproc
 915              	.LFE170:
 917              	 .section .text.XMC_FLASH_InstallBMI,"ax",%progbits
 918              	 .align 2
 919              	 .global XMC_FLASH_InstallBMI
 920              	 .thumb
 921              	 .thumb_func
 923              	XMC_FLASH_InstallBMI:
 924              	.LFB171:
 402:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 403:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 404:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** #define BMI_STRING_BYTE_CNT 30
 405:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 406:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_InstallBMI(XMC_FLASH_BMI_STRING_t *const bmi_string)
 407:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 925              	 .loc 1 407 0
 926              	 .cfi_startproc
 927              	 
 928              	 
 929              	.LVL77:
 930 0000 10B5     	 push {r4,lr}
 931              	.LCFI20:
 932              	 .cfi_def_cfa_offset 8
 933              	 .cfi_offset 4,-8
 934              	 .cfi_offset 14,-4
 935              	.LVL78:
 936 0002 431E     	 subs r3,r0,#1
 937 0004 00F11D04 	 add r4,r0,#29
 408:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   uint32_t checksum = 0;
 938              	 .loc 1 408 0
 939 0008 0022     	 movs r2,#0
 940              	.LVL79:
 941              	.L84:
 942              	.LBB48:
 409:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 410:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   {
 411:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 	checksum ^= ((const uint8_t *)bmi_string)[i];
 943              	 .loc 1 411 0 discriminator 3
 944 000a 13F8011F 	 ldrb r1,[r3,#1]!
 945 000e 4A40     	 eors r2,r2,r1
 946              	.LVL80:
 409:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 947              	 .loc 1 409 0 discriminator 3
 948 0010 A342     	 cmp r3,r4
 949 0012 FAD1     	 bne .L84
 950              	.LBE48:
 412:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   }
 413:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 414:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   bmi_string->reserved = checksum;
 951              	 .loc 1 414 0
 952 0014 0262     	 str r2,[r0,#32]
 953              	.LVL81:
 954              	.LBB49:
 955              	.LBB50:
 109:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 956              	 .loc 1 109 0
 957 0016 5022     	 movs r2,#80
 958              	.LVL82:
 959 0018 134B     	 ldr r3,.L91
 960 001a 1A60     	 str r2,[r3]
 961              	.LVL83:
 962              	.LBE50:
 963              	.LBE49:
 415:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 416:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 417:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 418:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[0], ((const uint32_t *)bmi_string)[1]);
 964              	 .loc 1 418 0
 965 001c 0368     	 ldr r3,[r0]
 966 001e 4168     	 ldr r1,[r0,#4]
 967              	.LVL84:
 968              	.LBB51:
 969              	.LBB52:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 970              	 .loc 1 120 0
 971 0020 124A     	 ldr r2,.L91+4
 972 0022 1360     	 str r3,[r2]
 973              	.LVL85:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 974              	 .loc 1 122 0
 975 0024 124B     	 ldr r3,.L91+8
 976              	.LVL86:
 977 0026 1960     	 str r1,[r3]
 978              	.LVL87:
 979              	.LBE52:
 980              	.LBE51:
 419:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[2], ((const uint32_t *)bmi_string)[3]);
 981              	 .loc 1 419 0
 982 0028 8468     	 ldr r4,[r0,#8]
 983 002a C168     	 ldr r1,[r0,#12]
 984              	.LVL88:
 985              	.LBB53:
 986              	.LBB54:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 987              	 .loc 1 120 0
 988 002c 1460     	 str r4,[r2]
 989              	.LVL89:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 990              	 .loc 1 122 0
 991 002e 1960     	 str r1,[r3]
 992              	.LBE54:
 993              	.LBE53:
 420:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[4], ((const uint32_t *)bmi_string)[5]);
 994              	 .loc 1 420 0
 995 0030 0469     	 ldr r4,[r0,#16]
 996              	.LVL90:
 997 0032 4169     	 ldr r1,[r0,#20]
 998              	.LVL91:
 999              	.LBB55:
 1000              	.LBB56:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1001              	 .loc 1 120 0
 1002 0034 1460     	 str r4,[r2]
 1003              	.LVL92:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1004              	 .loc 1 122 0
 1005 0036 1960     	 str r1,[r3]
 1006              	.LBE56:
 1007              	.LBE55:
 421:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[6], ((const uint32_t *)bmi_string)[7]);
 1008              	 .loc 1 421 0
 1009 0038 8469     	 ldr r4,[r0,#24]
 1010              	.LVL93:
 1011 003a C169     	 ldr r1,[r0,#28]
 1012              	.LVL94:
 1013              	.LBB57:
 1014              	.LBB58:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1015              	 .loc 1 120 0
 1016 003c 1460     	 str r4,[r2]
 1017              	.LVL95:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1018              	 .loc 1 122 0
 1019 003e 1960     	 str r1,[r3]
 1020              	.LBE58:
 1021              	.LBE57:
 422:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[8], 0);
 1022              	 .loc 1 422 0
 1023 0040 016A     	 ldr r1,[r0,#32]
 1024              	.LVL96:
 1025              	.LBB59:
 1026              	.LBB60:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1027              	 .loc 1 120 0
 1028 0042 1160     	 str r1,[r2]
 1029              	.LVL97:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1030              	 .loc 1 122 0
 1031 0044 0022     	 movs r2,#0
 1032 0046 1A60     	 str r2,[r3]
 1033              	.LVL98:
 1034 0048 1B23     	 movs r3,#27
 1035              	.LBE60:
 1036              	.LBE59:
 1037              	.LBB61:
 1038              	.LBB62:
 1039              	.LBB63:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1040              	 .loc 1 120 0
 1041 004a 0848     	 ldr r0,.L91+4
 1042              	.LVL99:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1043              	 .loc 1 122 0
 1044 004c 0849     	 ldr r1,.L91+8
 1045              	.LVL100:
 1046              	.L85:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1047              	 .loc 1 120 0
 1048 004e 0260     	 str r2,[r0]
 1049              	.LVL101:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1050              	 .loc 1 122 0
 1051 0050 0A60     	 str r2,[r1]
 1052              	.LVL102:
 1053              	.LBE63:
 1054              	.LBE62:
 423:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 424:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   for (uint32_t idx = 0U; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_BMI_STRING_WORDS); idx += 2U)
 1055              	 .loc 1 424 0
 1056 0052 013B     	 subs r3,r3,#1
 1057              	.LVL103:
 1058 0054 FBD1     	 bne .L85
 1059              	.LBE61:
 425:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   {
 426:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 427:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   }
 428:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 429:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB2 + XMC_FLASH_BYTES_PER_PAGE))
 1060              	 .loc 1 429 0
 1061 0056 0748     	 ldr r0,.L91+12
 1062 0058 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 1063              	.LVL104:
 430:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 431:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   /* wait until the operation is completed */
 432:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1064              	 .loc 1 432 0
 1065 005c 064A     	 ldr r2,.L91+16
 1066              	.L86:
 1067              	 .loc 1 432 0 is_stmt 0 discriminator 1
 1068 005e 1368     	 ldr r3,[r2]
 1069 0060 13F0010F 	 tst r3,#1
 1070 0064 FBD1     	 bne .L86
 433:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1071              	 .loc 1 433 0 is_stmt 1
 1072 0066 10BD     	 pop {r4,pc}
 1073              	.LVL105:
 1074              	.L92:
 1075              	 .align 2
 1076              	.L91:
 1077 0068 5455000C 	 .word 201348436
 1078 006c F055000C 	 .word 201348592
 1079 0070 F455000C 	 .word 201348596
 1080 0074 0009000C 	 .word 201328896
 1081 0078 10200058 	 .word 1476403216
 1082              	 .cfi_endproc
 1083              	.LFE171:
 1085              	 .section .text.XMC_FLASH_InstallProtection,"ax",%progbits
 1086              	 .align 2
 1087              	 .global XMC_FLASH_InstallProtection
 1088              	 .thumb
 1089              	 .thumb_func
 1091              	XMC_FLASH_InstallProtection:
 1092              	.LFB172:
 434:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 435:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 436:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * This API install the global read and sector write protection for the specified user
 437:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 438:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_InstallProtection(uint8_t user,
 439:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****                                  uint32_t protection_mask,
 440:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 	                             uint32_t password_0,
 441:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****                                  uint32_t password_1)
 442:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 1093              	 .loc 1 442 0
 1094              	 .cfi_startproc
 1095              	 
 1096              	 
 1097              	.LVL106:
 1098 0000 70B5     	 push {r4,r5,r6,lr}
 1099              	.LCFI21:
 1100              	 .cfi_def_cfa_offset 16
 1101              	 .cfi_offset 4,-16
 1102              	 .cfi_offset 5,-12
 1103              	 .cfi_offset 6,-8
 1104              	 .cfi_offset 14,-4
 1105              	.LVL107:
 1106              	.LBB76:
 1107              	.LBB77:
 109:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1108              	 .loc 1 109 0
 1109 0002 5025     	 movs r5,#80
 1110 0004 0F4C     	 ldr r4,.L99
 1111 0006 2560     	 str r5,[r4]
 1112              	.LVL108:
 1113              	.LBE77:
 1114              	.LBE76:
 1115              	.LBB78:
 1116              	.LBB79:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1117              	 .loc 1 120 0
 1118 0008 0F4D     	 ldr r5,.L99+4
 1119 000a 2960     	 str r1,[r5]
 1120              	.LVL109:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1121              	 .loc 1 122 0
 1122 000c A034     	 adds r4,r4,#160
 1123 000e 0026     	 movs r6,#0
 1124 0010 2660     	 str r6,[r4]
 1125              	.LVL110:
 1126              	.LBE79:
 1127              	.LBE78:
 1128              	.LBB80:
 1129              	.LBB81:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1130              	 .loc 1 120 0
 1131 0012 2960     	 str r1,[r5]
 1132              	.LVL111:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1133              	 .loc 1 122 0
 1134 0014 2660     	 str r6,[r4]
 1135              	.LVL112:
 1136              	.LBE81:
 1137              	.LBE80:
 1138              	.LBB82:
 1139              	.LBB83:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1140              	 .loc 1 120 0
 1141 0016 2A60     	 str r2,[r5]
 1142              	.LVL113:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1143              	 .loc 1 122 0
 1144 0018 2360     	 str r3,[r4]
 1145              	.LVL114:
 1146              	.LBE83:
 1147              	.LBE82:
 1148              	.LBB84:
 1149              	.LBB85:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1150              	 .loc 1 120 0
 1151 001a 2A60     	 str r2,[r5]
 1152              	.LVL115:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1153              	 .loc 1 122 0
 1154 001c 2360     	 str r3,[r4]
 1155              	.LVL116:
 1156 001e 1C23     	 movs r3,#28
 1157              	.LVL117:
 1158              	.LBE85:
 1159              	.LBE84:
 1160              	.LBB86:
 1161              	.LBB87:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1162              	 .loc 1 120 0
 1163 0020 2C46     	 mov r4,r5
 1164              	.LVL118:
 1165 0022 3246     	 mov r2,r6
 1166              	.LVL119:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1167              	 .loc 1 122 0
 1168 0024 0949     	 ldr r1,.L99+8
 1169              	.LVL120:
 1170              	.L94:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1171              	 .loc 1 120 0
 1172 0026 2260     	 str r2,[r4]
 1173              	.LVL121:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1174              	 .loc 1 122 0
 1175 0028 0A60     	 str r2,[r1]
 1176              	.LVL122:
 1177              	.LBE87:
 1178              	.LBE86:
 443:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   uint32_t idx;
 444:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   
 445:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfigureProtection: User level out of range", (user < 3U))
 446:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 447:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 448:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 449:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 450:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 451:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 452:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 453:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   
 454:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   for (idx = 0U; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROTECTION_CONFIGURATION_WORDS); idx +
 1179              	 .loc 1 454 0
 1180 002a 013B     	 subs r3,r3,#1
 1181              	.LVL123:
 1182 002c FBD1     	 bne .L94
 455:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   {
 456:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 457:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   }
 458:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 459:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + (user * XMC_FLASH_BYTES_PE
 1183              	 .loc 1 459 0
 1184 002e 00F54030 	 add r0,r0,#196608
 1185              	.LVL124:
 1186 0032 8002     	 lsls r0,r0,#10
 1187 0034 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 1188              	.LVL125:
 460:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 461:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   /* wait until the operation is completed */
 462:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1189              	 .loc 1 462 0
 1190 0038 054A     	 ldr r2,.L99+12
 1191              	.L95:
 1192              	 .loc 1 462 0 is_stmt 0 discriminator 1
 1193 003a 1368     	 ldr r3,[r2]
 1194 003c 13F0010F 	 tst r3,#1
 1195 0040 FBD1     	 bne .L95
 463:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1196              	 .loc 1 463 0 is_stmt 1
 1197 0042 70BD     	 pop {r4,r5,r6,pc}
 1198              	.L100:
 1199              	 .align 2
 1200              	.L99:
 1201 0044 5455000C 	 .word 201348436
 1202 0048 F055000C 	 .word 201348592
 1203 004c F455000C 	 .word 201348596
 1204 0050 10200058 	 .word 1476403216
 1205              	 .cfi_endproc
 1206              	.LFE172:
 1208              	 .section .text.XMC_FLASH_ConfirmProtection,"ax",%progbits
 1209              	 .align 2
 1210              	 .global XMC_FLASH_ConfirmProtection
 1211              	 .thumb
 1212              	 .thumb_func
 1214              	XMC_FLASH_ConfirmProtection:
 1215              	.LFB173:
 464:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 465:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 466:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * This API confirm the protection. So that This sectors are locked with the specified protection.
 467:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 468:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_ConfirmProtection(uint8_t user)
 469:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 1216              	 .loc 1 469 0
 1217              	 .cfi_startproc
 1218              	 
 1219              	 
 1220              	.LVL126:
 1221 0000 10B5     	 push {r4,lr}
 1222              	.LCFI22:
 1223              	 .cfi_def_cfa_offset 8
 1224              	 .cfi_offset 4,-8
 1225              	 .cfi_offset 14,-4
 1226              	.LVL127:
 1227              	.LBB96:
 1228              	.LBB97:
 109:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1229              	 .loc 1 109 0
 1230 0002 5022     	 movs r2,#80
 1231 0004 0E4B     	 ldr r3,.L107
 1232 0006 1A60     	 str r2,[r3]
 1233              	.LVL128:
 1234              	.LBE97:
 1235              	.LBE96:
 1236              	.LBB98:
 1237              	.LBB99:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1238              	 .loc 1 120 0
 1239 0008 0E49     	 ldr r1,.L107+4
 1240 000a 0F4C     	 ldr r4,.L107+8
 1241 000c 0C60     	 str r4,[r1]
 1242              	.LVL129:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1243              	 .loc 1 122 0
 1244 000e A033     	 adds r3,r3,#160
 1245 0010 0022     	 movs r2,#0
 1246 0012 1A60     	 str r2,[r3]
 1247              	.LVL130:
 1248              	.LBE99:
 1249              	.LBE98:
 1250              	.LBB100:
 1251              	.LBB101:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1252              	 .loc 1 120 0
 1253 0014 0C60     	 str r4,[r1]
 1254              	.LVL131:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1255              	 .loc 1 122 0
 1256 0016 1A60     	 str r2,[r3]
 1257              	.LVL132:
 1258 0018 1E23     	 movs r3,#30
 1259              	.LBE101:
 1260              	.LBE100:
 1261              	.LBB102:
 1262              	.LBB103:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1263              	 .loc 1 120 0
 1264 001a 0C46     	 mov r4,r1
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1265              	 .loc 1 122 0
 1266 001c 0431     	 adds r1,r1,#4
 1267              	.LVL133:
 1268              	.L102:
 120:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1269              	 .loc 1 120 0
 1270 001e 2260     	 str r2,[r4]
 1271              	.LVL134:
 122:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1272              	 .loc 1 122 0
 1273 0020 0A60     	 str r2,[r1]
 1274              	.LVL135:
 1275              	.LBE103:
 1276              	.LBE102:
 470:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   uint32_t idx;
 471:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 472:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfirmProtection: User level out of range", (user < 3U))
 473:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 474:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 475:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 476:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROT_CONFIRM_CODE, 0U);
 477:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROT_CONFIRM_CODE, 0U);
 478:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 479:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   /* Fill the rest of page buffer with zeros*/
 480:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   for (idx = 0UL; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROT_CONFIRM_WORDS); idx += 2U)
 1277              	 .loc 1 480 0
 1278 0022 013B     	 subs r3,r3,#1
 1279              	.LVL136:
 1280 0024 FBD1     	 bne .L102
 481:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   {
 482:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 483:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   }
 484:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 485:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + 
 1281              	 .loc 1 485 0
 1282 0026 8002     	 lsls r0,r0,#10
 1283              	.LVL137:
 1284 0028 00F14060 	 add r0,r0,#201326592
 1285 002c 00F50070 	 add r0,r0,#512
 1286 0030 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 1287              	.LVL138:
 486:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****                                  (user * XMC_FLASH_BYTES_PER_UCB) + XMC_FLASH_PROT_CONFIRM_OFFSET))
 487:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 488:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   /* wait until the operation is completed */
 489:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1288              	 .loc 1 489 0
 1289 0034 054A     	 ldr r2,.L107+12
 1290              	.L103:
 1291              	 .loc 1 489 0 is_stmt 0 discriminator 1
 1292 0036 1368     	 ldr r3,[r2]
 1293 0038 13F0010F 	 tst r3,#1
 1294 003c FBD1     	 bne .L103
 490:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1295              	 .loc 1 490 0 is_stmt 1
 1296 003e 10BD     	 pop {r4,pc}
 1297              	.L108:
 1298              	 .align 2
 1299              	.L107:
 1300 0040 5455000C 	 .word 201348436
 1301 0044 F055000C 	 .word 201348592
 1302 0048 C315FE8A 	 .word -1963059773
 1303 004c 10200058 	 .word 1476403216
 1304              	 .cfi_endproc
 1305              	.LFE173:
 1307              	 .section .text.XMC_FLASH_VerifyReadProtection,"ax",%progbits
 1308              	 .align 2
 1309              	 .global XMC_FLASH_VerifyReadProtection
 1310              	 .thumb
 1311              	 .thumb_func
 1313              	XMC_FLASH_VerifyReadProtection:
 1314              	.LFB174:
 491:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 492:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 493:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * This API verify read protection configuration. And returns true if passwords are matching.
 494:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 495:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** bool XMC_FLASH_VerifyReadProtection(uint32_t password_0, uint32_t password_1)
 496:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 1315              	 .loc 1 496 0
 1316              	 .cfi_startproc
 1317              	 
 1318              	 
 1319              	.LVL139:
 1320 0000 08B5     	 push {r3,lr}
 1321              	.LCFI23:
 1322              	 .cfi_def_cfa_offset 8
 1323              	 .cfi_offset 3,-8
 1324              	 .cfi_offset 14,-4
 1325              	.LVL140:
 1326              	.LBB110:
 1327              	.LBB111:
 253:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1328              	 .loc 1 253 0
 1329 0002 41F21003 	 movw r3,#4112
 1330 0006 094A     	 ldr r2,.L113
 1331 0008 D358     	 ldr r3,[r2,r3]
 1332              	.LBE111:
 1333              	.LBE110:
 497:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   bool status = false;
 498:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   
 499:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   /* Check if read protection is installed */
 500:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   if ((XMC_FLASH_GetStatus() & (uint32_t)XMC_FLASH_STATUS_READ_PROTECTION_INSTALLED) != 0U)
 1334              	 .loc 1 500 0
 1335 000a 13F4802F 	 tst r3,#262144
 1336 000e 0BD0     	 beq .L111
 1337              	.LVL141:
 1338              	.LBB112:
 1339              	.LBB113:
 233:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1340              	 .loc 1 233 0
 1341 0010 F522     	 movs r2,#245
 1342 0012 074B     	 ldr r3,.L113+4
 1343 0014 1A60     	 str r2,[r3]
 1344              	.LBE113:
 1345              	.LBE112:
 501:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   {  
 502:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****     XMC_FLASH_lClearStatusCommand();
 503:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****     XMC_FLASH_lDisableReadProtectionCommand(password_0, password_1);
 1346              	 .loc 1 503 0
 1347 0016 FFF7FEFF 	 bl XMC_FLASH_lDisableReadProtectionCommand
 1348              	.LVL142:
 1349              	.LBB114:
 1350              	.LBB115:
 253:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1351              	 .loc 1 253 0
 1352 001a 41F21003 	 movw r3,#4112
 1353 001e 034A     	 ldr r2,.L113
 1354 0020 D058     	 ldr r0,[r2,r3]
 1355              	.LBE115:
 1356              	.LBE114:
 504:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 505:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****     status = (bool)(XMC_FLASH_GetStatus() & (uint32_t)XMC_FLASH_STATUS_READ_PROTECTION_DISABLED_STA
 1357              	 .loc 1 505 0
 1358 0022 C0F3C040 	 ubfx r0,r0,#19,#1
 1359              	.LVL143:
 1360 0026 08BD     	 pop {r3,pc}
 1361              	.LVL144:
 1362              	.L111:
 497:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   
 1363              	 .loc 1 497 0
 1364 0028 0020     	 movs r0,#0
 1365              	.LVL145:
 506:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   }
 507:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 508:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   return status;
 509:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1366              	 .loc 1 509 0
 1367 002a 08BD     	 pop {r3,pc}
 1368              	.L114:
 1369              	 .align 2
 1370              	.L113:
 1371 002c 00100058 	 .word 1476399104
 1372 0030 5455000C 	 .word 201348436
 1373              	 .cfi_endproc
 1374              	.LFE174:
 1376              	 .section .text.XMC_FLASH_VerifyWriteProtection,"ax",%progbits
 1377              	 .align 2
 1378              	 .global XMC_FLASH_VerifyWriteProtection
 1379              	 .thumb
 1380              	 .thumb_func
 1382              	XMC_FLASH_VerifyWriteProtection:
 1383              	.LFB175:
 510:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 511:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 512:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * This API verify sector write protection configuration. And returns true if passwords are matchin
 513:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * specified user.
 514:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 515:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** bool XMC_FLASH_VerifyWriteProtection(uint32_t user,
 516:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****                                      uint32_t protection_mask, 
 517:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****                                      uint32_t password_0, 
 518:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****                                      uint32_t password_1)
 519:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 1384              	 .loc 1 519 0
 1385              	 .cfi_startproc
 1386              	 
 1387              	 
 1388              	.LVL146:
 1389 0000 38B5     	 push {r3,r4,r5,lr}
 1390              	.LCFI24:
 1391              	 .cfi_def_cfa_offset 16
 1392              	 .cfi_offset 3,-16
 1393              	 .cfi_offset 4,-12
 1394              	 .cfi_offset 5,-8
 1395              	 .cfi_offset 14,-4
 1396              	.LVL147:
 1397              	.LBB122:
 1398              	.LBB123:
 253:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1399              	 .loc 1 253 0
 1400 0002 41F21004 	 movw r4,#4112
 1401 0006 154D     	 ldr r5,.L121
 1402 0008 2C59     	 ldr r4,[r5,r4]
 1403              	.LBE123:
 1404              	.LBE122:
 520:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   bool status = false;
 521:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   uint32_t *flash_procon_ptr = (uint32_t *)(void*)(&(FLASH0->PROCON0) + user);
 522:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 523:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_VerifyWriteProtection: User level out of range", (user < 2U))
 524:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 525:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   /* Check if write protection for selected user is installed */
 526:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   if ((XMC_FLASH_GetStatus() & (uint32_t)((uint32_t)1U << (uint32_t)((uint32_t)FLASH_FSR_WPROIN0_Po
 1405              	 .loc 1 526 0
 1406 000a 00F11505 	 add r5,r0,#21
 1407 000e EC40     	 lsrs r4,r4,r5
 1408 0010 14F0010F 	 tst r4,#1
 1409 0014 1FD0     	 beq .L118
 1410 0016 0C46     	 mov r4,r1
 1411 0018 0546     	 mov r5,r0
 1412              	.LVL148:
 1413              	.LBB124:
 1414              	.LBB125:
 233:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1415              	 .loc 1 233 0
 1416 001a F520     	 movs r0,#245
 1417              	.LVL149:
 1418 001c 1049     	 ldr r1,.L121+4
 1419              	.LVL150:
 1420 001e 0860     	 str r0,[r1]
 1421              	.LBE125:
 1422              	.LBE124:
 527:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   {  
 528:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****     XMC_FLASH_lClearStatusCommand();
 529:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****     XMC_FLASH_lDisableSectorWriteProtectionCommand(user, password_0, password_1);
 1423              	 .loc 1 529 0
 1424 0020 2846     	 mov r0,r5
 1425 0022 1146     	 mov r1,r2
 1426 0024 1A46     	 mov r2,r3
 1427              	.LVL151:
 1428 0026 FFF7FEFF 	 bl XMC_FLASH_lDisableSectorWriteProtectionCommand
 1429              	.LVL152:
 1430              	.LBB126:
 1431              	.LBB127:
 253:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1432              	 .loc 1 253 0
 1433 002a 41F21003 	 movw r3,#4112
 1434 002e 0B4A     	 ldr r2,.L121
 1435 0030 D358     	 ldr r3,[r2,r3]
 1436              	.LBE127:
 1437              	.LBE126:
 530:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****     
 531:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****     status = (bool)((XMC_FLASH_GetStatus() & (uint32_t)((uint32_t)1U << (uint32_t)((uint32_t)FLASH_
 1438              	 .loc 1 531 0
 1439 0032 05F11902 	 add r2,r5,#25
 1440 0036 D340     	 lsrs r3,r3,r2
 1441 0038 13F0010F 	 tst r3,#1
 1442 003c 09D0     	 beq .L119
 532:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1443              	 .loc 1 532 0 discriminator 1
 1444 003e 24F40040 	 bic r0,r4,#32768
 531:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1445              	 .loc 1 531 0 discriminator 1
 1446 0042 084B     	 ldr r3,.L121+8
 1447 0044 53F82530 	 ldr r3,[r3,r5,lsl#2]
 1448 0048 8342     	 cmp r3,r0
 1449 004a 14BF     	 ite ne
 1450 004c 0020     	 movne r0,#0
 1451 004e 0120     	 moveq r0,#1
 1452 0050 38BD     	 pop {r3,r4,r5,pc}
 1453              	.LVL153:
 1454              	.L119:
 531:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1455              	 .loc 1 531 0 is_stmt 0
 1456 0052 0020     	 movs r0,#0
 1457              	.LVL154:
 1458 0054 38BD     	 pop {r3,r4,r5,pc}
 1459              	.LVL155:
 1460              	.L118:
 520:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   uint32_t *flash_procon_ptr = (uint32_t *)(void*)(&(FLASH0->PROCON0) + user);
 1461              	 .loc 1 520 0 is_stmt 1
 1462 0056 0020     	 movs r0,#0
 1463              	.LVL156:
 533:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   }
 534:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 535:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   return status;
 536:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** }
 1464              	 .loc 1 536 0
 1465 0058 38BD     	 pop {r3,r4,r5,pc}
 1466              	.LVL157:
 1467              	.L122:
 1468 005a 00BF     	 .align 2
 1469              	.L121:
 1470 005c 00100058 	 .word 1476399104
 1471 0060 5455000C 	 .word 201348436
 1472 0064 20200058 	 .word 1476403232
 1473              	 .cfi_endproc
 1474              	.LFE175:
 1476              	 .section .text.XMC_FLASH_ResumeProtection,"ax",%progbits
 1477              	 .align 2
 1478              	 .global XMC_FLASH_ResumeProtection
 1479              	 .thumb
 1480              	 .thumb_func
 1482              	XMC_FLASH_ResumeProtection:
 1483              	.LFB176:
 537:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 538:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** /*
 539:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  * Command to enables the protection as it was configured
 540:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****  */
 541:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** void XMC_FLASH_ResumeProtection(void)
 542:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** {
 1484              	 .loc 1 542 0
 1485              	 .cfi_startproc
 1486              	 
 1487              	 
 1488              	 
 1489              	.LVL158:
 543:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   volatile uint32_t *address;
 544:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c **** 
 545:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 546:C:/Files/Projects/Git/XMCLib/src\xmc4_flash.c ****   *address = 0x5eU;
 1490              	 .loc 1 546 0
 1491 0000 5E22     	 movs r2,#94
 1492 0002 014B     	 ldr r3,.L124
 1493 0004 1A60     	 str r2,[r3]
 1494 0006 7047     	 bx lr
 1495              	.L125:
 1496              	 .align 2
 1497              	.L124:
 1498 0008 5455000C 	 .word 201348436
 1499              	 .cfi_endproc
 1500              	.LFE176:
 1502              	 .text
 1503              	.Letext0:
 1504              	 .file 2 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1505              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1506              	 .file 4 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1507              	 .file 5 "C:/Files/Projects/Git/XMCLib/inc/xmc4_flash.h"
 1508              	 .file 6 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
 1509              	 .file 7 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_flash.c
    {standard input}:20     .text.XMC_FLASH_lEnterPageModeCommand:00000000 $t
    {standard input}:25     .text.XMC_FLASH_lEnterPageModeCommand:00000000 XMC_FLASH_lEnterPageModeCommand
    {standard input}:42     .text.XMC_FLASH_lEnterPageModeCommand:00000008 $d
    {standard input}:47     .text.XMC_FLASH_lLoadPageCommand:00000000 $t
    {standard input}:52     .text.XMC_FLASH_lLoadPageCommand:00000000 XMC_FLASH_lLoadPageCommand
    {standard input}:71     .text.XMC_FLASH_lLoadPageCommand:0000000c $d
    {standard input}:76     .text.XMC_FLASH_lWritePageCommand:00000000 $t
    {standard input}:81     .text.XMC_FLASH_lWritePageCommand:00000000 XMC_FLASH_lWritePageCommand
    {standard input}:119    .text.XMC_FLASH_lWritePageCommand:0000001c $d
    {standard input}:125    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 $t
    {standard input}:130    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 XMC_FLASH_lWriteUCBPageCommand
    {standard input}:168    .text.XMC_FLASH_lWriteUCBPageCommand:0000001c $d
    {standard input}:174    .text.XMC_FLASH_lEraseSectorCommand:00000000 $t
    {standard input}:179    .text.XMC_FLASH_lEraseSectorCommand:00000000 XMC_FLASH_lEraseSectorCommand
    {standard input}:225    .text.XMC_FLASH_lEraseSectorCommand:00000020 $d
    {standard input}:231    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 $t
    {standard input}:236    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 XMC_FLASH_lDisableSectorWriteProtectionCommand
    {standard input}:287    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:0000002c $d
    {standard input}:293    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 $t
    {standard input}:298    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 XMC_FLASH_lDisableReadProtectionCommand
    {standard input}:346    .text.XMC_FLASH_lDisableReadProtectionCommand:0000002c $d
    {standard input}:352    .text.XMC_FLASH_lClearStatusCommand:00000000 $t
    {standard input}:357    .text.XMC_FLASH_lClearStatusCommand:00000000 XMC_FLASH_lClearStatusCommand
    {standard input}:373    .text.XMC_FLASH_lClearStatusCommand:00000008 $d
    {standard input}:378    .text.XMC_FLASH_ClearStatus:00000000 $t
    {standard input}:383    .text.XMC_FLASH_ClearStatus:00000000 XMC_FLASH_ClearStatus
    {standard input}:401    .text.XMC_FLASH_ClearStatus:00000008 $d
    {standard input}:408    .text.XMC_FLASH_GetStatus:00000000 $t
    {standard input}:413    .text.XMC_FLASH_GetStatus:00000000 XMC_FLASH_GetStatus
    {standard input}:429    .text.XMC_FLASH_GetStatus:0000000c $d
    {standard input}:434    .text.XMC_FLASH_EnableEvent:00000000 $t
    {standard input}:439    .text.XMC_FLASH_EnableEvent:00000000 XMC_FLASH_EnableEvent
    {standard input}:458    .text.XMC_FLASH_EnableEvent:00000010 $d
    {standard input}:463    .text.XMC_FLASH_DisableEvent:00000000 $t
    {standard input}:468    .text.XMC_FLASH_DisableEvent:00000000 XMC_FLASH_DisableEvent
    {standard input}:487    .text.XMC_FLASH_DisableEvent:00000010 $d
    {standard input}:492    .text.XMC_FLASH_ProgramPage:00000000 $t
    {standard input}:497    .text.XMC_FLASH_ProgramPage:00000000 XMC_FLASH_ProgramPage
    {standard input}:575    .text.XMC_FLASH_ProgramPage:00000034 $d
    {standard input}:583    .text.XMC_FLASH_EraseSector:00000000 $t
    {standard input}:588    .text.XMC_FLASH_EraseSector:00000000 XMC_FLASH_EraseSector
    {standard input}:624    .text.XMC_FLASH_EraseSector:00000018 $d
    {standard input}:630    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 $t
    {standard input}:635    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 XMC_FLASH_lErasePhysicalSectorCommand
    {standard input}:681    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000020 $d
    {standard input}:687    .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000000 $t
    {standard input}:692    .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000000 XMC_FLASH_lRepairPhysicalSectorCommand
    {standard input}:736    .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000024 $d
    {standard input}:743    .text.XMC_FLASH_ErasePhysicalSector:00000000 $t
    {standard input}:748    .text.XMC_FLASH_ErasePhysicalSector:00000000 XMC_FLASH_ErasePhysicalSector
    {standard input}:784    .text.XMC_FLASH_ErasePhysicalSector:00000018 $d
    {standard input}:790    .text.XMC_FLASH_RepairPhysicalSector:00000000 $t
    {standard input}:795    .text.XMC_FLASH_RepairPhysicalSector:00000000 XMC_FLASH_RepairPhysicalSector
    {standard input}:822    .text.XMC_FLASH_RepairPhysicalSector:00000010 $d
    {standard input}:827    .text.XMC_FLASH_EraseUCB:00000000 $t
    {standard input}:832    .text.XMC_FLASH_EraseUCB:00000000 XMC_FLASH_EraseUCB
    {standard input}:885    .text.XMC_FLASH_EraseUCB:00000028 $d
    {standard input}:892    .text.XMC_FLASH_Reset:00000000 $t
    {standard input}:897    .text.XMC_FLASH_Reset:00000000 XMC_FLASH_Reset
    {standard input}:913    .text.XMC_FLASH_Reset:00000008 $d
    {standard input}:918    .text.XMC_FLASH_InstallBMI:00000000 $t
    {standard input}:923    .text.XMC_FLASH_InstallBMI:00000000 XMC_FLASH_InstallBMI
    {standard input}:1077   .text.XMC_FLASH_InstallBMI:00000068 $d
    {standard input}:1086   .text.XMC_FLASH_InstallProtection:00000000 $t
    {standard input}:1091   .text.XMC_FLASH_InstallProtection:00000000 XMC_FLASH_InstallProtection
    {standard input}:1201   .text.XMC_FLASH_InstallProtection:00000044 $d
    {standard input}:1209   .text.XMC_FLASH_ConfirmProtection:00000000 $t
    {standard input}:1214   .text.XMC_FLASH_ConfirmProtection:00000000 XMC_FLASH_ConfirmProtection
    {standard input}:1300   .text.XMC_FLASH_ConfirmProtection:00000040 $d
    {standard input}:1308   .text.XMC_FLASH_VerifyReadProtection:00000000 $t
    {standard input}:1313   .text.XMC_FLASH_VerifyReadProtection:00000000 XMC_FLASH_VerifyReadProtection
    {standard input}:1371   .text.XMC_FLASH_VerifyReadProtection:0000002c $d
    {standard input}:1377   .text.XMC_FLASH_VerifyWriteProtection:00000000 $t
    {standard input}:1382   .text.XMC_FLASH_VerifyWriteProtection:00000000 XMC_FLASH_VerifyWriteProtection
    {standard input}:1470   .text.XMC_FLASH_VerifyWriteProtection:0000005c $d
    {standard input}:1477   .text.XMC_FLASH_ResumeProtection:00000000 $t
    {standard input}:1482   .text.XMC_FLASH_ResumeProtection:00000000 XMC_FLASH_ResumeProtection
    {standard input}:1498   .text.XMC_FLASH_ResumeProtection:00000008 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
