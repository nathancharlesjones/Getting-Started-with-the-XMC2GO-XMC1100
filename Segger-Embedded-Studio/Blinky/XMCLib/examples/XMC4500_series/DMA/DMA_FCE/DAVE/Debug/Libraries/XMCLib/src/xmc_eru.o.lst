   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_eru.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_ERU_ETL_Init,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_ERU_ETL_Init
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_ERU_ETL_Init:
  26              	.LFB141:
  27              	 .file 1 "C:/Files/Projects/Git/XMCLib/src/xmc_eru.c"
   1:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /**
   2:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * @file xmc_eru.c
   3:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * @date 2016-03-10
   4:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *
   5:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *
   9:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * 
  18:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * 
  21:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *
  36:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *
  39:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *     - Initial <br>
  41:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *
  42:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * 2015-06-20:
  43:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *
  45:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * 2016-03-10:
  46:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *     - XMC_ERU_ETL_GetEdgeDetection() API is added to get the configured edge for event generatio
  47:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  *
  48:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * @endcond
  49:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  */
  50:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
  51:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /**************************************************************************************************
  52:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * HEADER FILES
  53:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  **************************************************************************************************
  54:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
  55:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** #include "xmc_eru.h"
  56:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
  57:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /**************************************************************************************************
  58:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * MACROS
  59:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  **************************************************************************************************
  60:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
  61:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** #define ERU_EXISEL_BITSIZE (4UL) /* Used to set the input for path A and path B based on the channe
  62:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** #define ERU_EXISEL_INPUT_BITSIZE (2UL)
  63:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
  64:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** #define XMC_ERU_ETL_CHECK_INPUT_A(input) \
  65:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****     ((input == XMC_ERU_ETL_INPUT_A0) || \
  66:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_A1) || \
  67:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_A2) || \
  68:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_A3))
  69:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
  70:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** #define XMC_ERU_ETL_CHECK_INPUT_B(input) \
  71:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****     ((input == XMC_ERU_ETL_INPUT_B0) || \
  72:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_B1) || \
  73:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_B2) || \
  74:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_B3))
  75:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
  76:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** #define XMC_ERU_ETL_CHECK_STATUS_FLAG_MODE(mode) \
  77:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****     ((mode == XMC_ERU_ETL_STATUS_FLAG_MODE_SWCTRL) || \
  78:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (mode == XMC_ERU_ETL_STATUS_FLAG_MODE_HWCTRL))
  79:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
  80:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** #define XMC_ERU_ETL_CHECK_EVENT_SOURCE(source) \
  81:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****     ((source == XMC_ERU_ETL_SOURCE_A)              || \
  82:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_B)              || \
  83:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_OR_B)         || \
  84:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_AND_B)        || \
  85:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A)          || \
  86:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_OR_B)     || \
  87:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_AND_B)    || \
  88:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_B)          || \
  89:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_OR_NOT_B)     || \
  90:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_AND_NOT_B)    || \
  91:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_OR_NOT_B) || \
  92:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_AND_NOT_B))
  93:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
  94:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** #define XMC_ERU_ETL_CHECK_TRIGGER_EDGE(edge) \
  95:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****     ((edge == XMC_ERU_ETL_EDGE_DETECTION_DISABLED) || \
  96:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (edge == XMC_ERU_ETL_EDGE_DETECTION_RISING) || \
  97:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (edge == XMC_ERU_ETL_EDGE_DETECTION_FALLING) || \
  98:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (edge == XMC_ERU_ETL_EDGE_DETECTION_BOTH))
  99:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 100:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** #define XMC_ERU_ETL_CHECK_TRIGGER_CHANNEL(channel) \
 101:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****     ((channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL0) || \
 102:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL1) || \
 103:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL2) || \
 104:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL3))
 105:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 106:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** #define XMC_ERU_OGU_CHECK_PATTERN_INPUT(input) \
 107:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****     ((input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT0) || \
 108:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT1) || \
 109:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT2) || \
 110:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT3))
 111:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 112:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** #define XMC_ERU_OGU_CHECK_PERIPHERAL_TRIGGER(trigger) \
 113:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****     ((trigger == XMC_ERU_OGU_PERIPHERAL_TRIGGER1) || \
 114:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (trigger == XMC_ERU_OGU_PERIPHERAL_TRIGGER2) || \
 115:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (trigger == XMC_ERU_OGU_PERIPHERAL_TRIGGER3))
 116:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 117:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** #define XMC_ERU_OGU_CHECK_SERIVCE_REQUEST(service) \
 118:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****     ((service == XMC_ERU_OGU_SERVICE_REQUEST_DISABLED) || \
 119:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (service == XMC_ERU_OGU_SERVICE_REQUEST_ON_TRIGGER) || \
 120:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (service == XMC_ERU_OGU_SERVICE_REQUEST_ON_TRIGGER_AND_PATTERN_MATCH) || \
 121:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****      (service == XMC_ERU_OGU_SERVICE_REQUEST_ON_TRIGGER_AND_PATTERN_MISMATCH))
 122:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  
 123:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /**************************************************************************************************
 124:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * API IMPLEMENTATION
 125:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  **************************************************************************************************
 126:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Initializes the selected ERU_ETLx channel with the config structure.  */
 127:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_ETL_Init(XMC_ERU_t *const eru,
 128:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                       const uint8_t channel,
 129:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                       const XMC_ERU_ETL_CONFIG_t *const config)
 130:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** { 
  28              	 .loc 1 130 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 70B5     	 push {r4,r5,r6,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 16
  36              	 .cfi_offset 4,-16
  37              	 .cfi_offset 5,-12
  38              	 .cfi_offset 6,-8
  39              	 .cfi_offset 14,-4
  40 0002 0546     	 mov r5,r0
  41 0004 0C46     	 mov r4,r1
  42 0006 1646     	 mov r6,r2
 131:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_Init:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 132:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_Init:Invalid Channel Number", (channel < 4U));
 133:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 134:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ERU_Enable(eru);
  43              	 .loc 1 134 0
  44 0008 FFF7FEFF 	 bl XMC_ERU_Enable
  45              	.LVL1:
 135:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 136:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXISEL = (eru->EXISEL & 
  46              	 .loc 1 136 0
  47 000c 2968     	 ldr r1,[r5]
 137:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  48              	 .loc 1 137 0
  49 000e A000     	 lsls r0,r4,#2
  50 0010 0F23     	 movs r3,#15
  51 0012 8340     	 lsls r3,r3,r0
 136:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  52              	 .loc 1 136 0
  53 0014 21EA0302 	 bic r2,r1,r3
 138:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                 (config->input << (channel * (uint32_t)ERU_EXISEL_BITSIZE));
  54              	 .loc 1 138 0
  55 0018 3368     	 ldr r3,[r6]
  56 001a 8340     	 lsls r3,r3,r0
 137:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  57              	 .loc 1 137 0
  58 001c 1343     	 orrs r3,r3,r2
 136:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  59              	 .loc 1 136 0
  60 001e 2B60     	 str r3,[r5]
 139:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   
 140:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXICON[channel] = config->raw;
  61              	 .loc 1 140 0
  62 0020 7368     	 ldr r3,[r6,#4]
  63 0022 0434     	 adds r4,r4,#4
  64 0024 45F82430 	 str r3,[r5,r4,lsl#2]
  65 0028 70BD     	 pop {r4,r5,r6,pc}
  66              	 .cfi_endproc
  67              	.LFE141:
  69 002a 00BF     	 .section .text.XMC_ERU_OGU_Init,"ax",%progbits
  70              	 .align 2
  71              	 .global XMC_ERU_OGU_Init
  72              	 .thumb
  73              	 .thumb_func
  75              	XMC_ERU_OGU_Init:
  76              	.LFB142:
 141:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 142:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 143:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Initializes the selected ERU_OGUy channel with the config structure.  */
 144:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_OGU_Init(XMC_ERU_t *const eru,
 145:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                       const uint8_t channel,
 146:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                       const XMC_ERU_OGU_CONFIG_t *const config)
 147:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
  77              	 .loc 1 147 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	.LVL2:
  82 0000 70B5     	 push {r4,r5,r6,lr}
  83              	.LCFI1:
  84              	 .cfi_def_cfa_offset 16
  85              	 .cfi_offset 4,-16
  86              	 .cfi_offset 5,-12
  87              	 .cfi_offset 6,-8
  88              	 .cfi_offset 14,-4
  89 0002 0546     	 mov r5,r0
  90 0004 0C46     	 mov r4,r1
  91 0006 1646     	 mov r6,r2
 148:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_Init:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 149:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_Init:Invalid Channel Number", (channel < 4U));
 150:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 151:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ERU_Enable(eru);
  92              	 .loc 1 151 0
  93 0008 FFF7FEFF 	 bl XMC_ERU_Enable
  94              	.LVL3:
 152:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 153:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXOCON[channel] = config->raw;
  95              	 .loc 1 153 0
  96 000c 3368     	 ldr r3,[r6]
  97 000e 0834     	 adds r4,r4,#8
  98 0010 45F82430 	 str r3,[r5,r4,lsl#2]
  99 0014 70BD     	 pop {r4,r5,r6,pc}
 100              	 .cfi_endproc
 101              	.LFE142:
 103 0016 00BF     	 .section .text.XMC_ERU_ETL_SetInput,"ax",%progbits
 104              	 .align 2
 105              	 .global XMC_ERU_ETL_SetInput
 106              	 .thumb
 107              	 .thumb_func
 109              	XMC_ERU_ETL_SetInput:
 110              	.LFB143:
 154:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 155:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 156:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Configures the event source for path A and path B, with selected input_a and input_b respectivel
 157:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_ETL_SetInput(XMC_ERU_t *const eru,
 158:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                           const uint8_t channel,
 159:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                           const XMC_ERU_ETL_INPUT_A_t input_a,
 160:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                           const XMC_ERU_ETL_INPUT_B_t input_b)
 161:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
 111              	 .loc 1 161 0
 112              	 .cfi_startproc
 113              	 
 114              	 
 115              	 
 116              	.LVL4:
 117 0000 30B4     	 push {r4,r5}
 118              	.LCFI2:
 119              	 .cfi_def_cfa_offset 8
 120              	 .cfi_offset 4,-8
 121              	 .cfi_offset 5,-4
 162:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 163:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid Channel Number", (channel < 4U));
 164:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid A", XMC_ERU_ETL_CHECK_INPUT_A(input_a));
 165:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid B", XMC_ERU_ETL_CHECK_INPUT_B(input_b));
 166:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 167:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXISEL = (eru->EXISEL & ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channe
 122              	 .loc 1 167 0
 123 0002 0468     	 ldr r4,[r0]
 124 0004 8900     	 lsls r1,r1,#2
 125              	.LVL5:
 126 0006 0F25     	 movs r5,#15
 127 0008 8D40     	 lsls r5,r5,r1
 128 000a 24EA0504 	 bic r4,r4,r5
 168:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                 (((uint32_t)input_a | (uint32_t)(input_b << ERU_EXISEL_INPUT_BITSIZE))  << (channel
 129              	 .loc 1 168 0
 130 000e 42EA8303 	 orr r3,r2,r3,lsl#2
 131              	.LVL6:
 132 0012 8B40     	 lsls r3,r3,r1
 167:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                 (((uint32_t)input_a | (uint32_t)(input_b << ERU_EXISEL_INPUT_BITSIZE))  << (channel
 133              	 .loc 1 167 0
 134 0014 2343     	 orrs r3,r3,r4
 135 0016 0360     	 str r3,[r0]
 169:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 136              	 .loc 1 169 0
 137 0018 30BC     	 pop {r4,r5}
 138              	.LCFI3:
 139              	 .cfi_restore 5
 140              	 .cfi_restore 4
 141              	 .cfi_def_cfa_offset 0
 142 001a 7047     	 bx lr
 143              	 .cfi_endproc
 144              	.LFE143:
 146              	 .section .text.XMC_ERU_ETL_SetSource,"ax",%progbits
 147              	 .align 2
 148              	 .global XMC_ERU_ETL_SetSource
 149              	 .thumb
 150              	 .thumb_func
 152              	XMC_ERU_ETL_SetSource:
 153              	.LFB144:
 170:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 171:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Select input path combination along with polarity for event generation by setting (SS, NA, NB) b
 172:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****    EXICONx(x = [0 to 3]) register */
 173:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_ETL_SetSource(XMC_ERU_t *const eru,
 174:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                           const uint8_t channel,
 175:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                           const XMC_ERU_ETL_SOURCE_t source)
 176:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
 154              	 .loc 1 176 0
 155              	 .cfi_startproc
 156              	 
 157              	 
 158              	 
 159              	.LVL7:
 177:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetSource:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 178:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetSource:Invalid Channel Number", (channel < 4U));
 179:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetSource:Invalid Source", XMC_ERU_ETL_CHECK_EVENT_SOURCE(source));
 180:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 181:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXICON_b[channel].SS = (uint8_t)source;
 160              	 .loc 1 181 0
 161 0000 0431     	 adds r1,r1,#4
 162              	.LVL8:
 163 0002 02F00F02 	 and r2,r2,#15
 164              	.LVL9:
 165 0006 50F82130 	 ldr r3,[r0,r1,lsl#2]
 166 000a 23F47063 	 bic r3,r3,#3840
 167 000e 43EA0222 	 orr r2,r3,r2,lsl#8
 168 0012 40F82120 	 str r2,[r0,r1,lsl#2]
 169 0016 7047     	 bx lr
 170              	 .cfi_endproc
 171              	.LFE144:
 173              	 .section .text.XMC_ERU_ETL_SetEdgeDetection,"ax",%progbits
 174              	 .align 2
 175              	 .global XMC_ERU_ETL_SetEdgeDetection
 176              	 .thumb
 177              	 .thumb_func
 179              	XMC_ERU_ETL_SetEdgeDetection:
 180              	.LFB145:
 182:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 183:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 184:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Configure event trigger edge/s by setting (RE, FE) bits of EXICONx(x = [0 to 3]) register.*/
 185:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_ETL_SetEdgeDetection(XMC_ERU_t *const eru,
 186:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                   const uint8_t channel,
 187:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                   const XMC_ERU_ETL_EDGE_DETECTION_t edge_detection)
 188:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
 181              	 .loc 1 188 0
 182              	 .cfi_startproc
 183              	 
 184              	 
 185              	 
 186              	.LVL10:
 189:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetEdgeDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 190:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetEdgeDetection:Invalid Channel Number", (channel < 4U));
 191:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetEdgeDetection:Invalid Trigger Edge", XMC_ERU_ETL_CHECK_TRIGGER_EDGE(ed
 192:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 193:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXICON_b[channel].ED = (uint8_t)edge_detection;
 187              	 .loc 1 193 0
 188 0000 0431     	 adds r1,r1,#4
 189              	.LVL11:
 190 0002 02F00302 	 and r2,r2,#3
 191              	.LVL12:
 192 0006 50F82130 	 ldr r3,[r0,r1,lsl#2]
 193 000a 23F00C03 	 bic r3,r3,#12
 194 000e 43EA8202 	 orr r2,r3,r2,lsl#2
 195 0012 40F82120 	 str r2,[r0,r1,lsl#2]
 196 0016 7047     	 bx lr
 197              	 .cfi_endproc
 198              	.LFE145:
 200              	 .section .text.XMC_ERU_ETL_GetEdgeDetection,"ax",%progbits
 201              	 .align 2
 202              	 .global XMC_ERU_ETL_GetEdgeDetection
 203              	 .thumb
 204              	 .thumb_func
 206              	XMC_ERU_ETL_GetEdgeDetection:
 207              	.LFB146:
 194:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 195:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 196:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Returns the configured event trigger edge/s by reading (RE, FE) bits of EXICONx(x = [0 to 3]) re
 197:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** XMC_ERU_ETL_EDGE_DETECTION_t XMC_ERU_ETL_GetEdgeDetection(XMC_ERU_t *const eru, const uint8_t chann
 198:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
 208              	 .loc 1 198 0
 209              	 .cfi_startproc
 210              	 
 211              	 
 212              	 
 213              	.LVL13:
 199:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_GetEdgeDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 200:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_GetEdgeDetection:Invalid Channel Number", (channel < 4U));
 201:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   return ((XMC_ERU_ETL_EDGE_DETECTION_t)(eru->EXICON_b[channel].ED));
 214              	 .loc 1 201 0
 215 0000 0431     	 adds r1,r1,#4
 216              	.LVL14:
 217 0002 50F82100 	 ldr r0,[r0,r1,lsl#2]
 218              	.LVL15:
 202:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 219              	 .loc 1 202 0
 220 0006 C0F38100 	 ubfx r0,r0,#2,#2
 221 000a 7047     	 bx lr
 222              	 .cfi_endproc
 223              	.LFE146:
 225              	 .section .text.XMC_ERU_ETL_SetStatusFlagMode,"ax",%progbits
 226              	 .align 2
 227              	 .global XMC_ERU_ETL_SetStatusFlagMode
 228              	 .thumb
 229              	 .thumb_func
 231              	XMC_ERU_ETL_SetStatusFlagMode:
 232              	.LFB147:
 203:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 204:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Set the status flag bit(FL) in EXICONx(x = [0 to 3]). */
 205:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_ETL_SetStatusFlagMode(XMC_ERU_t *const eru,
 206:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                    const uint8_t channel,
 207:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                    const XMC_ERU_ETL_STATUS_FLAG_MODE_t mode)
 208:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
 233              	 .loc 1 208 0
 234              	 .cfi_startproc
 235              	 
 236              	 
 237              	 
 238              	.LVL16:
 209:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetStatusFlagMode:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru))
 210:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetStatusFlagMode:Invalid Channel Number", (channel < 4U));
 211:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetStatusFlagMode:Invalid Status Flag Mode", XMC_ERU_ETL_CHECK_STATUS_FLA
 212:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 213:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXICON_b[channel].LD = (uint8_t)mode;
 239              	 .loc 1 213 0
 240 0000 0431     	 adds r1,r1,#4
 241              	.LVL17:
 242 0002 02F00102 	 and r2,r2,#1
 243              	.LVL18:
 244 0006 50F82130 	 ldr r3,[r0,r1,lsl#2]
 245 000a 23F00203 	 bic r3,r3,#2
 246 000e 43EA4202 	 orr r2,r3,r2,lsl#1
 247 0012 40F82120 	 str r2,[r0,r1,lsl#2]
 248 0016 7047     	 bx lr
 249              	 .cfi_endproc
 250              	.LFE147:
 252              	 .section .text.XMC_ERU_ETL_EnableOutputTrigger,"ax",%progbits
 253              	 .align 2
 254              	 .global XMC_ERU_ETL_EnableOutputTrigger
 255              	 .thumb
 256              	 .thumb_func
 258              	XMC_ERU_ETL_EnableOutputTrigger:
 259              	.LFB148:
 214:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 215:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 216:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Configure which Channel of OGUy(Output gating unit y = [0 to 3]) to be mapped by the trigger pul
 217:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****  * ETLx(Event Trigger Logic, x = [0 to 3]) by setting (OCS and PE) bit fields. */
 218:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_ETL_EnableOutputTrigger(XMC_ERU_t *const eru,
 219:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                      const uint8_t channel,
 220:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                      const XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL_t trigger)
 221:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
 260              	 .loc 1 221 0
 261              	 .cfi_startproc
 262              	 
 263              	 
 264              	 
 265              	.LVL19:
 222:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_EnableOutputTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru
 223:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_EnableOutputTrigger:Invalid Channel Number", (channel < 4U));
 224:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_EnableOutputTrigger:Invalid Output Channel", XMC_ERU_ETL_CHECK_TRIGGER_CH
 225:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 226:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXICON_b[channel].OCS = (uint8_t)trigger;
 266              	 .loc 1 226 0
 267 0000 0431     	 adds r1,r1,#4
 268              	.LVL20:
 269 0002 02F00702 	 and r2,r2,#7
 270              	.LVL21:
 271 0006 50F82130 	 ldr r3,[r0,r1,lsl#2]
 272 000a 23F07003 	 bic r3,r3,#112
 273 000e 43EA0212 	 orr r2,r3,r2,lsl#4
 274 0012 40F82120 	 str r2,[r0,r1,lsl#2]
 227:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXICON_b[channel].PE = (uint8_t)true;
 275              	 .loc 1 227 0
 276 0016 50F82130 	 ldr r3,[r0,r1,lsl#2]
 277 001a 43F00103 	 orr r3,r3,#1
 278 001e 40F82130 	 str r3,[r0,r1,lsl#2]
 279 0022 7047     	 bx lr
 280              	 .cfi_endproc
 281              	.LFE148:
 283              	 .section .text.XMC_ERU_ETL_DisableOutputTrigger,"ax",%progbits
 284              	 .align 2
 285              	 .global XMC_ERU_ETL_DisableOutputTrigger
 286              	 .thumb
 287              	 .thumb_func
 289              	XMC_ERU_ETL_DisableOutputTrigger:
 290              	.LFB149:
 228:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 229:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 230:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Disables the trigger pulse generation by clearing the (PE) of the EXICONx(x = [0 to 3]). */
 231:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_ETL_DisableOutputTrigger(XMC_ERU_t *const eru, const uint8_t channel)
 232:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
 291              	 .loc 1 232 0
 292              	 .cfi_startproc
 293              	 
 294              	 
 295              	 
 296              	.LVL22:
 233:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_DisableOutputTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(er
 234:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_DisableOutputTrigger:Invalid Channel Number", (channel < 4U));
 235:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 236:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXICON_b[channel].PE = false;
 297              	 .loc 1 236 0
 298 0000 0431     	 adds r1,r1,#4
 299              	.LVL23:
 300 0002 50F82130 	 ldr r3,[r0,r1,lsl#2]
 301 0006 23F00103 	 bic r3,r3,#1
 302 000a 40F82130 	 str r3,[r0,r1,lsl#2]
 303 000e 7047     	 bx lr
 304              	 .cfi_endproc
 305              	.LFE149:
 307              	 .section .text.XMC_ERU_OGU_EnablePatternDetection,"ax",%progbits
 308              	 .align 2
 309              	 .global XMC_ERU_OGU_EnablePatternDetection
 310              	 .thumb
 311              	 .thumb_func
 313              	XMC_ERU_OGU_EnablePatternDetection:
 314              	.LFB150:
 237:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 238:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 239:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Configures ERU_ETLx(x = [0 to 3]) for pattern match detection by setting IPENx(x = [0 to 3) and 
 240:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_OGU_EnablePatternDetection(XMC_ERU_t *const eru,
 241:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                         const uint8_t channel,
 242:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                         const XMC_ERU_OGU_PATTERN_DETECTION_INPUT_t input)
 243:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
 315              	 .loc 1 243 0
 316              	 .cfi_startproc
 317              	 
 318              	 
 319              	 
 320              	.LVL24:
 244:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePatternDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(
 245:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePatternDetection:Invalid Channel Number", (channel < 4U));
 246:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePatternDetection:Invalid Pattern input", XMC_ERU_OGU_CHECK_PATTERN_
 247:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 248:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXOCON_b[channel].IPEN = (uint8_t)input;
 321              	 .loc 1 248 0
 322 0000 0831     	 adds r1,r1,#8
 323              	.LVL25:
 324 0002 02F00F02 	 and r2,r2,#15
 325              	.LVL26:
 326 0006 50F82130 	 ldr r3,[r0,r1,lsl#2]
 327 000a 23F47043 	 bic r3,r3,#61440
 328 000e 43EA0232 	 orr r2,r3,r2,lsl#12
 329 0012 40F82120 	 str r2,[r0,r1,lsl#2]
 249:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXOCON_b[channel].GEEN = true;
 330              	 .loc 1 249 0
 331 0016 50F82130 	 ldr r3,[r0,r1,lsl#2]
 332 001a 43F00403 	 orr r3,r3,#4
 333 001e 40F82130 	 str r3,[r0,r1,lsl#2]
 334 0022 7047     	 bx lr
 335              	 .cfi_endproc
 336              	.LFE150:
 338              	 .section .text.XMC_ERU_OGU_DisablePatternDetection,"ax",%progbits
 339              	 .align 2
 340              	 .global XMC_ERU_OGU_DisablePatternDetection
 341              	 .thumb
 342              	 .thumb_func
 344              	XMC_ERU_OGU_DisablePatternDetection:
 345              	.LFB151:
 250:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 251:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 252:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Disable the pattern detection by clearing (GEEN) bit. */
 253:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_OGU_DisablePatternDetection(XMC_ERU_t *const eru, const uint8_t channel)
 254:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
 346              	 .loc 1 254 0
 347              	 .cfi_startproc
 348              	 
 349              	 
 350              	 
 351              	.LVL27:
 255:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePatternDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR
 256:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePatternDetection:Invalid Channel Number", (channel < 4U));
 257:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 258:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXOCON_b[channel].GEEN = false;
 352              	 .loc 1 258 0
 353 0000 0831     	 adds r1,r1,#8
 354              	.LVL28:
 355 0002 50F82130 	 ldr r3,[r0,r1,lsl#2]
 356 0006 23F00403 	 bic r3,r3,#4
 357 000a 40F82130 	 str r3,[r0,r1,lsl#2]
 358 000e 7047     	 bx lr
 359              	 .cfi_endproc
 360              	.LFE151:
 362              	 .section .text.XMC_ERU_OGU_EnablePeripheralTrigger,"ax",%progbits
 363              	 .align 2
 364              	 .global XMC_ERU_OGU_EnablePeripheralTrigger
 365              	 .thumb
 366              	 .thumb_func
 368              	XMC_ERU_OGU_EnablePeripheralTrigger:
 369              	.LFB152:
 259:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 260:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 261:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Configures peripheral trigger input, by setting (ISS) bit. */
 262:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_OGU_EnablePeripheralTrigger(XMC_ERU_t *const eru,
 263:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                          const uint8_t channel,
 264:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                          const XMC_ERU_OGU_PERIPHERAL_TRIGGER_t peripheral_trigger)
 265:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
 370              	 .loc 1 265 0
 371              	 .cfi_startproc
 372              	 
 373              	 
 374              	 
 375              	.LVL29:
 266:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePeripheralTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR
 267:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePeripheralTrigger:Invalid Channel Number", (channel < 4U));
 268:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePeripheralTrigger:Invalid Peripheral Trigger Input", 
 269:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****               XMC_ERU_OGU_CHECK_PERIPHERAL_TRIGGER(peripheral_trigger));
 270:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 271:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXOCON_b[channel].ISS = (uint8_t)peripheral_trigger;
 376              	 .loc 1 271 0
 377 0000 0831     	 adds r1,r1,#8
 378              	.LVL30:
 379 0002 02F00302 	 and r2,r2,#3
 380              	.LVL31:
 381 0006 50F82130 	 ldr r3,[r0,r1,lsl#2]
 382 000a 23F00303 	 bic r3,r3,#3
 383 000e 1A43     	 orrs r2,r2,r3
 384 0010 40F82120 	 str r2,[r0,r1,lsl#2]
 385 0014 7047     	 bx lr
 386              	 .cfi_endproc
 387              	.LFE152:
 389 0016 00BF     	 .section .text.XMC_ERU_OGU_DisablePeripheralTrigger,"ax",%progbits
 390              	 .align 2
 391              	 .global XMC_ERU_OGU_DisablePeripheralTrigger
 392              	 .thumb
 393              	 .thumb_func
 395              	XMC_ERU_OGU_DisablePeripheralTrigger:
 396              	.LFB153:
 272:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 273:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 274:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Disables event generation based on peripheral trigger by clearing (ISS) bit. */
 275:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_OGU_DisablePeripheralTrigger(XMC_ERU_t *const eru,
 276:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                           const uint8_t channel)
 277:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
 397              	 .loc 1 277 0
 398              	 .cfi_startproc
 399              	 
 400              	 
 401              	 
 402              	.LVL32:
 278:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePeripheralTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PT
 279:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePeripheralTrigger:Invalid Channel Number", (channel < 4U));
 280:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 281:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXOCON_b[channel].ISS = (uint8_t)0;
 403              	 .loc 1 281 0
 404 0000 0831     	 adds r1,r1,#8
 405              	.LVL33:
 406 0002 50F82130 	 ldr r3,[r0,r1,lsl#2]
 407 0006 23F00303 	 bic r3,r3,#3
 408 000a 40F82130 	 str r3,[r0,r1,lsl#2]
 409 000e 7047     	 bx lr
 410              	 .cfi_endproc
 411              	.LFE153:
 413              	 .section .text.XMC_ERU_OGU_SetServiceRequestMode,"ax",%progbits
 414              	 .align 2
 415              	 .global XMC_ERU_OGU_SetServiceRequestMode
 416              	 .thumb
 417              	 .thumb_func
 419              	XMC_ERU_OGU_SetServiceRequestMode:
 420              	.LFB154:
 282:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** }
 283:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 284:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** /* Configures the gating scheme for service request generation by setting (GP) bit. */
 285:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** void XMC_ERU_OGU_SetServiceRequestMode(XMC_ERU_t *const eru,
 286:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                        const uint8_t channel,
 287:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****                                        const XMC_ERU_OGU_SERVICE_REQUEST_t mode)
 288:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** {
 421              	 .loc 1 288 0
 422              	 .cfi_startproc
 423              	 
 424              	 
 425              	 
 426              	.LVL34:
 289:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_SetServiceRequestMode:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(e
 290:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_SetServiceRequestMode:Invalid Channel Number", (channel < 4U));
 291:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_SetServiceRequestMode:Invalid Service Request Mode", XMC_ERU_OGU_CHECK_SE
 292:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c **** 
 293:C:/Files/Projects/Git/XMCLib/src\xmc_eru.c ****   eru->EXOCON_b[channel].GP = (uint8_t)mode;
 427              	 .loc 1 293 0
 428 0000 0831     	 adds r1,r1,#8
 429              	.LVL35:
 430 0002 02F00302 	 and r2,r2,#3
 431              	.LVL36:
 432 0006 50F82130 	 ldr r3,[r0,r1,lsl#2]
 433 000a 23F03003 	 bic r3,r3,#48
 434 000e 43EA0212 	 orr r2,r3,r2,lsl#4
 435 0012 40F82120 	 str r2,[r0,r1,lsl#2]
 436 0016 7047     	 bx lr
 437              	 .cfi_endproc
 438              	.LFE154:
 440              	 .text
 441              	.Letext0:
 442              	 .file 2 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 443              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 444              	 .file 4 "C:/Files/Projects/Git/XMCLib/inc/xmc_eru.h"
 445              	 .file 5 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
 446              	 .file 6 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_eru.c
    {standard input}:20     .text.XMC_ERU_ETL_Init:00000000 $t
    {standard input}:25     .text.XMC_ERU_ETL_Init:00000000 XMC_ERU_ETL_Init
    {standard input}:70     .text.XMC_ERU_OGU_Init:00000000 $t
    {standard input}:75     .text.XMC_ERU_OGU_Init:00000000 XMC_ERU_OGU_Init
    {standard input}:104    .text.XMC_ERU_ETL_SetInput:00000000 $t
    {standard input}:109    .text.XMC_ERU_ETL_SetInput:00000000 XMC_ERU_ETL_SetInput
    {standard input}:147    .text.XMC_ERU_ETL_SetSource:00000000 $t
    {standard input}:152    .text.XMC_ERU_ETL_SetSource:00000000 XMC_ERU_ETL_SetSource
    {standard input}:174    .text.XMC_ERU_ETL_SetEdgeDetection:00000000 $t
    {standard input}:179    .text.XMC_ERU_ETL_SetEdgeDetection:00000000 XMC_ERU_ETL_SetEdgeDetection
    {standard input}:201    .text.XMC_ERU_ETL_GetEdgeDetection:00000000 $t
    {standard input}:206    .text.XMC_ERU_ETL_GetEdgeDetection:00000000 XMC_ERU_ETL_GetEdgeDetection
    {standard input}:226    .text.XMC_ERU_ETL_SetStatusFlagMode:00000000 $t
    {standard input}:231    .text.XMC_ERU_ETL_SetStatusFlagMode:00000000 XMC_ERU_ETL_SetStatusFlagMode
    {standard input}:253    .text.XMC_ERU_ETL_EnableOutputTrigger:00000000 $t
    {standard input}:258    .text.XMC_ERU_ETL_EnableOutputTrigger:00000000 XMC_ERU_ETL_EnableOutputTrigger
    {standard input}:284    .text.XMC_ERU_ETL_DisableOutputTrigger:00000000 $t
    {standard input}:289    .text.XMC_ERU_ETL_DisableOutputTrigger:00000000 XMC_ERU_ETL_DisableOutputTrigger
    {standard input}:308    .text.XMC_ERU_OGU_EnablePatternDetection:00000000 $t
    {standard input}:313    .text.XMC_ERU_OGU_EnablePatternDetection:00000000 XMC_ERU_OGU_EnablePatternDetection
    {standard input}:339    .text.XMC_ERU_OGU_DisablePatternDetection:00000000 $t
    {standard input}:344    .text.XMC_ERU_OGU_DisablePatternDetection:00000000 XMC_ERU_OGU_DisablePatternDetection
    {standard input}:363    .text.XMC_ERU_OGU_EnablePeripheralTrigger:00000000 $t
    {standard input}:368    .text.XMC_ERU_OGU_EnablePeripheralTrigger:00000000 XMC_ERU_OGU_EnablePeripheralTrigger
    {standard input}:390    .text.XMC_ERU_OGU_DisablePeripheralTrigger:00000000 $t
    {standard input}:395    .text.XMC_ERU_OGU_DisablePeripheralTrigger:00000000 XMC_ERU_OGU_DisablePeripheralTrigger
    {standard input}:414    .text.XMC_ERU_OGU_SetServiceRequestMode:00000000 $t
    {standard input}:419    .text.XMC_ERU_OGU_SetServiceRequestMode:00000000 XMC_ERU_OGU_SetServiceRequestMode
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_ERU_Enable
