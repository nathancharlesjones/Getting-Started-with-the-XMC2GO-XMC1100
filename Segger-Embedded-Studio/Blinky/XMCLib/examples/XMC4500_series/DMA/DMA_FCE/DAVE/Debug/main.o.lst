   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.GPDMA0_0_IRQHandler,"ax",%progbits
  20              	 .align 2
  21              	 .global GPDMA0_0_IRQHandler
  22              	 .thumb
  23              	 .thumb_func
  25              	GPDMA0_0_IRQHandler:
  26              	.LFB177:
  27              	 .file 1 "C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE/main.c"
   1:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** /**
   2:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * @file main.c
   3:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * @date 2019-07-23
   4:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  *
   5:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   *************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * XMClib v2.1.24 - DMA_FCE XMC Peripheral Driver Library Example
   8:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  *
   9:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * 
  18:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * 
  21:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  *
  36:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  *
  39:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * 2019-07-23:
  40:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  *     - Initial version
  41:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  *
  42:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  * @endcond
  43:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  *
  44:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****  */
  45:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
  46:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** #include "xmc_fce.h"
  47:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** #include "xmc_gpio.h"
  48:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** #include "xmc_dma.h"
  49:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
  50:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** #define DATA_SIZE 256
  51:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** #define LED1 P3_9
  52:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
  53:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** /* Test data for which crc32 should be calculated */
  54:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** const uint32_t data[DATA_SIZE] =
  55:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** {
  56:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x54EC0525,  0x447135B2,  0x6EED86F9,  0x10B9EE76,  0x9C5C8F55,  0x44C8F0A0,  0x9F5C41D3,  0x4A6C
  57:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x3CB43AC2,  0x9A9E6CA4,  0xA296D5A0,  0x2BE2EF95,  0x7501B963,  0x2906AD29,  0xE695DF1E,  0xA1E3
  58:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x907339C8,  0xF205C7A7,  0xD6DE4D18,  0xB6A9D7D5,  0x79F98F63,  0x467F7A6E,  0x11B5B005,  0x69B9
  59:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0xD1B9129C,  0xDDBA1E26,  0x42E421EF,  0xA8BEDDE7,  0x33995D90,  0xC639D14D,  0xAC58E5ED,  0x5D71
  60:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0xEE1CDF08,  0x3D5E0D81,  0xACB04FA7,  0x7FD4CE83,  0x6BE85D52,  0x02EB1A5A,  0x24CC89DC,  0x37F1
  61:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x56C886E7,  0x9C8BCC4C,  0xBB3475DA,  0x0424F800,  0x404A14F4,  0x41D7B9A4,  0x8F97D2B4,  0x16D9
  62:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x2C059085,  0xC1BACF2D,  0xE3A582FE,  0x48ED877C,  0xC2BE6BBB,  0x3F83C7EF,  0x752CE9CB,  0x0D1E
  63:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x02ECDF82,  0x3D45F86B,  0xB359203D,  0x611A60E6,  0x3FE3B879,  0x34E81B39,  0x5B761930,  0x869E
  64:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0xBF58005D,  0x8B9C20F5,  0x058D22A3,  0x11AB9E24,  0xCC534712,  0xA268FEB4,  0x4EA7DE22,  0x34DC
  65:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0xF430CB9D,  0x9069905B,  0x3A9487E0,  0x930C11BA,  0x5D9D6FF3,  0x9C3B5B26,  0xD099A501,  0xE55F
  66:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x76C54E09,  0x11243967,  0x3B952BD2,  0x0617F2FC,  0x2A14FA99,  0x42B1C525,  0xF9EEF4A4,  0xA090
  67:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0xFA2480BD,  0x548E7924,  0x2623CE99,  0x544299F4,  0xB902DA0E,  0x71725F30,  0x52016AFB,  0x9538
  68:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x9AD099AB,  0x12F6E52D,  0x618D04C7,  0xD4CCD8A3,  0x01AB1763,  0x8893836D,  0x3A2D270E,  0x999C
  69:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x06ED62BE,  0x887F8DE5,  0x20AA3875,  0x22637F43,  0x85419B21,  0x2E54855D,  0xC6D0D493,  0x38E8
  70:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x2F463851,  0xA5930018,  0xC108CEA8,  0x9D20AE8A,  0x4EA42837,  0x3DB7AE94,  0xDA364F9B,  0x256F
  71:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x78273ADE,  0x6AC3CE93,  0x0B79A658,  0x6EE19398,  0xA3C157A3,  0x0F90187B,  0xEB4B6797,  0xAF83
  72:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0xCBD6BCBB,  0xC103BC69,  0x5F2E65CC,  0x472AAD0B,  0x06911251,  0x87692D91,  0x999ECA09,  0xA8E1
  73:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x68642547,  0x0B8B4F7E,  0xB0731848,  0x4ED787A3,  0xA9AF212E,  0x8D105838,  0xD4A1C0A3,  0xDD03
  74:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x5675CCE7,  0x2B0A99A5,  0x4C2A3071,  0x0635D4F3,  0xD5EBA468,  0x77B2CCE7,  0xB9B2722F,  0x0457
  75:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0xC963D641,  0x2401AFCA,  0x5F29B15E,  0x616A97D1,  0x82415FA4,  0xE7C0E4A8,  0x2D7138E2,  0xA4DF
  76:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x1301A423,  0xEAB3A9B0,  0x432DCEFC,  0xDABD708B,  0x832BD129,  0xD7FA5CA1,  0x607CF76C,  0x8D9E
  77:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x2DBE329B,  0x7D6FE0B1,  0xCFF21250,  0xEE449A83,  0x70B84C66,  0x99882725,  0x2487F50A,  0x11DD
  78:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x66C457B4,  0xA310227D,  0xF0EF426F,  0x557A1C16,  0x2B42E34D,  0xB2ADF3CB,  0x11430900,  0xA768
  79:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0xFB364887,  0x150B6F3C,  0x3D60CEDD,  0x7C54E784,  0xB1AC29AC,  0xC90BA26B,  0xDCD7775C,  0xFD9E
  80:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0xD9CD97D1,  0x4858F921,  0x08FEDA90,  0x2F7FDE9E,  0x035323C9,  0x833E9235,  0x7E183785,  0x8DE2
  81:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x35E6C361,  0xEAD03BA8,  0x3227D1B3,  0x13A0BEDF,  0xF77C1EDD,  0x61BDC1F3,  0x5270B33B,  0xCD86
  82:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0xF4ED9D50,  0x365A767D,  0x0B048CBA,  0x8571E3CF,  0xBE7C1D76,  0x677D748F,  0x90C664C4,  0x4A2B
  83:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x90748331,  0x7D6AE589,  0xFD8746D1,  0x504B41DA,  0x4A98B9D2,  0xD7073E19,  0xF8AE5049,  0xBDF2
  84:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x660B5035,  0x0FFA4172,  0x49CF273D,  0x3C75F234,  0x199FC2A7,  0x114A73A9,  0x446A88BE,  0xCD39
  85:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x4C9AC32B,  0x1FD7D8EB,  0x39672BA1,  0xE352ED93,  0xBACA029F,  0xD88B5BAE,  0xE8A1ECB5,  0xBF2D
  86:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0xDDC77DFC,  0x5EA152A1,  0xE08BC11C,  0x923ECDC6,  0x75A7E9EF,  0xABAB7297,  0x7EDBC951,  0x38CE
  87:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		0x6E8392A8,  0x88576DB6,  0x4124D40E,  0xD58AD161,  0xD667DC29,  0xC3BB310B,  0xB46DED73,  0xFFFB
  88:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** };
  89:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
  90:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** /* CRC engine configuration */
  91:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** const XMC_FCE_t crc_engine =
  92:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** {
  93:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   .kernel_ptr = FCE_KE0,
  94:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   .fce_cfg_update.config_xsel = true,
  95:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   .fce_cfg_update.config_refin = true,
  96:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   .fce_cfg_update.config_refout = true,
  97:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   .seedvalue = 0xffffffffU
  98:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** };
  99:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
 100:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** /* DMA channel configuration */
 101:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** const XMC_DMA_CH_CONFIG_t dma_ch_config =
 102:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** {
 103:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   {
 104:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****     .enable_interrupt = true, /* Interrupts enabled */
 105:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****     .dst_transfer_width = XMC_DMA_CH_TRANSFER_WIDTH_32, /* Destination transfer width */
 106:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****     .src_transfer_width = XMC_DMA_CH_TRANSFER_WIDTH_32, /* Source transfer width */
 107:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****     .dst_address_count_mode = XMC_DMA_CH_ADDRESS_COUNT_MODE_NO_CHANGE, /* Destination address count
 108:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****     .src_address_count_mode = XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT, /* Source address count mode
 109:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****     .dst_burst_length = XMC_DMA_CH_BURST_LENGTH_8, /* Destination burst length */
 110:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****     .src_burst_length = XMC_DMA_CH_BURST_LENGTH_8, /* Source burst length */
 111:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****     .enable_src_gather = false, /* Source gather enabled? */
 112:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****     .enable_dst_scatter = false, /* Destination scatter enabled? */
 113:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****     .transfer_flow = XMC_DMA_CH_TRANSFER_FLOW_M2M_DMA, /* Transfer flow */
 114:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   },
 115:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   .src_addr = (uint32_t)&data[0],
 116:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   .dst_addr = (uint32_t)&(FCE_KE0->IR),
 117:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   .block_size = DATA_SIZE, /* Block size */
 118:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   .transfer_type = XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK, /* Transfer type */
 119:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   .priority = XMC_DMA_CH_PRIORITY_0, /* Priority level */
 120:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   .src_handshaking = XMC_DMA_CH_SRC_HANDSHAKING_SOFTWARE, /* Source handshaking */
 121:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   .dst_handshaking = XMC_DMA_CH_DST_HANDSHAKING_SOFTWARE  /* Destination handshaking */
 122:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** };
 123:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
 124:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** volatile bool transfer_done = false;
 125:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
 126:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** void GPDMA0_0_IRQHandler(void)
 127:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** {
  28              	 .loc 1 127 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 08B5     	 push {r3,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 3,-8
  36              	 .cfi_offset 14,-4
 128:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   transfer_done = true;
  37              	 .loc 1 128 0
  38 0002 0122     	 movs r2,#1
  39 0004 034B     	 ldr r3,.L3
  40 0006 1A70     	 strb r2,[r3]
 129:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   XMC_DMA_CH_ClearEventStatus(XMC_DMA0, 2, XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE);
  41              	 .loc 1 129 0
  42 0008 0348     	 ldr r0,.L3+4
  43 000a 0221     	 movs r1,#2
  44 000c 0A46     	 mov r2,r1
  45 000e FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
  46              	.LVL0:
  47 0012 08BD     	 pop {r3,pc}
  48              	.L4:
  49              	 .align 2
  50              	.L3:
  51 0014 00000000 	 .word .LANCHOR0
  52 0018 00400150 	 .word 1342259200
  53              	 .cfi_endproc
  54              	.LFE177:
  56              	 .section .text.main,"ax",%progbits
  57              	 .align 2
  58              	 .global main
  59              	 .thumb
  60              	 .thumb_func
  62              	main:
  63              	.LFB178:
 130:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** }
 131:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
 132:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** int main(void)
 133:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** {
  64              	 .loc 1 133 0
  65              	 .cfi_startproc
  66              	 
  67              	 
  68 0000 10B5     	 push {r4,lr}
  69              	.LCFI1:
  70              	 .cfi_def_cfa_offset 8
  71              	 .cfi_offset 4,-8
  72              	 .cfi_offset 14,-4
 134:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   XMC_GPIO_SetMode(LED1, XMC_GPIO_MODE_OUTPUT_PUSH_PULL);
  73              	 .loc 1 134 0
  74 0002 2F48     	 ldr r0,.L16
  75 0004 0921     	 movs r1,#9
  76 0006 8022     	 movs r2,#128
  77 0008 FFF7FEFF 	 bl XMC_GPIO_SetMode
  78              	.LVL1:
 135:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
 136:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   XMC_DMA_Init(XMC_DMA0);
  79              	 .loc 1 136 0
  80 000c 2D4C     	 ldr r4,.L16+4
  81 000e 2046     	 mov r0,r4
  82 0010 FFF7FEFF 	 bl XMC_DMA_Init
  83              	.LVL2:
 137:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   XMC_DMA_CH_Init(XMC_DMA0, 2, &dma_ch_config);
  84              	 .loc 1 137 0
  85 0014 2046     	 mov r0,r4
  86 0016 0221     	 movs r1,#2
  87 0018 2B4A     	 ldr r2,.L16+8
  88 001a FFF7FEFF 	 bl XMC_DMA_CH_Init
  89              	.LVL3:
 138:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   XMC_DMA_CH_EnableEvent(XMC_DMA0, 2, XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE);
  90              	 .loc 1 138 0
  91 001e 2046     	 mov r0,r4
  92 0020 0221     	 movs r1,#2
  93 0022 0A46     	 mov r2,r1
  94 0024 FFF7FEFF 	 bl XMC_DMA_CH_EnableEvent
  95              	.LVL4:
  96              	.LBB25:
  97              	.LBB26:
  98              	 .file 2 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
   1:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * @version  V5.1.0
   5:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * @date     13. March 2019
   6:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*
   8:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *
  10:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *
  12:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * not use this file except in compliance with the License.
  14:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * You may obtain a copy of the License at
  15:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *
  16:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *
  18:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * See the License for the specific language governing permissions and
  22:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * limitations under the License.
  23:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
  24:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  25:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  26:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined (__clang__)
  28:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
  30:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  31:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  34:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  35:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  36:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  37:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  extern "C" {
  38:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
  39:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  40:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
  41:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  44:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  47:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  49:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  50:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
  53:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  54:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  55:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  56:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  57:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  58:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
  59:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup Cortex_M4
  60:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
  61:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
  62:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  63:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #include "cmsis_version.h"
  64:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  65:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* CMSIS CM4 definitions */
  66:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  71:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  73:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** */
  76:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
  77:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  80:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
  81:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  83:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
  84:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
  85:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  86:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
  87:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  88:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if defined __ARM_FP
  90:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  92:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
  93:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  95:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
  96:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
  97:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  98:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
  99:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 100:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 101:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 104:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
 105:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 107:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
 108:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
 109:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 110:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 111:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 112:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 113:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 114:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 116:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
 117:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 119:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
 120:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
 121:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 122:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 123:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 124:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 128:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
 129:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 131:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
 132:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
 133:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 134:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 135:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 136:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 137:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 138:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 140:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
 141:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 143:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
 144:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
 145:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 146:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 147:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 148:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 149:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 152:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
 153:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 155:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
 156:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
 157:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 158:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 159:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 160:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
 161:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 162:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 164:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 165:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 166:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
 167:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
 168:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 169:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 171:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 173:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 176:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 177:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  extern "C" {
 178:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
 179:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 180:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 181:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 183:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 184:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 186:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 187:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 188:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 189:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 191:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 192:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 193:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 194:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 196:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 197:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 201:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 202:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 206:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
 207:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 208:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 210:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 212:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 214:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** */
 216:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 217:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #else
 219:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
 221:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 224:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 225:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 229:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 230:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 231:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 232:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 233:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 234:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 235:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   Core Register contain:
 236:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core Register
 237:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 238:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 239:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 240:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 241:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 242:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 243:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 244:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 245:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** */
 248:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 249:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 250:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 251:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief      Core Register type definitions.
 253:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 254:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 255:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 256:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 257:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 259:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef union
 260:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 261:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   struct
 262:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
 263:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } APSR_Type;
 274:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 275:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 276:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 279:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 282:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 285:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 288:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 291:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 294:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 295:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 296:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 298:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef union
 299:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 300:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   struct
 301:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
 302:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 307:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 308:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 309:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 312:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 313:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 314:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 316:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef union
 317:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 318:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   struct
 319:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
 320:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 335:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 336:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 337:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 340:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 343:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 346:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 349:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 352:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 355:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 358:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 361:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 364:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 367:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 368:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 369:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 371:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef union
 372:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 373:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   struct
 374:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
 375:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 382:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 383:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 384:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 387:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 390:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 393:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 395:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 396:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 397:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 398:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 401:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 402:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 403:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 404:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 406:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
 407:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 408:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 410:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[24U];
 412:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 414:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 416:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 418:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 420:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 422:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 423:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 427:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 429:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 430:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 431:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 432:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 435:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 436:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 437:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 438:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 440:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
 441:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 442:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 462:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } SCB_Type;
 464:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 465:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 466:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 469:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 472:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 475:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 478:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 481:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 485:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 488:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 491:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 494:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 497:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 500:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 503:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 506:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 509:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 512:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 516:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 520:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 523:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 526:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 529:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 532:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 535:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 538:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 539:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 542:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 545:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 548:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 552:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 555:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 558:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 561:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 564:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 567:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 571:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 574:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 577:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 580:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 583:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 586:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 589:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 592:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 595:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 598:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 601:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 604:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 607:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 610:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 614:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 617:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 620:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 624:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 627:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 630:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 633:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 636:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 639:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 643:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 646:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 649:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 652:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 655:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 658:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 661:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 665:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 668:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 671:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 674:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 677:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 680:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 684:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 687:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 690:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 694:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 697:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 700:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 703:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 706:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 708:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 709:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 710:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 711:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 714:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 715:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 716:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 717:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 719:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
 720:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 721:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 722:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 725:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 726:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 730:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 734:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 737:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 740:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 743:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 746:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 748:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 749:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 750:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 751:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 754:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 755:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 756:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 757:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 759:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
 760:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 761:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 766:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 767:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 771:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 774:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 777:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 780:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 781:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 784:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 785:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 788:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 792:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 795:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 798:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 800:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 801:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 802:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 803:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 806:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 807:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 808:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 809:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 811:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
 812:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 813:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __OM  union
 814:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
 815:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 820:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 822:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 824:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[32U];
 826:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 827:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 830:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } ITM_Type;
 843:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 844:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 848:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 852:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 855:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 858:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 861:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 864:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 867:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 870:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 873:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 876:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 880:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 883:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 886:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 888:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 889:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 890:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 891:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 894:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 895:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 896:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 897:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 899:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
 900:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 901:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 913:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 917:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 921:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } DWT_Type;
 925:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 926:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 927:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 930:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 933:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 936:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 939:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 942:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 945:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 948:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 951:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 954:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 957:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 960:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 963:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 966:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 969:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 972:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 975:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 978:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 981:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 985:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 989:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 993:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 997:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1001:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1005:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1009:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1012:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1015:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1018:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1021:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1024:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1027:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1030:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1033:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1035:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1036:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1037:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1038:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1041:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1042:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1043:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1044:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1046:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
1047:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1048:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1051:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1053:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1055:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1059:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1063:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1067:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1070:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } TPI_Type;
1073:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1074:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1078:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1082:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1086:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1089:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1092:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1095:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1099:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1102:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1106:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1110:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1113:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1116:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1119:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1122:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1125:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1128:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1132:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1135:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1139:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1142:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1145:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1148:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1151:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1154:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1157:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1161:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1164:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1168:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1169:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1172:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1175:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1178:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1181:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1184:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1187:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1191:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1194:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1196:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1197:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1199:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1200:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1203:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1204:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1205:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1206:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1208:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
1209:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1210:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } MPU_Type;
1222:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1223:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1225:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* MPU Type Register Definitions */
1226:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1229:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1232:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1235:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* MPU Control Register Definitions */
1236:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1239:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1242:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1245:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register Definitions */
1246:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1249:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1253:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1256:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1259:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1263:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1266:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1269:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1272:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1275:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1278:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1281:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1284:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1287:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1290:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1293:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1294:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1295:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1296:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1299:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1300:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1301:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1302:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1304:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
1305:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1306:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1307:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } FPU_Type;
1314:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1315:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1319:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1322:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1325:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1328:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1331:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1334:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1337:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1340:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1343:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1347:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1351:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1354:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1357:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1360:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1364:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1367:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1370:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1373:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1376:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1379:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1382:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1385:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1389:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1392:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1395:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1398:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1400:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1403:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1405:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1406:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1407:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1408:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1411:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1412:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1413:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1414:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1416:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
1417:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1418:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1423:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1424:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1428:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1431:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1434:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1437:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1440:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1443:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1446:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1449:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1452:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1455:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1458:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1461:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1465:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1468:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1472:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1475:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1478:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1481:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1484:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1487:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1490:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1493:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1496:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1499:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1502:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1505:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1508:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1510:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1511:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1512:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1513:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1516:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1517:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1518:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1519:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted value.
1523:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** */
1524:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1526:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1527:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted bit field value.
1531:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** */
1532:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1534:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1536:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1537:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1538:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1539:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1542:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1543:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1544:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Memory mapping of Core Hardware */
1545:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1554:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1563:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
1567:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1568:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1571:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} */
1572:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1573:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1574:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1575:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1576:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1577:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1578:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1579:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1580:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1581:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1582:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1583:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1584:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** */
1586:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1587:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1588:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1589:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1591:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1595:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1596:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1597:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
1601:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #else
1603:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1617:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
1621:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #else
1623:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1627:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1629:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1630:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1638:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1639:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1640:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Set Priority Grouping
1641:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            Only values from 0..7 are used.
1644:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1645:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1648:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1650:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1651:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1653:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1660:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1661:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1662:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1663:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Get Priority Grouping
1664:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1667:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1668:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1669:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  99              	 .loc 2 1669 0
 100 0028 284B     	 ldr r3,.L16+12
 101 002a DB68     	 ldr r3,[r3,#12]
 102              	.LVL5:
 103              	.LBE26:
 104              	.LBE25:
 105              	.LBB27:
 106              	.LBB28:
1670:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1671:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1672:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1673:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1674:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Enable Interrupt
1675:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1678:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1679:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1681:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1683:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
1684:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1685:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
1686:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1687:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1688:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1689:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1690:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1691:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Enable status
1692:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt is enabled.
1696:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1697:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1698:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1700:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1702:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1704:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   else
1705:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1706:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return(0U);
1707:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1708:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1709:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1710:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1711:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1712:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Disable Interrupt
1713:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1716:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1717:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1719:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1721:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1722:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __DSB();
1723:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __ISB();
1724:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1725:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1726:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1727:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1728:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1729:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Get Pending Interrupt
1730:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is pending.
1734:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1735:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1736:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1738:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1740:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1742:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   else
1743:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1744:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return(0U);
1745:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1746:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1747:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1748:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1749:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1750:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Set Pending Interrupt
1751:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1754:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1755:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1757:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1759:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1761:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1762:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1763:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1764:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1765:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Clear Pending Interrupt
1766:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1769:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1770:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1772:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1774:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1775:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1776:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1777:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1778:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1779:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1780:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Get Active Interrupt
1781:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not active.
1784:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is active.
1785:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1786:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1787:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1789:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1791:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1793:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   else
1794:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1795:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return(0U);
1796:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1797:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1798:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1799:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1800:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1801:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Set Interrupt Priority
1802:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1805:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]  priority  Priority to set.
1807:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1809:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1811:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1812:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1813:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1814:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1815:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   else
1816:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1817:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1818:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1819:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1820:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1821:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1822:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1823:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Priority
1824:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1827:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1828:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             Interrupt Priority.
1829:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1831:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1833:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1834:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1835:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1836:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1837:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1838:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   else
1839:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1840:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1841:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1842:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1843:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1844:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1845:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1846:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Encode Priority
1847:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1848:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            preemptive priority value, and subpriority value.
1849:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1850:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1856:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1857:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1858:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 107              	 .loc 2 1858 0
 108 002c C3F30223 	 ubfx r3,r3,#8,#3
 109              	.LVL6:
1859:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t PreemptPriorityBits;
1860:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t SubPriorityBits;
1861:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1862:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 110              	 .loc 2 1862 0
 111 0030 C3F10701 	 rsb r1,r3,#7
 112 0034 0629     	 cmp r1,#6
 113 0036 28BF     	 it cs
 114 0038 0621     	 movcs r1,#6
 115              	.LVL7:
1863:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 116              	 .loc 2 1863 0
 117 003a 9A1D     	 adds r2,r3,#6
 118 003c 062A     	 cmp r2,#6
 119 003e 8CBF     	 ite hi
 120 0040 03F1FF32 	 addhi r2,r3,#-1
 121 0044 0022     	 movls r2,#0
 122              	.LVL8:
1864:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1865:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   return (
1866:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 123              	 .loc 2 1866 0
 124 0046 0123     	 movs r3,#1
 125              	.LVL9:
 126 0048 8B40     	 lsls r3,r3,r1
 127 004a 013B     	 subs r3,r3,#1
 128 004c 03F03F03 	 and r3,r3,#63
 129 0050 9340     	 lsls r3,r3,r2
 130              	.LVL10:
 131              	.LBE28:
 132              	.LBE27:
 133              	.LBB29:
 134              	.LBB30:
1813:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
 135              	 .loc 2 1813 0
 136 0052 9B00     	 lsls r3,r3,#2
 137              	.LVL11:
 138 0054 DBB2     	 uxtb r3,r3
 139 0056 1E4A     	 ldr r2,.L16+16
 140              	.LVL12:
 141 0058 82F86933 	 strb r3,[r2,#873]
 142              	.LVL13:
 143              	.LBE30:
 144              	.LBE29:
 145              	.LBB31:
 146              	.LBB32:
1683:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 147              	 .loc 2 1683 0
1684:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
 148              	 .loc 2 1684 0
 149 005c 4FF40073 	 mov r3,#512
 150 0060 D360     	 str r3,[r2,#12]
1685:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
 151              	 .loc 2 1685 0
 152              	.LBE32:
 153              	.LBE31:
 139:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
 140:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   /* Enable DMA event handling */
 141:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   NVIC_SetPriority(GPDMA0_0_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), 63, 0));
 142:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   NVIC_EnableIRQ(GPDMA0_0_IRQn);
 143:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
 144:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   XMC_FCE_Init(&crc_engine);
 154              	 .loc 1 144 0
 155 0062 1C48     	 ldr r0,.L16+20
 156 0064 FFF7FEFF 	 bl XMC_FCE_Init
 157              	.LVL14:
 158              	.LBB33:
 159              	.LBB34:
 160              	 .file 3 "C:/Files/Projects/Git/XMCLib/inc/xmc_fce.h"
   1:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
   2:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @file xmc_fce.h
   3:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @date 2019-03-30
   4:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
   5:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
   9:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 
  18:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 
  21:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
  36:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
  39:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *     - Initial
  41:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *      
  42:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 2015-05-20:
  43:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *     - Description updated <br>
  44:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *   
  45:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 2015-06-20:
  46:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  47:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 
  48:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 2019-03-30:
  49:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *     - Added XMC_FCE_CalculateCRC16Ex() and XMC_FCE_CalculateCRC32Ex()
  50:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 
  51:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @endcond 
  52:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
  53:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
  54:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
  55:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #ifndef XMC_FCE_H
  56:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_H
  57:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
  58:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
  59:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * HEADER FILES
  60:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
  61:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  
  62:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #include <xmc_common.h>
  63:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
  64:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #if defined (FCE)
  65:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
  66:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
  67:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @addtogroup XMClib
  68:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @{
  69:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
  70:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
  71:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
  72:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @addtogroup FCE
  73:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @brief Flexible CRC Engine(FCE) driver for the XMC microcontroller family.
  74:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
  75:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The FCE provides a parallel implementation of Cyclic Redundancy Code (CRC)
  76:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * algorithms. The current FCE version for the XMC4000 microcontroller family implements the
  77:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * IEEE 802.3 ethernet CRC32, the CCITT CRC16 and the SAE J1850 CRC8 polynomials.
  78:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The primary target of FCE is to be used as an hardware acceleration engine for software
  79:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * applications or operating systems services using CRC signatures.
  80:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
  81:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @image html fce_overview.png	 
  82:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @image latex ../images/fce_overview.png	 
  83:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * FCE Features: <br>
  84:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @image html fce_polynomials.png
  85:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @image latex ../images/fce_polynomials.png
  86:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *    * CRC kernel 0 and 1: IEEE 802.3 CRC32 ethernet polynomial: 0x04C11DB71 <br>
  87:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *    * CRC kernel 2: CCITT CRC16 polynomial: 0x1021 <br>
  88:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *    * CRC kernel 3: SAE J1850 CRC8 polynomial: 0x1D <br>
  89:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *    * Configuration Registers enable to control the CRC operation and perform automatic checksum 
  90:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *      the end of a message. <br>
  91:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *    * Extended register interface to control reliability of FCE execution in safety applications.
  92:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *    * Error notification scheme via dedicated interrupt node for: <br>
  93:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****         a)Transient error detection: Error interrupt generation (maskable) with local status regist
  94:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 		  (cleared by software) <br>
  95:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****         b)Checksum failure: Error interrupt generation (maskable) with local status register (clear
  96:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 		
  97:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****      FCE provides one interrupt line to the interrupt system. Each CRC engine has its own set of fl
  98:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
  99:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @{
 100:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 101:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  
 102:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
 103:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * MACROS
 104:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
 105:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  
 106:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_CRC32_0        FCE_KE0 /**< Kernel 0 <br> */
 107:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_CRC32_1        FCE_KE1 /**< Kernel 1 <br> */
 108:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_CRC16          FCE_KE2 /**< Kernel 2 <br> */
 109:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_CRC8           FCE_KE3 /**< Kernel 3 <br> */
 110:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 111:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_REFIN_SET      (1U) /**< Enables input reflection */
 112:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_REFIN_RESET    (0U) /**< Disables input reflection */
 113:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_REFOUT_SET     (1U) /**< Enables output reflection */
 114:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_REFOUT_RESET   (0U) /**< Disables output reflection */
 115:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_INVSEL_SET     (1U) /**< Enables output inversion */
 116:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_INVSEL_RESET   (0U) /**< Disables output inversion */
 117:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 118:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
 119:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * ENUMS
 120:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
 121:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  
 122:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 123:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * FCE interrupt configuration
 124:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 125:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_CONFIG_INTERRUPT
 126:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 127:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_CMI = FCE_KE_CFG_CMI_Msk, /**< Enables CRC Mismatch interrupt \n*/
 128:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_CEI = FCE_KE_CFG_CEI_Msk, /**< Enables Configuration error interrupt \n*/
 129:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_LEI = FCE_KE_CFG_LEI_Msk, /**< Enables Length error interrupt \n*/
 130:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_BEI = FCE_KE_CFG_BEI_Msk  /**< Enables Bus error interrupt \n*/
 131:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CONFIG_INTERRUPT_t;
 132:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 133:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 134:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * FCE operation configuration
 135:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 136:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_CONFIG_OPERATION
 137:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 138:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_CCE = FCE_KE_CFG_CCE_Msk, /**< Enables CRC check */
 139:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_ALR = FCE_KE_CFG_ALR_Msk  /**< Enables Automatic length reload */
 140:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CONFIG_OPERATION_t;
 141:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 142:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 143:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * FCE algorithm configuration
 144:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 145:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_CONFIG_ALGO
 146:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 147:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_REFIN  = FCE_KE_CFG_REFIN_Msk,  /**< Enables input byte reflection */
 148:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_REFOUT = FCE_KE_CFG_REFOUT_Msk, /**< Enables Final CRC reflection */
 149:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_XSEL   = FCE_KE_CFG_XSEL_Msk    /**< Enables output inversion */
 150:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CONFIG_ALGO_t;
 151:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 152:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 153:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * FCE status flag configuration
 154:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 155:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_STS_FLAG
 156:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 157:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STS_MISMATCH_CRC = FCE_KE_STS_CMF_Msk, /**< CRC Mismatch flag */
 158:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STS_CONFIG_ERROR = FCE_KE_STS_CEF_Msk, /**< Configuration Error flag */
 159:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STS_LENGTH_ERROR = FCE_KE_STS_LEF_Msk, /**< Length Error flag */
 160:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STS_BUS_ERROR    = FCE_KE_STS_BEF_Msk	 /**< Bus Error flag */
 161:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** } XMC_FCE_STS_FLAG_t;
 162:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 163:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 164:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * FCE control configuration
 165:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 166:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_CTR_TEST
 167:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 168:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CTR_MISMATCH_CRC   = FCE_KE_CTR_FCM_Msk,      /**< Forces CRC mismatch */
 169:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CTR_MISMATCH_CFG   = FCE_KE_CTR_FRM_CFG_Msk,	/**< Forces CFG Register mismatch */
 170:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CTR_MISMATCH_CHECK = FCE_KE_CTR_FRM_CHECK_Msk /**< Forces CRC Check Register mismatch */
 171:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CTR_TEST_t;
 172:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 173:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 174:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * FCE status enumeration
 175:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 176:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_STATUS
 177:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 178:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STATUS_OK = 0, /**< Returns OK on success */
 179:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STATUS_BUSY,   /**< Returns BUSY when API is busy with a previous request */
 180:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STATUS_ERROR   /**< Returns ERROR when API cannot fulfil request */
 181:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** } XMC_FCE_STATUS_t;
 182:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 183:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
 184:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * DATA STRUCTURES
 185:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
 186:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 187:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 188:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * FCE kernel
 189:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */ 
 190:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** typedef FCE_KE_TypeDef XMC_FCE_Kernel_t;
 191:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 192:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /* Anonymous structure/union guard start */
 193:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #if defined (__CC_ARM)
 194:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   #pragma push
 195:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   #pragma anon_unions
 196:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #elif defined (__TASKING__)
 197:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   #pragma warning 586
 198:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #endif
 199:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 200:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 201:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @brief XMC_FCE configuration structure
 202:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 203:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** typedef struct XMC_FCE_CONFIG
 204:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 205:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   union
 206:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   {
 207:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****     uint32_t regval;
 208:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****     struct
 209:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****     {
 210:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 	  uint32_t               : 8;
 211:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****       uint32_t config_refin  : 1;  /**< Enables byte-wise reflection */
 212:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****       uint32_t config_refout : 1;  /**< Enables bit-wise reflection */
 213:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****       uint32_t config_xsel   : 1;  /**< Enables output inversion */
 214:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****       uint32_t               : 21; /**< Reserved bits */	  
 215:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****     };
 216:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   };
 217:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CONFIG_t;
 218:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 219:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /* Anonymous structure/union guard end */
 220:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #if defined (__CC_ARM)
 221:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   #pragma pop
 222:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #elif defined (__TASKING__)
 223:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   #pragma warning restore
 224:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #endif
 225:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 226:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 227:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * FCE handler
 228:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 229:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** typedef struct XMC_FCE
 230:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 231:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_Kernel_t *kernel_ptr;    /**< FCE Kernel Pointer */
 232:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CONFIG_t fce_cfg_update; /**< FCE CFG register update */
 233:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   uint32_t seedvalue;              /**< CRC seed value to be used */
 234:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** } XMC_FCE_t;
 235:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 236:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
 237:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * API PROTOTYPES
 238:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
 239:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  
 240:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #ifdef __cplusplus
 241:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** extern "C" {
 242:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** #endif
 243:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  
 244:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 245:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param None
 246:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return uint32_t Module revision number
 247:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 248:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 249:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Read FCE module revision number <br>
 250:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 
 251:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 252:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The value of a module revision starts with 0x01 (first revision). The current revision
 253:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * number is 0x01.
 254:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 255:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE uint32_t XMC_FCE_ReadModuleRev(void)
 256:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 257:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   return (uint32_t)(FCE->ID & FCE_ID_MOD_REV_Msk);
 258:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 259:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 260:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 261:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param None
 262:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return uint32_t Module type
 263:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 264:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 265:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Read the FCE module type <br>
 266:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 
 267:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 268:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The return value is currently 0xC0. It defines the module as a 32-bit module.
 269:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 270:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE uint32_t XMC_FCE_ReadModuleType(void)
 271:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 272:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   return (uint32_t)((FCE->ID & FCE_ID_MOD_TYPE_Msk) >> FCE_ID_MOD_TYPE_Pos);
 273:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 274:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 275:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 276:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param None
 277:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return uint32_t Module number
 278:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 279:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 280:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Read FCE module number <br>
 281:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 
 282:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 283:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The return value for FCE module is currently 0x00CA.
 284:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 285:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE uint32_t XMC_FCE_ReadModuleNumber(void)
 286:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 287:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   return ((uint32_t)((FCE->ID & FCE_ID_MOD_NUMBER_Msk) >> FCE_ID_MOD_NUMBER_Pos));
 288:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 289:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 290:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 291:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param None
 292:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return bool Disable status
 293:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 294:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 295:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 296:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Return the disable status <br>
 297:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 298:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 299:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The function reads the FCE module disable status (DISS) bit. It returns "true" if
 300:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * set, "false" otherwise.
 301:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 302:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE bool XMC_FCE_Get_DisableStatus(void)
 303:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 304:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   return (bool)(FCE->CLC &= (uint32_t)~FCE_CLC_DISS_Msk);
 305:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 306:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 307:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 308:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param None
 309:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return None
 310:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 311:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 312:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Disable the FCE module <br>
 313:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 
 314:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 315:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The function asserts the FCE peripheral reset and sets the DISR bit in the CLC
 316:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * register.
 317:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 318:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 319:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * All pending transactions running on the bus slave interface must be completed before
 320:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * entering the disabled state.
 321:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 322:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** void XMC_FCE_Disable(void);
 323:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 324:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 325:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param None
 326:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return None
 327:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 328:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 329:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Enable the FCE module <br>
 330:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 331:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 332:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The function de-asserts the peripheral reset and clears the DISR bit CLC register.
 333:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 334:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** void XMC_FCE_Enable(void);
 335:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 336:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 337:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 338:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return ::XMC_FCE_STATUS_t
 339:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 340:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 341:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Initialize the FCE engine <br>
 342:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * 
 343:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 344:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The function sets to the CFG and CRC registers with the FCE configuration and
 345:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * seeds values. The function always returns XMC_FCE_STATUS_SUCCESS.
 346:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 347:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 348:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The software must first ensure that the CRC kernel is properly configured with the
 349:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * initial CRC value (seed value).
 350:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 351:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** XMC_FCE_STATUS_t XMC_FCE_Init(const XMC_FCE_t *const engine);
 352:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 353:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 354:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 355:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param seedvalue Initial CRC value
 356:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return None
 357:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 358:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 359:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Initialize FCE seed value
 360:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 361:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 362:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The function sets the initial CRC (seed) value in the CRC register.
 363:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 364:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_InitializeSeedValue(const XMC_FCE_t *const engine, uint32_t seedvalue)
 365:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 366:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CRC = seedvalue;
 367:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 368:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 369:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 370:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 371:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param event OR'd values of ::XMC_FCE_CONFIG_INTERRUPT_t enumeration values
 372:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return None
 373:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 374:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 375:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Enable FCE event(s) <br>
 376:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 377:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 378:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The function sets the CFG register to enable FCE event(s).
 379:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 380:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_EnableEvent(const XMC_FCE_t *const engine, uint32_t event)
 381:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 382:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CFG |= (uint32_t)event;
 383:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 384:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 385:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 386:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 387:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param event OR'd values of ::XMC_FCE_CONFIG_INTERRUPT_t enumeration values
 388:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return None
 389:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 390:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 391:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Disable FCE event(s) <br>
 392:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 393:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 394:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The function clears the CFG register to disable FCE event(s).
 395:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 396:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_DisableEvent(const XMC_FCE_t *const engine, uint32_t event)
 397:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 398:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CFG &= ~(uint32_t)event;
 399:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 400:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 401:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 402:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 403:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param event Event of type ::XMC_FCE_STS_FLAG_t
 404:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return bool
 405:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 406:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 407:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Return the event status of FCE event <br>
 408:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 409:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 410:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The function returns the status of a single requested FCE event by reading the
 411:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * appropriate bit-fields of the STS register.
 412:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 413:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE bool XMC_FCE_GetEventStatus(const XMC_FCE_t *const engine, XMC_FCE_STS_FLAG_t event
 414:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 415:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   return (bool) (engine->kernel_ptr->STS & (uint32_t)event);
 416:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 417:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 418:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 419:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 420:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param event Event of type ::XMC_FCE_STS_FLAG_t
 421:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return None
 422:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 423:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 424:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Clear an FCE event <br>
 425:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 426:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 427:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The function clears requested FCE events by setting the bit-fields of the STS
 428:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * register.
 429:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 430:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_ClearEvent(const XMC_FCE_t *const engine, XMC_FCE_STS_FLAG_t event)
 431:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 432:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->STS |= (uint32_t)event;
 433:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 434:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 435:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 436:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 437:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param operation FCE operation of type ::XMC_FCE_CONFIG_OPERATION_t
 438:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return None
 439:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 440:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 441:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Enable CRC operations <br>
 442:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 443:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 444:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The function enables FRC operations by writing to the CFG register. 
 445:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 446:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 447:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * CRC comparison check (at the end of message) can be enabled using the CCE bit-field.
 448:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Automatic reload of LENGTH field (at the end of message) can be enabled using the
 449:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * ALR bit field.
 450:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 451:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_EnableOperation(const XMC_FCE_t *const engine, uint32_t operation)
 452:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 453:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CFG |= operation;
 454:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 455:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 456:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 457:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 458:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param operation FCE operation of type ::XMC_FCE_CONFIG_OPERATION_t
 459:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return None
 460:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 461:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 462:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Disable CRC operations <br>
 463:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 464:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 465:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * The function disables FRC operations by writing to the CFG register.
 466:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 467:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 468:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * CRC comparison check (at the end of message) can be disabled using the CCE bit-field.
 469:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Automatic reload of LENGTH field (at the end of message) can be disabled using the
 470:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * ALR bit field.
 471:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 472:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_DisableOperation(const XMC_FCE_t *const engine, uint32_t operation)
 473:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 474:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CFG &= ~(uint32_t)operation;
 475:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 476:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 477:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 478:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 479:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param algo A valid algorithm of type ::XMC_FCE_CONFIG_ALGO_t or a valid combination
 480:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *             of logically OR'd algorithms
 481:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return None
 482:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 483:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 484:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Enables CRC algorithm(s) <br>
 485:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 486:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 487:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Options for enabling CRC algorithm:    <br>
 488:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * REFIN: Input byte wise reflection      <br>
 489:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * REFOUT: Output bit wise reflection     <br>
 490:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * XSEL: Value to be XORed with final CRC <br>
 491:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 492:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_EnableCRCAlgorithm(const XMC_FCE_t *const engine, uint32_t algo)
 493:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 494:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CFG |= (uint32_t)algo;
 495:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 496:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 497:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 498:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 499:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param algo A valid algorithm of type ::XMC_FCE_CONFIG_ALGO_t or a valid combination
 500:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *             of logically OR'd algorithms
 501:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return None
 502:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 503:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 504:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Disable CRC algorithm(s) <br>
 505:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 506:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 507:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Options for disabling CRC algorithm:   <br>
 508:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * REFIN: Input byte wise reflection      <br>
 509:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * REFOUT: Output bit wise reflection     <br>
 510:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * XSEL: Value to be XORed with final CRC <br>
 511:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 512:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_DisableCRCAlgorithm(const XMC_FCE_t *const engine, uint32_t algo)
 513:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 514:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CFG &= ~(uint32_t)algo;
 515:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 516:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 517:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 518:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 519:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param checkvalue Checksum value
 520:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return None
 521:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 522:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 523:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Updates CRC check value <br>
 524:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 525:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 526:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * When the CFG.CCE bit field is set, every time the IR register is written, the
 527:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * LENGTH register is decremented by one until it reaches zero. The hardware monitors
 528:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * the transition of the LENGTH register from 1 to 0 to detect the end of the
 529:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * message and proceed with the comparison of the result register (RES) value with
 530:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * the CHECK register value.
 531:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 532:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_UpdateCRCCheck(const XMC_FCE_t *const engine, const uint32_t checkvalu
 533:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 534:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CHECK = 0xFACECAFEU;
 161              	 .loc 3 534 0
 162 0068 1B4B     	 ldr r3,.L16+24
 163 006a 1C4A     	 ldr r2,.L16+28
 164 006c 5A61     	 str r2,[r3,#20]
 535:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CHECK = checkvalue;
 165              	 .loc 3 535 0
 166 006e 1C49     	 ldr r1,.L16+32
 167 0070 5961     	 str r1,[r3,#20]
 168              	.LVL15:
 169              	.LBE34:
 170              	.LBE33:
 171              	.LBB35:
 172              	.LBB36:
 536:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 537:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** 
 538:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** /**
 539:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 540:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @param checklength Checksum length
 541:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * @return None <br>
 542:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 543:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 544:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * Updates CRC length specified in the input parameter <br>
 545:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  *
 546:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * \par
 547:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * When the ALR bit field is set to 1, every write to the IR register decrements
 548:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * the value of the LENGTH bit field. The LENGTH field shall be reloaded with its
 549:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  * configuration value at the end of the cycle where LENGTH reaches 0.
 550:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****  */
 551:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_UpdateLength(const XMC_FCE_t *const engine, const uint32_t checklength
 552:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** {
 553:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->LENGTH = 0xFACECAFEU;
 173              	 .loc 3 553 0
 174 0072 1A61     	 str r2,[r3,#16]
 554:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->LENGTH = checklength;
 175              	 .loc 3 554 0
 176 0074 4FF48072 	 mov r2,#256
 177 0078 1A61     	 str r2,[r3,#16]
 178              	.LVL16:
 179              	.LBE36:
 180              	.LBE35:
 181              	.LBB37:
 182              	.LBB38:
 453:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 183              	 .loc 3 453 0
 184 007a 9A68     	 ldr r2,[r3,#8]
 185 007c 42F01002 	 orr r2,r2,#16
 186 0080 9A60     	 str r2,[r3,#8]
 187              	.LVL17:
 188              	.LBE38:
 189              	.LBE37:
 190              	.LBB39:
 191              	.LBB40:
 192              	 .file 4 "C:/Files/Projects/Git/XMCLib/inc/xmc_dma.h"
   1:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
   2:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @file xmc_dma.h
   3:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @date 2018-09-18
   4:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
   5:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library
   8:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
   9:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 
  18:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 
  21:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
  36:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
  39:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *     - Initial <br>
  41:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
  42:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 2015-06-20:
  43:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *     - Add the declarations for the following APIs: <br>
  44:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  45:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  46:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  47:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *     - Documentation updates <br>
  48:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  49:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
  50:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 2016-10-28:
  51:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *     - Fix documentation on maximum block size
  52:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
  53:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 2017-09-28:
  54:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *     - Improved documentation and added XMC_DMA_CH_EnableFifo() and XMC_DMA_CH_DisableFifo()
  55:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
  56:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 2018-09-18:
  57:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *     - Added XMC_DMA_CH_GetTransferredData()
  58:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
  59:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @endcond
  60:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
  61:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
  62:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #ifndef XMC_DMA_H
  63:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #define XMC_DMA_H
  64:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
  65:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  66:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * HEADER FILES
  67:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
  68:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
  69:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #include "xmc_common.h"
  70:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
  71:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
  72:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
  73:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #include "xmc_dma_map.h"
  74:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
  75:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
  76:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @addtogroup XMClib XMC Peripheral Library
  77:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @{
  78:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
  79:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
  80:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
  81:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @addtogroup DMA
  82:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @brief General purpose DMA (GPDMA) driver for the XMC4000 microcontroller family
  83:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
  84:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The GPDMA is a highly configurable DMA controller that allows high-speed data transfers
  85:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * between peripherals and memories. Complex data transfers can be done with minimal
  86:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * intervention of the processor, making CPU available for other operations.
  87:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
  88:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * GPDMA provides extensive support for XMC microcontroller peripherals like A/D, D/A
  89:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * converters and timers. Data transfers through communication interfaces (USIC) using the
  90:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * GPDMA increase efficiency and parallelism for real-time applications.
  91:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
  92:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The DMA low level driver provides functions to configure and initialize the GPDMA
  93:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * hardware peripheral.
  94:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @{
  95:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
  96:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
  97:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  98:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * MACROS
  99:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 100:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 101:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
 102:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0 ((XMC_DMA_t *)GPDMA0_CH0_BASE) /**< DMA module 0 */
 103:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0_NUM_CHANNELS 8
 104:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #endif
 105:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 106:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA1)
 107:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1 ((XMC_DMA_t *)GPDMA1_CH0_BASE) /**< DMA module 1, only available in XMC45xx series
 108:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1_NUM_CHANNELS 4
 109:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #endif
 110:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 111:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 112:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * ENUMS
 113:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 114:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 115:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 116:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA transfer types
 117:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 118:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_TYPE
 119:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 120:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK,                                /**< Single block */
 121:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD, /**< Multi-block: src addre
 122:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 123:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD,     /**< Multi-block: src addre
 124:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED, /**< Multi-block: src addre
 125:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED,     /**< Multi-block: src addre
 126:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 127:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD,     /**< Multi-block: src addre
 128:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED      /**< Multi-block: src addre
 129:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_TYPE_t;
 130:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 131:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 132:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA transfer flow modes
 133:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 134:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_FLOW
 135:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 136:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2M_DMA    = 0x0UL, /**< Memory to memory (DMA flow controller) */
 137:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA    = 0x1UL, /**< Memory to peripheral (DMA flow controller) */
 138:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA    = 0x2UL, /**< Peripheral to memory (DMA flow controller) */
 139:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA    = 0x3UL, /**< Peripheral to peripheral (DMA flow controller) 
 140:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_PER    = 0x4UL, /**< Peripheral to memory (Peripheral flow controlle
 141:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_SRCPER = 0x5UL, /**< Peripheral to peripheral (Source peripheral flo
 142:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_PER    = 0x6UL, /**< Memory to peripheral (Peripheral flow controlle
 143:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DSTPER = 0x7UL  /**< Peripheral to peripheral (Destination periphera
 144:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_FLOW_t;
 145:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 146:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 147:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Valid burst length values
 148:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 149:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_BURST_LENGTH
 150:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 151:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_1 = 0x0UL, /**< Burst length: 1 word */
 152:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_4 = 0x1UL, /**< Burst length: 4 words */
 153:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_8 = 0x2UL  /**< Burst length: 8 words */
 154:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_BURST_LENGTH_t;
 155:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 156:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 157:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Valid transfer width values
 158:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 159:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_WIDTH
 160:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 161:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_8  = 0x0UL, /**< 8-bit transfer width */
 162:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_16 = 0x1UL, /**< 16-bit transfer width */
 163:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_32 = 0x2UL  /**< 32-bit transfer width */
 164:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_WIDTH_t;
 165:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 166:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 167:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA address count mode
 168:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 169:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_ADDRESS_COUNT_MODE
 170:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 171:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT = 0x0UL, /**< Address count mode: increment */
 172:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_DECREMENT = 0x1UL, /**< Address count mode: decrement */
 173:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_NO_CHANGE = 0x2UL  /**< Address count mode: no change */
 174:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_ADDRESS_COUNT_MODE_t;
 175:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 176:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 177:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA channel priorities
 178:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 179:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_PRIORITY
 180:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 181:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_0 = 0x0UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 0 (low) *
 182:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_1 = 0x1UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 1 */
 183:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_2 = 0x2UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 2 */
 184:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_3 = 0x3UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 3 */
 185:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_4 = 0x4UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 4 */
 186:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_5 = 0x5UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 5 */
 187:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_6 = 0x6UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 6 */
 188:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_7 = 0x7UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos  /**< DMA channel priority 7 (high) 
 189:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_PRIORITY_t;
 190:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 191:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 192:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Source handshake interface
 193:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 194:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_SRC_HANDSHAKING
 195:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 196:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos, /**< Source: hardwa
 197:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos  /**< Source: softwa
 198:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_SRC_HANDSHAKING_t;
 199:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 200:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 201:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Destination handshake interface
 202:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 203:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_DST_HANDSHAKING
 204:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 205:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos, /**< Destination: h
 206:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos  /**< Destination: s
 207:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_DST_HANDSHAKING_t;
 208:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 209:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 210:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA hardware handshaking interface
 211:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Hardware handshaking available only if DMA is flow controller
 212:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 213:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_HARDWARE_HANDSHAKING_IF
 214:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 215:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_0 = 0x0UL, /**< Hardware handshaking interface 0 */
 216:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_1 = 0x1UL, /**< Hardware handshaking interface 1 */
 217:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_2 = 0x2UL, /**< Hardware handshaking interface 2 */
 218:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_3 = 0x3UL, /**< Hardware handshaking interface 3 */
 219:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_4 = 0x4UL, /**< Hardware handshaking interface 4 */
 220:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_5 = 0x5UL, /**< Hardware handshaking interface 5 */
 221:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_6 = 0x6UL, /**< Hardware handshaking interface 6 */
 222:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_7 = 0x7UL  /**< Hardware handshaking interface 7 */
 223:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_t;
 224:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 225:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 226:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA events
 227:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 228:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_EVENT
 229:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 230:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_TRANSFER_COMPLETE        = 0x1UL, /**< Transfer complete event */
 231:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE  = 0x2UL, /**< Block transfer complete event */
 232:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE = 0x4UL, /**< Source transaction complete event */
 233:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE = 0x8UL, /**< Destination transaction complete event */
 234:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_ERROR                    = 0x10UL /**< DMA error event */
 235:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_EVENT_t;
 236:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 237:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 238:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Transaction types
 239:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 240:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSACTION_TYPE
 241:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 242:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, /**< Single DMA transaction */
 243:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_BURST   /**< Burst transaction */
 244:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSACTION_TYPE_t;
 245:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 246:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 247:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA channel status values
 248:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 249:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_STATUS
 250:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 251:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_OK,    /**< DMA status OK */
 252:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_ERROR, /**< DMA status error */
 253:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_BUSY   /**< DMA is busy */
 254:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_STATUS_t;
 255:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 256:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 257:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DATA STRUCTURES
 258:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 259:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 260:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 261:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure <br>
 262:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 263:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 264:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * to configure the DMA channel. It is contained within the ::XMC_DMA_t
 265:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * structure. It's registers can be used to configure DMA transfer details
 266:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * like source address, destination address, block size, incrementation
 267:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * modes and the like.
 268:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 269:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  
 270:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef struct {
 271:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SAR;
 272:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED0;
 273:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DAR;
 274:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED1;
 275:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LLP;
 276:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED2;
 277:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLL;
 278:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLH;
 279:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTAT;
 280:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED3;
 281:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTAT;
 282:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED4;
 283:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTATAR;
 284:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED5;
 285:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTATAR;
 286:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED6;
 287:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGL;
 288:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGH;
 289:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGR;
 290:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED7;
 291:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSR;
 292:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED8;
 293:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } GPDMA_CH_t;
 294:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 295:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 296:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA device structure <br>
 297:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 298:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 299:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * to configure the GPDMA peripheral on the XMC4000 series of microcontrollers.
 300:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The registers can be accessed with ::XMC_DMA0 and ::XMC_DMA1.
 301:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 302:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef struct {
 303:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   GPDMA_CH_t CH[8];
 304:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 305:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  RAWCHEV[10];
 306:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSCHEV[10];
 307:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  MASKCHEV[10];
 308:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __O  uint32_t  CLEARCHEV[10];
 309:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSGLEV;
 310:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED20;
 311:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQSRCREG;
 312:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED21;
 313:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQDSTREG;
 314:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED22;
 315:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQSRCREG;
 316:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED23;
 317:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQDSTREG;
 318:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED24;
 319:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTSRCREG;
 320:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED25;
 321:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTDSTREG;
 322:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED26;
 323:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DMACFGREG;
 324:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED27;
 325:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CHENREG;
 326:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED28;
 327:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  ID;
 328:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED29[19];
 329:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  TYPE;
 330:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  VERSION;
 331:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_t;
 332:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 333:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard start */
 334:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 335:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   #pragma push
 336:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   #pragma anon_unions
 337:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 338:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   #pragma warning 586
 339:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #endif
 340:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 341:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 342:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA channel linked list item.
 343:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Note: Needs to be word aligned
 344:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 345:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_LLI
 346:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 347:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 348:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 349:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   struct XMC_DMA_LLI *llp;                      /**< Linked list pointer of type XMC_DMA_LLI_t */
 350:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   union
 351:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   {
 352:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     struct
 353:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     {
 354:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 355:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width (:: XMC_DMA_CH_TRAN
 356:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width (:: XMC_DMA_CH_TRANSFER_
 357:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode (:: XMC_DMA_CH_
 358:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode (:: XMC_DMA_CH_ADDRE
 359:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length (:: XMC_DMA_CH_BURST_
 360:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length (:: XMC_DMA_CH_BURST_LENGT
 361:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 362:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 363:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             /**< Reserved bits */
 364:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow (:: XMC_DMA_CH_TRANSFER_FLOW
 365:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t : 4;                             /**< Reserved bits */
 366:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_linked_list: 1;       /**< Enable destination linked list? */
 367:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_linked_list: 1;       /**< Enable source linked list? */
 368:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t : 3;                             /**< Reserved bits */
 369:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     };
 370:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 371:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   };
 372:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   uint32_t block_size;                          /**< Transfer block size */
 373:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   uint32_t src_status;                          /**< Source status */
 374:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   uint32_t dst_status;                          /**< Destination status */
 375:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_LLI_t;
 376:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 377:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef XMC_DMA_LLI_t **XMC_DMA_LIST_t;         /**< Type definition for a linked list pointer */
 378:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 379:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 380:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure
 381:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 382:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_CH_CONFIG
 383:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 384:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   union
 385:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   {
 386:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 387:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     struct
 388:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     {
 389:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 390:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width (:: XMC_DMA_CH_TRAN
 391:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width (:: XMC_DMA_CH_TRANSFER_
 392:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode (:: XMC_DMA_CH_
 393:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode (:: XMC_DMA_CH_ADDRE
 394:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length (:: XMC_DMA_CH_BURST_
 395:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length (:: XMC_DMA_CH_BURST_LENGT
 396:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 397:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 398:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             
 399:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow (:: XMC_DMA_CH_TRANSFER_FLOW
 400:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t : 9;                             
 401:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     };
 402:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   };
 403:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 404:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 405:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 406:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_LLI_t *linked_list_pointer;           /**< Linked list pointer */
 407:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   
 408:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   union
 409:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   {
 410:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     uint32_t src_gather_control;
 411:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     struct
 412:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     {
 413:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_interval: 20;         /**< Source gather interval */
 414:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_count: 12;            /**< Source gather count */
 415:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     };
 416:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   };
 417:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 418:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   union
 419:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   {
 420:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     uint32_t dst_scatter_control;
 421:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     struct
 422:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     {
 423:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_interval: 20;        /**< Destination scatter interval */
 424:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_count: 12;           /**< Destination scatter count */
 425:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****     };
 426:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   };
 427:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   
 428:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   uint16_t block_size;                          /**< Block size for DMA controlled transfers [max. 
 429:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_t transfer_type;     /**< DMA transfer type (:: XMC_DMA_CH_TRANSFER_TYPE
 430:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_t priority;               /**< DMA channel priority (::XMC_DMA_CH_PRIORITY_t)
 431:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_t src_handshaking; /**< DMA source handshaking interface (:: XMC_DMA_C
 432:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   uint8_t src_peripheral_request;               /**< Source peripheral request. See xmc_dma_map.h *
 433:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_t dst_handshaking; /**< DMA destination handshaking interface (:: XMC_
 434:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   uint8_t dst_peripheral_request;               /**< Destination peripheral request. See xmc_dma_ma
 435:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_CONFIG_t;
 436:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 437:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard end */
 438:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 439:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   #pragma pop
 440:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 441:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   #pragma warning restore
 442:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #endif
 443:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 444:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 445:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA channel event handler
 446:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 447:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** typedef void (*XMC_DMA_CH_EVENT_HANDLER_t)(XMC_DMA_CH_EVENT_t event);
 448:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 449:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 450:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * API PROTOTYPES
 451:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 452:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 453:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #ifdef __cplusplus
 454:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** extern "C" {
 455:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** #endif
 456:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 457:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 458:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 459:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return None
 460:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 461:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 462:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Initialize the GPDMA peripheral <br>
 463:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 464:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 465:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function initializes a prioritized list of DMA channels and enables the GPDMA
 466:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * peripheral.
 467:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 468:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Init(XMC_DMA_t *const dma);
 469:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 470:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 471:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 472:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return None
 473:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 474:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 475:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Enable the GPDMA peripheral <br>
 476:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 477:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 478:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function de-asserts the GPDMA peripheral reset. In addition, it un-gates the
 479:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * GPDMA0 peripheral clock for all XMC4000 series of microcontrollers with an exception
 480:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * of the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 481:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 482:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Enable(XMC_DMA_t *const dma);
 483:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 484:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 485:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 486:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return None
 487:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 488:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 489:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Disable the GPDMA peripheral <br>
 490:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 491:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 492:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function asserts the GPDMA peripheral reset. In addition, it gates the GPDMA0
 493:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * peripheral clock for all XMC4000 series of microcontrollers with an exception of
 494:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 495:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 496:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Disable(XMC_DMA_t *const dma);
 497:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 498:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 499:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 500:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return bool
 501:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 502:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 503:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Check if the GPDMA peripheral is enabled <br>
 504:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 505:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 506:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * For the XMC4500 microcontroller, the function checks if the GPDMA module is asserted
 507:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * and returns "false" if it is. In addition, it also checks if the clock is gated
 508:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * for the other XMC4000 series of microcontrollers. It returns "true" if the peripheral
 509:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * is enabled.
 510:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 511:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma);
 512:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 513:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 514:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 515:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 516:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 517:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 518:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Get DMA event status <br>
 519:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 520:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 521:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function returns the collective (global) status of GPDMA events. The following
 522:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * lists the various DMA events and their corresponding enumeration. The return value
 523:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * of this function may then be masked with any one of the following enumerations to
 524:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * obtain the status of individual DMA events. <br>
 525:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 526:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 527:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Transfer complete -> ::XMC_DMA_CH_EVENT_TRANSFER_COMPLETE                       <br>
 528:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Block transfer complete -> ::XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE           <br>
 529:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Source transaction complete -> ::XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE      <br>
 530:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Destination transaction complete -> ::XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE <br>
 531:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * DMA error event -> ::XMC_DMA_CH_EVENT_ERROR                                     <br>
 532:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 533:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetEventStatus(XMC_DMA_t *const dma)
 534:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 535:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSGLEV);
 536:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** }
 537:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 538:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 539:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 540:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA transfer complete status
 541:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 542:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 543:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Get transfer complete status <br>
 544:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 545:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 546:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA transfer complete interrupt status. <br>
 547:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 548:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsTransferCompleteStatus(XMC_DMA_t *const dma)
 549:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 550:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[0]);
 551:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** }
 552:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 553:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 554:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 555:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA block complete status
 556:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 557:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 558:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Get block transfer complete status <br>
 559:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 560:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 561:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA block transfer complete interrupt status. <br>
 562:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 563:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsBlockCompleteStatus(XMC_DMA_t *const dma)
 564:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 565:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[2]);
 566:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** }
 567:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 568:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 569:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 570:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 571:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 572:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 573:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Get source transaction complete status <br>
 574:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 575:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 576:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function returns the source transaction complete interrupt status. <br>
 577:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 578:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 579:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * If the source peripheral is memory, the source transaction complete interrupt is
 580:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * ignored.
 581:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 582:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsSourceTransactionCompleteStatus(XMC_DMA_t *const dma)
 583:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 584:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[4]);
 585:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** }
 586:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 587:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 588:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 589:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 590:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 591:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 592:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Get destination transaction complete status <br>
 593:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 594:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 595:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function returns the destination transaction complete interrupt status <br>
 596:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 597:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 598:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * If the destination peripheral is memory, the destination transaction complete
 599:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * interrupt is ignored.
 600:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 601:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(XMC_DMA_t *const d
 602:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 603:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[6]);
 604:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** }
 605:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 606:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 607:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 608:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA error event status
 609:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 610:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 611:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Get DMA error event status <br>
 612:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 613:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 614:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function returns error interrupt status. <br>
 615:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 616:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsErrorStatus(XMC_DMA_t *const dma)
 617:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 618:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[8]);
 619:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** }
 620:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 621:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 622:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 623:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param line Which DLR (DMA line router) line should the function use?
 624:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param peripheral Which hardware peripheral is the GPDMA communicating with?
 625:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return None
 626:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 627:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 628:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Enable request line <br>
 629:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 630:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 631:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function enables a DLR (DMA line router) line and selects a service request
 632:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * source, resulting in the trigger of a DMA transfer. <br>
 633:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 634:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 635:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The DLR is used for a DMA transfer typically involving a peripheral; For example,
 636:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * the ADC peripheral may use the DLR in hardware handshaking mode to transfer
 637:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * ADC conversion values to a destination memory block.
 638:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 639:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** void XMC_DMA_EnableRequestLine(XMC_DMA_t *const dma, uint8_t line, uint8_t peripheral);
 640:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 641:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 642:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 643:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param line Which DLR (DMA line router) line should the function use?
 644:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return None
 645:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 646:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 647:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Disable request line <br>
 648:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 649:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 650:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function disables a DLR (DMA line router) line by clearing appropriate bits
 651:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * in the LNEN register. <br>
 652:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 653:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** void XMC_DMA_DisableRequestLine(XMC_DMA_t *const dma, uint8_t line);
 654:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 655:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 656:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 657:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param line Which DLR (DMA line router) line should the function use?
 658:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return None
 659:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 660:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 661:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Clear request line <br>
 662:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 663:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 664:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function clears a DLR (DMA line router) request line. <br>
 665:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 666:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** void XMC_DMA_ClearRequestLine(XMC_DMA_t *const dma, uint8_t line);
 667:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 668:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 669:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 670:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param line The line for which the overrun status is requested
 671:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return bool "true" if overrun occured, "false" otherwise
 672:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 673:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 674:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Get overrun status of a DLR line <br>
 675:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 676:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 677:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The DLR module's OVERSTAT register keeps track of DMA service request overruns.
 678:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Should an overrun occur, the bit corresponding to the used DLR line is set. The
 679:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * function simply reads this status and returns "true" if an overrun is detected
 680:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * It returns "false" if an overrun isn't registered.
 681:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 682:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** bool XMC_DMA_GetOverrunStatus(XMC_DMA_t *const dma, const uint8_t line);
 683:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 684:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 685:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 686:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param line The line for which the overrun status must be cleared
 687:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return None
 688:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 689:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 690:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Clear overrun status of a DLR line <br>
 691:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 692:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 693:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function clears the overrun status of a line by setting the corresponding
 694:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * line bit in the DLR's OVERCLR register.
 695:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 696:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** void XMC_DMA_ClearOverrunStatus(XMC_DMA_t *const dma, const uint8_t line);
 697:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 698:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 699:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 700:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param channel The GPDMA channel (number) which needs to be initialized
 701:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param config A constant pointer to ::XMC_DMA_CH_CONFIG_t, pointing to a const
 702:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *               channel configuration
 703:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return XMC_DMA_CH_STATUS_t Initialization status
 704:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 705:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 706:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Initialize a GPDMA channel with provided channel configuration <br>
 707:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 708:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 709:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function sets up the following channel configuration parameters for a GPDMA
 710:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * channel (specified by the parameter channel): <br>
 711:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 1) Source and destination addresses (and linked list address if requested) <br>
 712:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 2) Source and destination handshaking interface (hardware or software?)    <br>
 713:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 3) Scatter/gather configuration                                            <br>
 714:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 4) Source and destination peripheral request (DMA is the flow controller)  <br>
 715:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 5) Transfer flow and type                                                  <br>
 716:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 717:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 718:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function returns one of the following values: <br>
 719:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 1) In case the DMA channel is not enabled: ::XMC_DMA_CH_STATUS_BUSY        <br>
 720:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 2) If the GPDMA module itself is not enabled: ::XMC_DMA_CH_STATUS_ERROR    <br>
 721:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * 3) If the configuration was successful: ::XMC_DMA_CH_STATUS_OK             <br>
 722:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 723:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 724:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Once the initialization is successful, calling ::XMC_DMA_CH_Enable() will trigger
 725:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * a GPDMA transfer.
 726:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 727:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** XMC_DMA_CH_STATUS_t XMC_DMA_CH_Init(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_C
 728:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** 
 729:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** /**
 730:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 731:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @param channel Which DMA channel should be enabled?
 732:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * @return None
 733:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 734:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 735:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * Enable a GPDMA channel <br>
 736:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  *
 737:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * \par
 738:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * The function sets the GPDMA's CHENREG register to enable a DMA channel. Please
 739:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * ensure that the GPDMA module itself is enabled before calling this function.
 740:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  * See ::XMC_DMA_Enable() for details.
 741:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****  */
 742:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE void XMC_DMA_CH_Enable(XMC_DMA_t *const dma, const uint8_t channel)
 743:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h **** {
 744:C:/Files/Projects/Git/XMCLib/inc\xmc_dma.h ****   dma->CHENREG = (uint32_t)(0x101UL << channel);   
 193              	 .loc 4 744 0
 194 0082 40F20442 	 movw r2,#1028
 195 0086 0F4B     	 ldr r3,.L16+4
 196 0088 C3F8A023 	 str r2,[r3,#928]
 197              	.LBE40:
 198              	.LBE39:
 145:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   /* Set expected CRC-32 */
 146:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   XMC_FCE_UpdateCRCCheck(&crc_engine, 0x99f69cd9);
 147:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   /* Set length of message */
 148:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   XMC_FCE_UpdateLength(&crc_engine, 256);
 149:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   /* Enable auto checking of the calculated CRC */
 150:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   XMC_FCE_EnableOperation(&crc_engine, XMC_FCE_CFG_CONFIG_CCE);
 151:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
 152:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   XMC_DMA_CH_Enable(XMC_DMA0, 2);
 153:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
 154:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   while (transfer_done == false);
 199              	 .loc 1 154 0
 200 008c 154B     	 ldr r3,.L16+36
 201              	.L7:
 202              	 .loc 1 154 0 is_stmt 0 discriminator 1
 203 008e 1A78     	 ldrb r2,[r3]
 204 0090 12F0FF0F 	 tst r2,#255
 205 0094 FBD0     	 beq .L7
 206              	.LVL18:
 207              	.LBB41:
 208              	.LBB42:
 415:C:/Files/Projects/Git/XMCLib/inc\xmc_fce.h **** }
 209              	 .loc 3 415 0 is_stmt 1
 210 0096 104B     	 ldr r3,.L16+24
 211 0098 DB68     	 ldr r3,[r3,#12]
 212              	.LBE42:
 213              	.LBE41:
 155:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
 156:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   if (XMC_FCE_GetEventStatus(&crc_engine, XMC_FCE_STS_MISMATCH_CRC) == false)
 214              	 .loc 1 156 0
 215 009a 13F0010F 	 tst r3,#1
 216 009e 04D1     	 bne .L8
 217              	.LVL19:
 218              	.LBB43:
 219              	.LBB44:
 220              	 .file 5 "C:/Files/Projects/Git/XMCLib/inc/xmc_gpio.h"
   1:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** {
 258:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 261:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** }
 262:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** {
 284:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 287:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** }
 288:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 289:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** /**
 290:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 291:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 294:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 302:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  *
 306:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****  */
 307:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 308:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** {
 310:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h **** 
 312:C:/Files/Projects/Git/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 221              	 .loc 5 312 0
 222 00a0 4FF00222 	 mov r2,#33554944
 223 00a4 064B     	 ldr r3,.L16
 224 00a6 5A60     	 str r2,[r3,#4]
 225 00a8 09E0     	 b .L9
 226              	.LVL20:
 227              	.L8:
 228              	.LBE44:
 229              	.LBE43:
 230              	.LBB45:
 231              	.LBB46:
 232 00aa 0548     	 ldr r0,.L16
 233 00ac 4FF00221 	 mov r1,#33554944
 234 00b0 0D4A     	 ldr r2,.L16+40
 235              	.L14:
 236              	.LVL21:
 237 00b2 4160     	 str r1,[r0,#4]
 238              	.LVL22:
 239 00b4 1346     	 mov r3,r2
 240              	.LVL23:
 241              	.L10:
 242              	.LBE46:
 243              	.LBE45:
 244              	.LBB47:
 157:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   {
 158:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 	XMC_GPIO_ToggleOutput(LED1);
 159:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   }
 160:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   else
 161:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   {
 162:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 	while(1)
 163:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 	{
 164:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 	  XMC_GPIO_ToggleOutput(LED1);
 165:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 	  for (int32_t delay = 0; delay < 0x1fffff; ++delay)
 166:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 	  {
 167:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 		__NOP();
 245              	 .loc 1 167 0 discriminator 3
 246              	
 247 00b6 00BF     	 nop
 248              	
 249              	.LVL24:
 165:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 	  {
 250              	 .loc 1 165 0 discriminator 3
 251              	 .thumb
 252 00b8 013B     	 subs r3,r3,#1
 253              	.LVL25:
 254 00ba FCD1     	 bne .L10
 255 00bc F9E7     	 b .L14
 256              	.LVL26:
 257              	.L9:
 258              	.LBE47:
 168:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 	  }
 169:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 	}
 170:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   }
 171:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c **** 
 172:C:/Files/Projects/Git/XMCLib/examples/XMC4500_series/DMA/DMA_FCE\main.c ****   while(1);
 259              	 .loc 1 172 0 discriminator 1
 260 00be FEE7     	 b .L9
 261              	.L17:
 262              	 .align 2
 263              	.L16:
 264 00c0 00830248 	 .word 1208124160
 265 00c4 00400150 	 .word 1342259200
 266 00c8 00000000 	 .word .LANCHOR1
 267 00cc 00ED00E0 	 .word -536810240
 268 00d0 00E100E0 	 .word -536813312
 269 00d4 00000000 	 .word .LANCHOR2
 270 00d8 20000250 	 .word 1342308384
 271 00dc FECACEFA 	 .word -87110914
 272 00e0 D99CF699 	 .word -1711891239
 273 00e4 00000000 	 .word .LANCHOR0
 274 00e8 FFFF1F00 	 .word 2097151
 275              	 .cfi_endproc
 276              	.LFE178:
 278              	 .global transfer_done
 279              	 .global dma_ch_config
 280              	 .global crc_engine
 281              	 .global data
 282              	 .section .rodata.data,"a",%progbits
 283              	 .align 2
 286              	data:
 287 0000 2505EC54 	 .word 1424753957
 288 0004 B2357144 	 .word 1148270002
 289 0008 F986ED6E 	 .word 1861060345
 290 000c 76EEB910 	 .word 280620662
 291 0010 558F5C9C 	 .word -1671655595
 292 0014 A0F0C844 	 .word 1154019488
 293 0018 D3415C9F 	 .word -1621343789
 294 001c F38E6C4A 	 .word 1248628467
 295 0020 C23AB43C 	 .word 1018444482
 296 0024 A46C9E9A 	 .word -1700893532
 297 0028 A0D596A2 	 .word -1567173216
 298 002c 95EFE22B 	 .word 736292757
 299 0030 63B90175 	 .word 1963047267
 300 0034 29AD0629 	 .word 688303401
 301 0038 1EDF95E6 	 .word -426385634
 302 003c E8C9E3A1 	 .word -1578907160
 303 0040 C8397390 	 .word -1871496760
 304 0044 A7C705F2 	 .word -234502233
 305 0048 184DDED6 	 .word -690074344
 306 004c D5D7A9B6 	 .word -1230383147
 307 0050 638FF979 	 .word 2046398307
 308 0054 6E7A7F46 	 .word 1182759534
 309 0058 05B0B511 	 .word 297119749
 310 005c 4278B969 	 .word 1773762626
 311 0060 9C12B9D1 	 .word -776400228
 312 0064 261EBADD 	 .word -575005146
 313 0068 EF21E442 	 .word 1122247151
 314 006c E7DDBEA8 	 .word -1463886361
 315 0070 905D9933 	 .word 865688976
 316 0074 4DD139C6 	 .word -969289395
 317 0078 EDE558AC 	 .word -1403460115
 318 007c 17FE715D 	 .word 1567751703
 319 0080 08DF1CEE 	 .word -300097784
 320 0084 810D5E3D 	 .word 1029574017
 321 0088 A74FB0AC 	 .word -1397731417
 322 008c 83CED47F 	 .word 2144652931
 323 0090 525DE86B 	 .word 1810390354
 324 0094 5A1AEB02 	 .word 48962138
 325 0098 DC89CC24 	 .word 617384412
 326 009c 9283F137 	 .word 938574738
 327 00a0 E786C856 	 .word 1455982311
 328 00a4 4CCC8B9C 	 .word -1668559796
 329 00a8 DA7534BB 	 .word -1154189862
 330 00ac 00F82404 	 .word 69531648
 331 00b0 F4144A40 	 .word 1078596852
 332 00b4 A4B9D741 	 .word 1104656804
 333 00b8 B4D2978F 	 .word -1885875532
 334 00bc C528D916 	 .word 383330501
 335 00c0 8590052C 	 .word 738562181
 336 00c4 2DCFBAC1 	 .word -1044721875
 337 00c8 FE82A5E3 	 .word -475692290
 338 00cc 7C87ED48 	 .word 1223526268
 339 00d0 BB6BBEC2 	 .word -1027707973
 340 00d4 EFC7833F 	 .word 1065601007
 341 00d8 CBE92C75 	 .word 1965877707
 342 00dc CA011E0D 	 .word 220070346
 343 00e0 82DFEC02 	 .word 49078146
 344 00e4 6BF8453D 	 .word 1027995755
 345 00e8 3D2059B3 	 .word -1286004675
 346 00ec E6601A61 	 .word 1629118694
 347 00f0 79B8E33F 	 .word 1071888505
 348 00f4 391BE834 	 .word 887626553
 349 00f8 3019765B 	 .word 1534466352
 350 00fc A5C19E86 	 .word -2036416091
 351 0100 5D0058BF 	 .word -1084751779
 352 0104 F5209C8B 	 .word -1952702219
 353 0108 A3228D05 	 .word 93135523
 354 010c 249EAB11 	 .word 296459812
 355 0110 124753CC 	 .word -866957550
 356 0114 B4FE68A2 	 .word -1570177356
 357 0118 22DEA74E 	 .word 1319624226
 358 011c 1404DC34 	 .word 886834196
 359 0120 9DCB30F4 	 .word -198128739
 360 0124 5B906990 	 .word -1872129957
 361 0128 E087943A 	 .word 982812640
 362 012c BA110C93 	 .word -1827925574
 363 0130 F36F9D5D 	 .word 1570598899
 364 0134 265B3B9C 	 .word -1673831642
 365 0138 01A599D0 	 .word -795237119
 366 013c 2EC75FE5 	 .word -446707922
 367 0140 094EC576 	 .word 1992642057
 368 0144 67392411 	 .word 287586663
 369 0148 D22B953B 	 .word 999631826
 370 014c FCF21706 	 .word 102232828
 371 0150 99FA142A 	 .word 706017945
 372 0154 25C5B142 	 .word 1118946597
 373 0158 A4F4EEF9 	 .word -101780316
 374 015c C3F190A0 	 .word -1601113661
 375 0160 BD8024FA 	 .word -98271043
 376 0164 24798E54 	 .word 1418623268
 377 0168 99CE2326 	 .word 639880857
 378 016c F4994254 	 .word 1413650932
 379 0170 0EDA02B9 	 .word -1190995442
 380 0174 305F7271 	 .word 1903320880
 381 0178 FB6A0152 	 .word 1375824635
 382 017c 17643895 	 .word -1791466473
 383 0180 AB99D09A 	 .word -1697605205
 384 0184 2DE5F612 	 .word 318170413
 385 0188 C7048D61 	 .word 1636631751
 386 018c A3D8CCD4 	 .word -724772701
 387 0190 6317AB01 	 .word 27989859
 388 0194 6D839388 	 .word -2003598483
 389 0198 0E272D3A 	 .word 976037646
 390 019c DF0D9C99 	 .word -1717826081
 391 01a0 BE62ED06 	 .word 116220606
 392 01a4 E58D7F88 	 .word -2004906523
 393 01a8 7538AA20 	 .word 548026485
 394 01ac 437F6322 	 .word 576945987
 395 01b0 219B4185 	 .word -2059298015
 396 01b4 5D85542E 	 .word 777291101
 397 01b8 93D4D0C6 	 .word -959392621
 398 01bc 0CF0E838 	 .word 954789900
 399 01c0 5138462F 	 .word 793131089
 400 01c4 180093A5 	 .word -1517092840
 401 01c8 A8CE08C1 	 .word -1056387416
 402 01cc 8AAE209D 	 .word -1658802550
 403 01d0 3728A44E 	 .word 1319381047
 404 01d4 94AEB73D 	 .word 1035447956
 405 01d8 9B4F36DA 	 .word -633974885
 406 01dc 6A506F25 	 .word 628052074
 407 01e0 DE3A2778 	 .word 2015836894
 408 01e4 93CEC36A 	 .word 1791217299
 409 01e8 58A6790B 	 .word 192521816
 410 01ec 9893E16E 	 .word 1860277144
 411 01f0 A357C1A3 	 .word -1547610205
 412 01f4 7B18900F 	 .word 261101691
 413 01f8 97674BEB 	 .word -347379817
 414 01fc 404C83AF 	 .word -1350349760
 415 0200 BBBCD6CB 	 .word -875119429
 416 0204 69BC03C1 	 .word -1056719767
 417 0208 CC652E5F 	 .word 1596876236
 418 020c 0BAD2A47 	 .word 1193979147
 419 0210 51129106 	 .word 110170705
 420 0214 912D6987 	 .word -2023150191
 421 0218 09CA9E99 	 .word -1717646839
 422 021c 50BFE1A8 	 .word -1461600432
 423 0220 47256468 	 .word 1751393607
 424 0224 7E4F8B0B 	 .word 193679230
 425 0228 481873B0 	 .word -1334634424
 426 022c A387D74E 	 .word 1322747811
 427 0230 2E21AFA9 	 .word -1448140498
 428 0234 3858108D 	 .word -1928308680
 429 0238 A3C0A1D4 	 .word -727596893
 430 023c 66DE03DD 	 .word -586949018
 431 0240 E7CC7556 	 .word 1450560743
 432 0244 A5990A2B 	 .word 722114981
 433 0248 71302A4C 	 .word 1277833329
 434 024c F3D43506 	 .word 104191219
 435 0250 68A4EBD5 	 .word -705977240
 436 0254 E7CCB277 	 .word 2008206567
 437 0258 2F72B2B9 	 .word -1179487697
 438 025c FAFC5704 	 .word 72875258
 439 0260 41D663C9 	 .word -916203967
 440 0264 CAAF0124 	 .word 604090314
 441 0268 5EB1295F 	 .word 1596567902
 442 026c D1976A61 	 .word 1634375633
 443 0270 A45F4182 	 .word -2109644892
 444 0274 A8E4C0E7 	 .word -406788952
 445 0278 E238712D 	 .word 762394850
 446 027c 20F1DFA4 	 .word -1528827616
 447 0280 23A40113 	 .word 318874659
 448 0284 B0A9B3EA 	 .word -357324368
 449 0288 FCCE2D43 	 .word 1127075580
 450 028c 8B70BDDA 	 .word -625119093
 451 0290 29D12B83 	 .word -2094280407
 452 0294 A15CFAD7 	 .word -671458143
 453 0298 6CF77C60 	 .word 1618802540
 454 029c 1DA29E8D 	 .word -1918983651
 455 02a0 9B32BE2D 	 .word 767439515
 456 02a4 B1E06F7D 	 .word 2104484017
 457 02a8 5012F2CF 	 .word -806219184
 458 02ac 839A44EE 	 .word -297493885
 459 02b0 664CB870 	 .word 1891126374
 460 02b4 25278899 	 .word -1719130331
 461 02b8 0AF58724 	 .word 612889866
 462 02bc 020BDD11 	 .word 299698946
 463 02c0 B457C466 	 .word 1724143540
 464 02c4 7D2210A3 	 .word -1559223683
 465 02c8 6F42EFF0 	 .word -252755345
 466 02cc 161C7A55 	 .word 1434065942
 467 02d0 4DE3422B 	 .word 725803853
 468 02d4 CBF3ADB2 	 .word -1297222709
 469 02d8 00094311 	 .word 289605888
 470 02dc 11BC68A7 	 .word -1486308335
 471 02e0 874836FB 	 .word -80328569
 472 02e4 3C6F0B15 	 .word 353070908
 473 02e8 DDCE603D 	 .word 1029754589
 474 02ec 84E7547C 	 .word 2085939076
 475 02f0 AC29ACB1 	 .word -1314117204
 476 02f4 6BA20BC9 	 .word -921984405
 477 02f8 5C77D7DC 	 .word -589858980
 478 02fc F87F9EFD 	 .word -39944200
 479 0300 D197CDD9 	 .word -640837679
 480 0304 21F95848 	 .word 1213790497
 481 0308 90DAFE08 	 .word 150919824
 482 030c 9EDE7F2F 	 .word 796909214
 483 0310 C9235303 	 .word 55780297
 484 0314 35923E83 	 .word -2093051339
 485 0318 8537187E 	 .word 2115516293
 486 031c 177DE28D 	 .word -1914536681
 487 0320 61C3E635 	 .word 904315745
 488 0324 A83BD0EA 	 .word -355451992
 489 0328 B3D12732 	 .word 841470387
 490 032c DFBEA013 	 .word 329301727
 491 0330 DD1E7CF7 	 .word -142860579
 492 0334 F3C1BD61 	 .word 1639825907
 493 0338 3BB37052 	 .word 1383117627
 494 033c AEC886CD 	 .word -846804818
 495 0340 509DEDF4 	 .word -185754288
 496 0344 7D765A36 	 .word 911898237
 497 0348 BA8C040B 	 .word 184847546
 498 034c CFE37185 	 .word -2056133681
 499 0350 761D7CBE 	 .word -1099162250
 500 0354 8F747D67 	 .word 1736275087
 501 0358 C464C690 	 .word -1866046268
 502 035c C6892B4A 	 .word 1244367302
 503 0360 31837490 	 .word -1871412431
 504 0364 89E56A7D 	 .word 2104157577
 505 0368 D14687FD 	 .word -41466159
 506 036c DA414B50 	 .word 1347109338
 507 0370 D2B9984A 	 .word 1251523026
 508 0374 193E07D7 	 .word -687391207
 509 0378 4950AEF8 	 .word -122793911
 510 037c 5050F2BD 	 .word -1108193200
 511 0380 35500B66 	 .word 1712017461
 512 0384 7241FA0F 	 .word 268058994
 513 0388 3D27CF49 	 .word 1238312765
 514 038c 34F2753C 	 .word 1014362676
 515 0390 A7C29F19 	 .word 429900455
 516 0394 A9734A11 	 .word 290091945
 517 0398 BE886A44 	 .word 1147832510
 518 039c 317939CD 	 .word -851871439
 519 03a0 2BC39A4C 	 .word 1285210923
 520 03a4 EBD8D71F 	 .word 534239467
 521 03a8 A12B6739 	 .word 963062689
 522 03ac 93ED52E3 	 .word -481104493
 523 03b0 9F02CABA 	 .word -1161166177
 524 03b4 AE5B8BD8 	 .word -661955666
 525 03b8 B5ECA1E8 	 .word -392041291
 526 03bc 83F72DBF 	 .word -1087506557
 527 03c0 FC7DC7DD 	 .word -574128644
 528 03c4 A152A15E 	 .word 1587630753
 529 03c8 1CC18BE0 	 .word -527711972
 530 03cc C6CD3E92 	 .word -1841377850
 531 03d0 EFE9A775 	 .word 1973938671
 532 03d4 9772ABAB 	 .word -1414827369
 533 03d8 51C9DB7E 	 .word 2128333137
 534 03dc 2A6FCE38 	 .word 953052970
 535 03e0 A892836E 	 .word 1854116520
 536 03e4 B66D5788 	 .word -2007536202
 537 03e8 0ED42441 	 .word 1092932622
 538 03ec 61D18AD5 	 .word -712322719
 539 03f0 29DC67D6 	 .word -697836503
 540 03f4 0B31BBC3 	 .word -1011142389
 541 03f8 73ED6DB4 	 .word -1267864205
 542 03fc 2D62FBFF 	 .word -302547
 543              	 .section .bss.transfer_done,"aw",%nobits
 544              	 .set .LANCHOR0,.+0
 547              	transfer_done:
 548 0000 00       	 .space 1
 549              	 .section .rodata.dma_ch_config,"a",%progbits
 550              	 .align 2
 551              	 .set .LANCHOR1,.+0
 554              	dma_ch_config:
 555 0000 25       	 .byte 37
 556 0001 91       	 .byte 145
 557 0002 00       	 .byte 0
 558 0003 00       	 .space 1
 559 0004 00000000 	 .word data
 560 0008 20000250 	 .word 1342308384
 561 000c 00000000 	 .space 12
 561      00000000 
 561      00000000 
 562 0018 0001     	 .short 256
 563 001a 00       	 .byte 0
 564 001b 00       	 .byte 0
 565 001c 0008     	 .short 2048
 566 001e 0000     	 .space 2
 567 0020 0004     	 .short 1024
 568 0022 0000     	 .space 2
 569              	 .section .rodata.crc_engine,"a",%progbits
 570              	 .align 2
 571              	 .set .LANCHOR2,.+0
 574              	crc_engine:
 575 0000 20000250 	 .word 1342308384
 576 0004 00       	 .space 1
 577 0005 07       	 .byte 7
 578 0006 0000     	 .space 2
 579 0008 FFFFFFFF 	 .word -1
 580              	 .text
 581              	.Letext0:
 582              	 .file 6 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 583              	 .file 7 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 584              	 .file 8 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 585              	 .file 9 "C:/Files/Projects/Git/XMCLib/inc/xmc4_gpio.h"
 586              	 .file 10 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.GPDMA0_0_IRQHandler:00000000 $t
    {standard input}:25     .text.GPDMA0_0_IRQHandler:00000000 GPDMA0_0_IRQHandler
    {standard input}:51     .text.GPDMA0_0_IRQHandler:00000014 $d
    {standard input}:57     .text.main:00000000 $t
    {standard input}:62     .text.main:00000000 main
    {standard input}:264    .text.main:000000c0 $d
    {standard input}:547    .bss.transfer_done:00000000 transfer_done
    {standard input}:554    .rodata.dma_ch_config:00000000 dma_ch_config
    {standard input}:574    .rodata.crc_engine:00000000 crc_engine
    {standard input}:286    .rodata.data:00000000 data
    {standard input}:283    .rodata.data:00000000 $d
    {standard input}:548    .bss.transfer_done:00000000 $d
    {standard input}:550    .rodata.dma_ch_config:00000000 $d
    {standard input}:570    .rodata.crc_engine:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_DMA_CH_ClearEventStatus
XMC_GPIO_SetMode
XMC_DMA_Init
XMC_DMA_CH_Init
XMC_DMA_CH_EnableEvent
XMC_FCE_Init
