   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usbh.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_lStartTransfer,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_lStartTransfer:
  25              	.LFB187:
  26              	 .file 1 "C:/Files/Projects/Git/XMCLib/src/xmc_usbh.c"
   1:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
   2:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @file xmc_usbh.c
   3:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @date 2019-05-07
   4:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
   5:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  **********************************************************************************
   7:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library
   8:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
   9:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * 
  18:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * 
  21:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * (To improve the quality of the software, users are encouraged to share modifications, enhancemen
  33:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
  35:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  **************************************************************************************************
  36:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
  37:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Change History
  38:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * --------------
  39:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
  40:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * 2016-06-30:
  41:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *     - Initial <br>
  42:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * 2016-09-01:
  43:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *     - Removed Keil specific exclusion<br>
  44:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * 2018-06-21:
  45:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *     - Fixed compilation issues for XMC42
  46:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * 2019-05-07:
  47:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *     - Fixed compilation warnings     
  48:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @endcond 
  49:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
  50:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  */
  51:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
  52:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #include "xmc_usbh.h"
  53:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
  54:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #if ((UC_SERIES == XMC45) || (UC_SERIES == XMC44) || (UC_SERIES == XMC43) || (UC_SERIES == XMC47) |
  55:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
  56:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*Function provides transfer result*/
  57:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static uint32_t XMC_USBH_PipeTransferGetResult (XMC_USBH_PIPE_HANDLE pipe_hndl);
  58:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*Updates the power state of the driver*/
  59:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_PowerControl (XMC_USBH_POWER_STATE_t state);
  60:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
  61:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*********************************************************** USBH Driver **************************
  62:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
  63:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*Macro to represent USB host driver version*/
  64:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #define XMC_USBH_DRV_VERSION ((uint16_t)((uint16_t)XMC_LIB_MINOR_VERSION << 8U)|XMC_LIB_PATCH_VERSI
  65:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*Macro used to gate PHY clock and AHB clock*/
  66:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #define XMC_USBH_PHY_CLK_STOP  (0x03U)
  67:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*Macro used to ungate PHY clock and AHB clock*/
  68:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #define XMC_USBH_PHY_CLK_UNGATE  (0x100U)
  69:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
  70:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /* Driver Version */
  71:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static const XMC_USBH_DRIVER_VERSION_t xmc_usbh_driver_version = { XMC_USBH_API_VERSION, XMC_USBH_D
  72:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
  73:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*Variables to hold selected VBUS port pin*/
  74:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** XMC_GPIO_PORT_t * VBUS_port = XMC_GPIO_PORT3;
  75:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** uint32_t VBUS_pin = 2U;
  76:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
  77:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*Array to track nack events on each pipe*/
  78:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** bool is_nack[USBH0_MAX_PIPE_NUM];
  79:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
  80:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /* Driver Capabilities */
  81:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static const XMC_USBH_CAPABILITIES_t xmc_usbh_driver_capabilities = {
  82:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   0x0001U,      /* Root HUB available Ports Mask */
  83:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   0U,           /* Automatic SPLIT packet handling */
  84:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   1U,           /* Signal Connect event */
  85:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   1U,           /* Signal Disconnect event */
  86:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   0U            /* Signal Overcurrent event */
  87:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** };
  88:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /* Driver state and registers */
  89:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static XMC_USBH0_DEVICE_t XMC_USBH0_device/* __attribute__((section ("RW_IRAM1")))*/ = {
  90:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    (USB0_GLOBAL_TypeDef *)(USB0_BASE),    /** Global register interface            */
  91:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    ((USB0_CH_TypeDef *)(USB0_CH0_BASE)),  /** Host channel interface               */
  92:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    0,                                     /** Port event callback; set during init */
  93:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    0,                                     /** Pipe event callback; set during init */
  94:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    false,                                 /** init status */
  95:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    XMC_USBH_POWER_OFF,                    /** USB Power status */
  96:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    false                                  /** Port reset state */
  97:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** };
  98:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
  99:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*USB host pipe information. The array stores information related to packet id, data toggle,
 100:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * pending data transfer information, periodic transfer interval, received data size etc for each
 101:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * pipe.*/
 102:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** volatile XMC_USBH0_pipe_t pipe[USBH0_MAX_PIPE_NUM];
 103:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 104:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /* FIFO sizes in bytes (total available memory for FIFOs is 1.25 kB) */
 105:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #define RX_FIFO_SIZE           (1128U)   /* RxFIFO size */
 106:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #define TX_FIFO_SIZE_NON_PERI  (64U)     /* Non-periodic Tx FIFO size */
 107:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #define TX_FIFO_SIZE_PERI      (1024U)   /* Periodic Tx FIFO size */
 108:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 109:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*Stores data FIFO pointer for each pipe*/
 110:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static uint32_t *XMC_USBH0_dfifo_ptr[USBH0_MAX_PIPE_NUM];
 111:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 112:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /* Local functions */
 113:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 114:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param   enable Enable (XMC_USBH_CLOCK_GATING_ENABLE) or disable(XMC_USBH_CLOCK_GATING_DISABLE) 
 115:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return  None
 116:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 117:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Enable/disable clock gating depending if feature is supported.
 118:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 119:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** __INLINE static void XMC_lClockGating(uint8_t enable)
 120:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** {
 121:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #if defined(CLOCK_GATING_SUPPORTED)
 122:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    if (enable == XMC_USBH_CLOCK_GATING_ENABLE)
 123:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    {
 124:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****      XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 125:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    }
 126:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    if (enable == XMC_USBH_CLOCK_GATING_DISABLE)
 127:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    {
 128:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****      XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 129:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    }
 130:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #else
 131:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    XMC_UNUSED_ARG(enable);
 132:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #endif
 133:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 134:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return;
 135:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 136:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 137:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 138:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param   ptr_ch Pointer to Channel
 139:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return  None
 140:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 141:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Triggers halt of a channel.
 142:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 143:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** __INLINE static void XMC_lTriggerHaltChannel(USB0_CH_TypeDef *ptr_ch)
 144:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** {
 145:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   ptr_ch->HCINTMSK = USB_CH_HCINT_ChHltd_Msk; /* Enable halt interrupt */
 146:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 147:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return;
 148:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 149:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 150:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 151:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param   ptr_pipe Pointer to Pipe
 152:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param   ptr_ch   Pointer to Channel
 153:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return  bool \n
 154:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *          true = success,\n
 155:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *          false = fail
 156:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 157:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Start transfer on Pipe. The function uses transfer complete interrupts to transfer data more tha
 158:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * packet size. It takes care of updating data toggle information in subsequent packets related to 
 159:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 160:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static bool XMC_lStartTransfer (XMC_USBH0_pipe_t *ptr_pipe, USB0_CH_TypeDef *ptr_ch) {
  27              	 .loc 1 160 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	.LVL0:
  32 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 24
  35              	 .cfi_offset 4,-24
  36              	 .cfi_offset 5,-20
  37              	 .cfi_offset 6,-16
  38              	 .cfi_offset 7,-12
  39              	 .cfi_offset 8,-8
  40              	 .cfi_offset 14,-4
  41              	.LVL1:
 161:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t  hcchar;
 162:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t  hctsiz;
 163:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t  hcintmsk;
 164:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t  num_remaining_transfer;
 165:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t  num_remaining_fifo;
 166:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t  num_remaining_queue;
 167:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t  txsts = 0U;
 168:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t  pckt_num;
 169:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t  max_pckt_size;
 170:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint8_t   *ptr_src = ptr_pipe->data;
  42              	 .loc 1 170 0
  43 0004 4368     	 ldr r3,[r0,#4]
  44              	.LVL2:
 171:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t  *ptr_dest = NULL;
 172:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint16_t  cnt;
 173:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t loc_index;
 174:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   bool status;
 175:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 176:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (!(XMC_USBH0_device.global_register->HPRT & USB_HPRT_PrtConnSts_Msk))
  45              	 .loc 1 176 0
  46 0006 5A4A     	 ldr r2,.L30
  47 0008 1668     	 ldr r6,[r2]
  48 000a D6F84024 	 ldr r2,[r6,#1088]
  49 000e 12F0010F 	 tst r2,#1
  50 0012 00F0A280 	 beq .L24
 177:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 178:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = false;
 179:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 180:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
 181:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 182:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Save channel characteristic register to local variable */
 183:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hcchar   = ptr_ch->HCCHAR;
  51              	 .loc 1 183 0
  52 0016 0A68     	 ldr r2,[r1]
  53              	.LVL3:
 184:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Save transfer size register to local variable */
 185:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hctsiz   = ptr_ch->HCTSIZ_BUFFERMODE;
  54              	 .loc 1 185 0
  55 0018 0D69     	 ldr r5,[r1,#16]
  56              	.LVL4:
 186:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hcintmsk = 0U;
 187:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     cnt      = 0U;
 188:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 189:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Prepare transfer */
 190:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Reset EPDir (transfer direction = output) and enable channel */
 191:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hcchar &= (uint32_t)(~(uint32_t)(USB_CH_HCCHAR_EPDir_Msk | USB_CH_HCCHAR_ChDis_Msk));
  57              	 .loc 1 191 0
  58 001a 22F08042 	 bic r2,r2,#1073741824
  59              	.LVL5:
  60 001e 22F40042 	 bic r2,r2,#32768
  61              	.LVL6:
 192:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hcchar |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;
  62              	 .loc 1 192 0
  63 0022 42F00047 	 orr r7,r2,#-2147483648
  64              	.LVL7:
 193:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 194:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Enable default interrupts needed for all transfers */
 195:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hcintmsk  = (USB_CH_HCINTMSK_XactErrMsk_Msk  |
 196:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                  USB_CH_HCINTMSK_XferComplMsk_Msk |
 197:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                  USB_CH_HCINTMSK_NakMsk_Msk    |
 198:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                  USB_CH_HCINTMSK_StallMsk_Msk)  ;
 199:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Keep PID */
 200:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hctsiz &=  (uint32_t)USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk;
  65              	 .loc 1 200 0
  66 0026 05F0C045 	 and r5,r5,#1610612736
  67              	.LVL8:
 201:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 202:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Packet specific setup */
 203:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     switch (ptr_pipe->packet & XMC_USBH_PACKET_TOKEN_Msk) {
  68              	 .loc 1 203 0
  69 002a 0468     	 ldr r4,[r0]
  70 002c 04F00F0E 	 and lr,r4,#15
  71 0030 BEF1010F 	 cmp lr,#1
  72 0034 03D0     	 beq .L4
  73 0036 BEF1030F 	 cmp lr,#3
  74 003a 05D0     	 beq .L5
  75 003c 09E0     	 b .L27
  76              	.L4:
 195:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                  USB_CH_HCINTMSK_XferComplMsk_Msk |
  77              	 .loc 1 195 0
  78 003e 4FF0990E 	 mov lr,#153
  79              	.LVL9:
 204:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       case XMC_USBH_PACKET_IN:
 205:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /* set transfer direction to input */
 206:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         hcchar   |=  (uint32_t)USB_CH_HCCHAR_EPDir_Msk;
 207:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /* Enable IN transfer specific interrupts */
 208:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         hcintmsk  |= (uint32_t)( USB_CH_HCINTMSK_DataTglErrMsk_Msk  |
 209:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        USB_CH_HCINTMSK_BblErrMsk_Msk |
 210:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        USB_CH_HCINTMSK_AckMsk_Msk    |
 211:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        USB_CH_HCINTMSK_NakMsk_Msk )  ;
 212:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 213:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       case XMC_USBH_PACKET_OUT:
 214:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 215:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       case XMC_USBH_PACKET_SETUP:
 216:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         hctsiz   &= (uint32_t)~USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk  ;
 217:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_MDATA;
  80              	 .loc 1 217 0
  81 0042 4FF0C045 	 mov r5,#1610612736
  82 0046 06E0     	 b .L3
  83              	.LVL10:
  84              	.L5:
 206:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /* Enable IN transfer specific interrupts */
  85              	 .loc 1 206 0
  86 0048 42F08027 	 orr r7,r2,#-2147450880
  87              	.LVL11:
 208:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        USB_CH_HCINTMSK_BblErrMsk_Msk |
  88              	 .loc 1 208 0
  89 004c 40F2B95E 	 movw lr,#1465
 212:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       case XMC_USBH_PACKET_OUT:
  90              	 .loc 1 212 0
  91 0050 01E0     	 b .L3
  92              	.LVL12:
  93              	.L27:
 195:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                  USB_CH_HCINTMSK_XferComplMsk_Msk |
  94              	 .loc 1 195 0
  95 0052 4FF0990E 	 mov lr,#153
  96              	.LVL13:
  97              	.L3:
 218:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 219:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       default:
 220:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 221:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 222:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Prepare PID */
 223:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     switch (ptr_pipe->packet & XMC_USBH_PACKET_DATA_Msk) {
  98              	 .loc 1 223 0
  99 0056 04F0F004 	 and r4,r4,#240
 100 005a 102C     	 cmp r4,#16
 101 005c 04D0     	 beq .L7
 224:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       case XMC_USBH_PACKET_DATA0:
 225:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         hctsiz   &= (uint32_t)~USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk;
 226:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_DATA0;
 227:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 228:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       case XMC_USBH_PACKET_DATA1:
 229:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         hctsiz   &= (uint32_t)~USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk;
 230:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_DATA1;
 102              	 .loc 1 230 0
 103 005e 202C     	 cmp r4,#32
 104 0060 08BF     	 it eq
 105 0062 4FF08045 	 moveq r5,#1073741824
 106 0066 00E0     	 b .L6
 107              	.L7:
 108              	.LVL14:
 226:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 109              	 .loc 1 226 0
 110 0068 0025     	 movs r5,#0
 111              	.LVL15:
 112              	.L6:
 231:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 232:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       default:
 233:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 234:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 235:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 236:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Prepare odd/even frame */
 237:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if ((XMC_USBH0_device.global_register->HFNUM & 1U) != 0U) {
 113              	 .loc 1 237 0
 114 006a D6F80824 	 ldr r2,[r6,#1032]
 115 006e 12F0010F 	 tst r2,#1
 238:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hcchar &= (uint32_t)~USB_CH_HCCHAR_OddFrm_Msk;
 116              	 .loc 1 238 0
 117 0072 14BF     	 ite ne
 118 0074 27F00057 	 bicne r7,r7,#536870912
 119              	.LVL16:
 239:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     } else {
 240:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hcchar |= (uint32_t)USB_CH_HCCHAR_OddFrm_Msk;
 120              	 .loc 1 240 0
 121 0078 47F00057 	 orreq r7,r7,#536870912
 122              	.LVL17:
 241:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 242:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
 243:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Get transfer type specific status */
 244:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     switch (ptr_pipe->ep_type) {
 123              	 .loc 1 244 0
 124 007c 827E     	 ldrb r2,[r0,#26]
 125 007e 032A     	 cmp r2,#3
 126 0080 0ED8     	 bhi .L11
 127 0082 DFE802F0 	 tbb [pc,r2]
 128              	.L13:
 129 0086 02       	 .byte (.L12-.L13)/2
 130 0087 07       	 .byte (.L14-.L13)/2
 131 0088 02       	 .byte (.L12-.L13)/2
 132 0089 07       	 .byte (.L14-.L13)/2
 133              	 .p2align 1
 134              	.L12:
 245:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       case XMC_USBH_ENDPOINT_CONTROL:
 246:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       case XMC_USBH_ENDPOINT_BULK:
 247:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if (!(hcchar & USB_CH_HCCHAR_EPDir_Msk)) {
 135              	 .loc 1 247 0
 136 008a 17F4004F 	 tst r7,#32768
 137 008e 6BD1     	 bne .L15
 248:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           txsts = XMC_USBH0_device.global_register->GNPTXSTS;
 138              	 .loc 1 248 0
 139 0090 F26A     	 ldr r2,[r6,#44]
 140              	.LVL18:
 141 0092 65E0     	 b .L16
 142              	.LVL19:
 143              	.L14:
 249:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
 250:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 251:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       case XMC_USBH_ENDPOINT_ISOCHRONOUS:
 252:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       case XMC_USBH_ENDPOINT_INTERRUPT:
 253:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if (!(hcchar & USB_CH_HCCHAR_EPDir_Msk)) {
 144              	 .loc 1 253 0
 145 0094 17F4004F 	 tst r7,#32768
 146 0098 66D1     	 bne .L15
 254:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           txsts = XMC_USBH0_device.global_register->HPTXSTS;
 147              	 .loc 1 254 0
 148 009a D6F81024 	 ldr r2,[r6,#1040]
 149              	.LVL20:
 150 009e 5FE0     	 b .L16
 151              	.LVL21:
 152              	.L11:
 255:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
 256:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 257:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       default:
 258:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 259:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 260:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
 261:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Calculate remaining transfer size */
 262:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     num_remaining_transfer = ptr_pipe->num - ptr_pipe->num_transferred_total;
 153              	 .loc 1 262 0
 154 00a0 C468     	 ldr r4,[r0,#12]
 155 00a2 8668     	 ldr r6,[r0,#8]
 156 00a4 361B     	 subs r6,r6,r4
 157              	.LVL22:
 263:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Limit transfer to available space inside fifo/queue if OUT transaction */
 264:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if ((uint32_t)(hcchar & USB_CH_HCCHAR_EPDir_Msk) == 0U) {
 158              	 .loc 1 264 0
 159 00a6 17F4004F 	 tst r7,#32768
 160 00aa 26D1     	 bne .L17
 167:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t  pckt_num;
 161              	 .loc 1 167 0
 162 00ac 0022     	 movs r2,#0
 163              	.LVL23:
 164              	.L23:
 265:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       max_pckt_size =  ptr_pipe->ep_max_packet_size;
 165              	 .loc 1 265 0
 166 00ae B0F814C0 	 ldrh ip,[r0,#20]
 167              	.LVL24:
 266:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       num_remaining_fifo = (uint32_t)((uint32_t)(txsts & 0x0000FFFFU) <<  2);
 168              	 .loc 1 266 0
 169 00b2 1FFA82F8 	 uxth r8,r2
 170 00b6 4FEA8808 	 lsl r8,r8,#2
 171              	.LVL25:
 267:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       num_remaining_queue  = (uint32_t)((uint32_t)(txsts & 0x00FF0000U) >> 16);
 172              	 .loc 1 267 0
 173 00ba C2F30742 	 ubfx r2,r2,#16,#8
 174              	.LVL26:
 175 00be 4645     	 cmp r6,r8
 176 00c0 28BF     	 it cs
 177 00c2 4646     	 movcs r6,r8
 178              	.LVL27:
 179 00c4 0CF1FF38 	 add r8,ip,#-1
 180              	.LVL28:
 268:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (num_remaining_transfer > num_remaining_fifo) {
 269:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         num_remaining_transfer = num_remaining_fifo;
 270:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 271:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       pckt_num = (uint32_t)((num_remaining_transfer + (max_pckt_size - 1U)) / max_pckt_size);
 181              	 .loc 1 271 0
 182 00c8 B044     	 add r8,r8,r6
 183 00ca B8FBFCF8 	 udiv r8,r8,ip
 184              	.LVL29:
 185 00ce 4245     	 cmp r2,r8
 186 00d0 28BF     	 it cs
 187 00d2 4246     	 movcs r2,r8
 188              	.LVL30:
 272:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (pckt_num > num_remaining_queue) {
 273:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         pckt_num = num_remaining_queue;
 274:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 275:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (num_remaining_transfer > (pckt_num * max_pckt_size)) {
 189              	 .loc 1 275 0
 190 00d4 0CFB02F2 	 mul r2,ip,r2
 191 00d8 9642     	 cmp r6,r2
 192 00da 28BF     	 it cs
 193 00dc 1646     	 movcs r6,r2
 194              	.LVL31:
 276:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         num_remaining_transfer = pckt_num * max_pckt_size;
 277:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 278:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       cnt = (uint16_t)((num_remaining_transfer + 3U) / 4U);
 195              	 .loc 1 278 0
 196 00de F21C     	 adds r2,r6,#3
 197 00e0 C2F38F02 	 ubfx r2,r2,#2,#16
 198              	.LVL32:
 279:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_src  = ptr_pipe->data + ptr_pipe->num_transferred_total;
 199              	 .loc 1 279 0
 200 00e4 2344     	 add r3,r3,r4
 201              	.LVL33:
 280:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       loc_index = ((USB0_CH_TypeDef *)ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_re
 202              	 .loc 1 280 0
 203 00e6 224C     	 ldr r4,.L30
 204 00e8 6468     	 ldr r4,[r4,#4]
 205 00ea 0C1B     	 subs r4,r1,r4
 206 00ec 6411     	 asrs r4,r4,#5
 281:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_dest = (uint32_t *)XMC_USBH0_dfifo_ptr[loc_index];
 207              	 .loc 1 281 0
 208 00ee DFF888C0 	 ldr ip,.L30+8
 209              	.LVL34:
 210 00f2 5CF82440 	 ldr r4,[ip,r4,lsl#2]
 211              	.LVL35:
 282:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* For OUT/SETUP transfer num_transferring represents num of bytes to be sent */
 283:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_pipe->num_transferring = num_remaining_transfer;
 212              	 .loc 1 283 0
 213 00f6 0661     	 str r6,[r0,#16]
 214 00f8 02E0     	 b .L18
 215              	.LVL36:
 216              	.L17:
 284:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 285:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     else {
 286:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* For IN transfer num_transferring is zero */
 287:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_pipe->num_transferring = 0U;
 217              	 .loc 1 287 0
 218 00fa 0024     	 movs r4,#0
 219 00fc 0461     	 str r4,[r0,#16]
 187:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 220              	 .loc 1 187 0
 221 00fe 2246     	 mov r2,r4
 222              	.LVL37:
 223              	.L18:
 288:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 289:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Set packet count and transfer size */
 290:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if (num_remaining_transfer != 0U) {
 224              	 .loc 1 290 0
 225 0100 56B1     	 cbz r6,.L19
 291:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hctsiz |= (((num_remaining_transfer + ptr_pipe->ep_max_packet_size) - 1U) / ptr_pipe->ep_max_
 226              	 .loc 1 291 0
 227 0102 B0F814C0 	 ldrh ip,[r0,#20]
 228 0106 3543     	 orrs r5,r5,r6
 229 0108 0CF1FF30 	 add r0,ip,#-1
 230              	.LVL38:
 231 010c 0644     	 add r6,r6,r0
 232              	.LVL39:
 233 010e B6FBFCF6 	 udiv r6,r6,ip
 292:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hctsiz |=   num_remaining_transfer;
 234              	 .loc 1 292 0
 235 0112 45EAC645 	 orr r5,r5,r6,lsl#19
 236              	.LVL40:
 237 0116 01E0     	 b .L20
 238              	.LVL41:
 239              	.L19:
 293:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     } else {                                                 /* Zero length packet */
 294:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hctsiz |= ((uint32_t)1U << USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Pos); /* Packet count = 1 */
 240              	 .loc 1 294 0
 241 0118 45F40025 	 orr r5,r5,#524288
 242              	.LVL42:
 243              	.L20:
 244              	.LBB42:
 245              	.LBB43:
 246              	 .file 2 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
   1:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * @version  V5.1.0
   5:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * @date     13. March 2019
   6:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*
   8:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *
  10:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *
  12:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * not use this file except in compliance with the License.
  14:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * You may obtain a copy of the License at
  15:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *
  16:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *
  18:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * See the License for the specific language governing permissions and
  22:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  * limitations under the License.
  23:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
  24:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  25:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  26:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined (__clang__)
  28:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
  30:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  31:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  34:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  35:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  36:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  37:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  extern "C" {
  38:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
  39:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  40:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
  41:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  44:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  47:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  49:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  50:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
  53:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  54:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  55:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  56:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  57:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  58:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
  59:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup Cortex_M4
  60:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
  61:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
  62:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  63:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #include "cmsis_version.h"
  64:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  65:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* CMSIS CM4 definitions */
  66:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  71:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  73:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** */
  76:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
  77:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  80:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
  81:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  83:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
  84:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
  85:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  86:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
  87:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
  88:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if defined __ARM_FP
  90:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  92:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
  93:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  95:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
  96:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
  97:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  98:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
  99:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 100:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 101:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 104:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
 105:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 107:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
 108:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
 109:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 110:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 111:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 112:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 113:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 114:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 116:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
 117:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 119:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
 120:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
 121:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 122:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 123:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 124:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 128:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
 129:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 131:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
 132:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
 133:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 134:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 135:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 136:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 137:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 138:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 140:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
 141:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 143:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
 144:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
 145:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 146:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 147:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 148:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 149:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 152:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #else
 153:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 155:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #endif
 156:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #else
 157:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 158:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 159:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 160:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
 161:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 162:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 164:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 165:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 166:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
 167:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
 168:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 169:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 171:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 173:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 176:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 177:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  extern "C" {
 178:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
 179:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 180:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 181:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 183:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 184:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 186:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 187:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 188:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 189:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 191:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 192:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 193:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 194:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 196:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 197:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 201:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 202:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
 206:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
 207:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 208:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 210:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 212:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 214:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** */
 216:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 217:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #else
 219:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
 221:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 224:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 225:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 229:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 230:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 231:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 232:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 233:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 234:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 235:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   Core Register contain:
 236:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core Register
 237:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 238:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 239:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 240:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 241:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 242:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 243:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 244:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 245:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** */
 248:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 249:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 250:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 251:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief      Core Register type definitions.
 253:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 254:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 255:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 256:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 257:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 259:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef union
 260:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 261:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   struct
 262:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
 263:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } APSR_Type;
 274:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 275:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 276:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 279:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 282:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 285:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 288:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 291:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 294:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 295:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 296:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 298:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef union
 299:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 300:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   struct
 301:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
 302:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 307:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 308:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 309:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 312:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 313:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 314:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 316:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef union
 317:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 318:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   struct
 319:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
 320:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 335:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 336:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 337:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 340:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 343:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 346:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 349:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 352:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 355:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 358:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 361:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 364:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 367:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 368:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 369:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 371:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef union
 372:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 373:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   struct
 374:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
 375:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 382:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 383:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 384:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 387:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 390:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 393:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 395:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 396:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 397:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 398:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 401:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 402:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 403:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 404:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 406:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
 407:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 408:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 410:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[24U];
 412:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 414:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 416:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 418:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 420:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 422:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 423:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 427:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 429:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 430:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 431:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 432:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 435:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 436:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 437:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 438:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 440:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
 441:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 442:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 462:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } SCB_Type;
 464:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 465:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 466:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 469:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 472:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 475:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 478:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 481:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 485:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 488:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 491:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 494:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 497:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 500:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 503:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 506:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 509:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 512:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 516:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 520:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 523:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 526:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 529:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 532:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 535:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 538:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 539:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 542:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 545:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 548:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 552:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 555:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 558:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 561:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 564:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 567:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 571:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 574:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 577:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 580:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 583:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 586:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 589:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 592:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 595:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 598:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 601:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 604:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 607:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 610:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 614:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 617:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 620:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 624:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 627:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 630:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 633:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 636:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 639:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 643:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 646:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 649:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 652:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 655:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 658:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 661:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 665:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 668:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 671:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 674:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 677:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 680:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 684:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 687:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 690:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 694:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 697:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 700:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 703:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 706:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 708:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 709:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 710:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 711:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 714:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 715:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 716:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 717:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 719:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
 720:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 721:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 722:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 725:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 726:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 730:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 734:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 737:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 740:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 743:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 746:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 748:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 749:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 750:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 751:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 754:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 755:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 756:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 757:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 759:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
 760:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 761:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 766:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 767:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 771:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 774:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 777:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 780:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 781:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 784:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 785:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 788:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 792:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 795:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 798:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 800:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 801:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 802:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 803:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 806:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 807:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 808:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 809:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 811:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
 812:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 813:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __OM  union
 814:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
 815:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 820:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 822:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 824:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[32U];
 826:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 827:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 830:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } ITM_Type;
 843:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 844:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 848:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 852:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 855:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 858:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 861:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 864:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 867:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 870:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 873:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 876:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 880:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 883:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 886:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 888:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 889:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 890:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 891:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
 894:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 895:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 896:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
 897:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
 899:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
 900:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
 901:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 913:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 917:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 921:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } DWT_Type;
 925:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 926:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 927:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 930:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 933:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 936:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 939:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 942:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 945:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 948:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 951:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 954:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 957:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 960:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 963:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 966:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 969:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 972:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 975:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 978:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 981:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 985:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 989:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 993:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
 997:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1001:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1005:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1009:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1012:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1015:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1018:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1021:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1024:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1027:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1030:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1033:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1035:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1036:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1037:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1038:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1041:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1042:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1043:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1044:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1046:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
1047:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1048:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1051:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1053:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1055:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1059:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1063:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1067:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1070:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } TPI_Type;
1073:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1074:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1078:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1082:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1086:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1089:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1092:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1095:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1099:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1102:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1106:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1110:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1113:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1116:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1119:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1122:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1125:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1128:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1132:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1135:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1139:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1142:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1145:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1148:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1151:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1154:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1157:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1161:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1164:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1168:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1169:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1172:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1175:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1178:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1181:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1184:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1187:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1191:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1194:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1196:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1197:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1199:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1200:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1203:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1204:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1205:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1206:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1208:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
1209:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1210:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } MPU_Type;
1222:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1223:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1225:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* MPU Type Register Definitions */
1226:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1229:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1232:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1235:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* MPU Control Register Definitions */
1236:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1239:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1242:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1245:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register Definitions */
1246:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1249:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1253:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1256:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1259:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1263:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1266:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1269:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1272:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1275:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1278:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1281:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1284:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1287:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1290:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1293:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1294:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1295:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1296:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1299:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1300:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1301:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1302:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1304:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
1305:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1306:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1307:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } FPU_Type;
1314:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1315:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1319:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1322:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1325:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1328:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1331:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1334:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1337:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1340:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1343:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1347:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1351:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1354:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1357:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1360:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1364:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1367:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1370:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1373:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1376:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1379:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1382:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1385:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1389:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1392:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1395:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1398:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1400:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1403:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1405:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1406:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1407:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1408:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1411:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1412:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1413:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1414:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1416:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** typedef struct
1417:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1418:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1423:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1424:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1428:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1431:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1434:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1437:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1440:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1443:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1446:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1449:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1452:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1455:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1458:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1461:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1465:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1468:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1472:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1475:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1478:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1481:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1484:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1487:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1490:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1493:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1496:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1499:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1502:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1505:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1508:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1510:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1511:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1512:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1513:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1516:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1517:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1518:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1519:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted value.
1523:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** */
1524:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1526:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1527:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted bit field value.
1531:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** */
1532:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1534:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1536:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1537:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1538:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1539:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1542:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1543:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1544:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* Memory mapping of Core Hardware */
1545:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1554:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1563:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif
1567:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1568:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1571:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*@} */
1572:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1573:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1574:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1575:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1576:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1577:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1578:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1579:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1580:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1581:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1582:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1583:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1584:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** */
1586:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1587:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1588:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1589:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1591:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   @{
1595:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1596:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1597:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
1601:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #else
1603:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1617:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #endif
1621:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #else
1623:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1627:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1629:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1630:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1638:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1639:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1640:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Set Priority Grouping
1641:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            Only values from 0..7 are used.
1644:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1645:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1648:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1650:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1651:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1653:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1660:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1661:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1662:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1663:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Get Priority Grouping
1664:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1667:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1668:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1669:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1670:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1671:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1672:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1673:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1674:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Enable Interrupt
1675:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1678:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1679:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1681:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1683:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
1684:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1685:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
1686:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1687:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1688:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1689:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1690:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1691:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Enable status
1692:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt is enabled.
1696:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1697:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1698:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1700:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1702:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1704:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   else
1705:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1706:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return(0U);
1707:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1708:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1709:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1710:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1711:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1712:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Disable Interrupt
1713:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1716:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1717:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1719:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1721:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 247              	 .loc 2 1721 0
 248 011c 4FF40066 	 mov r6,#2048
 249 0120 1448     	 ldr r0,.L30+4
 250 0122 C0F88C60 	 str r6,[r0,#140]
 251              	.LBB44:
 252              	.LBB45:
 253              	 .file 3 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
   1:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.2.0
   5:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * @date     08. May 2019
   6:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /*
   8:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  *
  10:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  *
  12:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  *
  16:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  *
  18:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
  24:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
  25:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
  28:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  38:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
  39:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  43:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                               inline
  45:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  46:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  49:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif                                           
  52:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  55:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  56:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  58:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  61:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  64:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  67:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  70:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  78:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  86:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
  94:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 102:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 110:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 113:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 116:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 119:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 120:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 122:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 124:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 125:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            in the used linker script.
 129:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 130:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 131:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 133:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 135:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   typedef struct {
 136:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     uint32_t const* src;
 137:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     uint32_t* dest;
 138:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     uint32_t  wlen;
 139:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   } __copy_table_t;
 140:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 141:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   typedef struct {
 142:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     uint32_t* dest;
 143:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     uint32_t  wlen;
 144:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   } __zero_table_t;
 145:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 146:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 151:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     }
 155:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   }
 156:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  
 157:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     }
 161:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   }
 162:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  
 163:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   _start();
 164:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 165:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 166:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 168:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 169:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 172:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 173:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 176:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 177:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 180:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 181:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 184:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 185:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   @{
 189:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 190:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 191:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 192:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 196:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 198:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 200:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 201:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 202:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 203:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 207:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 209:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 211:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 212:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 213:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 214:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 215:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 217:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 218:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 220:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 221:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 222:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 224:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 225:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 226:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 227:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 229:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 232:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 233:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 235:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 236:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 237:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 239:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 240:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 241:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 242:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 243:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 244:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 245:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 248:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 250:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 252:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 253:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 254:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 256:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 260:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 262:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 264:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 265:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 266:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 267:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 268:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 269:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 271:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 272:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 274:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 275:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 276:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 278:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 279:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 280:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 281:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 282:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 283:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 285:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 286:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 288:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 289:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 290:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 292:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 293:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 294:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 295:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 296:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 297:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 299:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 300:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 302:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 303:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 304:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 306:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 307:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 308:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 309:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 310:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 313:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 314:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 316:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 317:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 318:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 320:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 321:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 322:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 323:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 325:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 328:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 329:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 331:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 332:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 333:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 335:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 336:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 337:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 338:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 339:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 340:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 344:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 346:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 348:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 349:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 350:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 352:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 356:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 358:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 360:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 361:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 362:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 363:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 364:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 367:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 368:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 370:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 371:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 372:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 374:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 375:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 376:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 377:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 379:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 382:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 383:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 385:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 386:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 387:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 389:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 390:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 391:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 392:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 393:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 394:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 398:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 400:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 402:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 403:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 404:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 406:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 410:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 412:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 414:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 415:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 416:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 417:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 419:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               SP Register value
 422:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 423:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 425:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 426:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 427:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 429:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 430:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 431:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 432:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 433:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 437:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 439:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 441:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 442:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 443:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 444:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 445:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 446:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 448:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 449:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 451:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 452:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 453:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 455:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 456:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 457:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 458:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 460:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 463:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 464:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 466:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 467:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 468:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 470:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 471:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 472:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 473:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 474:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 475:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 476:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 479:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 481:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 483:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 484:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 485:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 487:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 491:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 493:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 495:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 496:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 497:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 498:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 502:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 503:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 506:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 508:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 510:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 511:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 512:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 513:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 514:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 517:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 519:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 521:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 522:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 523:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 524:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 525:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 527:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 528:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 530:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 531:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 532:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 534:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 535:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 536:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 537:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 539:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 542:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 543:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 545:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 546:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 547:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 549:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 550:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 551:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 552:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 553:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 554:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 555:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 558:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 560:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 562:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 563:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 564:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 566:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 570:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 572:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 574:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 575:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 576:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 577:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 578:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 583:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 585:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 587:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 588:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 589:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 590:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 591:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 593:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 594:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 596:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 597:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 598:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 600:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 601:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 602:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 603:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 605:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 608:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 609:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 611:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 612:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 613:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 615:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 616:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 617:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 618:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 619:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 620:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 621:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 624:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 626:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 628:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 629:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 630:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 632:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 636:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 638:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 640:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 641:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 642:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 646:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 647:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 650:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 651:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   mode.
 655:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 656:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 658:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 659:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 661:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 665:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 666:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 667:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return result;
 669:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 670:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 671:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 672:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 674:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 678:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 680:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 681:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 683:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 686:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 687:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 688:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return result;
 690:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 691:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 692:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 693:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 694:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 695:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 696:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   mode.
 700:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   
 701:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 704:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 706:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 711:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 713:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 714:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 715:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 716:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 718:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 722:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 725:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 727:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 731:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 733:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 734:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 735:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 736:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 737:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 738:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   mode.
 742:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 743:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 745:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 746:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 748:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 752:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 753:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 754:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return result;
 756:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 757:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 758:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 759:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 760:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 762:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 766:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 768:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 769:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 771:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 774:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 775:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 776:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return result;
 778:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 779:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 780:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 781:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 782:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 783:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 784:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   mode.
 788:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 789:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 792:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 794:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 799:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 801:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 802:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 803:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 804:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 806:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 810:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 813:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 815:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 819:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 821:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 822:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 823:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 824:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 827:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 828:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 829:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 830:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 833:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 835:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 843:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 844:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 845:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(result);
 847:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 848:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 849:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   return(0U);
 850:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 851:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 852:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 853:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 854:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 855:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 856:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 859:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 861:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 869:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 871:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 872:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 873:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 874:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 875:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 876:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 877:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 879:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 880:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 883:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   @{
 884:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** */
 885:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 886:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #else
 894:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #endif
 898:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 899:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 900:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 901:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 903:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 905:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 906:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 909:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 911:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 912:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 913:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 914:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 917:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 919:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 920:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 921:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 922:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 924:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 926:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 927:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 928:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 932:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 933:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 935:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 937:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 938:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** 
 939:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** /**
 940:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****  */
 944:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** {
 946:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 254              	 .loc 3 946 0
 255              	
 256 0126 BFF34F8F 	 dsb 0xF
 257              	
 258              	 .thumb
 259              	.LBE45:
 260              	.LBE44:
 261              	.LBB46:
 262              	.LBB47:
 935:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 263              	 .loc 3 935 0
 264              	
 265 012a BFF36F8F 	 isb 0xF
 266              	
 267              	 .thumb
 268              	.LBE47:
 269              	.LBE46:
 270              	.LBE43:
 271              	.LBE42:
 295:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hctsiz |= 0U;                                        /* Transfer size = 0 */
 296:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 297:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     NVIC_DisableIRQ (USB0_0_IRQn);
 298:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     ptr_ch->HCINTMSK = hcintmsk;                  /* Enable channel interrupts */
 272              	 .loc 1 298 0
 273 012e C1F80CE0 	 str lr,[r1,#12]
 299:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     ptr_ch->HCTSIZ_BUFFERMODE = hctsiz;           /* Write ch transfer size */
 274              	 .loc 1 299 0
 275 0132 0D61     	 str r5,[r1,#16]
 300:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     ptr_ch->HCCHAR = hcchar;                      /* Write ch characteristics */
 276              	 .loc 1 300 0
 277 0134 0F60     	 str r7,[r1]
 301:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     while (cnt != 0U) {                           /* Load data */
 278              	 .loc 1 301 0
 279 0136 4AB1     	 cbz r2,.L21
 280 0138 511E     	 subs r1,r2,#1
 281              	.LVL43:
 282 013a 89B2     	 uxth r1,r1
 283 013c 0131     	 adds r1,r1,#1
 284 013e 03EB8101 	 add r1,r3,r1,lsl#2
 285              	.LVL44:
 286              	.L22:
 302:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #if defined __TASKING__/*tasking*/
 303:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       *ptr_dest = *((__unaligned uint32_t *)ptr_src);
 304:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #else/* defined (__GNUC__) || defined (__CC_ARM) || defined (__ICCARM__)*/
 305:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       *ptr_dest = *((__packed uint32_t *)ptr_src);
 287              	 .loc 1 305 0
 288 0142 53F8042B 	 ldr r2,[r3],#4
 289              	.LVL45:
 290 0146 2260     	 str r2,[r4]
 291              	.LVL46:
 301:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     while (cnt != 0U) {                           /* Load data */
 292              	 .loc 1 301 0
 293 0148 8B42     	 cmp r3,r1
 294 014a FAD1     	 bne .L22
 295              	.L21:
 296              	.LVL47:
 297              	.LBB48:
 298              	.LBB49:
1683:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 299              	 .loc 2 1683 0
1684:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
 300              	 .loc 2 1684 0
 301 014c 4FF40062 	 mov r2,#2048
 302 0150 084B     	 ldr r3,.L30+4
 303              	.LVL48:
 304 0152 DA60     	 str r2,[r3,#12]
1685:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
 305              	 .loc 2 1685 0
 306              	.LVL49:
 307              	.LBE49:
 308              	.LBE48:
 306:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #endif
 307:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_src  += 4U;
 308:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       cnt--;
 309:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 310:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     NVIC_EnableIRQ  (USB0_0_IRQn);                /* Enable OTG interrupt */
 311:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = true;
 309              	 .loc 1 311 0
 310 0154 0120     	 movs r0,#1
 311 0156 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 312              	.LVL50:
 313              	.L24:
 178:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 314              	 .loc 1 178 0
 315 015a 0020     	 movs r0,#0
 316              	.LVL51:
 317 015c BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 318              	.LVL52:
 319              	.L16:
 262:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Limit transfer to available space inside fifo/queue if OUT transaction */
 320              	 .loc 1 262 0
 321 0160 C468     	 ldr r4,[r0,#12]
 322 0162 8668     	 ldr r6,[r0,#8]
 323 0164 361B     	 subs r6,r6,r4
 324              	.LVL53:
 325 0166 A2E7     	 b .L23
 326              	.LVL54:
 327              	.L15:
 328 0168 8668     	 ldr r6,[r0,#8]
 329 016a C268     	 ldr r2,[r0,#12]
 330 016c B61A     	 subs r6,r6,r2
 331              	.LVL55:
 332 016e C4E7     	 b .L17
 333              	.L31:
 334              	 .align 2
 335              	.L30:
 336 0170 00000000 	 .word .LANCHOR0
 337 0174 00E100E0 	 .word -536813312
 338 0178 00000000 	 .word .LANCHOR1
 339              	 .cfi_endproc
 340              	.LFE187:
 342              	 .section .text.XMC_USBH_GetVersion,"ax",%progbits
 343              	 .align 2
 344              	 .thumb
 345              	 .thumb_func
 347              	XMC_USBH_GetVersion:
 348              	.LFB188:
 312:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 313:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
 314:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 315:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 316:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /* USB driver API functions */
 317:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 318:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return      \ref XMC_USBH_DRIVER_VERSION_t
 319:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 320:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Get driver version.
 321:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 322:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static XMC_USBH_DRIVER_VERSION_t XMC_USBH_GetVersion (void) { return xmc_usbh_driver_version; }
 349              	 .loc 1 322 0
 350              	 .cfi_startproc
 351              	 
 352              	 
 353              	 
 354 0000 82B0     	 sub sp,sp,#8
 355              	.LCFI1:
 356              	 .cfi_def_cfa_offset 8
 357              	 .loc 1 322 0
 358 0002 054B     	 ldr r3,.L34
 359 0004 1B68     	 ldr r3,[r3]
 360 0006 0020     	 movs r0,#0
 361 0008 9AB2     	 uxth r2,r3
 362 000a 62F30F00 	 bfi r0,r2,#0,#16
 363 000e 1B0C     	 lsrs r3,r3,#16
 364 0010 63F31F40 	 bfi r0,r3,#16,#16
 365 0014 02B0     	 add sp,sp,#8
 366              	.LCFI2:
 367              	 .cfi_def_cfa_offset 0
 368              	 
 369 0016 7047     	 bx lr
 370              	.L35:
 371              	 .align 2
 372              	.L34:
 373 0018 00000000 	 .word .LANCHOR2
 374              	 .cfi_endproc
 375              	.LFE188:
 377              	 .section .text.XMC_USBH_GetCapabilities,"ax",%progbits
 378              	 .align 2
 379              	 .thumb
 380              	 .thumb_func
 382              	XMC_USBH_GetCapabilities:
 383              	.LFB189:
 323:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 324:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 325:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return  \ref XMC_USBH_CAPABILITIES_t
 326:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 327:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Get driver capabilities.
 328:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 329:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static XMC_USBH_CAPABILITIES_t XMC_USBH_GetCapabilities (void) { return xmc_usbh_driver_capabilitie
 384              	 .loc 1 329 0
 385              	 .cfi_startproc
 386              	 
 387              	 
 388              	 
 389              	 .loc 1 329 0
 390 0000 0020     	 movs r0,#0
 391 0002 0123     	 movs r3,#1
 392 0004 63F30E00 	 bfi r0,r3,#0,#15
 393 0008 6FF3CF30 	 bfc r0,#15,#1
 394 000c 40F44030 	 orr r0,r0,#196608
 395 0010 20F48020 	 bic r0,r0,#262144
 396 0014 7047     	 bx lr
 397              	 .cfi_endproc
 398              	.LFE189:
 400 0016 00BF     	 .section .text.XMC_USBH_PortSuspend,"ax",%progbits
 401              	 .align 2
 402              	 .thumb
 403              	 .thumb_func
 405              	XMC_USBH_PortSuspend:
 406              	.LFB195:
 330:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 331:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 332:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param   cb_port_event  Pointer to port event callback function \ref ARM_USBH_SignalPortEvent
 333:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param   cb_pipe_event  Pointer to pipe event callback function \ref ARM_USBH_SignalPipeEvent
 334:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return  int32_t \ref Execution_status. 0 if execution is successful.
 335:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 336:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 337:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Initialize USB Host Interface. Registers callback functions to be executed on port event and pip
 338:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Initializes FIFO address for each pipe. Configures P3.2 as the VBUS charge pump enable pin.\n
 339:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 340:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *  \par<b>Related APIs:</b><BR>
 341:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *  XMC_USBH_Select_VBUS(), XMC_USBH_Uninitialize() \n
 342:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 343:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_Initialize (XMC_USBH_SignalPortEvent_t cb_port_event,
 344:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                                 XMC_USBH_SignalPipeEvent_t cb_pipe_event) {
 345:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 346:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t channel;
 347:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 348:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.init_done == true)
 349:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 350:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /*return ok since initialized*/
 351:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 352:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
 353:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 354:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* assign callbacks */
 355:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.SignalPortEvent_cb = cb_port_event;
 356:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.SignalPipeEvent_cb = cb_pipe_event;
 357:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 358:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* assign fifo start addresses */
 359:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     for (channel = 0U; channel < USBH0_MAX_PIPE_NUM; channel++) {
 360:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_dfifo_ptr[channel] = (uint32_t *)((uint32_t)USB0_BASE + ((channel + 1U) * 0x01000U)
 361:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 362:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 363:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 364:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
 365:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.init_done = true;
 366:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 367:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
 368:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 369:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 370:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 371:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return int32_t \ref Execution_status. Returns 0 to indicate success.
 372:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 373:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * De-initialize USB Host Interface. Sets the driver power state as powered off. Disables VBUS.\n
 374:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 375:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 376:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *  XMC_USBH_Select_VBUS(), XMC_USBH_Initialize(), XMC_USBH_PortVbusOnOff() \n
 377:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 378:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_Uninitialize (void) {
 379:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_device.init_done = false;
 380:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   (void)XMC_USBH_PowerControl(XMC_USBH_POWER_OFF);
 381:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return XMC_USBH_DRIVER_OK;
 382:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 383:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 384:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 385:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param  state  Power state. \ref XMC_USBH_POWER_STATE_t
 386:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return int32_t \ref Execution_status. Returns 0 if successful.
 387:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 388:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Control USB Host Interface Power. If power state is set to \ref XMC_USBH_POWER_FULL,
 389:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * it initializes the peripheral and enables VBUS. If power state is set to \ref XMC_USBH_POWER_OFF
 390:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * disables the peripheral and the VBUS.\n
 391:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 392:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 393:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *  XMC_USBH_Select_VBUS(), XMC_USBH_Initialize(), XMC_USBH_PortVbusOnOff(), XMC_USBH_Uninitialize(
 394:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 395:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_PowerControl (XMC_USBH_POWER_STATE_t state) {
 396:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 397:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t loc_value;
 398:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   switch (state) {
 399:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     case XMC_USBH_POWER_LOW:
 400:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_UNSUPPORTED;
 401:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       break;
 402:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     case XMC_USBH_POWER_OFF:
 403:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       NVIC_DisableIRQ  (USB0_0_IRQn);
 404:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       NVIC_ClearPendingIRQ (USB0_0_IRQn); /* Clear pending interrupt */
 405:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.power_state =  state; /* Clear powered flag */
 406:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->GAHBCFG  &= (uint32_t)(~USB_GAHBCFG_GlblIntrMsk_Msk); /* Di
 407:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_lClockGating((uint8_t)XMC_USBH_CLOCK_GATING_ENABLE); /* Enable Clock Gating */
 408:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL  |=  (uint32_t)USB_PCGCCTL_StopPclk_Msk; /* Stop PH
 409:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_SCU_POWER_DisableUsb(); /* Disable Power USB */
 410:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* reset USB */
 411:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.port_reset_active =  false; /* Reset variables */
 412:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 413:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       break;
 414:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     case XMC_USBH_POWER_FULL:
 415:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (XMC_USBH0_device.init_done == false)
 416:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 417:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR;
 418:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 419:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       } /* not initialized */
 420:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (XMC_USBH0_device.power_state == XMC_USBH_POWER_FULL)
 421:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 422:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         status = XMC_USBH_DRIVER_OK;
 423:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 424:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       } /* already powered */
 425:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_lClockGating((uint8_t)XMC_USBH_CLOCK_GATING_DISABLE); /* disable clock gating */
 426:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       (void)XMC_USBH_osDelay(2U);
 427:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* deassert reset USB *
 428:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       (void)XMC_USBH_osDelay(2U);
 429:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       (void)XMC_USBH_osDelay(100U);
 430:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_SCU_POWER_EnableUsb(); /* Enable Power USB */
 431:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 432:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* On-chip Full-speed PHY */
 433:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL  &=  (uint32_t)~USB_PCGCCTL_StopPclk_Msk;  /* Start
 434:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->GUSBCFG  |=  (uint32_t)USB_GUSBCFG_PHYSel_Msk;    /* Full-s
 435:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 436:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       while ((XMC_USBH0_device.global_register->GRSTCTL & USB_GRSTCTL_AHBIdle_Msk) == 0U) /* wait u
 437:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 438:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /*Wait*/
 439:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 440:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 441:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->GRSTCTL |=  (uint32_t)USB_GRSTCTL_CSftRst_Msk; /* Core soft
 442:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 443:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       while ((XMC_USBH0_device.global_register->GRSTCTL & USB_GRSTCTL_CSftRst_Msk)  != 0U) /* wait 
 444:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 445:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /*Wait*/
 446:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 447:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       (void)XMC_USBH_osDelay(100U);
 448:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 449:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.port_reset_active =  false; /* Reset variables */
 450:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 451:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 452:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /*Created local copy of GUSBCFG to avoid side effects*/
 453:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       loc_value = XMC_USBH0_device.global_register->GUSBCFG;
 454:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (((loc_value & USB_GUSBCFG_ForceHstMode_Msk) == 0U) || \
 455:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ((loc_value & USB_GUSBCFG_ForceDevMode_Msk) != 0U))
 456:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 457:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         XMC_USBH0_device.global_register->GUSBCFG &= (uint32_t)~USB_GUSBCFG_ForceDevMode_Msk;      
 458:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         XMC_USBH0_device.global_register->GUSBCFG |=  (uint32_t)USB_GUSBCFG_ForceHstMode_Msk;      
 459:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         (void)XMC_USBH_osDelay(100U);
 460:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 461:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 462:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* FS only, even if HS is supported */
 463:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->HCFG     |=  (uint32_t)(0x200U | USB_CH_HCFG_FSLSSUP(1));
 464:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 465:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Rx FIFO setting */
 466:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->GRXFSIZ   = (RX_FIFO_SIZE/4U);
 467:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Non-periodic Tx FIFO setting */
 468:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->GNPTXFSIZ_HOSTMODE = (((uint32_t)(TX_FIFO_SIZE_NON_PERI/4U)
 469:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Periodic Tx FIFO setting */
 470:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->HPTXFSIZ  = ((uint32_t)(TX_FIFO_SIZE_PERI / 4U) << 16U) | (
 471:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Enable channel interrupts */
 472:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->HAINTMSK  = ((uint32_t)1U << USBH0_MAX_PIPE_NUM) - 1U;
 473:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Unmask interrupts */
 474:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->GINTMSK_HOSTMODE   = (
 475:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                         USB_GINTSTS_HOSTMODE_DisconnInt_Msk |
 476:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_HChIntMsk_Msk    |
 477:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_PrtIntMsk_Msk   |
 478:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_RxFLvlMsk_Msk |
 479:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_SofMsk_Msk  |
 480:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_WkUpIntMsk_Msk
 481:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        )   ;
 482:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Set powered state */
 483:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.power_state = state;
 484:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Enable interrupts */
 485:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->GAHBCFG  |=  (uint32_t)USB_GAHBCFG_GlblIntrMsk_Msk;
 486:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Set highest interrupt priority */
 487:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       NVIC_SetPriority (USB0_0_IRQn, 0U);
 488:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       NVIC_EnableIRQ   (USB0_0_IRQn);
 489:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       break;
 490:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     default:
 491:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_UNSUPPORTED;
 492:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 493:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
 494:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 495:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 496:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 497:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param port Root HUB Port Number. Only one port(0) is supported.
 498:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param vbus VBUS state - \n
 499:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *                 - \b false VBUS off
 500:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *                 - \b true  VBUS on
 501:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return int32_t \ref Execution_status. Returns 0 if successful.
 502:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 503:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 504:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Set USB port VBUS on/off.
 505:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 506:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_PortVbusOnOff (uint8_t port, bool vbus) {
 507:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 508:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 509:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 510:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 511:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 512:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
 513:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 514:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if (port != 0U)
 515:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 516:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 517:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 518:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     else
 519:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 520:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (vbus != 0U) {
 521:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /* Port power on */
 522:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         XMC_USBH0_device.global_register->HPRT |=  (uint32_t)USB_HPRT_PrtPwr_Msk;
 523:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 524:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       } else {
 525:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /* Port power off */
 526:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         XMC_USBH0_device.global_register->HPRT &= (uint32_t)~USB_HPRT_PrtPwr_Msk;
 527:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_INPUT_TRISTATE);
 528:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 529:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 530:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 531:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
 532:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 533:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 534:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 535:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param port Root HUB Port Number. Only one port(0) is supported.
 536:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return int32_t Execution status. \ref Execution_status
 537:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 538:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Do USB port reset. Port reset should honor the requirement of 50ms delay before enabling.
 539:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * The function depends on implementation of XMC_USBH_osDelay() for 1ms delay to achieve required d
 540:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 541:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 542:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_PortReset (uint8_t port) {
 543:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t hprt;
 544:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 545:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 546:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 547:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 548:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 549:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
 550:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 551:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if (port != 0U)
 552:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 553:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 554:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 555:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 556:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.port_reset_active = true;
 557:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hprt  =  XMC_USBH0_device.global_register->HPRT;
 558:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtEna_Msk;                            /* Disable port */
 559:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hprt |= (uint32_t)USB_HPRT_PrtRst_Msk;                            /* Port reset */
 560:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 561:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait at least 50ms *
 562:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtRst_Msk;                            /* Clear port reset */
 563:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 564:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait for ISR */
 565:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 566:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /*Wait for the port to be enabled*/
 567:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     while ((XMC_USBH0_device.global_register->HPRT & USB_HPRT_PrtEna_Msk) == 0U)
 568:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 569:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /*wait*/
 570:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 571:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 572:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if (XMC_USBH0_device.port_reset_active == true)
 573:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 574:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.port_reset_active = false;
 575:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR;                               /* reset not confirmed inside I
 576:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 577:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 578:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 579:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
 580:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 581:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 582:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 583:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param port USB port number. Only one port(0) is supported.
 584:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return      \ref Execution_status
 585:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 586:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Suspend USB Port (stop generating SOFs).\n
 587:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 588:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 589:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * XMC_USBH_PortResume() \n
 590:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 591:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_PortSuspend (uint8_t port)
 592:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** {
 407              	 .loc 1 592 0
 408              	 .cfi_startproc
 409              	 
 410              	 
 411              	 
 412              	.LVL56:
 593:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 594:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t hprt;
 595:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 413              	 .loc 1 595 0
 414 0000 0D4B     	 ldr r3,.L41
 415 0002 5B7C     	 ldrb r3,[r3,#17]
 416 0004 8BB1     	 cbz r3,.L39
 596:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 597:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 598:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 599:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
 600:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 601:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if (port != 0U)
 417              	 .loc 1 601 0
 418 0006 98B9     	 cbnz r0,.L40
 602:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 603:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 604:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 605:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     else
 606:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 607:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 419              	 .loc 1 607 0
 420 0008 0B4B     	 ldr r3,.L41
 421 000a 1A68     	 ldr r2,[r3]
 422 000c D2F84034 	 ldr r3,[r2,#1088]
 423              	.LVL57:
 608:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 424              	 .loc 1 608 0
 425 0010 23F00403 	 bic r3,r3,#4
 426              	.LVL58:
 609:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt |= (uint32_t)USB_HPRT_PrtSusp_Msk;
 427              	 .loc 1 609 0
 428 0014 43F08003 	 orr r3,r3,#128
 429              	.LVL59:
 610:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 430              	 .loc 1 610 0
 431 0018 C2F84034 	 str r3,[r2,#1088]
 611:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Stop PHY clock after suspending the bus*/
 612:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL |= XMC_USBH_PHY_CLK_STOP;
 432              	 .loc 1 612 0
 433 001c D2F8003E 	 ldr r3,[r2,#3584]
 434              	.LVL60:
 435 0020 43F00303 	 orr r3,r3,#3
 436 0024 C2F8003E 	 str r3,[r2,#3584]
 437              	.LVL61:
 438 0028 7047     	 bx lr
 439              	.L39:
 597:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 440              	 .loc 1 597 0
 441 002a 4FF0FF30 	 mov r0,#-1
 442              	.LVL62:
 443 002e 7047     	 bx lr
 444              	.LVL63:
 445              	.L40:
 603:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 446              	 .loc 1 603 0
 447 0030 6FF00400 	 mvn r0,#4
 448              	.LVL64:
 613:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 614:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 615:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 616:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
 617:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 449              	 .loc 1 617 0
 450 0034 7047     	 bx lr
 451              	.L42:
 452 0036 00BF     	 .align 2
 453              	.L41:
 454 0038 00000000 	 .word .LANCHOR0
 455              	 .cfi_endproc
 456              	.LFE195:
 458              	 .section .text.XMC_USBH_PortGetState,"ax",%progbits
 459              	 .align 2
 460              	 .thumb
 461              	 .thumb_func
 463              	XMC_USBH_PortGetState:
 464              	.LFB197:
 618:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 619:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 620:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param port USB port number. Only one port(0) is supported.
 621:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return \ref Execution_status
 622:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 623:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Resume suspended USB port (start generating SOFs).\n
 624:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 625:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 626:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * XMC_USBH_PortSuspend() \n
 627:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 628:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_PortResume (uint8_t port)
 629:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** {
 630:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 631:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t hprt;
 632:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 633:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 634:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 635:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 636:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
 637:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 638:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if (port != 0U)
 639:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 640:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 641:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 642:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     else
 643:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 644:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /*Ungate PHY clock*/
 645:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL = XMC_USBH_PHY_CLK_UNGATE;
 646:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /*Set resume bit*/
 647:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 648:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 649:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt |= (uint32_t)USB_HPRT_PrtRes_Msk;
 650:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 651:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 652:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       (void)XMC_USBH_osDelay(20U);
 653:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 654:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 655:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 656:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt &= (uint32_t)~((uint32_t)USB_HPRT_PrtRes_Msk);
 657:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 658:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 659:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 660:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
 661:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
 662:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 663:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 664:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 665:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param port USB port number. Only one port(0) is supported.
 666:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return XMC_USBH_PORT_STATE_t Port State
 667:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 668:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 669:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Get current USB port state. The state indicates if the port is connected, port speed
 670:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * and port overcurrent status.
 671:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 672:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static XMC_USBH_PORT_STATE_t XMC_USBH_PortGetState (uint8_t port)
 673:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** {
 465              	 .loc 1 673 0
 466              	 .cfi_startproc
 467              	 
 468              	 
 469              	 
 470              	.LVL65:
 674:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PORT_STATE_t port_state = { 0U, 0U, 0U };
 675:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t hprt;
 676:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
 677:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 471              	 .loc 1 677 0
 472 0000 0E4B     	 ldr r3,.L49
 473 0002 5B7C     	 ldrb r3,[r3,#17]
 474 0004 6BB1     	 cbz r3,.L46
 678:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 679:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /*Do not update the port state*/
 680:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 681:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
 682:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 683:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if (port != 0U)
 475              	 .loc 1 683 0
 476 0006 78B9     	 cbnz r0,.L47
 684:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 685:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /*Do not update the port state*/
 686:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 687:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     else
 688:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 689:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 477              	 .loc 1 689 0
 478 0008 0C4B     	 ldr r3,.L49
 479 000a 1B68     	 ldr r3,[r3]
 480 000c D3F84034 	 ldr r3,[r3,#1088]
 481              	.LVL66:
 690:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if(((hprt & USB_HPRT_PrtConnSts_Msk) != 0U))
 482              	 .loc 1 690 0
 483 0010 03F00102 	 and r2,r3,#1
 484              	.LVL67:
 691:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 692:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         port_state.connected   = 1U;
 693:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 694:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       else
 695:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 696:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         port_state.connected   = 0U;
 697:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 698:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       port_state.overcurrent = 0U;
 699:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 700:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       switch ((uint32_t)((uint32_t)(hprt & USB_HPRT_PrtSpd_Msk) >> USB_HPRT_PrtSpd_Pos)) {
 485              	 .loc 1 700 0
 486 0014 C3F34143 	 ubfx r3,r3,#17,#2
 487              	.LVL68:
 674:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t hprt;
 488              	 .loc 1 674 0
 489 0018 012B     	 cmp r3,#1
 490 001a 14BF     	 ite ne
 491 001c 0023     	 movne r3,#0
 492 001e 0123     	 moveq r3,#1
 493 0020 04E0     	 b .L44
 494              	.LVL69:
 495              	.L46:
 496 0022 0023     	 movs r3,#0
 497 0024 1A46     	 mov r2,r3
 498 0026 01E0     	 b .L44
 499              	.L47:
 500 0028 0023     	 movs r3,#0
 501 002a 1A46     	 mov r2,r3
 502              	.LVL70:
 503              	.L44:
 701:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         case 1U: /* Full speed */
 702:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****          port_state.speed = XMC_USBH_SPEED_FULL;
 703:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****          break;
 704:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         default:
 705:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****          break;
 706:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 707:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 708:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 709:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return port_state;
 504              	 .loc 1 709 0
 505 002c 0020     	 movs r0,#0
 506              	.LVL71:
 507 002e 62F30000 	 bfi r0,r2,#0,#1
 508 0032 6FF34100 	 bfc r0,#1,#1
 509 0036 63F38300 	 bfi r0,r3,#2,#2
 710:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 510              	 .loc 1 710 0
 511 003a 7047     	 bx lr
 512              	.L50:
 513              	 .align 2
 514              	.L49:
 515 003c 00000000 	 .word .LANCHOR0
 516              	 .cfi_endproc
 517              	.LFE197:
 519              	 .section .text.XMC_USBH_PipeModify,"ax",%progbits
 520              	 .align 2
 521              	 .thumb
 522              	 .thumb_func
 524              	XMC_USBH_PipeModify:
 525              	.LFB199:
 711:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 712:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 713:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param dev_addr Device address
 714:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param dev_speed  Device speed
 715:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param hub_addr Hub address. This value should be 0 since hub is not supported.
 716:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param hub_port  USB port number. Only one port(0) is supported.
 717:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param ep_addr Device endpoint address \n
 718:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *                - ep_addr.0..3: Address \n
 719:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *                - ep_addr.7:    Direction\n
 720:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param ep_type Endpoint type (ARM_USB_ENDPOINT_xxx)
 721:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param ep_max_packet_size Endpoint maximum packet size
 722:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param ep_interval Endpoint polling interval
 723:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return XMC_USBH_PIPE_HANDLE Pipe handle is a pointer to pipe hardware base address.
 724:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 725:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 726:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Create/allocate a pipe configured with input parameters. The function looks for an unused pipe a
 727:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 728:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 729:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeReset(), XMC_USBH_PipeTransfer() \n
 730:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 731:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static XMC_USBH_PIPE_HANDLE XMC_USBH_PipeCreate (uint8_t dev_addr, uint8_t dev_speed, uint8_t hub_a
 732:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 733:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 734:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t         i;
 735:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t loc_val;
 736:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
 737:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_UNUSED_ARG(hub_addr);
 738:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_UNUSED_ARG(hub_port);
 739:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_UNUSED_ARG(dev_speed);
 740:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 741:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 742:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 743:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     ptr_ch = (USB0_CH_TypeDef *)NULL;
 744:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 745:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
 746:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 747:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****    /* get first free pipe available */
 748:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     ptr_ch = (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers);
 749:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 750:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     for (i = 0U; i < USBH0_MAX_PIPE_NUM; i++) {
 751:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if ((ptr_ch->HCCHAR & 0x3FFFFFFFU) == 0U)
 752:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 753:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 754:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 755:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_ch++;
 756:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 757:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
 758:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* free pipe found? */
 759:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if (i == USBH0_MAX_PIPE_NUM)
 760:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     { 
 761:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_ch = (USB0_CH_TypeDef *)NULL;
 762:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 763:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     else
 764:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 765:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_cha
 766:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 767:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       memset((void *)ptr_pipe, 0, sizeof(XMC_USBH0_pipe_t));  /* Initialize pipe structure */
 768:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 769:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Fill in all fields of Endpoint Descriptor */
 770:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /*Get the end point direction from the MSB of address*/
 771:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       loc_val = 0U;
 772:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (((ep_addr >> 7U) & 0x1U) == 0U)
 773:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 774:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         loc_val = 1U;
 775:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 776:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_ch->HCCHAR = ((uint32_t)(USB_CH_HCCHARx_MPS(ep_max_packet_size))|
 777:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 778:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        (uint32_t)(USB_CH_HCCHAR_EPDir_Msk * loc_val) |
 779:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        (USB_CH_HCCHARx_EPTYPE (ep_type) ) |
 780:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        (USB_CH_HCCHARx_DEVADDR (dev_addr) ) ;
 781:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Store Pipe settings */
 782:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_pipe->ep_max_packet_size = ep_max_packet_size;
 783:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_pipe->ep_type            = ep_type;
 784:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       switch (ep_type) {
 785:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         case XMC_USBH_ENDPOINT_CONTROL:
 786:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         case XMC_USBH_ENDPOINT_BULK:
 787:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           break;
 788:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         case XMC_USBH_ENDPOINT_ISOCHRONOUS:
 789:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         case XMC_USBH_ENDPOINT_INTERRUPT:
 790:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           if (ep_interval > 0U) {
 791:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->interval_reload = ep_interval;
 792:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           }
 793:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_pipe->interval = ptr_pipe->interval_reload;
 794:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           loc_val = ((((uint32_t)ep_max_packet_size >> 11U) + 1U) & 3U);
 795:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHARx_MCEC(loc_val);
 796:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           break;
 797:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         default:
 798:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           break;
 799:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 800:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 801:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 802:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return ((XMC_USBH_EP_HANDLE)ptr_ch);
 803:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 804:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 805:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 806:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 807:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param dev_addr Device address to be configured for the pipe.
 808:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param dev_speed  Device speed class.
 809:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param hub_addr Hub address. It should be 0 since hub is not supported.
 810:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param hub_port USB port number. Only one port(0) is supported.
 811:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param ep_max_packet_size Endpoint maximum packet size
 812:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return Execution_status
 813:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 814:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 815:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Modify an existing pipe with input parameters. It can be used to configure the pipe after receiv
 816:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 817:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 818:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeDelete(), XMC_USBH_PipeReset(), XMC_USBH_PipeTransfer() \n
 819:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 820:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_PipeModify (XMC_USBH_PIPE_HANDLE pipe_hndl, uint8_t dev_addr, uint8_t dev_s
 526              	 .loc 1 820 0
 527              	 .cfi_startproc
 528              	 
 529              	 
 530              	 
 531              	.LVL72:
 532 0000 30B4     	 push {r4,r5}
 533              	.LCFI3:
 534              	 .cfi_def_cfa_offset 8
 535              	 .cfi_offset 4,-8
 536              	 .cfi_offset 5,-4
 537 0002 BDF80C40 	 ldrh r4,[sp,#12]
 538              	.LVL73:
 821:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 822:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 823:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t   hcchar;
 824:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 825:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 826:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_UNUSED_ARG(hub_addr);
 827:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_UNUSED_ARG(hub_port);
 828:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_UNUSED_ARG(dev_speed);
 829:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 830:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 539              	 .loc 1 830 0
 540 0006 154B     	 ldr r3,.L57
 541              	.LVL74:
 542 0008 5B7C     	 ldrb r3,[r3,#17]
 543 000a EBB1     	 cbz r3,.L53
 831:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 832:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 833:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 834:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
 835:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 836:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if (pipe_hndl  == 0U)
 544              	 .loc 1 836 0
 545 000c F8B1     	 cbz r0,.L54
 546              	.LVL75:
 837:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 838:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 839:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 840:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     else
 841:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 842:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(pipe_hndl);
 843:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_cha
 547              	 .loc 1 843 0
 548 000e 134B     	 ldr r3,.L57
 549 0010 5B68     	 ldr r3,[r3,#4]
 550 0012 C31A     	 subs r3,r0,r3
 551 0014 5B11     	 asrs r3,r3,#5
 552              	.LVL76:
 844:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 553              	 .loc 1 844 0
 554 0016 124A     	 ldr r2,.L57+4
 555              	.LVL77:
 556 0018 02EB4312 	 add r2,r2,r3,lsl#5
 557 001c 1832     	 adds r2,r2,#24
 558 001e D278     	 ldrb r2,[r2,#3]
 559 0020 12F0FF0F 	 tst r2,#255
 560 0024 16D1     	 bne .L55
 845:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 846:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_BUSY;
 847:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 848:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       else
 849:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 850:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /* Fill in all fields of channel */
 851:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         hcchar  =   ptr_ch->HCCHAR;
 561              	 .loc 1 851 0
 562 0026 0568     	 ldr r5,[r0]
 563              	.LVL78:
 852:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /* Clear fields */
 853:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         hcchar &= (uint32_t)~(USB_CH_HCCHAR_MPS_Msk | USB_CH_HCCHAR_DevAddr_Msk)  ;
 564              	 .loc 1 853 0
 565 0028 0E4A     	 ldr r2,.L57+8
 566 002a 2A40     	 ands r2,r2,r5
 567              	.LVL79:
 854:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /* Set fields */
 855:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         hcchar |= (uint32_t)(USB_CH_HCCHARx_MPS(ep_max_packet_size) | (USB_CH_HCCHARx_DEVADDR(dev_a
 568              	 .loc 1 855 0
 569 002c C4F30A05 	 ubfx r5,r4,#0,#11
 570 0030 8905     	 lsls r1,r1,#22
 571              	.LVL80:
 572 0032 01F0FE51 	 and r1,r1,#532676608
 573 0036 2943     	 orrs r1,r1,r5
 574 0038 1143     	 orrs r1,r1,r2
 575              	.LVL81:
 856:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch->HCCHAR = hcchar;
 576              	 .loc 1 856 0
 577 003a 0160     	 str r1,[r0]
 857:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 858:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_pipe->ep_max_packet_size = ep_max_packet_size;
 578              	 .loc 1 858 0
 579 003c 084A     	 ldr r2,.L57+4
 580 003e 02EB4313 	 add r3,r2,r3,lsl#5
 581              	.LVL82:
 582 0042 9C82     	 strh r4,[r3,#20]
 824:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 583              	 .loc 1 824 0
 584 0044 0020     	 movs r0,#0
 585              	.LVL83:
 586 0046 07E0     	 b .L52
 587              	.LVL84:
 588              	.L53:
 832:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 589              	 .loc 1 832 0
 590 0048 4FF0FF30 	 mov r0,#-1
 591              	.LVL85:
 592 004c 04E0     	 b .L52
 593              	.LVL86:
 594              	.L54:
 838:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 595              	 .loc 1 838 0
 596 004e 6FF00400 	 mvn r0,#4
 597              	.LVL87:
 598 0052 01E0     	 b .L52
 599              	.LVL88:
 600              	.L55:
 846:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 601              	 .loc 1 846 0
 602 0054 6FF00100 	 mvn r0,#1
 603              	.LVL89:
 604              	.L52:
 859:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 860:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 861:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 862:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
 863:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
 864:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 605              	 .loc 1 864 0
 606 0058 30BC     	 pop {r4,r5}
 607              	.LCFI4:
 608              	 .cfi_restore 5
 609              	 .cfi_restore 4
 610              	 .cfi_def_cfa_offset 0
 611              	.LVL90:
 612 005a 7047     	 bx lr
 613              	.L58:
 614              	 .align 2
 615              	.L57:
 616 005c 00000000 	 .word .LANCHOR0
 617 0060 00000000 	 .word .LANCHOR3
 618 0064 00F83FE0 	 .word -532678656
 619              	 .cfi_endproc
 620              	.LFE199:
 622              	 .section .text.XMC_USBH_PipeReset,"ax",%progbits
 623              	 .align 2
 624              	 .thumb
 625              	 .thumb_func
 627              	XMC_USBH_PipeReset:
 628              	.LFB201:
 865:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 866:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 867:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 868:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return Execution_status
 869:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 870:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 871:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Delete pipe from active pipes list. After it is deleted, it can be assigned to new pipe request.
 872:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 873:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 874:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeReset(), XMC_USBH_PipeTransfer() \n
 875:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 876:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_PipeDelete (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 877:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 878:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 879:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 880:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 881:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 882:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 883:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 884:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 885:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
 886:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 887:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if (pipe_hndl == 0U)
 888:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 889:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 890:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 891:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     else
 892:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 893:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(pipe_hndl);
 894:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t    *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_
 895:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 896:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 897:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_BUSY;
 898:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 899:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       else
 900:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 901:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch->HCCHAR            = 0U;
 902:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch->HCINT             = 0U;
 903:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch->HCINTMSK          = 0U;
 904:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch->HCTSIZ_BUFFERMODE = 0U;
 905:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 906:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         memset((void *)ptr_pipe, 0, sizeof(XMC_USBH0_pipe_t));
 907:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 908:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 909:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 910:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 911:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
 912:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 913:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 914:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 915:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 916:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return Execution_status
 917:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><br>
 918:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Reset pipe by clearing the interrupt mask and resetting the transfer control register.\n
 919:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 920:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 921:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeTransfer() \n
 922:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 923:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_PipeReset (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 629              	 .loc 1 923 0
 630              	 .cfi_startproc
 631              	 
 632              	 
 633              	 
 634              	.LVL91:
 924:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 925:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 926:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 927:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 928:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 635              	 .loc 1 928 0
 636 0000 0E4B     	 ldr r3,.L64
 637 0002 5B7C     	 ldrb r3,[r3,#17]
 638 0004 8BB1     	 cbz r3,.L61
 929:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 930:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 931:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 932:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
 933:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 934:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if (pipe_hndl  == 0U)
 639              	 .loc 1 934 0
 640 0006 98B1     	 cbz r0,.L62
 641              	.LVL92:
 935:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 936:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 937:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 938:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     else
 939:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 940:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(pipe_hndl);
 941:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t    *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_
 642              	 .loc 1 941 0
 643 0008 0C4B     	 ldr r3,.L64
 644 000a 5B68     	 ldr r3,[r3,#4]
 645 000c C31A     	 subs r3,r0,r3
 942:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 646              	 .loc 1 942 0
 647 000e 23F01F03 	 bic r3,r3,#31
 648 0012 0B4A     	 ldr r2,.L64+4
 649 0014 1344     	 add r3,r3,r2
 650 0016 DB78     	 ldrb r3,[r3,#3]
 651 0018 13F0FF0F 	 tst r3,#255
 652 001c 0BD1     	 bne .L63
 943:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 944:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_BUSY;
 945:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 946:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       else
 947:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 948:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch->HCINT    = 0U;
 653              	 .loc 1 948 0
 654 001e 0023     	 movs r3,#0
 655 0020 8360     	 str r3,[r0,#8]
 949:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch->HCINTMSK = 0U;
 656              	 .loc 1 949 0
 657 0022 C360     	 str r3,[r0,#12]
 950:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch->HCTSIZ_BUFFERMODE   = 0U;
 658              	 .loc 1 950 0
 659 0024 0361     	 str r3,[r0,#16]
 926:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 660              	 .loc 1 926 0
 661 0026 1846     	 mov r0,r3
 662              	.LVL93:
 663 0028 7047     	 bx lr
 664              	.LVL94:
 665              	.L61:
 930:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 666              	 .loc 1 930 0
 667 002a 4FF0FF30 	 mov r0,#-1
 668              	.LVL95:
 669 002e 7047     	 bx lr
 670              	.LVL96:
 671              	.L62:
 936:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 672              	 .loc 1 936 0
 673 0030 6FF00400 	 mvn r0,#4
 674              	.LVL97:
 675 0034 7047     	 bx lr
 676              	.LVL98:
 677              	.L63:
 944:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 678              	 .loc 1 944 0
 679 0036 6FF00100 	 mvn r0,#1
 680              	.LVL99:
 951:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 952:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 953:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 954:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
 955:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 681              	 .loc 1 955 0
 682 003a 7047     	 bx lr
 683              	.L65:
 684              	 .align 2
 685              	.L64:
 686 003c 00000000 	 .word .LANCHOR0
 687 0040 18000000 	 .word .LANCHOR3+24
 688              	 .cfi_endproc
 689              	.LFE201:
 691              	 .section .text.XMC_USBH_PipeTransfer,"ax",%progbits
 692              	 .align 2
 693              	 .thumb
 694              	 .thumb_func
 696              	XMC_USBH_PipeTransfer:
 697              	.LFB202:
 956:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 957:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
 958:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 959:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param packet Packet information with bit masks to represent packet data toggle information and 
 960:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *               \ref XMC_USBH_PACKET_DATA0 / \ref XMC_USBH_PACKET_DATA1, \ref XMC_USBH_PACKET_SETU
 961:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *               \ref XMC_USBH_PACKET_OUT / \ref XMC_USBH_PACKET_IN
 962:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param data Pointer to buffer with data to send or for received data to be stored.
 963:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param num Number of data bytes to transfer
 964:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return Execution_status
 965:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 966:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *  \par<b>Description:</b><BR>
 967:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *  Transfer packets through USB Pipe. Handles transfer of multiple packets using the pipe transfer
 968:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *  The pipe event callback function will be called when the transfer is completed.\n
 969:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
 970:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 971:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeReset() \n
 972:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
 973:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_PipeTransfer (XMC_USBH_PIPE_HANDLE pipe_hndl, uint32_t packet, uint8_t *dat
 698              	 .loc 1 973 0
 699              	 .cfi_startproc
 700              	 
 701              	 
 702              	.LVL100:
 703 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 704              	.LCFI5:
 705              	 .cfi_def_cfa_offset 24
 706              	 .cfi_offset 3,-24
 707              	 .cfi_offset 4,-20
 708              	 .cfi_offset 5,-16
 709              	 .cfi_offset 6,-12
 710              	 .cfi_offset 7,-8
 711              	 .cfi_offset 14,-4
 712              	.LVL101:
 974:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
 975:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 976:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 977:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 713              	 .loc 1 977 0
 714 0002 2B4C     	 ldr r4,.L75
 715 0004 647C     	 ldrb r4,[r4,#17]
 716 0006 002C     	 cmp r4,#0
 717 0008 42D0     	 beq .L69
 978:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   { 
 979:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 980:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 981:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
 982:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 983:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 984:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if(!(((((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_OUT) ||
 718              	 .loc 1 984 0
 719 000a 01F00F04 	 and r4,r1,#15
 720 000e 013C     	 subs r4,r4,#1
 721 0010 022C     	 cmp r4,#2
 722 0012 40D8     	 bhi .L70
 985:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_IN))) ||
 986:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_SETUP )))
 987:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 988:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 989:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 990:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     else
 991:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 992:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (pipe_hndl  == 0U)
 723              	 .loc 1 992 0
 724 0014 0028     	 cmp r0,#0
 725 0016 41D0     	 beq .L71
 993:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 994:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 995:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 996:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       else
 997:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 998:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if ((XMC_USBH0_device.global_register->HPRT & USB_HPRT_PrtConnSts_Msk) == 0U)
 726              	 .loc 1 998 0
 727 0018 254C     	 ldr r4,.L75
 728 001a 2468     	 ldr r4,[r4]
 729 001c D4F84044 	 ldr r4,[r4,#1088]
 730 0020 14F0010F 	 tst r4,#1
 731 0024 3DD0     	 beq .L72
 999:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         {
1000:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           status = XMC_USBH_DRIVER_ERROR;
1001:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1002:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         else
1003:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         {
1004:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[((USB0_CH_TypeDef *)pipe_hndl - (USB0_CH_TypeDef *)
 732              	 .loc 1 1004 0
 733 0026 224C     	 ldr r4,.L75
 734 0028 6568     	 ldr r5,[r4,#4]
 735 002a 451B     	 subs r5,r0,r5
 736 002c 6D11     	 asrs r5,r5,#5
 737 002e 214E     	 ldr r6,.L75+4
 738 0030 06EB4516 	 add r6,r6,r5,lsl#5
 739              	.LVL102:
1005:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           if (ptr_pipe->in_use != 0U)
 740              	 .loc 1 1005 0
 741 0034 F47E     	 ldrb r4,[r6,#27]
 742 0036 14F0FF0F 	 tst r4,#255
 743 003a 35D1     	 bne .L73
1006:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           {
1007:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             status = XMC_USBH_DRIVER_ERROR_BUSY;
1008:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           }
1009:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           else
1010:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           {
1011:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             /* Prepare transfer information */
1012:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->packet                = packet;
 744              	 .loc 1 1012 0
 745 003c DFF874E0 	 ldr lr,.L75+4
 746 0040 6F01     	 lsls r7,r5,#5
 747 0042 0EEB0704 	 add r4,lr,r7
 748 0046 4EF80710 	 str r1,[lr,r7]
1013:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->data                  = data;
 749              	 .loc 1 1013 0
 750 004a 6260     	 str r2,[r4,#4]
1014:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->num                   = num;
 751              	 .loc 1 1014 0
 752 004c A360     	 str r3,[r4,#8]
1015:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->num_transferred_total = 0U;
 753              	 .loc 1 1015 0
 754 004e 0022     	 movs r2,#0
 755              	.LVL103:
 756 0050 E260     	 str r2,[r4,#12]
1016:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->num_transferring      = 0U;
 757              	 .loc 1 1016 0
 758 0052 2261     	 str r2,[r4,#16]
1017:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->in_use                = 0U;
 759              	 .loc 1 1017 0
 760 0054 E276     	 strb r2,[r4,#27]
1018:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->transfer_active       = 0U;
 761              	 .loc 1 1018 0
 762 0056 2277     	 strb r2,[r4,#28]
1019:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->interrupt_triggered   = 0U;
 763              	 .loc 1 1019 0
 764 0058 6277     	 strb r2,[r4,#29]
1020:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->event                 = 0U;
 765              	 .loc 1 1020 0
 766 005a A277     	 strb r2,[r4,#30]
1021:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1022:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             if ((ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) && (ptr_pipe->interval 
 767              	 .loc 1 1022 0
 768 005c A37E     	 ldrb r3,[r4,#26]
 769              	.LVL104:
 770 005e DBB2     	 uxtb r3,r3
 771 0060 032B     	 cmp r3,#3
 772 0062 06D1     	 bne .L68
 773              	 .loc 1 1022 0 is_stmt 0 discriminator 1
 774 0064 338B     	 ldrh r3,[r6,#24]
 775 0066 9BB2     	 uxth r3,r3
 776 0068 1BB1     	 cbz r3,.L68
1023:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               ptr_pipe->in_use              = 1U; /* transfer will be started inside interrupt (SOF
 777              	 .loc 1 1023 0 is_stmt 1
 778 006a 0123     	 movs r3,#1
 779 006c F376     	 strb r3,[r6,#27]
 975:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 780              	 .loc 1 975 0
 781 006e 1046     	 mov r0,r2
 782              	.LVL105:
 783              	 .loc 1 1023 0
 784 0070 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 785              	.LVL106:
 786              	.L68:
 787 0072 0146     	 mov r1,r0
 788              	.LVL107:
1024:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             } else {
1025:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               ptr_pipe->transfer_active     = 1U;
 789              	 .loc 1 1025 0
 790 0074 0F4B     	 ldr r3,.L75+4
 791 0076 03EB4515 	 add r5,r3,r5,lsl#5
 792 007a 0123     	 movs r3,#1
 793 007c 2B77     	 strb r3,[r5,#28]
1026:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               ptr_pipe->in_use              = 1U;
 794              	 .loc 1 1026 0
 795 007e EB76     	 strb r3,[r5,#27]
1027:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               if(XMC_lStartTransfer (ptr_pipe, (USB0_CH_TypeDef *)pipe_hndl) == false)
 796              	 .loc 1 1027 0
 797 0080 3046     	 mov r0,r6
 798              	.LVL108:
 799 0082 FFF7FEFF 	 bl XMC_lStartTransfer
 800              	.LVL109:
 801 0086 80F00100 	 eor r0,r0,#1
 802 008a C0B2     	 uxtb r0,r0
 803 008c 4042     	 negs r0,r0
 804 008e F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 805              	.LVL110:
 806              	.L69:
 979:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 807              	 .loc 1 979 0
 808 0090 4FF0FF30 	 mov r0,#-1
 809              	.LVL111:
 810 0094 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 811              	.LVL112:
 812              	.L70:
 988:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 813              	 .loc 1 988 0
 814 0096 6FF00400 	 mvn r0,#4
 815              	.LVL113:
 816 009a F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 817              	.LVL114:
 818              	.L71:
 994:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 819              	 .loc 1 994 0
 820 009c 6FF00400 	 mvn r0,#4
 821              	.LVL115:
 822 00a0 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 823              	.LVL116:
 824              	.L72:
1000:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
 825              	 .loc 1 1000 0
 826 00a2 4FF0FF30 	 mov r0,#-1
 827              	.LVL117:
 828 00a6 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 829              	.LVL118:
 830              	.L73:
1007:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           }
 831              	 .loc 1 1007 0
 832 00a8 6FF00100 	 mvn r0,#1
 833              	.LVL119:
1028:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               {
1029:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 status = XMC_USBH_DRIVER_ERROR;
1030:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               }
1031:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             }
1032:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           }
1033:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1034:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
1035:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
1036:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1037:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
1038:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 834              	 .loc 1 1038 0
 835 00ac F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 836              	.LVL120:
 837              	.L76:
 838 00ae 00BF     	 .align 2
 839              	.L75:
 840 00b0 00000000 	 .word .LANCHOR0
 841 00b4 00000000 	 .word .LANCHOR3
 842              	 .cfi_endproc
 843              	.LFE202:
 845              	 .section .text.XMC_USBH_PipeTransferGetResult,"ax",%progbits
 846              	 .align 2
 847              	 .thumb
 848              	 .thumb_func
 850              	XMC_USBH_PipeTransferGetResult:
 851              	.LFB203:
1039:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1040:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
1041:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
1042:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return uint32_t Number of successfully transferred data bytes
1043:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
1044:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *  \par<b>Description:</b><BR>
1045:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *  Get result of USB Pipe transfer.
1046:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
1047:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
1048:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeTransfer() \n
1049:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
1050:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static uint32_t XMC_USBH_PipeTransferGetResult (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 852              	 .loc 1 1050 0
 853              	 .cfi_startproc
 854              	 
 855              	 
 856              	 
 857              	.LVL121:
1051:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t status;
1052:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (pipe_hndl == 0U)
 858              	 .loc 1 1052 0
 859 0000 40B1     	 cbz r0,.L79
1053:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
1054:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = 0U;
1055:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1056:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
1057:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
1058:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = (pipe[((USB0_CH_TypeDef *)pipe_hndl - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channe
 860              	 .loc 1 1058 0
 861 0002 054A     	 ldr r2,.L80
 862 0004 5268     	 ldr r2,[r2,#4]
 863 0006 831A     	 subs r3,r0,r2
 864 0008 23F01F03 	 bic r3,r3,#31
 865 000c 034A     	 ldr r2,.L80+4
 866 000e 1344     	 add r3,r3,r2
 867 0010 5868     	 ldr r0,[r3,#4]
 868              	.LVL122:
 869 0012 7047     	 bx lr
 870              	.LVL123:
 871              	.L79:
1054:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 872              	 .loc 1 1054 0
 873 0014 0020     	 movs r0,#0
 874              	.LVL124:
1059:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1060:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
1061:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 875              	 .loc 1 1061 0
 876 0016 7047     	 bx lr
 877              	.L81:
 878              	 .align 2
 879              	.L80:
 880 0018 00000000 	 .word .LANCHOR0
 881 001c 08000000 	 .word .LANCHOR3+8
 882              	 .cfi_endproc
 883              	.LFE203:
 885              	 .section .text.XMC_USBH_GetFrameNumber,"ax",%progbits
 886              	 .align 2
 887              	 .thumb
 888              	 .thumb_func
 890              	XMC_USBH_GetFrameNumber:
 891              	.LFB205:
1062:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1063:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
1064:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
1065:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return Execution_status
1066:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
1067:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><BR>
1068:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Abort current USB Pipe transfer.\n
1069:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
1070:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
1071:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeTransfer() \n
1072:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
1073:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static int32_t XMC_USBH_PipeTransferAbort (XMC_USBH_PIPE_HANDLE pipe_hndl) {
1074:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
1075:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
1076:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t timeout;
1077:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_ERROR;
1078:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
1079:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   ptr_ch = (USB0_CH_TypeDef *) pipe_hndl;
1080:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
1081:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
1082:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
1083:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /*Error in power state*/
1084:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1085:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
1086:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
1087:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if (pipe_hndl  == 0U)
1088:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
1089:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
1090:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
1091:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     else
1092:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
1093:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_cha
1094:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1095:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (ptr_pipe->in_use != 0U) {
1096:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_pipe->in_use = 0U;
1097:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /* Disable channel if not yet halted */
1098:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if ((ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) == 0U)
1099:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         {
1100:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           if (ptr_ch->HCCHAR & USB_CH_HCCHAR_ChEna_Msk)
1101:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           {
1102:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_ch->HCINTMSK = 0U;
1103:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             (void)XMC_USBH_osDelay(1U);
1104:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             if (ptr_ch->HCINT & USB_CH_HCINT_NAK_Msk) {
1105:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               ptr_ch->HCINT  =  USB_CH_HCINTx_ALL;    /* Clear all interrupts */
1106:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               status = XMC_USBH_DRIVER_OK;
1107:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             }
1108:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             else
1109:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             {
1110:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               ptr_ch->HCINT  =  USB_CH_HCINTx_ALL;      /* Clear all interrupts */
1111:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               ptr_ch->HCCHAR =  (uint32_t)(ptr_ch->HCCHAR | USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR
1112:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1113:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               /* wait until channel is halted */
1114:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               for (timeout = 0U; timeout < 5000U; timeout++) {
1115:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 if (ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) {
1116:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                   ptr_ch->HCINT = USB_CH_HCINTx_ALL;
1117:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                   status = XMC_USBH_DRIVER_OK;
1118:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 }
1119:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               }
1120:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             }
1121:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           }
1122:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1123:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
1124:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
1125:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1126:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1127:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
1128:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
1129:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1130:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
1131:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @return Frame number.
1132:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
1133:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><BR>
1134:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * Get current USB Frame Number.
1135:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
1136:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** static uint16_t XMC_USBH_GetFrameNumber (void)
1137:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** {
 892              	 .loc 1 1137 0
 893              	 .cfi_startproc
 894              	 
 895              	 
 896              	 
1138:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint16_t status;
1139:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
1140:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 897              	 .loc 1 1140 0
 898 0000 054B     	 ldr r3,.L85
 899 0002 5B7C     	 ldrb r3,[r3,#17]
 900 0004 33B1     	 cbz r3,.L84
1141:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
1142:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = 0U;
1143:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1144:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   else
1145:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
1146:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     status = (uint16_t)((XMC_USBH0_device.global_register->HFNUM) & 0xFFFU);
 901              	 .loc 1 1146 0
 902 0006 044B     	 ldr r3,.L85
 903 0008 1B68     	 ldr r3,[r3]
 904 000a D3F80804 	 ldr r0,[r3,#1032]
 905 000e C0F30B00 	 ubfx r0,r0,#0,#12
 906              	.LVL125:
 907 0012 7047     	 bx lr
 908              	.LVL126:
 909              	.L84:
1142:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 910              	 .loc 1 1142 0
 911 0014 0020     	 movs r0,#0
 912              	.LVL127:
1147:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1148:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return status;
1149:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 913              	 .loc 1 1149 0
 914 0016 7047     	 bx lr
 915              	.L86:
 916              	 .align 2
 917              	.L85:
 918 0018 00000000 	 .word .LANCHOR0
 919              	 .cfi_endproc
 920              	.LFE205:
 922              	 .section .text.XMC_USBH_PortVbusOnOff,"ax",%progbits
 923              	 .align 2
 924              	 .thumb
 925              	 .thumb_func
 927              	XMC_USBH_PortVbusOnOff:
 928              	.LFB193:
 506:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 929              	 .loc 1 506 0
 930              	 .cfi_startproc
 931              	 
 932              	 
 933              	.LVL128:
 934 0000 08B5     	 push {r3,lr}
 935              	.LCFI6:
 936              	 .cfi_def_cfa_offset 8
 937              	 .cfi_offset 3,-8
 938              	 .cfi_offset 14,-4
 939              	.LVL129:
 508:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 940              	 .loc 1 508 0
 941 0002 164B     	 ldr r3,.L93
 942 0004 5B7C     	 ldrb r3,[r3,#17]
 943 0006 1BB3     	 cbz r3,.L90
 514:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 944              	 .loc 1 514 0
 945 0008 28BB     	 cbnz r0,.L91
 520:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /* Port power on */
 946              	 .loc 1 520 0
 947 000a 81B1     	 cbz r1,.L89
 522:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 948              	 .loc 1 522 0
 949 000c 134B     	 ldr r3,.L93
 950 000e 1A68     	 ldr r2,[r3]
 951 0010 D2F84034 	 ldr r3,[r2,#1088]
 952 0014 43F48053 	 orr r3,r3,#4096
 953 0018 C2F84034 	 str r3,[r2,#1088]
 523:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       } else {
 954              	 .loc 1 523 0
 955 001c 104B     	 ldr r3,.L93+4
 956 001e 1868     	 ldr r0,[r3]
 957              	.LVL130:
 958 0020 104B     	 ldr r3,.L93+8
 959 0022 1978     	 ldrb r1,[r3]
 960              	.LVL131:
 961 0024 8822     	 movs r2,#136
 962 0026 FFF7FEFF 	 bl XMC_GPIO_SetMode
 963              	.LVL132:
 507:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 964              	 .loc 1 507 0
 965 002a 0020     	 movs r0,#0
 966 002c 08BD     	 pop {r3,pc}
 967              	.LVL133:
 968              	.L89:
 526:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_INPUT_TRISTATE);
 969              	 .loc 1 526 0
 970 002e 0B4B     	 ldr r3,.L93
 971 0030 1A68     	 ldr r2,[r3]
 972 0032 D2F84034 	 ldr r3,[r2,#1088]
 973 0036 23F48053 	 bic r3,r3,#4096
 974 003a C2F84034 	 str r3,[r2,#1088]
 527:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 975              	 .loc 1 527 0
 976 003e 084B     	 ldr r3,.L93+4
 977 0040 1868     	 ldr r0,[r3]
 978              	.LVL134:
 979 0042 084B     	 ldr r3,.L93+8
 980 0044 1978     	 ldrb r1,[r3]
 981              	.LVL135:
 982 0046 0022     	 movs r2,#0
 983 0048 FFF7FEFF 	 bl XMC_GPIO_SetMode
 984              	.LVL136:
 507:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 985              	 .loc 1 507 0
 986 004c 0020     	 movs r0,#0
 987 004e 08BD     	 pop {r3,pc}
 988              	.LVL137:
 989              	.L90:
 510:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 990              	 .loc 1 510 0
 991 0050 4FF0FF30 	 mov r0,#-1
 992              	.LVL138:
 993 0054 08BD     	 pop {r3,pc}
 994              	.LVL139:
 995              	.L91:
 516:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 996              	 .loc 1 516 0
 997 0056 6FF00400 	 mvn r0,#4
 998              	.LVL140:
 532:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 999              	 .loc 1 532 0
 1000 005a 08BD     	 pop {r3,pc}
 1001              	.L94:
 1002              	 .align 2
 1003              	.L93:
 1004 005c 00000000 	 .word .LANCHOR0
 1005 0060 00000000 	 .word .LANCHOR4
 1006 0064 00000000 	 .word .LANCHOR5
 1007              	 .cfi_endproc
 1008              	.LFE193:
 1010              	 .section .text.XMC_USBH_Initialize,"ax",%progbits
 1011              	 .align 2
 1012              	 .thumb
 1013              	 .thumb_func
 1015              	XMC_USBH_Initialize:
 1016              	.LFB190:
 344:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 1017              	 .loc 1 344 0
 1018              	 .cfi_startproc
 1019              	 
 1020              	 
 1021              	.LVL141:
 1022 0000 08B5     	 push {r3,lr}
 1023              	.LCFI7:
 1024              	 .cfi_def_cfa_offset 8
 1025              	 .cfi_offset 3,-8
 1026              	 .cfi_offset 14,-4
 1027              	.LVL142:
 348:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 1028              	 .loc 1 348 0
 1029 0002 0E4B     	 ldr r3,.L100
 1030 0004 1B7C     	 ldrb r3,[r3,#16]
 1031 0006 B3B9     	 cbnz r3,.L96
 355:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.SignalPipeEvent_cb = cb_pipe_event;
 1032              	 .loc 1 355 0
 1033 0008 0C4B     	 ldr r3,.L100
 1034 000a 9860     	 str r0,[r3,#8]
 356:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 1035              	 .loc 1 356 0
 1036 000c D960     	 str r1,[r3,#12]
 1037              	.LVL143:
 1038 000e 0C49     	 ldr r1,.L100+4
 1039              	.LVL144:
 1040 0010 0A1F     	 subs r2,r1,#4
 1041 0012 3431     	 adds r1,r1,#52
 1042 0014 0B4B     	 ldr r3,.L100+8
 1043              	.LVL145:
 1044              	.L97:
 360:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 1045              	 .loc 1 360 0 discriminator 3
 1046 0016 42F8043F 	 str r3,[r2,#4]!
 1047 001a 03F58053 	 add r3,r3,#4096
 359:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_dfifo_ptr[channel] = (uint32_t *)((uint32_t)USB0_BASE + ((channel + 1U) * 0x01000U)
 1048              	 .loc 1 359 0 discriminator 3
 1049 001e 8A42     	 cmp r2,r1
 1050 0020 F9D1     	 bne .L97
 363:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
 1051              	 .loc 1 363 0
 1052 0022 094B     	 ldr r3,.L100+12
 1053 0024 1868     	 ldr r0,[r3]
 1054              	.LVL146:
 1055 0026 094B     	 ldr r3,.L100+16
 1056 0028 1978     	 ldrb r1,[r3]
 1057 002a 8822     	 movs r2,#136
 1058 002c FFF7FEFF 	 bl XMC_GPIO_SetMode
 1059              	.LVL147:
 365:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 1060              	 .loc 1 365 0
 1061 0030 0122     	 movs r2,#1
 1062 0032 024B     	 ldr r3,.L100
 1063 0034 1A74     	 strb r2,[r3,#16]
 1064              	.L96:
 368:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 1065              	 .loc 1 368 0
 1066 0036 0020     	 movs r0,#0
 1067 0038 08BD     	 pop {r3,pc}
 1068              	.L101:
 1069 003a 00BF     	 .align 2
 1070              	.L100:
 1071 003c 00000000 	 .word .LANCHOR0
 1072 0040 00000000 	 .word .LANCHOR1
 1073 0044 00100450 	 .word 1342443520
 1074 0048 00000000 	 .word .LANCHOR4
 1075 004c 00000000 	 .word .LANCHOR5
 1076              	 .cfi_endproc
 1077              	.LFE190:
 1079              	 .section .text.XMC_USBH_PipeDelete,"ax",%progbits
 1080              	 .align 2
 1081              	 .thumb
 1082              	 .thumb_func
 1084              	XMC_USBH_PipeDelete:
 1085              	.LFB200:
 876:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 1086              	 .loc 1 876 0
 1087              	 .cfi_startproc
 1088              	 
 1089              	 
 1090              	.LVL148:
 881:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 1091              	 .loc 1 881 0
 1092 0000 124B     	 ldr r3,.L109
 1093 0002 5B7C     	 ldrb r3,[r3,#17]
 1094 0004 C3B1     	 cbz r3,.L104
 887:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 1095              	 .loc 1 887 0
 1096 0006 D0B1     	 cbz r0,.L105
 1097              	.LVL149:
 894:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 1098              	 .loc 1 894 0
 1099 0008 104B     	 ldr r3,.L109
 1100 000a 5B68     	 ldr r3,[r3,#4]
 1101 000c C31A     	 subs r3,r0,r3
 1102 000e 23F01F03 	 bic r3,r3,#31
 1103 0012 0F4A     	 ldr r2,.L109+4
 1104 0014 1344     	 add r3,r3,r2
 1105              	.LVL150:
 895:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 1106              	 .loc 1 895 0
 1107 0016 DA7E     	 ldrb r2,[r3,#27]
 1108 0018 12F0FF0F 	 tst r2,#255
 1109 001c 12D1     	 bne .L106
 876:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 1110              	 .loc 1 876 0
 1111 001e 10B5     	 push {r4,lr}
 1112              	.LCFI8:
 1113              	 .cfi_def_cfa_offset 8
 1114              	 .cfi_offset 4,-8
 1115              	 .cfi_offset 14,-4
 901:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch->HCINT             = 0U;
 1116              	 .loc 1 901 0
 1117 0020 0024     	 movs r4,#0
 1118 0022 0460     	 str r4,[r0]
 902:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch->HCINTMSK          = 0U;
 1119              	 .loc 1 902 0
 1120 0024 8460     	 str r4,[r0,#8]
 903:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch->HCTSIZ_BUFFERMODE = 0U;
 1121              	 .loc 1 903 0
 1122 0026 C460     	 str r4,[r0,#12]
 904:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 1123              	 .loc 1 904 0
 1124 0028 0461     	 str r4,[r0,#16]
 906:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 1125              	 .loc 1 906 0
 1126 002a 1846     	 mov r0,r3
 1127              	.LVL151:
 1128 002c 2146     	 mov r1,r4
 1129 002e 2022     	 movs r2,#32
 1130 0030 FFF7FEFF 	 bl memset
 1131              	.LVL152:
 879:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 1132              	 .loc 1 879 0
 1133 0034 2046     	 mov r0,r4
 1134 0036 10BD     	 pop {r4,pc}
 1135              	.LVL153:
 1136              	.L104:
 1137              	.LCFI9:
 1138              	 .cfi_def_cfa_offset 0
 1139              	 .cfi_restore 4
 1140              	 .cfi_restore 14
 883:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 1141              	 .loc 1 883 0
 1142 0038 4FF0FF30 	 mov r0,#-1
 1143              	.LVL154:
 912:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 1144              	 .loc 1 912 0
 1145 003c 7047     	 bx lr
 1146              	.LVL155:
 1147              	.L105:
 889:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 1148              	 .loc 1 889 0
 1149 003e 6FF00400 	 mvn r0,#4
 1150              	.LVL156:
 1151 0042 7047     	 bx lr
 1152              	.LVL157:
 1153              	.L106:
 897:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 1154              	 .loc 1 897 0
 1155 0044 6FF00100 	 mvn r0,#1
 1156              	.LVL158:
 1157 0048 7047     	 bx lr
 1158              	.L110:
 1159 004a 00BF     	 .align 2
 1160              	.L109:
 1161 004c 00000000 	 .word .LANCHOR0
 1162 0050 00000000 	 .word .LANCHOR3
 1163              	 .cfi_endproc
 1164              	.LFE200:
 1166              	 .section .text.XMC_USBH_PipeCreate,"ax",%progbits
 1167              	 .align 2
 1168              	 .thumb
 1169              	 .thumb_func
 1171              	XMC_USBH_PipeCreate:
 1172              	.LFB198:
 731:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 1173              	 .loc 1 731 0
 1174              	 .cfi_startproc
 1175              	 
 1176              	 
 1177              	.LVL159:
 1178 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 1179              	.LCFI10:
 1180              	 .cfi_def_cfa_offset 24
 1181              	 .cfi_offset 4,-24
 1182              	 .cfi_offset 5,-20
 1183              	 .cfi_offset 6,-16
 1184              	 .cfi_offset 7,-12
 1185              	 .cfi_offset 8,-8
 1186              	 .cfi_offset 14,-4
 1187 0004 9DF818E0 	 ldrb lr,[sp,#24]
 1188 0008 9DF81C70 	 ldrb r7,[sp,#28]
 1189 000c BDF82060 	 ldrh r6,[sp,#32]
 1190 0010 9DF824C0 	 ldrb ip,[sp,#36]
 741:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 1191              	 .loc 1 741 0
 1192 0014 384B     	 ldr r3,.L127
 1193              	.LVL160:
 1194 0016 5B7C     	 ldrb r3,[r3,#17]
 1195 0018 002B     	 cmp r3,#0
 1196 001a 60D0     	 beq .L119
 748:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 1197              	 .loc 1 748 0
 1198 001c 364B     	 ldr r3,.L127
 1199 001e 5D68     	 ldr r5,[r3,#4]
 1200              	.LVL161:
 751:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 1201              	 .loc 1 751 0
 1202 0020 2B68     	 ldr r3,[r5]
 1203 0022 23F04043 	 bic r3,r3,#-1073741824
 1204 0026 002B     	 cmp r3,#0
 1205 0028 5DD1     	 bne .L124
 1206 002a 0CE0     	 b .L120
 1207              	.LVL162:
 1208              	.L116:
 1209 002c 1A68     	 ldr r2,[r3]
 1210 002e 22F04042 	 bic r2,r2,#-1073741824
 1211 0032 22B1     	 cbz r2,.L121
 755:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 1212              	 .loc 1 755 0 discriminator 2
 1213 0034 2033     	 adds r3,r3,#32
 1214              	.LVL163:
 750:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if ((ptr_ch->HCCHAR & 0x3FFFFFFFU) == 0U)
 1215              	 .loc 1 750 0 discriminator 2
 1216 0036 0131     	 adds r1,r1,#1
 1217              	.LVL164:
 1218 0038 A342     	 cmp r3,r4
 1219 003a F7D1     	 bne .L116
 1220 003c 00E0     	 b .L115
 1221              	.L121:
 1222 003e 1C46     	 mov r4,r3
 1223              	.L115:
 759:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     { 
 1224              	 .loc 1 759 0
 1225 0040 0E29     	 cmp r1,#14
 1226 0042 01D1     	 bne .L113
 1227 0044 4DE0     	 b .L122
 1228              	.LVL165:
 1229              	.L120:
 748:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 1230              	 .loc 1 748 0
 1231 0046 2C46     	 mov r4,r5
 1232              	.LVL166:
 1233              	.L113:
 765:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 1234              	 .loc 1 765 0
 1235 0048 651B     	 subs r5,r4,r5
 1236 004a 6D11     	 asrs r5,r5,#5
 1237              	.LVL167:
 767:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 1238              	 .loc 1 767 0
 1239 004c DFF8AC80 	 ldr r8,.L127+4
 1240 0050 6B01     	 lsls r3,r5,#5
 1241 0052 08EB0301 	 add r1,r8,r3
 1242 0056 0022     	 movs r2,#0
 1243 0058 48F80320 	 str r2,[r8,r3]
 1244 005c 4A60     	 str r2,[r1,#4]
 1245 005e 01F10803 	 add r3,r1,#8
 1246 0062 43F8042B 	 str r2,[r3],#4
 1247 0066 43F8042B 	 str r2,[r3],#4
 1248 006a 43F8042B 	 str r2,[r3],#4
 1249 006e 43F8042B 	 str r2,[r3],#4
 1250 0072 43F8042B 	 str r2,[r3],#4
 1251 0076 1A60     	 str r2,[r3]
 1252              	.LVL168:
 776:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 1253              	 .loc 1 776 0
 1254 0078 C6F30A03 	 ubfx r3,r6,#0,#11
 779:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        (USB_CH_HCCHARx_DEVADDR (dev_addr) ) ;
 1255              	 .loc 1 779 0
 1256 007c BA04     	 lsls r2,r7,#18
 1257 007e 02F44022 	 and r2,r2,#786432
 1258 0082 1343     	 orrs r3,r3,r2
 780:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Store Pipe settings */
 1259              	 .loc 1 780 0
 1260 0084 8005     	 lsls r0,r0,#22
 1261              	.LVL169:
 1262 0086 00F0FE50 	 and r0,r0,#532676608
 1263 008a 1843     	 orrs r0,r0,r3
 777:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        (uint32_t)(USB_CH_HCCHAR_EPDir_Msk * loc_val) |
 1264              	 .loc 1 777 0
 1265 008c 4FEACE23 	 lsl r3,lr,#11
 1266 0090 03F4F043 	 and r3,r3,#30720
 1267 0094 0343     	 orrs r3,r3,r0
 772:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 1268              	 .loc 1 772 0
 1269 0096 5FEADE12 	 lsrs r2,lr,#7
 778:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        (USB_CH_HCCHARx_EPTYPE (ep_type) ) |
 1270              	 .loc 1 778 0
 1271 009a 0CBF     	 ite eq
 1272 009c 4FF40042 	 moveq r2,#32768
 1273 00a0 0022     	 movne r2,#0
 779:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        (USB_CH_HCCHARx_DEVADDR (dev_addr) ) ;
 1274              	 .loc 1 779 0
 1275 00a2 1343     	 orrs r3,r3,r2
 776:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 1276              	 .loc 1 776 0
 1277 00a4 2360     	 str r3,[r4]
 782:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_pipe->ep_type            = ep_type;
 1278              	 .loc 1 782 0
 1279 00a6 8E82     	 strh r6,[r1,#20]
 783:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       switch (ep_type) {
 1280              	 .loc 1 783 0
 1281 00a8 8F76     	 strb r7,[r1,#26]
 784:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         case XMC_USBH_ENDPOINT_CONTROL:
 1282              	 .loc 1 784 0
 1283 00aa 012F     	 cmp r7,#1
 1284 00ac 01D0     	 beq .L117
 1285 00ae 032F     	 cmp r7,#3
 1286 00b0 1FD1     	 bne .L125
 1287              	.L117:
 790:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->interval_reload = ep_interval;
 1288              	 .loc 1 790 0
 1289 00b2 BCF1000F 	 cmp ip,#0
 1290 00b6 04D0     	 beq .L118
 791:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           }
 1291              	 .loc 1 791 0
 1292 00b8 104B     	 ldr r3,.L127+4
 1293 00ba 03EB4513 	 add r3,r3,r5,lsl#5
 1294 00be A3F816C0 	 strh ip,[r3,#22]
 1295              	.L118:
 793:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           loc_val = ((((uint32_t)ep_max_packet_size >> 11U) + 1U) & 3U);
 1296              	 .loc 1 793 0
 1297 00c2 0E4B     	 ldr r3,.L127+4
 1298 00c4 03EB4515 	 add r5,r3,r5,lsl#5
 1299              	.LVL170:
 1300 00c8 EB8A     	 ldrh r3,[r5,#22]
 1301 00ca 2B83     	 strh r3,[r5,#24]
 1302              	.LVL171:
 795:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           break;
 1303              	 .loc 1 795 0
 1304 00cc 2268     	 ldr r2,[r4]
 794:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHARx_MCEC(loc_val);
 1305              	 .loc 1 794 0
 1306 00ce F30A     	 lsrs r3,r6,#11
 1307 00d0 0133     	 adds r3,r3,#1
 1308 00d2 03F00303 	 and r3,r3,#3
 795:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           break;
 1309              	 .loc 1 795 0
 1310 00d6 42EA0353 	 orr r3,r2,r3,lsl#20
 1311 00da 2360     	 str r3,[r4]
 796:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         default:
 1312              	 .loc 1 796 0
 1313 00dc 09E0     	 b .L125
 1314              	.LVL172:
 1315              	.L119:
 743:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 1316              	 .loc 1 743 0
 1317 00de 0024     	 movs r4,#0
 1318 00e0 07E0     	 b .L125
 1319              	.LVL173:
 1320              	.L122:
 761:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 1321              	 .loc 1 761 0
 1322 00e2 0024     	 movs r4,#0
 1323 00e4 05E0     	 b .L125
 1324              	.LVL174:
 1325              	.L124:
 755:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 1326              	 .loc 1 755 0
 1327 00e6 05F12003 	 add r3,r5,#32
 1328              	.LVL175:
 1329 00ea 05F5E074 	 add r4,r5,#448
 750:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if ((ptr_ch->HCCHAR & 0x3FFFFFFFU) == 0U)
 1330              	 .loc 1 750 0
 1331 00ee 0121     	 movs r1,#1
 1332              	.LVL176:
 1333 00f0 9CE7     	 b .L116
 1334              	.LVL177:
 1335              	.L125:
 803:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 1336              	 .loc 1 803 0
 1337 00f2 2046     	 mov r0,r4
 1338 00f4 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1339              	.LVL178:
 1340              	.L128:
 1341              	 .align 2
 1342              	.L127:
 1343 00f8 00000000 	 .word .LANCHOR0
 1344 00fc 00000000 	 .word .LANCHOR3
 1345              	 .cfi_endproc
 1346              	.LFE198:
 1348              	 .section .text.XMC_USBH_HandleIrq,"ax",%progbits
 1349              	 .align 2
 1350              	 .global XMC_USBH_HandleIrq
 1351              	 .thumb
 1352              	 .thumb_func
 1354              	XMC_USBH_HandleIrq:
 1355              	.LFB206:
1150:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1151:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /**
1152:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * @param gintsts USB port interrupt status flag.
1153:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
1154:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * \par<b>Description:</b><BR>
1155:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * USB host interrupt handler. It updates port and pipe state information based on different events
1156:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * generated by the peripheral. It propagates the port events to the callback function registered b
1157:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * during initialization. When a pipe transfer complete event is detected, it checks if any further
1158:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * to be transmitted on the same pipe and continues transmission until data is available. A pipe ev
1159:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * to the user provided pipe event callback function. A transfer complete event will be propagated 
1160:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  * is transmitted for an OUT transaction.
1161:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****  *
1162:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** */
1163:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** void XMC_USBH_HandleIrq (uint32_t gintsts) {
 1356              	 .loc 1 1163 0
 1357              	 .cfi_startproc
 1358              	 
 1359              	 
 1360              	.LVL179:
 1361 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 1362              	.LCFI11:
 1363              	 .cfi_def_cfa_offset 36
 1364              	 .cfi_offset 4,-36
 1365              	 .cfi_offset 5,-32
 1366              	 .cfi_offset 6,-28
 1367              	 .cfi_offset 7,-24
 1368              	 .cfi_offset 8,-20
 1369              	 .cfi_offset 9,-16
 1370              	 .cfi_offset 10,-12
 1371              	 .cfi_offset 11,-8
 1372              	 .cfi_offset 14,-4
 1373 0004 83B0     	 sub sp,sp,#12
 1374              	.LCFI12:
 1375              	 .cfi_def_cfa_offset 48
 1376 0006 8346     	 mov fp,r0
1164:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
1165:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
1166:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t hprt, haint, hcint, pktcnt, mpsiz;
1167:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t ch;
1168:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint8_t *ptr_data;
1169:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t *dfifo;
1170:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t grxsts, bcnt, dat, len, len_rest;
1171:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
1172:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   /* Host port interrupt */
1173:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_PrtInt_Msk) != 0U) {
 1377              	 .loc 1 1173 0
 1378 0008 10F0807F 	 tst r0,#16777216
 1379 000c 25D0     	 beq .L130
1174:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hprt = XMC_USBH0_device.global_register->HPRT;
 1380              	 .loc 1 1174 0
 1381 000e A44B     	 ldr r3,.L187
 1382 0010 1B68     	 ldr r3,[r3]
 1383 0012 D3F84044 	 ldr r4,[r3,#1088]
 1384              	.LVL180:
1175:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Clear port enable */
1176:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt & (uint32_t)(~USB_HPRT_PrtEna_Msk);
 1385              	 .loc 1 1176 0
 1386 0016 24F00402 	 bic r2,r4,#4
 1387 001a C3F84024 	 str r2,[r3,#1088]
1177:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if ((hprt & USB_HPRT_PrtConnDet_Msk) != 0U) {
 1388              	 .loc 1 1177 0
 1389 001e 14F0020F 	 tst r4,#2
 1390 0022 0DD0     	 beq .L131
1178:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->HCFG =  (0x200U | (USB_CH_HCFG_FSLSPCS(1) |
 1391              	 .loc 1 1178 0
 1392 0024 40F20522 	 movw r2,#517
 1393 0028 C3F80024 	 str r2,[r3,#1024]
1179:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                                                     USB_CH_HCFG_FSLSSUP(1)));
1180:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Ignore connect under reset */
1181:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (XMC_USBH0_device.port_reset_active == false) {
 1394              	 .loc 1 1181 0
 1395 002c 9C4B     	 ldr r3,.L187
 1396 002e 9B7C     	 ldrb r3,[r3,#18]
 1397 0030 002B     	 cmp r3,#0
 1398 0032 40F01B82 	 bne .L132
1182:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_CONNECT);
 1399              	 .loc 1 1182 0
 1400 0036 9A4B     	 ldr r3,.L187
 1401 0038 9B68     	 ldr r3,[r3,#8]
 1402 003a 0020     	 movs r0,#0
 1403              	.LVL181:
 1404 003c 0121     	 movs r1,#1
 1405 003e 9847     	 blx r3
 1406              	.LVL182:
 1407              	.L131:
 1408 0040 04F00C04 	 and r4,r4,#12
 1409              	.LVL183:
1183:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
1184:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
1185:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if ((hprt & USB_HPRT_PrtEnChng_Msk) != 0U) { /* If port enable changed */
1186:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if ((hprt & USB_HPRT_PrtEna_Msk) != 0U) {  /* If device connected */
 1410              	 .loc 1 1186 0
 1411 0044 0C2C     	 cmp r4,#12
 1412 0046 08D1     	 bne .L130
1187:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if (XMC_USBH0_device.port_reset_active == true) {
 1413              	 .loc 1 1187 0
 1414 0048 954B     	 ldr r3,.L187
 1415 004a 9B7C     	 ldrb r3,[r3,#18]
 1416 004c 2BB1     	 cbz r3,.L130
 1417              	.L172:
1188:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           XMC_USBH0_device.port_reset_active = false;
 1418              	 .loc 1 1188 0
 1419 004e 944B     	 ldr r3,.L187
 1420 0050 0020     	 movs r0,#0
 1421 0052 9874     	 strb r0,[r3,#18]
1189:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_RESET);
 1422              	 .loc 1 1189 0
 1423 0054 9B68     	 ldr r3,[r3,#8]
 1424 0056 0821     	 movs r1,#8
 1425 0058 9847     	 blx r3
 1426              	.LVL184:
 1427              	.L130:
1190:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1191:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
1192:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
1193:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1194:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
1195:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   /* Disconnect interrupt */
1196:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_DisconnInt_Msk) != 0U) {
 1428              	 .loc 1 1196 0
 1429 005a 1BF0005F 	 tst fp,#536870912
 1430 005e 28D0     	 beq .L133
1197:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE = USB_GINTSTS_HOSTMODE_DisconnInt_Msk; /* Cl
 1431              	 .loc 1 1197 0
 1432 0060 8F4B     	 ldr r3,.L187
 1433 0062 1A68     	 ldr r2,[r3]
 1434 0064 4FF00051 	 mov r1,#536870912
 1435 0068 5161     	 str r1,[r2,#20]
1198:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* Ignore disconnect under reset */
1199:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if ( XMC_USBH0_device.port_reset_active == false) {
 1436              	 .loc 1 1199 0
 1437 006a 9B7C     	 ldrb r3,[r3,#18]
 1438 006c 0BBB     	 cbnz r3,.L133
1200:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers);
 1439              	 .loc 1 1200 0
 1440 006e 8C4B     	 ldr r3,.L187
 1441 0070 5D68     	 ldr r5,[r3,#4]
 1442              	.LVL185:
1201:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t    *)(pipe);
 1443              	 .loc 1 1201 0
 1444 0072 8C4C     	 ldr r4,.L187+4
1202:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
1203:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if (ptr_pipe->in_use != 0U) {
1204:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_pipe->in_use = 0U;
 1445              	 .loc 1 1204 0
 1446 0074 4FF00008 	 mov r8,#0
1205:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                            /* Clear
1206:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_ch->HCINTMSK = USB_CH_HCINT_ChHltd_Msk;                           /* Enable halt inte
1207:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk); /* Acti
1208:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, XMC_USBH_EVENT_BUS_ERROR)
 1447              	 .loc 1 1208 0
 1448 0078 1F46     	 mov r7,r3
1202:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 1449              	 .loc 1 1202 0
 1450 007a 04F5E076 	 add r6,r4,#448
 1451              	.LVL186:
 1452              	.L135:
1203:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_pipe->in_use = 0U;
 1453              	 .loc 1 1203 0
 1454 007e E37E     	 ldrb r3,[r4,#27]
 1455 0080 73B1     	 cbz r3,.L134
1204:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                            /* Clear
 1456              	 .loc 1 1204 0
 1457 0082 84F81B80 	 strb r8,[r4,#27]
1205:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                            /* Clear
 1458              	 .loc 1 1205 0
 1459 0086 40F2BB73 	 movw r3,#1979
 1460 008a AB60     	 str r3,[r5,#8]
1206:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk); /* Acti
 1461              	 .loc 1 1206 0
 1462 008c 0223     	 movs r3,#2
 1463 008e EB60     	 str r3,[r5,#12]
1207:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, XMC_USBH_EVENT_BUS_ERROR)
 1464              	 .loc 1 1207 0
 1465 0090 2B68     	 ldr r3,[r5]
 1466 0092 43F04043 	 orr r3,r3,#-1073741824
 1467 0096 2B60     	 str r3,[r5]
 1468              	 .loc 1 1208 0
 1469 0098 2846     	 mov r0,r5
 1470 009a 4021     	 movs r1,#64
 1471 009c FB68     	 ldr r3,[r7,#12]
 1472 009e 9847     	 blx r3
 1473              	.LVL187:
 1474              	.L134:
1209:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1210:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch++;
 1475              	 .loc 1 1210 0 discriminator 2
 1476 00a0 2035     	 adds r5,r5,#32
 1477              	.LVL188:
1211:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_pipe++;
 1478              	 .loc 1 1211 0 discriminator 2
 1479 00a2 2034     	 adds r4,r4,#32
 1480              	.LVL189:
1202:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if (ptr_pipe->in_use != 0U) {
 1481              	 .loc 1 1202 0 discriminator 2
 1482 00a4 B442     	 cmp r4,r6
 1483 00a6 EAD1     	 bne .L135
1212:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
1213:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_DISCONNECT);
 1484              	 .loc 1 1213 0
 1485 00a8 7D4B     	 ldr r3,.L187
 1486 00aa 9B68     	 ldr r3,[r3,#8]
 1487 00ac 0020     	 movs r0,#0
 1488 00ae 0221     	 movs r1,#2
 1489 00b0 9847     	 blx r3
 1490              	.LVL190:
 1491              	.L133:
1214:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
1215:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1216:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   /* Handle receive fifo not-empty interrupt */
1217:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_RxFLvl_Msk) != 0U) {
 1492              	 .loc 1 1217 0
 1493 00b2 1BF0100F 	 tst fp,#16
 1494 00b6 40D0     	 beq .L136
1218:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTMSK_HOSTMODE &= (uint32_t)~USB_GINTMSK_HOSTMODE_RxFLvlMsk
 1495              	 .loc 1 1218 0
 1496 00b8 794B     	 ldr r3,.L187
 1497 00ba 1868     	 ldr r0,[r3]
 1498 00bc 8369     	 ldr r3,[r0,#24]
 1499 00be 23F01003 	 bic r3,r3,#16
 1500 00c2 8361     	 str r3,[r0,#24]
1219:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     grxsts     = (XMC_USBH0_device.global_register->GRXSTSP_HOSTMODE);    
 1501              	 .loc 1 1219 0
 1502 00c4 036A     	 ldr r3,[r0,#32]
 1503              	.LVL191:
1220:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /* IN Data Packet received ? */
1221:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if ((uint32_t)((grxsts >> 17U) & 0x0FU) == (uint32_t)USB_GRXSTSR_HOSTMODE_PktSts_IN_DATA_PKT) {
 1504              	 .loc 1 1221 0
 1505 00c6 C3F34342 	 ubfx r2,r3,#17,#4
 1506 00ca 022A     	 cmp r2,#2
 1507 00cc 31D1     	 bne .L137
1222:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ch         = (uint32_t)(grxsts & USB_GRXSTSR_DEVICEMODE_EPNum_Msk);
 1508              	 .loc 1 1222 0
 1509 00ce 03F00F07 	 and r7,r3,#15
 1510              	.LVL192:
1223:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       bcnt       = ((uint32_t)(grxsts & USB_GRXSTSR_DEVICEMODE_BCnt_Msk) >> USB_GRXSTSR_DEVICEMODE_
 1511              	 .loc 1 1223 0
 1512 00d2 47F6F071 	 movw r1,#32752
 1513 00d6 1940     	 ands r1,r1,r3
 1514 00d8 0E09     	 lsrs r6,r1,#4
 1515              	.LVL193:
1224:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       dfifo      = (uint32_t *)XMC_USBH0_dfifo_ptr[ch];
 1516              	 .loc 1 1224 0
 1517 00da 734B     	 ldr r3,.L187+8
 1518              	.LVL194:
 1519 00dc 53F827C0 	 ldr ip,[r3,r7,lsl#2]
 1520              	.LVL195:
1225:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_data   =  pipe[ch].data + pipe[ch].num_transferred_total;
 1521              	 .loc 1 1225 0
 1522 00e0 704B     	 ldr r3,.L187+4
 1523 00e2 03EB4713 	 add r3,r3,r7,lsl#5
 1524 00e6 5A68     	 ldr r2,[r3,#4]
 1525 00e8 0833     	 adds r3,r3,#8
 1526 00ea 5B68     	 ldr r3,[r3,#4]
 1527 00ec 1A44     	 add r2,r2,r3
 1528              	.LVL196:
1226:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       len        =  bcnt / 4U; /* Received number of 32-bit data */
1227:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       len_rest   =  bcnt & 3U; /* Number of bytes left */
 1529              	 .loc 1 1227 0
 1530 00ee 06F00304 	 and r4,r6,#3
 1531              	.LVL197:
1228:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Read data from fifo */
1229:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Read 32 bit sized  data */
1230:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       while (len != 0U) {
 1532              	 .loc 1 1230 0
 1533 00f2 8D09     	 lsrs r5,r1,#6
 1534              	.LVL198:
 1535 00f4 00F0C381 	 beq .L138
 1536 00f8 2B46     	 mov r3,r5
 1537 00fa 1146     	 mov r1,r2
 1538 00fc 9646     	 mov lr,r2
 1539              	.LVL199:
 1540              	.L139:
1231:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #if defined __TASKING__/*tasking*/
1232:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         *((__unaligned uint32_t *)ptr_data) = *dfifo;
1233:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #else /* defined (__GNUC__) || defined (__CC_ARM) || defined (__ICCARM__)*/
1234:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         *((__packed uint32_t *)ptr_data) = *dfifo;
 1541              	 .loc 1 1234 0
 1542 00fe DCF80020 	 ldr r2,[ip]
 1543 0102 41F8042B 	 str r2,[r1],#4
 1544              	.LVL200:
1230:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #if defined __TASKING__/*tasking*/
 1545              	 .loc 1 1230 0
 1546 0106 013B     	 subs r3,r3,#1
 1547              	.LVL201:
 1548 0108 F9D1     	 bne .L139
 1549 010a 0EEB8502 	 add r2,lr,r5,lsl#2
1235:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #endif
1236:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1237:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_data += 4U;
1238:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         len--;
1239:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
1240:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Read 8 bit sized data */
1241:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (len_rest != 0U) {
 1550              	 .loc 1 1241 0
 1551 010e 3CB1     	 cbz r4,.L140
1242:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #if defined __TASKING__/*tasking*/
1243:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         dat = *((__unaligned uint32_t *)dfifo);
1244:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #else /* defined (__GNUC__) || defined (__CC_ARM) || defined (__ICCARM__)*/
1245:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         dat = *((__packed uint32_t *)dfifo);
 1552              	 .loc 1 1245 0
 1553 0110 DCF80030 	 ldr r3,[ip]
 1554              	.LVL202:
 1555              	.L173:
 1556 0114 1119     	 adds r1,r2,r4
 1557              	.LVL203:
 1558              	.L141:
1246:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #endif
1247:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         while (len_rest != 0U) {
1248:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           *ptr_data = (uint8_t)dat;
 1559              	 .loc 1 1248 0
 1560 0116 02F8013B 	 strb r3,[r2],#1
 1561              	.LVL204:
1249:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_data++;
1250:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           dat >>= 8;
 1562              	 .loc 1 1250 0
 1563 011a 1B0A     	 lsrs r3,r3,#8
 1564              	.LVL205:
1247:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           *ptr_data = (uint8_t)dat;
 1565              	 .loc 1 1247 0
 1566 011c 8A42     	 cmp r2,r1
 1567 011e FAD1     	 bne .L141
 1568              	.LVL206:
 1569              	.L140:
1251:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           len_rest--;
1252:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1253:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
1254:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       pipe[ch].num_transferring      += bcnt;
 1570              	 .loc 1 1254 0
 1571 0120 604B     	 ldr r3,.L187+4
 1572 0122 03EB4713 	 add r3,r3,r7,lsl#5
 1573 0126 1A69     	 ldr r2,[r3,#16]
 1574 0128 3244     	 add r2,r2,r6
 1575 012a 1A61     	 str r2,[r3,#16]
1255:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       pipe[ch].num_transferred_total += bcnt;
 1576              	 .loc 1 1255 0
 1577 012c DA68     	 ldr r2,[r3,#12]
 1578 012e 1644     	 add r6,r6,r2
 1579              	.LVL207:
 1580 0130 DE60     	 str r6,[r3,#12]
 1581              	.LVL208:
 1582              	.L137:
1256:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
1257:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTMSK_HOSTMODE |= (uint32_t)USB_GINTMSK_HOSTMODE_RxFLvlMsk_
 1583              	 .loc 1 1257 0
 1584 0132 8369     	 ldr r3,[r0,#24]
 1585 0134 43F01003 	 orr r3,r3,#16
 1586 0138 8361     	 str r3,[r0,#24]
 1587              	.L136:
1258:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1259:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1260:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   /* Handle sof interrupt */
1261:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_Sof_Msk) != 0U) { /* If start of frame interrupt */
 1588              	 .loc 1 1261 0
 1589 013a 1BF0080F 	 tst fp,#8
 1590 013e 18D0     	 beq .L142
1262:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE =  USB_GINTSTS_HOSTMODE_Sof_Msk; /* Clear SO
 1591              	 .loc 1 1262 0
 1592 0140 574B     	 ldr r3,.L187
 1593 0142 1B68     	 ldr r3,[r3]
 1594 0144 0822     	 movs r2,#8
 1595 0146 5A61     	 str r2,[r3,#20]
 1596              	.LVL209:
1263:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     ptr_pipe = (XMC_USBH0_pipe_t *)(pipe);
 1597              	 .loc 1 1263 0
 1598 0148 564B     	 ldr r3,.L187+4
1264:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
1265:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* If interrupt transfer is active handle period (interval) */
1266:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if ((ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) && (ptr_pipe->in_use == 1U)) 
 1599              	 .loc 1 1266 0
 1600 014a 40F20310 	 movw r0,#259
1267:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if (ptr_pipe->interval != 0U)
1268:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         {
1269:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_pipe->interval--;
1270:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           if (ptr_pipe->interval == 0U)
1271:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           {
1272:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->interval = ptr_pipe->interval_reload;
1273:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->interrupt_triggered = 1U;
 1601              	 .loc 1 1273 0
 1602 014e 0124     	 movs r4,#1
1264:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 1603              	 .loc 1 1264 0
 1604 0150 03F5E071 	 add r1,r3,#448
 1605              	.LVL210:
 1606              	.L144:
1266:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if (ptr_pipe->interval != 0U)
 1607              	 .loc 1 1266 0
 1608 0154 5A8B     	 ldrh r2,[r3,#26]
 1609 0156 8242     	 cmp r2,r0
 1610 0158 08D1     	 bne .L143
1267:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if (ptr_pipe->interval != 0U)
 1611              	 .loc 1 1267 0
 1612 015a 1A8B     	 ldrh r2,[r3,#24]
 1613 015c 32B1     	 cbz r2,.L143
1269:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           if (ptr_pipe->interval == 0U)
 1614              	 .loc 1 1269 0
 1615 015e 013A     	 subs r2,r2,#1
 1616 0160 92B2     	 uxth r2,r2
 1617 0162 1A83     	 strh r2,[r3,#24]
1270:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           {
 1618              	 .loc 1 1270 0
 1619 0164 12B9     	 cbnz r2,.L143
1272:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->interrupt_triggered = 1U;
 1620              	 .loc 1 1272 0
 1621 0166 DA8A     	 ldrh r2,[r3,#22]
 1622 0168 1A83     	 strh r2,[r3,#24]
 1623              	 .loc 1 1273 0
 1624 016a 5C77     	 strb r4,[r3,#29]
 1625              	.L143:
1274:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           }
1275:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1276:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
1277:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       ptr_pipe++;
 1626              	 .loc 1 1277 0 discriminator 2
 1627 016c 2033     	 adds r3,r3,#32
 1628              	.LVL211:
1264:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* If interrupt transfer is active handle period (interval) */
 1629              	 .loc 1 1264 0 discriminator 2
 1630 016e 8B42     	 cmp r3,r1
 1631 0170 F0D1     	 bne .L144
 1632              	.LVL212:
 1633              	.L142:
1278:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
1279:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1280:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
1281:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   /* Handle host ctrl interrupt */
1282:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_HChInt_Msk) != 0U) {
 1634              	 .loc 1 1282 0
 1635 0172 1BF0007F 	 tst fp,#33554432
 1636 0176 00F02981 	 beq .L145
1283:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     haint = XMC_USBH0_device.global_register->HAINT;
 1637              	 .loc 1 1283 0
 1638 017a 494B     	 ldr r3,.L187
 1639 017c 1B68     	 ldr r3,[r3]
 1640 017e D3F81474 	 ldr r7,[r3,#1044]
 1641              	.LVL213:
 1642 0182 4A4C     	 ldr r4,.L187+12
 1643 0184 4A4E     	 ldr r6,.L187+16
1284:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 1644              	 .loc 1 1284 0
 1645 0186 0025     	 movs r5,#0
1285:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Check for interrupt of all channels */
1286:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if ((haint & (uint32_t)((uint32_t)1U << ch)) != 0U) {
1287:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         haint     &= (uint32_t)~((uint32_t)1U << ch);
 1646              	 .loc 1 1287 0
 1647 0188 4FF00108 	 mov r8,#1
1288:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch     =  (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers) + ch;
 1648              	 .loc 1 1288 0
 1649 018c DFF810A1 	 ldr r10,.L187
 1650 0190 CDF800B0 	 str fp,[sp]
 1651              	.LVL214:
 1652              	.L162:
1286:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         haint     &= (uint32_t)~((uint32_t)1U << ch);
 1653              	 .loc 1 1286 0
 1654 0194 27FA05F3 	 lsr r3,r7,r5
 1655 0198 13F0010F 	 tst r3,#1
 1656 019c 00F00E81 	 beq .L146
1287:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_ch     =  (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers) + ch;
 1657              	 .loc 1 1287 0
 1658 01a0 08FA05F3 	 lsl r3,r8,r5
 1659 01a4 27EA0307 	 bic r7,r7,r3
 1660              	.LVL215:
 1661 01a8 6A01     	 lsls r2,r5,#5
 1662              	 .loc 1 1288 0
 1663 01aa DAF804E0 	 ldr lr,[r10,#4]
 1664 01ae 0EEB0200 	 add r0,lr,r2
 1665              	.LVL216:
1289:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_pipe   =  (XMC_USBH0_pipe_t    *)(&pipe[ch]);
1290:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /*Local variable for HCINT*/
1291:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         dat = ptr_ch->HCINT;
 1666              	 .loc 1 1291 0
 1667 01b2 8368     	 ldr r3,[r0,#8]
 1668              	.LVL217:
1292:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         hcint      =  (uint32_t)(dat & ptr_ch->HCINTMSK);
 1669              	 .loc 1 1292 0
 1670 01b4 C168     	 ldr r1,[r0,#12]
 1671 01b6 0B40     	 ands r3,r3,r1
 1672              	.LVL218:
1293:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if ((hcint & USB_CH_HCINT_ChHltd_Msk) != 0U) {                                  /* channel 
 1673              	 .loc 1 1293 0
 1674 01b8 13F0020F 	 tst r3,#2
 1675 01bc 06D0     	 beq .L147
1294:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_ch->HCINTMSK = 0U;                                                        /*  disable
 1676              	 .loc 1 1294 0
 1677 01be 0023     	 movs r3,#0
 1678              	.LVL219:
 1679 01c0 C360     	 str r3,[r0,#12]
1295:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                                    
 1680              	 .loc 1 1295 0
 1681 01c2 40F2BB71 	 movw r1,#1979
 1682 01c6 8160     	 str r1,[r0,#8]
1296:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_pipe->transfer_active = 0U;                                               /*  set sta
 1683              	 .loc 1 1296 0
 1684 01c8 2372     	 strb r3,[r4,#8]
 1685              	.LVL220:
 1686 01ca 73E0     	 b .L148
 1687              	.LVL221:
 1688              	.L147:
1297:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           hcint = 0U;
1298:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1299:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if ((hcint & USB_CH_HCINT_XferCompl_Msk) != 0U) {                               /* data tra
 1689              	 .loc 1 1299 0
 1690 01cc 13F0010F 	 tst r3,#1
 1691 01d0 34D0     	 beq .L149
1300:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_ch->HCINT   = USB_CH_HCINTx_ALL;                                                     
 1692              	 .loc 1 1300 0
 1693 01d2 40F2BB71 	 movw r1,#1979
 1694 01d6 8160     	 str r1,[r0,#8]
1301:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) == 0U) {                       /*  endpoin
 1695              	 .loc 1 1301 0
 1696 01d8 5EF80210 	 ldr r1,[lr,r2]
 1697 01dc 11F4004F 	 tst r1,#32768
 1698 01e0 19D1     	 bne .L150
1302:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_ch->HCINTMSK = 0U;                                                      /*   disabl
 1699              	 .loc 1 1302 0
 1700 01e2 4FF0000C 	 mov ip,#0
 1701 01e6 C0F80CC0 	 str ip,[r0,#12]
1303:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->transfer_active = 0U;                                             /*   transf
 1702              	 .loc 1 1303 0
 1703 01ea 84F808C0 	 strb ip,[r4,#8]
1304:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->num_transferred_total += ptr_pipe->num_transferring;              /*   admin 
 1704              	 .loc 1 1304 0
 1705 01ee 54F8081C 	 ldr r1,[r4,#-8]
 1706 01f2 54F8043C 	 ldr r3,[r4,#-4]
 1707              	.LVL222:
 1708 01f6 1944     	 add r1,r1,r3
 1709 01f8 0B46     	 mov r3,r1
 1710 01fa 44F8081C 	 str r1,[r4,#-8]
1305:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->num_transferring       = 0U;                                      /*   admin 
 1711              	 .loc 1 1305 0
 1712 01fe 44F804CC 	 str ip,[r4,#-4]
1306:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             if (ptr_pipe->num_transferred_total == ptr_pipe->num) {                     /*   all by
 1713              	 .loc 1 1306 0
 1714 0202 54F80C1C 	 ldr r1,[r4,#-12]
 1715 0206 8B42     	 cmp r3,r1
 1716 0208 40F03C81 	 bne .L151
1307:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               ptr_pipe->in_use = 0U;                                                    /*    relea
 1717              	 .loc 1 1307 0
 1718 020c 84F807C0 	 strb ip,[r4,#7]
1308:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_TRANSFER_COMPLETE;                       /*
 1719              	 .loc 1 1308 0
 1720 0210 84F80A80 	 strb r8,[r4,#10]
 1721 0214 36E1     	 b .L151
 1722              	.LVL223:
 1723              	.L150:
1309:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             }                                                                           
1310:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             hcint = 0U;                                                                 
1311:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           }                                                                             
1312:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                       /*  endpoin
 1724              	 .loc 1 1312 0
 1725 0216 5EF80210 	 ldr r1,[lr,r2]
 1726 021a 11F4004F 	 tst r1,#32768
 1727 021e 0DD0     	 beq .L149
 1728 0220 00E0     	 b .L175
 1729              	.LVL224:
 1730              	.L177:
 1731 0222 0023     	 movs r3,#0
 1732              	.LVL225:
 1733              	.L175:
1313:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                      /*   releas
 1734              	 .loc 1 1313 0
 1735 0224 0021     	 movs r1,#0
 1736 0226 E171     	 strb r1,[r4,#7]
1314:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_TRANSFER_COMPLETE;                         /*
 1737              	 .loc 1 1314 0
 1738 0228 84F80A80 	 strb r8,[r4,#10]
 1739              	.LVL226:
 1740              	.LBB50:
 1741              	.LBB51:
 145:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1742              	 .loc 1 145 0
 1743 022c 0221     	 movs r1,#2
 1744 022e C160     	 str r1,[r0,#12]
 146:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return;
 1745              	 .loc 1 146 0
 1746 0230 5EF80210 	 ldr r1,[lr,r2]
 1747 0234 41F04041 	 orr r1,r1,#-1073741824
 1748 0238 4EF80210 	 str r1,[lr,r2]
 1749              	.LVL227:
 1750              	.L149:
 1751              	.LBE51:
 1752              	.LBE50:
1315:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                            /*   trigge
1316:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           }
1317:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1318:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if ((hcint & USB_CH_HCINTMSK_AckMsk_Msk) != 0U) {                                /* ACK rec
 1753              	 .loc 1 1318 0
 1754 023c 13F0200F 	 tst r3,#32
 1755 0240 38D0     	 beq .L148
1319:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_ch->HCINT = USB_CH_HCINTMSK_AckMsk_Msk;                                    /*  clear 
 1756              	 .loc 1 1319 0
 1757 0242 2023     	 movs r3,#32
 1758              	.LVL228:
 1759 0244 8360     	 str r3,[r0,#8]
1320:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           is_nack[ch] = false;
 1760              	 .loc 1 1320 0
 1761 0246 0023     	 movs r3,#0
 1762 0248 3370     	 strb r3,[r6]
1321:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                        /*  endpoi
 1763              	 .loc 1 1321 0
 1764 024a 5EF80230 	 ldr r3,[lr,r2]
 1765 024e 13F4004F 	 tst r3,#32768
 1766 0252 1BD0     	 beq .L152
1322:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             if ((ptr_pipe->num != ptr_pipe->num_transferred_total) &&                    /*   if al
 1767              	 .loc 1 1322 0
 1768 0254 54F8081C 	 ldr r1,[r4,#-8]
 1769 0258 54F80C3C 	 ldr r3,[r4,#-12]
 1770 025c 8B42     	 cmp r3,r1
 1771 025e 00F01881 	 beq .L153
 1772              	 .loc 1 1322 0 is_stmt 0 discriminator 1
 1773 0262 54F8043C 	 ldr r3,[r4,#-4]
 1774 0266 002B     	 cmp r3,#0
 1775 0268 00F01381 	 beq .L153
1323:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 (ptr_pipe->num_transferring != 0U)                 &&                    /*   if ze
1324:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                ((ptr_pipe->num_transferred_total%ptr_pipe->ep_max_packet_size) == 0U)){  /*   if sh
 1776              	 .loc 1 1324 0 is_stmt 1
 1777 026c B4F800C0 	 ldrh ip,[r4]
 1778 0270 B1FBFCF3 	 udiv r3,r1,ip
 1779 0274 0CFB1311 	 mls r1,ip,r3,r1
1323:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 (ptr_pipe->num_transferring != 0U)                 &&                    /*   if ze
 1780              	 .loc 1 1323 0
 1781 0278 0029     	 cmp r1,#0
 1782 027a 40F00A81 	 bne .L153
1325:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;                                
 1783              	 .loc 1 1325 0
 1784 027e 5EF80230 	 ldr r3,[lr,r2]
 1785 0282 43F00043 	 orr r3,r3,#-2147483648
 1786 0286 4EF80230 	 str r3,[lr,r2]
 1787 028a 02E1     	 b .L153
 1788              	.L152:
 1789              	.LVL229:
 1790              	.LBB52:
 1791              	.LBB53:
 145:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1792              	 .loc 1 145 0
 1793 028c 0223     	 movs r3,#2
 1794 028e C360     	 str r3,[r0,#12]
 146:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return;
 1795              	 .loc 1 146 0
 1796 0290 5EF80230 	 ldr r3,[lr,r2]
 1797 0294 43F04043 	 orr r3,r3,#-1073741824
 1798 0298 4EF80230 	 str r3,[lr,r2]
 1799 029c F9E0     	 b .L153
 1800              	.L188:
 1801 029e 00BF     	 .align 2
 1802              	.L187:
 1803 02a0 00000000 	 .word .LANCHOR0
 1804 02a4 00000000 	 .word .LANCHOR3
 1805 02a8 00000000 	 .word .LANCHOR1
 1806 02ac 14000000 	 .word .LANCHOR3+20
 1807 02b0 00000000 	 .word .LANCHOR6
 1808              	.LVL230:
 1809              	.L148:
 1810              	.LBE53:
 1811              	.LBE52:
1326:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             }
1327:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           } else {                                                                        /* endpoi
1328:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                              /*  trigg
1329:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           } 
1330:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           hcint = 0U;
1331:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1332:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /*local variable for HCCHAR*/
1333:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         dat = ptr_ch->HCCHAR;
 1812              	 .loc 1 1333 0
 1813 02b4 5EF80210 	 ldr r1,[lr,r2]
 1814              	.LVL231:
1334:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if (((hcint & (USB_CH_HCINTMSK_StallMsk_Msk |                                    /* STALL *
 1815              	 .loc 1 1334 0
 1816 02b8 13F4F36F 	 tst r3,#1944
 1817 02bc 1BD0     	 beq .L154
1335:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                       USB_CH_HCINTMSK_NakMsk_Msk   |                                     /* or NAK 
1336:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                       USB_CH_HCINTx_ERRORS )) != 0U) &&                                  /* or tran
 1818              	 .loc 1 1336 0
 1819 02be 11F4004F 	 tst r1,#32768
 1820 02c2 18D1     	 bne .L154
1337:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ((dat & USB_CH_HCCHAR_EPDir_Msk) == 0U))
1338:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         {                        /* and endpoint OUT */
1339:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1340:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             pktcnt = (uint32_t)((ptr_ch->HCTSIZ_BUFFERMODE & USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Msk)  
 1821              	 .loc 1 1340 0
 1822 02c4 0169     	 ldr r1,[r0,#16]
 1823              	.LVL232:
1341:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                       >> USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Pos);   
1342:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             mpsiz  = (ptr_ch->HCCHAR      ) & 0x000007FFU;
 1824              	 .loc 1 1342 0
 1825 02c6 5EF802C0 	 ldr ip,[lr,r2]
 1826 02ca CCF30A0C 	 ubfx ip,ip,#0,#11
 1827              	.LVL233:
 1828 02ce A346     	 mov fp,r4
1343:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             if ((ptr_pipe->num_transferring >= mpsiz) && (pktcnt > 0U)) {
 1829              	 .loc 1 1343 0
 1830 02d0 54F8049C 	 ldr r9,[r4,#-4]
 1831 02d4 CC45     	 cmp ip,r9
 1832 02d6 0BD8     	 bhi .L155
1340:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                       >> USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Pos);   
 1833              	 .loc 1 1340 0 discriminator 1
 1834 02d8 C1F3C941 	 ubfx r1,r1,#19,#10
 1835              	.LVL234:
 1836 02dc 0191     	 str r1,[sp,#4]
 1837              	 .loc 1 1343 0 discriminator 1
 1838 02de 39B1     	 cbz r1,.L155
 1839 02e0 54F8081C 	 ldr r1,[r4,#-8]
 1840 02e4 8944     	 add r9,r9,r1
1344:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               ptr_pipe->num_transferred_total += (uint32_t)(ptr_pipe->num_transferring - (mpsiz * p
 1841              	 .loc 1 1344 0
 1842 02e6 0199     	 ldr r1,[sp,#4]
 1843 02e8 0CFB1191 	 mls r1,ip,r1,r9
 1844 02ec 44F8081C 	 str r1,[r4,#-8]
 1845              	.L155:
1345:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             }
1346:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->num_transferring = 0U;
 1846              	 .loc 1 1346 0
 1847 02f0 0021     	 movs r1,#0
 1848 02f2 4BF8041C 	 str r1,[fp,#-4]
 1849              	.LVL235:
 1850              	.L154:
1347:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1348:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1349:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if ((hcint & USB_CH_HCINTMSK_NakMsk_Msk)!=0U) {                                /* if NAK */
 1851              	 .loc 1 1349 0
 1852 02f6 13F0100F 	 tst r3,#16
 1853 02fa 28D0     	 beq .L156
1350:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             is_nack[ch] = true;
 1854              	 .loc 1 1350 0
 1855 02fc 86F80080 	 strb r8,[r6]
1351:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->event |= (uint8_t)XMC_USBH_EVENT_HANDSHAKE_NAK;
 1856              	 .loc 1 1351 0
 1857 0300 A37A     	 ldrb r3,[r4,#10]
 1858 0302 43F00203 	 orr r3,r3,#2
 1859 0306 A372     	 strb r3,[r4,#10]
1352:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_ch->HCINT = USB_CH_HCINTMSK_NakMsk_Msk;                                /*    clear 
 1860              	 .loc 1 1352 0
 1861 0308 1023     	 movs r3,#16
 1862 030a 8360     	 str r3,[r0,#8]
1353:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                    /*    endpoi
 1863              	 .loc 1 1353 0
 1864 030c 5EF80230 	 ldr r3,[lr,r2]
 1865 0310 13F4004F 	 tst r3,#32768
 1866 0314 12D0     	 beq .L157
1354:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               if (ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) {                   /*
 1867              	 .loc 1 1354 0
 1868 0316 A379     	 ldrb r3,[r4,#6]
 1869 0318 032B     	 cmp r3,#3
 1870 031a 08D1     	 bne .L158
 1871              	.LVL236:
 1872              	.LBB54:
 1873              	.LBB55:
 145:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1874              	 .loc 1 145 0
 1875 031c 0223     	 movs r3,#2
 1876 031e C360     	 str r3,[r0,#12]
 146:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return;
 1877              	 .loc 1 146 0
 1878 0320 5EF80230 	 ldr r3,[lr,r2]
 1879 0324 43F04043 	 orr r3,r3,#-1073741824
 1880 0328 4EF80230 	 str r3,[lr,r2]
 1881 032c 3BE0     	 b .L161
 1882              	.LVL237:
 1883              	.L158:
 1884              	.LBE55:
 1885              	.LBE54:
1355:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 XMC_lTriggerHaltChannel(ptr_ch);                                       /*      trig
1356:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               } else {                                                                 /*     is en
1357:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;                             /*
 1886              	 .loc 1 1357 0
 1887 032e 5EF80230 	 ldr r3,[lr,r2]
 1888 0332 43F00043 	 orr r3,r3,#-2147483648
 1889 0336 4EF80230 	 str r3,[lr,r2]
 1890 033a 34E0     	 b .L161
 1891              	.L157:
 1892              	.LVL238:
 1893              	.LBB56:
 1894              	.LBB57:
 145:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1895              	 .loc 1 145 0
 1896 033c 0223     	 movs r3,#2
 1897 033e C360     	 str r3,[r0,#12]
 146:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return;
 1898              	 .loc 1 146 0
 1899 0340 5EF80230 	 ldr r3,[lr,r2]
 1900 0344 43F04043 	 orr r3,r3,#-1073741824
 1901 0348 4EF80230 	 str r3,[lr,r2]
 1902 034c 2BE0     	 b .L161
 1903              	.LVL239:
 1904              	.L156:
 1905              	.LBE57:
 1906              	.LBE56:
1358:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               }
1359:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             } else { /* If endpoint OUT */                                             /*    endpoi
1360:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               XMC_lTriggerHaltChannel(ptr_ch);                                         /*     trigg
1361:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             }
1362:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             hcint = 0U;
1363:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1364:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1365:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if ((hcint & USB_CH_HCINTMSK_StallMsk_Msk) != 0U) {                              /* if STAL
 1907              	 .loc 1 1365 0
 1908 034e 13F0080F 	 tst r3,#8
 1909 0352 16D0     	 beq .L160
1366:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             /*Reset the packet data toggle*/
1367:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_ch->HCINT   = USB_CH_HCINTMSK_StallMsk_Msk;                              /*  clear 
 1910              	 .loc 1 1367 0
 1911 0354 0823     	 movs r3,#8
 1912              	.LVL240:
 1913 0356 8360     	 str r3,[r0,#8]
1368:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                       /*  releas
 1914              	 .loc 1 1368 0
 1915 0358 0023     	 movs r3,#0
 1916 035a E371     	 strb r3,[r4,#7]
1369:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->packet &= (uint32_t)(~XMC_USBH_PACKET_DATA_Msk);
 1917              	 .loc 1 1369 0
 1918 035c 54F8143C 	 ldr r3,[r4,#-20]
 1919 0360 23F0F003 	 bic r3,r3,#240
1370:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->packet   |=  (uint32_t)XMC_USBH_PACKET_DATA0;
 1920              	 .loc 1 1370 0
 1921 0364 43F01003 	 orr r3,r3,#16
 1922 0368 44F8143C 	 str r3,[r4,#-20]
1371:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_HANDSHAKE_STALL;                            /
 1923              	 .loc 1 1371 0
 1924 036c 1023     	 movs r3,#16
 1925 036e A372     	 strb r3,[r4,#10]
 1926              	.LVL241:
 1927              	.LBB58:
 1928              	.LBB59:
 145:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1929              	 .loc 1 145 0
 1930 0370 0223     	 movs r3,#2
 1931 0372 C360     	 str r3,[r0,#12]
 146:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return;
 1932              	 .loc 1 146 0
 1933 0374 5EF80230 	 ldr r3,[lr,r2]
 1934 0378 43F04043 	 orr r3,r3,#-1073741824
 1935 037c 4EF80230 	 str r3,[lr,r2]
 1936              	.LVL242:
 1937 0380 11E0     	 b .L161
 1938              	.LVL243:
 1939              	.L160:
 1940              	.LBE59:
 1941              	.LBE58:
1372:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                             /*  trigge
1373:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             hcint = 0U;
1374:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         } 
1375:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if ((hcint & USB_CH_HCINTx_ERRORS) != 0U) {                                      /* if tran
 1942              	 .loc 1 1375 0
 1943 0382 13F4F06F 	 tst r3,#1920
 1944 0386 0ED0     	 beq .L161
1376:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_ch->HCINT = USB_CH_HCINTx_ERRORS;                                        /*  clear 
 1945              	 .loc 1 1376 0
 1946 0388 4FF4F063 	 mov r3,#1920
 1947              	.LVL244:
 1948 038c 8360     	 str r3,[r0,#8]
1377:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                       /*  releas
 1949              	 .loc 1 1377 0
 1950 038e 0023     	 movs r3,#0
 1951 0390 E371     	 strb r3,[r4,#7]
1378:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_BUS_ERROR;                                  /
 1952              	 .loc 1 1378 0
 1953 0392 4023     	 movs r3,#64
 1954 0394 A372     	 strb r3,[r4,#10]
 1955              	.LVL245:
 1956              	.LBB60:
 1957              	.LBB61:
 145:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1958              	 .loc 1 145 0
 1959 0396 0223     	 movs r3,#2
 1960 0398 C360     	 str r3,[r0,#12]
 146:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return;
 1961              	 .loc 1 146 0
 1962 039a 5EF80230 	 ldr r3,[lr,r2]
 1963 039e 43F04043 	 orr r3,r3,#-1073741824
 1964 03a2 4EF80230 	 str r3,[lr,r2]
 1965              	.LVL246:
 1966              	.L161:
 1967              	.LBE61:
 1968              	.LBE60:
1379:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                             /*  trigge
1380:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             hcint = 0U;
1381:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1382:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if ((ptr_pipe->transfer_active == 0U) && (ptr_pipe->in_use == 0U) && (ptr_pipe->event != 0U
 1969              	 .loc 1 1382 0
 1970 03a6 237A     	 ldrb r3,[r4,#8]
 1971 03a8 43B9     	 cbnz r3,.L146
 1972              	 .loc 1 1382 0 is_stmt 0 discriminator 1
 1973 03aa E379     	 ldrb r3,[r4,#7]
 1974 03ac 33B9     	 cbnz r3,.L146
 1975              	 .loc 1 1382 0 discriminator 2
 1976 03ae A17A     	 ldrb r1,[r4,#10]
 1977 03b0 21B1     	 cbz r1,.L146
1383:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, (uint32_t)ptr_pipe->event
 1978              	 .loc 1 1383 0 is_stmt 1
 1979 03b2 DAF80C30 	 ldr r3,[r10,#12]
 1980 03b6 9847     	 blx r3
 1981              	.LVL247:
1384:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ptr_pipe->event  = 0U;
 1982              	 .loc 1 1384 0
 1983 03b8 0023     	 movs r3,#0
 1984 03ba A372     	 strb r3,[r4,#10]
 1985              	.LVL248:
 1986              	.L146:
1284:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Check for interrupt of all channels */
 1987              	 .loc 1 1284 0 discriminator 2
 1988 03bc 0135     	 adds r5,r5,#1
 1989              	.LVL249:
 1990 03be 2034     	 adds r4,r4,#32
 1991 03c0 0136     	 adds r6,r6,#1
 1992 03c2 0E2D     	 cmp r5,#14
 1993 03c4 7FF4E6AE 	 bne .L162
 1994 03c8 DDF800B0 	 ldr fp,[sp]
 1995              	.LVL250:
 1996              	.L145:
1385:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         }
1386:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
1387:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
1388:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1389:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   /*Check if remote wakeup event detected*/
1390:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_WkUpInt_Msk) != 0U)
 1997              	 .loc 1 1390 0
 1998 03cc BBF1000F 	 cmp fp,#0
 1999 03d0 63DA     	 bge .L163
1391:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
1392:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE =  USB_GINTSTS_HOSTMODE_WkUpInt_Msk; /* Clea
 2000              	 .loc 1 1392 0
 2001 03d2 3C4B     	 ldr r3,.L189
 2002 03d4 1A68     	 ldr r2,[r3]
 2003 03d6 4FF00041 	 mov r1,#-2147483648
 2004 03da 5161     	 str r1,[r2,#20]
1393:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /*Recover PHY clock*/
1394:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.global_register->PCGCCTL = XMC_USBH_PHY_CLK_UNGATE;
 2005              	 .loc 1 1394 0
 2006 03dc 4FF48071 	 mov r1,#256
 2007 03e0 C2F8001E 	 str r1,[r2,#3584]
1395:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /*Callback function execution*/
1396:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_REMOTE_WAKEUP);
 2008              	 .loc 1 1396 0
 2009 03e4 9B68     	 ldr r3,[r3,#8]
 2010 03e6 0020     	 movs r0,#0
 2011 03e8 4021     	 movs r1,#64
 2012 03ea 9847     	 blx r3
 2013              	.LVL251:
 2014 03ec 55E0     	 b .L163
 2015              	.L171:
 2016 03ee A4F12000 	 sub r0,r4,#32
 2017              	.LVL252:
 2018 03f2 2246     	 mov r2,r4
1397:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1398:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1399:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   /* Handle restarts of unfinished transfers (due to NAK or ACK) */
1400:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   ptr_pipe = (XMC_USBH0_pipe_t *)(pipe);
1401:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
1402:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if ((ptr_pipe->in_use == 1U) && (ptr_pipe->transfer_active == 0U)) {
 2019              	 .loc 1 1402 0
 2020 03f4 14F8053C 	 ldrb r3,[r4,#-5]
 2021 03f8 012B     	 cmp r3,#1
 2022 03fa 32D1     	 bne .L164
 2023              	 .loc 1 1402 0 is_stmt 0 discriminator 1
 2024 03fc 14F8043C 	 ldrb r3,[r4,#-4]
 2025 0400 7BBB     	 cbnz r3,.L164
1403:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Restart periodic transfer if not in progress and interval expired */
1404:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (ptr_pipe->ep_type != (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) 
 2026              	 .loc 1 1404 0 is_stmt 1
 2027 0402 14F8063C 	 ldrb r3,[r4,#-6]
 2028 0406 032B     	 cmp r3,#3
 2029 0408 1BD0     	 beq .L165
1405:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
1406:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             /*Data toggle if NACK not received*/
1407:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             if (!is_nack[ch])
 2030              	 .loc 1 1407 0
 2031 040a 2B78     	 ldrb r3,[r5]
 2032 040c B3B9     	 cbnz r3,.L166
1408:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             {
1409:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               switch (ptr_pipe->packet & (uint32_t)XMC_USBH_PACKET_DATA_Msk)
 2033              	 .loc 1 1409 0
 2034 040e 54F8203C 	 ldr r3,[r4,#-32]
 2035 0412 03F0F001 	 and r1,r3,#240
 2036 0416 1029     	 cmp r1,#16
 2037 0418 02D0     	 beq .L168
 2038 041a 2029     	 cmp r1,#32
 2039 041c 07D0     	 beq .L169
 2040 041e 14E0     	 b .L167
 2041              	.L168:
1410:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               {
1411:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 case XMC_USBH_PACKET_DATA0:
1412:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                   ptr_pipe->packet   &= (uint32_t)~XMC_USBH_PACKET_DATA_Msk;
 2042              	 .loc 1 1412 0
 2043 0420 23F0F003 	 bic r3,r3,#240
1413:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                   ptr_pipe->packet   |= (uint32_t)XMC_USBH_PACKET_DATA1;
 2044              	 .loc 1 1413 0
 2045 0424 43F02003 	 orr r3,r3,#32
 2046 0428 44F8203C 	 str r3,[r4,#-32]
1414:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                   break;
 2047              	 .loc 1 1414 0
 2048 042c 0DE0     	 b .L167
 2049              	.L169:
1415:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 case XMC_USBH_PACKET_DATA1:
1416:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                   ptr_pipe->packet   &= (uint32_t)~XMC_USBH_PACKET_DATA_Msk;
 2050              	 .loc 1 1416 0
 2051 042e 23F0F003 	 bic r3,r3,#240
1417:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                   ptr_pipe->packet   |= (uint32_t)XMC_USBH_PACKET_DATA0;
 2052              	 .loc 1 1417 0
 2053 0432 43F01003 	 orr r3,r3,#16
 2054 0436 44F8203C 	 str r3,[r4,#-32]
1418:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                   break;
 2055              	 .loc 1 1418 0
 2056 043a 06E0     	 b .L167
 2057              	.L166:
1419:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 default:
1420:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                   break;
1421:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               }
1422:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             }
1423:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             else
1424:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             {
1425:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               is_nack[ch] = false;
 2058              	 .loc 1 1425 0
 2059 043c 0023     	 movs r3,#0
 2060 043e 2B70     	 strb r3,[r5]
 2061 0440 03E0     	 b .L167
 2062              	.L165:
1426:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             }
1427:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
1428:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (((ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT)&&(ptr_pipe->interrupt_trigge
 2063              	 .loc 1 1428 0 discriminator 1
 2064 0442 14F8033C 	 ldrb r3,[r4,#-3]
 2065 0446 012B     	 cmp r3,#1
 2066 0448 0BD1     	 bne .L164
 2067              	.L167:
1429:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 (ptr_pipe->ep_type != (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT))
1430:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
1431:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_pipe->interrupt_triggered = 0U;
 2068              	 .loc 1 1431 0
 2069 044a 0023     	 movs r3,#0
 2070 044c 02F8033C 	 strb r3,[r2,#-3]
1432:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_pipe->transfer_active = 1U;
 2071              	 .loc 1 1432 0
 2072 0450 0123     	 movs r3,#1
 2073 0452 02F8043C 	 strb r3,[r2,#-4]
 2074 0456 3919     	 adds r1,r7,r4
1433:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         (void)XMC_lStartTransfer (ptr_pipe, (((USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_reg
 2075              	 .loc 1 1433 0
 2076 0458 1A4B     	 ldr r3,.L189
 2077 045a 5B68     	 ldr r3,[r3,#4]
 2078 045c 1944     	 add r1,r1,r3
 2079 045e FFF7FEFF 	 bl XMC_lStartTransfer
 2080              	.LVL253:
 2081              	.L164:
 2082 0462 2034     	 adds r4,r4,#32
 2083              	.LVL254:
 2084 0464 0135     	 adds r5,r5,#1
 2085              	.LVL255:
1401:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     if ((ptr_pipe->in_use == 1U) && (ptr_pipe->transfer_active == 0U)) {
 2086              	 .loc 1 1401 0 discriminator 2
 2087 0466 B442     	 cmp r4,r6
 2088 0468 C1D1     	 bne .L171
 2089 046a 28E0     	 b .L184
 2090              	.LVL256:
 2091              	.L132:
 2092 046c 04F00C04 	 and r4,r4,#12
 2093              	.LVL257:
1186:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if (XMC_USBH0_device.port_reset_active == true) {
 2094              	 .loc 1 1186 0
 2095 0470 0C2C     	 cmp r4,#12
 2096 0472 3FF4ECAD 	 beq .L172
 2097 0476 F0E5     	 b .L130
 2098              	.LVL258:
 2099              	.L174:
1245:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #endif
 2100              	 .loc 1 1245 0
 2101 0478 DCF80030 	 ldr r3,[ip]
 2102              	.LVL259:
 2103 047c 4AE6     	 b .L173
 2104              	.LVL260:
 2105              	.L138:
1241:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** #if defined __TASKING__/*tasking*/
 2106              	 .loc 1 1241 0
 2107 047e 002C     	 cmp r4,#0
 2108 0480 FAD1     	 bne .L174
 2109 0482 4DE6     	 b .L140
 2110              	.LVL261:
 2111              	.L151:
1312:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                      /*   releas
 2112              	 .loc 1 1312 0
 2113 0484 5EF80230 	 ldr r3,[lr,r2]
 2114 0488 13F4004F 	 tst r3,#32768
 2115 048c 7FF4C9AE 	 bne .L177
 2116 0490 11E0     	 b .L185
 2117              	.LVL262:
 2118              	.L153:
1333:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         if (((hcint & (USB_CH_HCINTMSK_StallMsk_Msk |                                    /* STALL *
 2119              	 .loc 1 1333 0
 2120 0492 5EF80230 	 ldr r3,[lr,r2]
 2121 0496 0023     	 movs r3,#0
 2122 0498 59E7     	 b .L156
 2123              	.LVL263:
 2124              	.L163:
 2125 049a 0B4E     	 ldr r6,.L189+4
 2126 049c 06F12004 	 add r4,r6,#32
 2127 04a0 0A4D     	 ldr r5,.L189+8
 2128 04a2 06F5F076 	 add r6,r6,#480
 2129 04a6 A4F12007 	 sub r7,r4,#32
 2130 04aa C7F1FF27 	 rsb r7,r7,#-16711936
 2131 04ae 07F57F07 	 add r7,r7,#16711680
 2132 04b2 E037     	 adds r7,r7,#224
 2133 04b4 9BE7     	 b .L171
 2134              	.LVL264:
 2135              	.L185:
 2136 04b6 5EF80230 	 ldr r3,[lr,r2]
 2137 04ba 0023     	 movs r3,#0
 2138 04bc 1BE7     	 b .L154
 2139              	.LVL265:
 2140              	.L184:
1434:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
1435:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
1436:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     ptr_pipe++;
1437:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
1438:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 2141              	 .loc 1 1438 0
 2142 04be 03B0     	 add sp,sp,#12
 2143              	.LCFI13:
 2144              	 .cfi_def_cfa_offset 36
 2145              	 
 2146 04c0 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 2147              	.LVL266:
 2148              	.L190:
 2149              	 .align 2
 2150              	.L189:
 2151 04c4 00000000 	 .word .LANCHOR0
 2152 04c8 00000000 	 .word .LANCHOR3
 2153 04cc 00000000 	 .word .LANCHOR6
 2154              	 .cfi_endproc
 2155              	.LFE206:
 2157              	 .section .text.XMC_USBH_GetInterruptStatus,"ax",%progbits
 2158              	 .align 2
 2159              	 .global XMC_USBH_GetInterruptStatus
 2160              	 .thumb
 2161              	 .thumb_func
 2163              	XMC_USBH_GetInterruptStatus:
 2164              	.LFB207:
1439:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1440:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*Function provides host mode interrupt status*/
1441:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** uint32_t XMC_USBH_GetInterruptStatus(void)
1442:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** {
 2165              	 .loc 1 1442 0
 2166              	 .cfi_startproc
 2167              	 
 2168              	 
 2169              	 
1443:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return XMC_USBH0_device.global_register->GINTSTS_HOSTMODE;
 2170              	 .loc 1 1443 0
 2171 0000 014B     	 ldr r3,.L192
 2172 0002 1B68     	 ldr r3,[r3]
 2173 0004 5869     	 ldr r0,[r3,#20]
1444:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
 2174              	 .loc 1 1444 0
 2175 0006 7047     	 bx lr
 2176              	.L193:
 2177              	 .align 2
 2178              	.L192:
 2179 0008 00000000 	 .word .LANCHOR0
 2180              	 .cfi_endproc
 2181              	.LFE207:
 2183              	 .section .text.XMC_USBH_Select_VBUS,"ax",%progbits
 2184              	 .align 2
 2185              	 .global XMC_USBH_Select_VBUS
 2186              	 .thumb
 2187              	 .thumb_func
 2189              	XMC_USBH_Select_VBUS:
 2190              	.LFB208:
1445:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1446:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*Function selects the port pin used as DRIVEVBUS*/
1447:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** void XMC_USBH_Select_VBUS(XMC_GPIO_PORT_t* port, uint32_t pin)
1448:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** {
 2191              	 .loc 1 1448 0
 2192              	 .cfi_startproc
 2193              	 
 2194              	 
 2195              	.LVL267:
 2196 0000 08B5     	 push {r3,lr}
 2197              	.LCFI14:
 2198              	 .cfi_def_cfa_offset 8
 2199              	 .cfi_offset 3,-8
 2200              	 .cfi_offset 14,-4
1449:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   VBUS_port = port;
 2201              	 .loc 1 1449 0
 2202 0002 044B     	 ldr r3,.L196
 2203 0004 1860     	 str r0,[r3]
1450:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   VBUS_pin = pin;
 2204              	 .loc 1 1450 0
 2205 0006 044B     	 ldr r3,.L196+4
 2206 0008 1960     	 str r1,[r3]
1451:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1452:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   /*Configure the port pin alternate function*/
1453:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 2207              	 .loc 1 1453 0
 2208 000a C9B2     	 uxtb r1,r1
 2209              	.LVL268:
 2210 000c 8822     	 movs r2,#136
 2211 000e FFF7FEFF 	 bl XMC_GPIO_SetMode
 2212              	.LVL269:
 2213 0012 08BD     	 pop {r3,pc}
 2214              	.L197:
 2215              	 .align 2
 2216              	.L196:
 2217 0014 00000000 	 .word .LANCHOR4
 2218 0018 00000000 	 .word .LANCHOR5
 2219              	 .cfi_endproc
 2220              	.LFE208:
 2222              	 .section .text.XMC_USBH_TurnOffResumeBit,"ax",%progbits
 2223              	 .align 2
 2224              	 .global XMC_USBH_TurnOffResumeBit
 2225              	 .thumb
 2226              	 .thumb_func
 2228              	XMC_USBH_TurnOffResumeBit:
 2229              	.LFB209:
1454:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
1455:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1456:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*Function asserts the remote wakeup request by device by clearing the resume bit*/
1457:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** void XMC_USBH_TurnOffResumeBit(void)
1458:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** {
 2230              	 .loc 1 1458 0
 2231              	 .cfi_startproc
 2232              	 
 2233              	 
 2234              	 
1459:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t hprt;
1460:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   /*Clear resume bit*/
1461:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   hprt = XMC_USBH0_device.global_register->HPRT;
 2235              	 .loc 1 1461 0
 2236 0000 044B     	 ldr r3,.L199
 2237 0002 1A68     	 ldr r2,[r3]
 2238 0004 D2F84034 	 ldr r3,[r2,#1088]
 2239              	.LVL270:
1462:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
1463:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   hprt &= (uint32_t)~((uint32_t)USB_HPRT_PrtRes_Msk);
 2240              	 .loc 1 1463 0
 2241 0008 23F04403 	 bic r3,r3,#68
 2242              	.LVL271:
1464:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_device.global_register->HPRT = hprt;
 2243              	 .loc 1 1464 0
 2244 000c C2F84034 	 str r3,[r2,#1088]
 2245 0010 7047     	 bx lr
 2246              	.L200:
 2247 0012 00BF     	 .align 2
 2248              	.L199:
 2249 0014 00000000 	 .word .LANCHOR0
 2250              	 .cfi_endproc
 2251              	.LFE209:
 2253              	 .section .text.XMC_USBH_osDelay,"ax",%progbits
 2254              	 .align 2
 2255              	 .weak XMC_USBH_osDelay
 2256              	 .thumb
 2257              	 .thumb_func
 2259              	XMC_USBH_osDelay:
 2260              	.LFB210:
1465:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** }
1466:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1467:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1468:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1469:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*USB host driver assembling all the implementation into a single CMSIS compliant structure type*/
1470:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** XMC_USBH_DRIVER_t Driver_USBH0 = {
1471:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_GetVersion,
1472:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_GetCapabilities,
1473:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_Initialize,
1474:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_Uninitialize,
1475:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PowerControl,
1476:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PortVbusOnOff,
1477:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PortReset,
1478:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PortSuspend,
1479:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PortResume,
1480:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PortGetState,
1481:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PipeCreate,
1482:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PipeModify,
1483:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PipeDelete,
1484:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PipeReset,
1485:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PipeTransfer,
1486:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PipeTransferGetResult,
1487:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_PipeTransferAbort,
1488:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH_GetFrameNumber
1489:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** };
1490:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1491:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
1492:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** /*Weak definition of delay function*/
1493:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** __WEAK uint8_t XMC_USBH_osDelay(uint32_t MS)
1494:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** {
 2261              	 .loc 1 1494 0
 2262              	 .cfi_startproc
 2263              	 
 2264              	 
 2265              	 
 2266              	.LVL272:
 2267              	.L202:
1495:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   (void)MS;
1496:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   /*A precise time delay implementation for this function has to be provided*/
1497:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   while (1)
1498:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
1499:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     /*Wait*/
1500:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 2268              	 .loc 1 1500 0 discriminator 1
 2269 0000 FEE7     	 b .L202
 2270              	 .cfi_endproc
 2271              	.LFE210:
 2273 0002 00BF     	 .section .text.XMC_USBH_PipeTransferAbort,"ax",%progbits
 2274              	 .align 2
 2275              	 .thumb
 2276              	 .thumb_func
 2278              	XMC_USBH_PipeTransferAbort:
 2279              	.LFB204:
1073:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
 2280              	 .loc 1 1073 0
 2281              	 .cfi_startproc
 2282              	 
 2283              	 
 2284              	.LVL273:
 2285 0000 38B5     	 push {r3,r4,r5,lr}
 2286              	.LCFI15:
 2287              	 .cfi_def_cfa_offset 16
 2288              	 .cfi_offset 3,-16
 2289              	 .cfi_offset 4,-12
 2290              	 .cfi_offset 5,-8
 2291              	 .cfi_offset 14,-4
 2292              	.LVL274:
1081:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 2293              	 .loc 1 1081 0
 2294 0002 294B     	 ldr r3,.L215
 2295 0004 5B7C     	 ldrb r3,[r3,#17]
 2296 0006 002B     	 cmp r3,#0
 2297 0008 3FD0     	 beq .L208
 2298 000a 0446     	 mov r4,r0
1087:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 2299              	 .loc 1 1087 0
 2300 000c 0028     	 cmp r0,#0
 2301 000e 3FD0     	 beq .L209
1093:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2302              	 .loc 1 1093 0
 2303 0010 254B     	 ldr r3,.L215
 2304 0012 5B68     	 ldr r3,[r3,#4]
 2305 0014 C31A     	 subs r3,r0,r3
 2306 0016 5B11     	 asrs r3,r3,#5
 2307              	.LVL275:
1095:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         ptr_pipe->in_use = 0U;
 2308              	 .loc 1 1095 0
 2309 0018 244A     	 ldr r2,.L215+4
 2310 001a 02EB4312 	 add r2,r2,r3,lsl#5
 2311 001e 1832     	 adds r2,r2,#24
 2312 0020 D278     	 ldrb r2,[r2,#3]
 2313 0022 12F0FF0F 	 tst r2,#255
 2314 0026 36D0     	 beq .L210
1096:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         /* Disable channel if not yet halted */
 2315              	 .loc 1 1096 0
 2316 0028 204A     	 ldr r2,.L215+4
 2317 002a 02EB4313 	 add r3,r2,r3,lsl#5
 2318              	.LVL276:
 2319 002e 0022     	 movs r2,#0
 2320 0030 DA76     	 strb r2,[r3,#27]
1098:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         {
 2321              	 .loc 1 1098 0
 2322 0032 8368     	 ldr r3,[r0,#8]
 2323 0034 13F0020F 	 tst r3,#2
 2324 0038 30D1     	 bne .L211
1100:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           {
 2325              	 .loc 1 1100 0
 2326 003a 0368     	 ldr r3,[r0]
 2327 003c 9342     	 cmp r3,r2
 2328 003e 30DA     	 bge .L212
 2329 0040 0546     	 mov r5,r0
1102:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             (void)XMC_USBH_osDelay(1U);
 2330              	 .loc 1 1102 0
 2331 0042 EA60     	 str r2,[r5,#12]
1103:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             if (ptr_ch->HCINT & USB_CH_HCINT_NAK_Msk) {
 2332              	 .loc 1 1103 0
 2333 0044 0120     	 movs r0,#1
 2334              	.LVL277:
 2335 0046 FFF7FEFF 	 bl XMC_USBH_osDelay
 2336              	.LVL278:
1104:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               ptr_ch->HCINT  =  USB_CH_HCINTx_ALL;    /* Clear all interrupts */
 2337              	 .loc 1 1104 0
 2338 004a A368     	 ldr r3,[r4,#8]
 2339 004c 13F0100F 	 tst r3,#16
 2340 0050 04D0     	 beq .L205
1105:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               status = XMC_USBH_DRIVER_OK;
 2341              	 .loc 1 1105 0
 2342 0052 40F2BB73 	 movw r3,#1979
 2343 0056 A360     	 str r3,[r4,#8]
 2344              	.LVL279:
1106:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****             }
 2345              	 .loc 1 1106 0
 2346 0058 0020     	 movs r0,#0
 2347 005a 38BD     	 pop {r3,r4,r5,pc}
 2348              	.LVL280:
 2349              	.L205:
1110:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****               ptr_ch->HCCHAR =  (uint32_t)(ptr_ch->HCCHAR | USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR
 2350              	 .loc 1 1110 0
 2351 005c 40F2BB73 	 movw r3,#1979
 2352 0060 A360     	 str r3,[r4,#8]
1111:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2353              	 .loc 1 1111 0
 2354 0062 2368     	 ldr r3,[r4]
 2355 0064 43F04043 	 orr r3,r3,#-1073741824
 2356 0068 2360     	 str r3,[r4]
 2357              	.LVL281:
 2358 006a 41F28833 	 movw r3,#5000
1077:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
 2359              	 .loc 1 1077 0
 2360 006e 4FF0FF30 	 mov r0,#-1
1116:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                   status = XMC_USBH_DRIVER_OK;
 2361              	 .loc 1 1116 0
 2362 0072 40F2BB75 	 movw r5,#1979
1117:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 }
 2363              	 .loc 1 1117 0
 2364 0076 0021     	 movs r1,#0
 2365              	.LVL282:
 2366              	.L207:
1115:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                   ptr_ch->HCINT = USB_CH_HCINTx_ALL;
 2367              	 .loc 1 1115 0
 2368 0078 A268     	 ldr r2,[r4,#8]
 2369 007a 12F0020F 	 tst r2,#2
1116:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                   status = XMC_USBH_DRIVER_OK;
 2370              	 .loc 1 1116 0
 2371 007e 1CBF     	 itt ne
 2372 0080 A560     	 strne r5,[r4,#8]
 2373              	.LVL283:
1117:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 }
 2374              	 .loc 1 1117 0
 2375 0082 0846     	 movne r0,r1
 2376              	.LVL284:
1114:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                 if (ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) {
 2377              	 .loc 1 1114 0
 2378 0084 013B     	 subs r3,r3,#1
 2379              	.LVL285:
 2380 0086 F7D1     	 bne .L207
 2381 0088 38BD     	 pop {r3,r4,r5,pc}
 2382              	.LVL286:
 2383              	.L208:
1077:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
 2384              	 .loc 1 1077 0
 2385 008a 4FF0FF30 	 mov r0,#-1
 2386              	.LVL287:
 2387 008e 38BD     	 pop {r3,r4,r5,pc}
 2388              	.LVL288:
 2389              	.L209:
1089:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 2390              	 .loc 1 1089 0
 2391 0090 6FF00400 	 mvn r0,#4
 2392              	.LVL289:
 2393 0094 38BD     	 pop {r3,r4,r5,pc}
 2394              	.LVL290:
 2395              	.L210:
1077:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   
 2396              	 .loc 1 1077 0
 2397 0096 4FF0FF30 	 mov r0,#-1
 2398              	.LVL291:
 2399 009a 38BD     	 pop {r3,r4,r5,pc}
 2400              	.LVL292:
 2401              	.L211:
 2402 009c 4FF0FF30 	 mov r0,#-1
 2403              	.LVL293:
 2404 00a0 38BD     	 pop {r3,r4,r5,pc}
 2405              	.LVL294:
 2406              	.L212:
 2407 00a2 4FF0FF30 	 mov r0,#-1
 2408              	.LVL295:
1128:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2409              	 .loc 1 1128 0
 2410 00a6 38BD     	 pop {r3,r4,r5,pc}
 2411              	.LVL296:
 2412              	.L216:
 2413              	 .align 2
 2414              	.L215:
 2415 00a8 00000000 	 .word .LANCHOR0
 2416 00ac 00000000 	 .word .LANCHOR3
 2417              	 .cfi_endproc
 2418              	.LFE204:
 2420              	 .section .text.XMC_USBH_PortResume,"ax",%progbits
 2421              	 .align 2
 2422              	 .thumb
 2423              	 .thumb_func
 2425              	XMC_USBH_PortResume:
 2426              	.LFB196:
 629:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2427              	 .loc 1 629 0
 2428              	 .cfi_startproc
 2429              	 
 2430              	 
 2431              	.LVL297:
 632:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 2432              	 .loc 1 632 0
 2433 0000 124B     	 ldr r3,.L223
 2434 0002 5B7C     	 ldrb r3,[r3,#17]
 2435 0004 DBB1     	 cbz r3,.L219
 638:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 2436              	 .loc 1 638 0
 2437 0006 E8B9     	 cbnz r0,.L220
 629:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2438              	 .loc 1 629 0
 2439 0008 10B5     	 push {r4,lr}
 2440              	.LCFI16:
 2441              	 .cfi_def_cfa_offset 8
 2442              	 .cfi_offset 4,-8
 2443              	 .cfi_offset 14,-4
 645:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /*Set resume bit*/
 2444              	 .loc 1 645 0
 2445 000a 104C     	 ldr r4,.L223
 2446 000c 2268     	 ldr r2,[r4]
 2447 000e 4FF48073 	 mov r3,#256
 2448 0012 C2F8003E 	 str r3,[r2,#3584]
 647:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 2449              	 .loc 1 647 0
 2450 0016 D2F84034 	 ldr r3,[r2,#1088]
 2451              	.LVL298:
 648:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt |= (uint32_t)USB_HPRT_PrtRes_Msk;
 2452              	 .loc 1 648 0
 2453 001a 23F00403 	 bic r3,r3,#4
 2454              	.LVL299:
 649:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 2455              	 .loc 1 649 0
 2456 001e 43F04003 	 orr r3,r3,#64
 2457              	.LVL300:
 650:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2458              	 .loc 1 650 0
 2459 0022 C2F84034 	 str r3,[r2,#1088]
 652:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2460              	 .loc 1 652 0
 2461 0026 1420     	 movs r0,#20
 2462              	.LVL301:
 2463 0028 FFF7FEFF 	 bl XMC_USBH_osDelay
 2464              	.LVL302:
 654:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 2465              	 .loc 1 654 0
 2466 002c 2268     	 ldr r2,[r4]
 2467 002e D2F84034 	 ldr r3,[r2,#1088]
 2468              	.LVL303:
 656:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 2469              	 .loc 1 656 0
 2470 0032 23F04403 	 bic r3,r3,#68
 2471              	.LVL304:
 657:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 2472              	 .loc 1 657 0
 2473 0036 C2F84034 	 str r3,[r2,#1088]
 630:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t hprt;
 2474              	 .loc 1 630 0
 2475 003a 0020     	 movs r0,#0
 2476 003c 10BD     	 pop {r4,pc}
 2477              	.LVL305:
 2478              	.L219:
 2479              	.LCFI17:
 2480              	 .cfi_def_cfa_offset 0
 2481              	 .cfi_restore 4
 2482              	 .cfi_restore 14
 634:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 2483              	 .loc 1 634 0
 2484 003e 4FF0FF30 	 mov r0,#-1
 2485              	.LVL306:
 2486 0042 7047     	 bx lr
 2487              	.LVL307:
 2488              	.L220:
 640:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 2489              	 .loc 1 640 0
 2490 0044 6FF00400 	 mvn r0,#4
 2491              	.LVL308:
 2492 0048 7047     	 bx lr
 2493              	.L224:
 2494 004a 00BF     	 .align 2
 2495              	.L223:
 2496 004c 00000000 	 .word .LANCHOR0
 2497              	 .cfi_endproc
 2498              	.LFE196:
 2500              	 .section .text.XMC_USBH_PortReset,"ax",%progbits
 2501              	 .align 2
 2502              	 .thumb
 2503              	 .thumb_func
 2505              	XMC_USBH_PortReset:
 2506              	.LFB194:
 542:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t hprt;
 2507              	 .loc 1 542 0
 2508              	 .cfi_startproc
 2509              	 
 2510              	 
 2511              	.LVL309:
 2512 0000 70B5     	 push {r4,r5,r6,lr}
 2513              	.LCFI18:
 2514              	 .cfi_def_cfa_offset 16
 2515              	 .cfi_offset 4,-16
 2516              	 .cfi_offset 5,-12
 2517              	 .cfi_offset 6,-8
 2518              	 .cfi_offset 14,-4
 2519              	.LVL310:
 545:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   {
 2520              	 .loc 1 545 0
 2521 0002 194B     	 ldr r3,.L233
 2522 0004 5B7C     	 ldrb r3,[r3,#17]
 2523 0006 53B3     	 cbz r3,.L229
 553:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 2524              	 .loc 1 553 0
 2525 0008 0028     	 cmp r0,#0
 2526 000a 0CBF     	 ite eq
 2527 000c 0026     	 moveq r6,#0
 2528 000e 6FF00406 	 mvnne r6,#4
 2529              	.LVL311:
 556:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hprt  =  XMC_USBH0_device.global_register->HPRT;
 2530              	 .loc 1 556 0
 2531 0012 154C     	 ldr r4,.L233
 2532 0014 0123     	 movs r3,#1
 2533 0016 A374     	 strb r3,[r4,#18]
 557:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtEna_Msk;                            /* Disable port */
 2534              	 .loc 1 557 0
 2535 0018 2268     	 ldr r2,[r4]
 2536 001a D2F84054 	 ldr r5,[r2,#1088]
 2537              	.LVL312:
 558:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hprt |= (uint32_t)USB_HPRT_PrtRst_Msk;                            /* Port reset */
 2538              	 .loc 1 558 0
 2539 001e 25F00403 	 bic r3,r5,#4
 2540              	.LVL313:
 559:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 2541              	 .loc 1 559 0
 2542 0022 43F48073 	 orr r3,r3,#256
 2543              	.LVL314:
 560:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait at least 50ms *
 2544              	 .loc 1 560 0
 2545 0026 C2F84034 	 str r3,[r2,#1088]
 561:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtRst_Msk;                            /* Clear port reset */
 2546              	 .loc 1 561 0
 2547 002a 3220     	 movs r0,#50
 2548              	.LVL315:
 2549 002c FFF7FEFF 	 bl XMC_USBH_osDelay
 2550              	.LVL316:
 562:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 2551              	 .loc 1 562 0
 2552 0030 25F48275 	 bic r5,r5,#260
 2553              	.LVL317:
 563:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait for ISR */
 2554              	 .loc 1 563 0
 2555 0034 2368     	 ldr r3,[r4]
 2556 0036 C3F84054 	 str r5,[r3,#1088]
 564:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2557              	 .loc 1 564 0
 2558 003a 3220     	 movs r0,#50
 2559 003c FFF7FEFF 	 bl XMC_USBH_osDelay
 2560              	.LVL318:
 567:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 2561              	 .loc 1 567 0
 2562 0040 2268     	 ldr r2,[r4]
 2563              	.L228:
 567:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 2564              	 .loc 1 567 0 is_stmt 0 discriminator 1
 2565 0042 D2F84034 	 ldr r3,[r2,#1088]
 2566 0046 13F0040F 	 tst r3,#4
 2567 004a FAD0     	 beq .L228
 572:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     {
 2568              	 .loc 1 572 0 is_stmt 1
 2569 004c 064B     	 ldr r3,.L233
 2570 004e 9B7C     	 ldrb r3,[r3,#18]
 2571 0050 3BB1     	 cbz r3,.L226
 574:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR;                               /* reset not confirmed inside I
 2572              	 .loc 1 574 0
 2573 0052 0022     	 movs r2,#0
 2574 0054 044B     	 ldr r3,.L233
 2575 0056 9A74     	 strb r2,[r3,#18]
 2576              	.LVL319:
 575:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     }
 2577              	 .loc 1 575 0
 2578 0058 4FF0FF36 	 mov r6,#-1
 2579 005c 01E0     	 b .L226
 2580              	.LVL320:
 2581              	.L229:
 547:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   }
 2582              	 .loc 1 547 0
 2583 005e 4FF0FF36 	 mov r6,#-1
 2584              	.LVL321:
 2585              	.L226:
 580:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2586              	 .loc 1 580 0
 2587 0062 3046     	 mov r0,r6
 2588 0064 70BD     	 pop {r4,r5,r6,pc}
 2589              	.LVL322:
 2590              	.L234:
 2591 0066 00BF     	 .align 2
 2592              	.L233:
 2593 0068 00000000 	 .word .LANCHOR0
 2594              	 .cfi_endproc
 2595              	.LFE194:
 2597              	 .section .text.XMC_USBH_PowerControl,"ax",%progbits
 2598              	 .align 2
 2599              	 .thumb
 2600              	 .thumb_func
 2602              	XMC_USBH_PowerControl:
 2603              	.LFB192:
 395:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2604              	 .loc 1 395 0
 2605              	 .cfi_startproc
 2606              	 
 2607              	 
 2608              	.LVL323:
 2609 0000 38B5     	 push {r3,r4,r5,lr}
 2610              	.LCFI19:
 2611              	 .cfi_def_cfa_offset 16
 2612              	 .cfi_offset 3,-16
 2613              	 .cfi_offset 4,-12
 2614              	 .cfi_offset 5,-8
 2615              	 .cfi_offset 14,-4
 2616              	.LVL324:
 398:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     case XMC_USBH_POWER_LOW:
 2617              	 .loc 1 398 0
 2618 0002 10B1     	 cbz r0,.L237
 2619 0004 0228     	 cmp r0,#2
 2620 0006 27D0     	 beq .L238
 2621 0008 95E0     	 b .L247
 2622              	.L237:
 2623              	.LVL325:
 2624              	.LBB62:
 2625              	.LBB63:
 2626              	 .loc 2 1721 0
 2627 000a 4F4B     	 ldr r3,.L249
 2628 000c 4FF40062 	 mov r2,#2048
 2629 0010 C3F88C20 	 str r2,[r3,#140]
 2630              	.LBB64:
 2631              	.LBB65:
 2632              	 .loc 3 946 0
 2633              	
 2634 0014 BFF34F8F 	 dsb 0xF
 2635              	
 2636              	 .thumb
 2637              	.LBE65:
 2638              	.LBE64:
 2639              	.LBB66:
 2640              	.LBB67:
 935:C:/Files/Projects/Git/CMSIS/Include\cmsis_gcc.h **** }
 2641              	 .loc 3 935 0
 2642              	
 2643 0018 BFF36F8F 	 isb 0xF
 2644              	
 2645              	.LVL326:
 2646              	 .thumb
 2647              	.LBE67:
 2648              	.LBE66:
 2649              	.LBE63:
 2650              	.LBE62:
 2651              	.LBB68:
 2652              	.LBB69:
1722:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __DSB();
1723:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __ISB();
1724:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1725:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1726:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1727:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1728:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1729:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Get Pending Interrupt
1730:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is pending.
1734:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1735:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1736:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1738:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1740:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1742:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   else
1743:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1744:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return(0U);
1745:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1746:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1747:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1748:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1749:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1750:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Set Pending Interrupt
1751:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1754:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1755:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1757:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1759:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1761:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1762:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1763:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1764:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1765:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Clear Pending Interrupt
1766:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1769:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1770:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1772:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1774:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 2653              	 .loc 2 1774 0
 2654 001c C3F88C21 	 str r2,[r3,#396]
 2655              	.LBE69:
 2656              	.LBE68:
 405:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->GAHBCFG  &= (uint32_t)(~USB_GAHBCFG_GlblIntrMsk_Msk); /* Di
 2657              	 .loc 1 405 0
 2658 0020 4A4D     	 ldr r5,.L249+4
 2659 0022 0024     	 movs r4,#0
 2660 0024 6C74     	 strb r4,[r5,#17]
 406:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_lClockGating((uint8_t)XMC_USBH_CLOCK_GATING_ENABLE); /* Enable Clock Gating */
 2661              	 .loc 1 406 0
 2662 0026 2B68     	 ldr r3,[r5]
 2663 0028 9A68     	 ldr r2,[r3,#8]
 2664 002a 22F00102 	 bic r2,r2,#1
 2665 002e 9A60     	 str r2,[r3,#8]
 2666              	.LVL327:
 408:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_SCU_POWER_DisableUsb(); /* Disable Power USB */
 2667              	 .loc 1 408 0
 2668 0030 D3F8002E 	 ldr r2,[r3,#3584]
 2669 0034 42F00102 	 orr r2,r2,#1
 2670 0038 C3F8002E 	 str r2,[r3,#3584]
 409:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* reset USB */
 2671              	 .loc 1 409 0
 2672 003c FFF7FEFF 	 bl XMC_SCU_POWER_DisableUsb
 2673              	.LVL328:
 410:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.port_reset_active =  false; /* Reset variables */
 2674              	 .loc 1 410 0
 2675 0040 4348     	 ldr r0,.L249+8
 2676 0042 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 2677              	.LVL329:
 411:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 2678              	 .loc 1 411 0
 2679 0046 AC74     	 strb r4,[r5,#18]
 412:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       break;
 2680              	 .loc 1 412 0
 2681 0048 4248     	 ldr r0,.L249+12
 2682 004a 2146     	 mov r1,r4
 2683 004c 4FF4E072 	 mov r2,#448
 2684 0050 FFF7FEFF 	 bl memset
 2685              	.LVL330:
 396:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   uint32_t loc_value;
 2686              	 .loc 1 396 0
 2687 0054 2046     	 mov r0,r4
 413:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****     case XMC_USBH_POWER_FULL:
 2688              	 .loc 1 413 0
 2689 0056 38BD     	 pop {r3,r4,r5,pc}
 2690              	.LVL331:
 2691              	.L238:
 415:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 2692              	 .loc 1 415 0
 2693 0058 3C4B     	 ldr r3,.L249+4
 2694 005a 1B7C     	 ldrb r3,[r3,#16]
 2695 005c 002B     	 cmp r3,#0
 2696 005e 6DD0     	 beq .L243
 420:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 2697              	 .loc 1 420 0
 2698 0060 3A4B     	 ldr r3,.L249+4
 2699 0062 5B7C     	 ldrb r3,[r3,#17]
 2700 0064 022B     	 cmp r3,#2
 2701 0066 6CD0     	 beq .L244
 2702              	.LVL332:
 426:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* deassert reset USB *
 2703              	 .loc 1 426 0
 2704 0068 0220     	 movs r0,#2
 2705              	.LVL333:
 2706 006a FFF7FEFF 	 bl XMC_USBH_osDelay
 2707              	.LVL334:
 427:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       (void)XMC_USBH_osDelay(2U);
 2708              	 .loc 1 427 0
 2709 006e 3848     	 ldr r0,.L249+8
 2710 0070 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 2711              	.LVL335:
 428:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       (void)XMC_USBH_osDelay(100U);
 2712              	 .loc 1 428 0
 2713 0074 0220     	 movs r0,#2
 2714 0076 FFF7FEFF 	 bl XMC_USBH_osDelay
 2715              	.LVL336:
 429:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_SCU_POWER_EnableUsb(); /* Enable Power USB */
 2716              	 .loc 1 429 0
 2717 007a 6420     	 movs r0,#100
 2718 007c FFF7FEFF 	 bl XMC_USBH_osDelay
 2719              	.LVL337:
 430:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2720              	 .loc 1 430 0
 2721 0080 FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 2722              	.LVL338:
 433:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       XMC_USBH0_device.global_register->GUSBCFG  |=  (uint32_t)USB_GUSBCFG_PHYSel_Msk;    /* Full-s
 2723              	 .loc 1 433 0
 2724 0084 314B     	 ldr r3,.L249+4
 2725 0086 1B68     	 ldr r3,[r3]
 2726 0088 D3F8002E 	 ldr r2,[r3,#3584]
 2727 008c 22F00102 	 bic r2,r2,#1
 2728 0090 C3F8002E 	 str r2,[r3,#3584]
 434:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2729              	 .loc 1 434 0
 2730 0094 DA68     	 ldr r2,[r3,#12]
 2731 0096 42F04002 	 orr r2,r2,#64
 2732 009a DA60     	 str r2,[r3,#12]
 2733              	.L239:
 436:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 2734              	 .loc 1 436 0 discriminator 1
 2735 009c 1A69     	 ldr r2,[r3,#16]
 2736 009e 002A     	 cmp r2,#0
 2737 00a0 FCDA     	 bge .L239
 441:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2738              	 .loc 1 441 0
 2739 00a2 1A69     	 ldr r2,[r3,#16]
 2740 00a4 42F00102 	 orr r2,r2,#1
 2741 00a8 1A61     	 str r2,[r3,#16]
 2742              	.L240:
 443:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       {
 2743              	 .loc 1 443 0 discriminator 1
 2744 00aa 1A69     	 ldr r2,[r3,#16]
 2745 00ac 12F0010F 	 tst r2,#1
 2746 00b0 FBD1     	 bne .L240
 447:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2747              	 .loc 1 447 0
 2748 00b2 6420     	 movs r0,#100
 2749 00b4 FFF7FEFF 	 bl XMC_USBH_osDelay
 2750              	.LVL339:
 449:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 2751              	 .loc 1 449 0
 2752 00b8 244C     	 ldr r4,.L249+4
 2753 00ba 0021     	 movs r1,#0
 2754 00bc A174     	 strb r1,[r4,#18]
 450:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2755              	 .loc 1 450 0
 2756 00be 2548     	 ldr r0,.L249+12
 2757 00c0 4FF4E072 	 mov r2,#448
 2758 00c4 FFF7FEFF 	 bl memset
 2759              	.LVL340:
 453:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       if (((loc_value & USB_GUSBCFG_ForceHstMode_Msk) == 0U) || \
 2760              	 .loc 1 453 0
 2761 00c8 2368     	 ldr r3,[r4]
 2762 00ca DA68     	 ldr r2,[r3,#12]
 2763              	.LVL341:
 454:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****           ((loc_value & USB_GUSBCFG_ForceDevMode_Msk) != 0U))
 2764              	 .loc 1 454 0
 2765 00cc 02F0C042 	 and r2,r2,#1610612736
 2766              	.LVL342:
 2767 00d0 B2F1005F 	 cmp r2,#536870912
 2768 00d4 0AD0     	 beq .L241
 457:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         XMC_USBH0_device.global_register->GUSBCFG |=  (uint32_t)USB_GUSBCFG_ForceHstMode_Msk;      
 2769              	 .loc 1 457 0
 2770 00d6 DA68     	 ldr r2,[r3,#12]
 2771 00d8 22F08042 	 bic r2,r2,#1073741824
 2772 00dc DA60     	 str r2,[r3,#12]
 458:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         (void)XMC_USBH_osDelay(100U);
 2773              	 .loc 1 458 0
 2774 00de DA68     	 ldr r2,[r3,#12]
 2775 00e0 42F00052 	 orr r2,r2,#536870912
 2776 00e4 DA60     	 str r2,[r3,#12]
 459:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       }
 2777              	 .loc 1 459 0
 2778 00e6 6420     	 movs r0,#100
 2779 00e8 FFF7FEFF 	 bl XMC_USBH_osDelay
 2780              	.LVL343:
 2781              	.L241:
 463:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2782              	 .loc 1 463 0
 2783 00ec 1749     	 ldr r1,.L249+4
 2784 00ee 0B68     	 ldr r3,[r1]
 2785 00f0 D3F80024 	 ldr r2,[r3,#1024]
 2786 00f4 42F40172 	 orr r2,r2,#516
 2787 00f8 C3F80024 	 str r2,[r3,#1024]
 466:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Non-periodic Tx FIFO setting */
 2788              	 .loc 1 466 0
 2789 00fc 4FF48D72 	 mov r2,#282
 2790 0100 5A62     	 str r2,[r3,#36]
 468:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Periodic Tx FIFO setting */
 2791              	 .loc 1 468 0
 2792 0102 02F58012 	 add r2,r2,#1048576
 2793 0106 9A62     	 str r2,[r3,#40]
 470:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Enable channel interrupts */
 2794              	 .loc 1 470 0
 2795 0108 134A     	 ldr r2,.L249+16
 2796 010a C3F80021 	 str r2,[r3,#256]
 472:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Unmask interrupts */
 2797              	 .loc 1 472 0
 2798 010e 43F6FF72 	 movw r2,#16383
 2799 0112 C3F81824 	 str r2,[r3,#1048]
 474:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****                         USB_GINTSTS_HOSTMODE_DisconnInt_Msk |
 2800              	 .loc 1 474 0
 2801 0116 114A     	 ldr r2,.L249+20
 2802 0118 9A61     	 str r2,[r3,#24]
 483:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Enable interrupts */
 2803              	 .loc 1 483 0
 2804 011a 0222     	 movs r2,#2
 2805 011c 4A74     	 strb r2,[r1,#17]
 485:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       /* Set highest interrupt priority */
 2806              	 .loc 1 485 0
 2807 011e 9A68     	 ldr r2,[r3,#8]
 2808 0120 42F00102 	 orr r2,r2,#1
 2809 0124 9A60     	 str r2,[r3,#8]
 2810              	.LVL344:
 2811              	.LBB70:
 2812              	.LBB71:
1775:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1776:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1777:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1778:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1779:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1780:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Get Active Interrupt
1781:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not active.
1784:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is active.
1785:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1786:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1787:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1789:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1791:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1793:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   else
1794:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1795:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     return(0U);
1796:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
1797:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** }
1798:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1799:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** 
1800:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** /**
1801:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \brief   Set Interrupt Priority
1802:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1805:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \param [in]  priority  Priority to set.
1807:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****  */
1809:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h **** {
1811:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1812:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   {
1813:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
 2813              	 .loc 2 1813 0
 2814 0126 084B     	 ldr r3,.L249
 2815 0128 0020     	 movs r0,#0
 2816 012a 83F86B03 	 strb r0,[r3,#875]
 2817              	.LVL345:
 2818              	.LBE71:
 2819              	.LBE70:
 2820              	.LBB72:
 2821              	.LBB73:
1683:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 2822              	 .loc 2 1683 0
1684:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
 2823              	 .loc 2 1684 0
 2824 012e 4FF40062 	 mov r2,#2048
 2825 0132 DA60     	 str r2,[r3,#12]
1685:C:/Files/Projects/Git/CMSIS/Include\core_cm4.h ****   }
 2826              	 .loc 2 1685 0
 2827 0134 38BD     	 pop {r3,r4,r5,pc}
 2828              	.LVL346:
 2829              	.L247:
 2830              	.LBE73:
 2831              	.LBE72:
 400:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****       break;
 2832              	 .loc 1 400 0
 2833 0136 6FF00300 	 mvn r0,#3
 2834              	.LVL347:
 2835 013a 38BD     	 pop {r3,r4,r5,pc}
 2836              	.LVL348:
 2837              	.L243:
 417:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 2838              	 .loc 1 417 0
 2839 013c 4FF0FF30 	 mov r0,#-1
 2840              	.LVL349:
 2841 0140 38BD     	 pop {r3,r4,r5,pc}
 2842              	.LVL350:
 2843              	.L244:
 422:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****         break;
 2844              	 .loc 1 422 0
 2845 0142 0020     	 movs r0,#0
 2846              	.LVL351:
 494:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2847              	 .loc 1 494 0
 2848 0144 38BD     	 pop {r3,r4,r5,pc}
 2849              	.L250:
 2850 0146 00BF     	 .align 2
 2851              	.L249:
 2852 0148 00E100E0 	 .word -536813312
 2853 014c 00000000 	 .word .LANCHOR0
 2854 0150 80000020 	 .word 536871040
 2855 0154 00000000 	 .word .LANCHOR3
 2856 0158 2A010001 	 .word 16777514
 2857 015c 180000A3 	 .word -1560281064
 2858              	 .cfi_endproc
 2859              	.LFE192:
 2861              	 .section .text.XMC_USBH_Uninitialize,"ax",%progbits
 2862              	 .align 2
 2863              	 .thumb
 2864              	 .thumb_func
 2866              	XMC_USBH_Uninitialize:
 2867              	.LFB191:
 378:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   XMC_USBH0_device.init_done = false;
 2868              	 .loc 1 378 0
 2869              	 .cfi_startproc
 2870              	 
 2871              	 
 2872 0000 10B5     	 push {r4,lr}
 2873              	.LCFI20:
 2874              	 .cfi_def_cfa_offset 8
 2875              	 .cfi_offset 4,-8
 2876              	 .cfi_offset 14,-4
 379:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   (void)XMC_USBH_PowerControl(XMC_USBH_POWER_OFF);
 2877              	 .loc 1 379 0
 2878 0002 0024     	 movs r4,#0
 2879 0004 034B     	 ldr r3,.L253
 2880 0006 1C74     	 strb r4,[r3,#16]
 380:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c ****   return XMC_USBH_DRIVER_OK;
 2881              	 .loc 1 380 0
 2882 0008 2046     	 mov r0,r4
 2883 000a FFF7FEFF 	 bl XMC_USBH_PowerControl
 2884              	.LVL352:
 382:C:/Files/Projects/Git/XMCLib/src\xmc_usbh.c **** 
 2885              	 .loc 1 382 0
 2886 000e 2046     	 mov r0,r4
 2887 0010 10BD     	 pop {r4,pc}
 2888              	.L254:
 2889 0012 00BF     	 .align 2
 2890              	.L253:
 2891 0014 00000000 	 .word .LANCHOR0
 2892              	 .cfi_endproc
 2893              	.LFE191:
 2895              	 .global Driver_USBH0
 2896              	 .global pipe
 2897              	 .global is_nack
 2898              	 .global VBUS_pin
 2899              	 .global VBUS_port
 2900              	 .section .data.XMC_USBH0_device,"aw",%progbits
 2901              	 .align 2
 2902              	 .set .LANCHOR0,.+0
 2905              	XMC_USBH0_device:
 2906 0000 00000450 	 .word 1342439424
 2907 0004 00050450 	 .word 1342440704
 2908 0008 00000000 	 .word 0
 2909 000c 00000000 	 .word 0
 2910 0010 00       	 .byte 0
 2911 0011 00       	 .byte 0
 2912 0012 00       	 .byte 0
 2913 0013 00       	 .space 1
 2914              	 .section .bss.XMC_USBH0_dfifo_ptr,"aw",%nobits
 2915              	 .align 2
 2916              	 .set .LANCHOR1,.+0
 2919              	XMC_USBH0_dfifo_ptr:
 2920 0000 00000000 	 .space 56
 2920      00000000 
 2920      00000000 
 2920      00000000 
 2920      00000000 
 2921              	 .section .data.VBUS_pin,"aw",%progbits
 2922              	 .align 2
 2923              	 .set .LANCHOR5,.+0
 2926              	VBUS_pin:
 2927 0000 02000000 	 .word 2
 2928              	 .section .bss.is_nack,"aw",%nobits
 2929              	 .align 2
 2930              	 .set .LANCHOR6,.+0
 2933              	is_nack:
 2934 0000 00000000 	 .space 14
 2934      00000000 
 2934      00000000 
 2934      0000
 2935 000e 0000     	 .section .data.VBUS_port,"aw",%progbits
 2936              	 .align 2
 2937              	 .set .LANCHOR4,.+0
 2940              	VBUS_port:
 2941 0000 00830248 	 .word 1208124160
 2942              	 .section .rodata.xmc_usbh_driver_version,"a",%progbits
 2943              	 .align 2
 2944              	 .set .LANCHOR2,.+0
 2947              	xmc_usbh_driver_version:
 2948 0000 0102     	 .short 513
 2949 0002 1801     	 .short 280
 2950              	 .section .rodata.Driver_USBH0,"a",%progbits
 2951              	 .align 2
 2954              	Driver_USBH0:
 2955 0000 00000000 	 .word XMC_USBH_GetVersion
 2956 0004 00000000 	 .word XMC_USBH_GetCapabilities
 2957 0008 00000000 	 .word XMC_USBH_Initialize
 2958 000c 00000000 	 .word XMC_USBH_Uninitialize
 2959 0010 00000000 	 .word XMC_USBH_PowerControl
 2960 0014 00000000 	 .word XMC_USBH_PortVbusOnOff
 2961 0018 00000000 	 .word XMC_USBH_PortReset
 2962 001c 00000000 	 .word XMC_USBH_PortSuspend
 2963 0020 00000000 	 .word XMC_USBH_PortResume
 2964 0024 00000000 	 .word XMC_USBH_PortGetState
 2965 0028 00000000 	 .word XMC_USBH_PipeCreate
 2966 002c 00000000 	 .word XMC_USBH_PipeModify
 2967 0030 00000000 	 .word XMC_USBH_PipeDelete
 2968 0034 00000000 	 .word XMC_USBH_PipeReset
 2969 0038 00000000 	 .word XMC_USBH_PipeTransfer
 2970 003c 00000000 	 .word XMC_USBH_PipeTransferGetResult
 2971 0040 00000000 	 .word XMC_USBH_PipeTransferAbort
 2972 0044 00000000 	 .word XMC_USBH_GetFrameNumber
 2973              	 .section .bss.pipe,"aw",%nobits
 2974              	 .align 2
 2975              	 .set .LANCHOR3,.+0
 2978              	pipe:
 2979 0000 00000000 	 .space 448
 2979      00000000 
 2979      00000000 
 2979      00000000 
 2979      00000000 
 2980              	 .text
 2981              	.Letext0:
 2982              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2983              	 .file 5 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2984              	 .file 6 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 2985              	 .file 7 "C:/Files/Projects/Git/XMCLib/inc/xmc4_scu.h"
 2986              	 .file 8 "C:/Files/Projects/Git/XMCLib/inc/xmc4_gpio.h"
 2987              	 .file 9 "C:/Files/Projects/Git/XMCLib/inc/xmc_usbh.h"
 2988              	 .file 10 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
 2989              	 .file 11 "C:/Files/Projects/Git/XMCLib/inc/xmc_gpio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbh.c
    {standard input}:20     .text.XMC_lStartTransfer:00000000 $t
    {standard input}:24     .text.XMC_lStartTransfer:00000000 XMC_lStartTransfer
    {standard input}:129    .text.XMC_lStartTransfer:00000086 $d
    {standard input}:133    .text.XMC_lStartTransfer:0000008a $t
    {standard input}:336    .text.XMC_lStartTransfer:00000170 $d
    {standard input}:343    .text.XMC_USBH_GetVersion:00000000 $t
    {standard input}:347    .text.XMC_USBH_GetVersion:00000000 XMC_USBH_GetVersion
    {standard input}:373    .text.XMC_USBH_GetVersion:00000018 $d
    {standard input}:378    .text.XMC_USBH_GetCapabilities:00000000 $t
    {standard input}:382    .text.XMC_USBH_GetCapabilities:00000000 XMC_USBH_GetCapabilities
    {standard input}:401    .text.XMC_USBH_PortSuspend:00000000 $t
    {standard input}:405    .text.XMC_USBH_PortSuspend:00000000 XMC_USBH_PortSuspend
    {standard input}:454    .text.XMC_USBH_PortSuspend:00000038 $d
    {standard input}:459    .text.XMC_USBH_PortGetState:00000000 $t
    {standard input}:463    .text.XMC_USBH_PortGetState:00000000 XMC_USBH_PortGetState
    {standard input}:515    .text.XMC_USBH_PortGetState:0000003c $d
    {standard input}:520    .text.XMC_USBH_PipeModify:00000000 $t
    {standard input}:524    .text.XMC_USBH_PipeModify:00000000 XMC_USBH_PipeModify
    {standard input}:616    .text.XMC_USBH_PipeModify:0000005c $d
    {standard input}:623    .text.XMC_USBH_PipeReset:00000000 $t
    {standard input}:627    .text.XMC_USBH_PipeReset:00000000 XMC_USBH_PipeReset
    {standard input}:686    .text.XMC_USBH_PipeReset:0000003c $d
    {standard input}:692    .text.XMC_USBH_PipeTransfer:00000000 $t
    {standard input}:696    .text.XMC_USBH_PipeTransfer:00000000 XMC_USBH_PipeTransfer
    {standard input}:840    .text.XMC_USBH_PipeTransfer:000000b0 $d
    {standard input}:846    .text.XMC_USBH_PipeTransferGetResult:00000000 $t
    {standard input}:850    .text.XMC_USBH_PipeTransferGetResult:00000000 XMC_USBH_PipeTransferGetResult
    {standard input}:880    .text.XMC_USBH_PipeTransferGetResult:00000018 $d
    {standard input}:886    .text.XMC_USBH_GetFrameNumber:00000000 $t
    {standard input}:890    .text.XMC_USBH_GetFrameNumber:00000000 XMC_USBH_GetFrameNumber
    {standard input}:918    .text.XMC_USBH_GetFrameNumber:00000018 $d
    {standard input}:923    .text.XMC_USBH_PortVbusOnOff:00000000 $t
    {standard input}:927    .text.XMC_USBH_PortVbusOnOff:00000000 XMC_USBH_PortVbusOnOff
    {standard input}:1004   .text.XMC_USBH_PortVbusOnOff:0000005c $d
    {standard input}:1011   .text.XMC_USBH_Initialize:00000000 $t
    {standard input}:1015   .text.XMC_USBH_Initialize:00000000 XMC_USBH_Initialize
    {standard input}:1071   .text.XMC_USBH_Initialize:0000003c $d
    {standard input}:1080   .text.XMC_USBH_PipeDelete:00000000 $t
    {standard input}:1084   .text.XMC_USBH_PipeDelete:00000000 XMC_USBH_PipeDelete
    {standard input}:1161   .text.XMC_USBH_PipeDelete:0000004c $d
    {standard input}:1167   .text.XMC_USBH_PipeCreate:00000000 $t
    {standard input}:1171   .text.XMC_USBH_PipeCreate:00000000 XMC_USBH_PipeCreate
    {standard input}:1343   .text.XMC_USBH_PipeCreate:000000f8 $d
    {standard input}:1349   .text.XMC_USBH_HandleIrq:00000000 $t
    {standard input}:1354   .text.XMC_USBH_HandleIrq:00000000 XMC_USBH_HandleIrq
    {standard input}:1803   .text.XMC_USBH_HandleIrq:000002a0 $d
    {standard input}:1813   .text.XMC_USBH_HandleIrq:000002b4 $t
    {standard input}:2151   .text.XMC_USBH_HandleIrq:000004c4 $d
    {standard input}:2158   .text.XMC_USBH_GetInterruptStatus:00000000 $t
    {standard input}:2163   .text.XMC_USBH_GetInterruptStatus:00000000 XMC_USBH_GetInterruptStatus
    {standard input}:2179   .text.XMC_USBH_GetInterruptStatus:00000008 $d
    {standard input}:2184   .text.XMC_USBH_Select_VBUS:00000000 $t
    {standard input}:2189   .text.XMC_USBH_Select_VBUS:00000000 XMC_USBH_Select_VBUS
    {standard input}:2217   .text.XMC_USBH_Select_VBUS:00000014 $d
    {standard input}:2223   .text.XMC_USBH_TurnOffResumeBit:00000000 $t
    {standard input}:2228   .text.XMC_USBH_TurnOffResumeBit:00000000 XMC_USBH_TurnOffResumeBit
    {standard input}:2249   .text.XMC_USBH_TurnOffResumeBit:00000014 $d
    {standard input}:2254   .text.XMC_USBH_osDelay:00000000 $t
    {standard input}:2259   .text.XMC_USBH_osDelay:00000000 XMC_USBH_osDelay
    {standard input}:2274   .text.XMC_USBH_PipeTransferAbort:00000000 $t
    {standard input}:2278   .text.XMC_USBH_PipeTransferAbort:00000000 XMC_USBH_PipeTransferAbort
    {standard input}:2415   .text.XMC_USBH_PipeTransferAbort:000000a8 $d
    {standard input}:2421   .text.XMC_USBH_PortResume:00000000 $t
    {standard input}:2425   .text.XMC_USBH_PortResume:00000000 XMC_USBH_PortResume
    {standard input}:2496   .text.XMC_USBH_PortResume:0000004c $d
    {standard input}:2501   .text.XMC_USBH_PortReset:00000000 $t
    {standard input}:2505   .text.XMC_USBH_PortReset:00000000 XMC_USBH_PortReset
    {standard input}:2593   .text.XMC_USBH_PortReset:00000068 $d
    {standard input}:2598   .text.XMC_USBH_PowerControl:00000000 $t
    {standard input}:2602   .text.XMC_USBH_PowerControl:00000000 XMC_USBH_PowerControl
    {standard input}:2852   .text.XMC_USBH_PowerControl:00000148 $d
    {standard input}:2862   .text.XMC_USBH_Uninitialize:00000000 $t
    {standard input}:2866   .text.XMC_USBH_Uninitialize:00000000 XMC_USBH_Uninitialize
    {standard input}:2891   .text.XMC_USBH_Uninitialize:00000014 $d
    {standard input}:2954   .rodata.Driver_USBH0:00000000 Driver_USBH0
    {standard input}:2978   .bss.pipe:00000000 pipe
    {standard input}:2933   .bss.is_nack:00000000 is_nack
    {standard input}:2926   .data.VBUS_pin:00000000 VBUS_pin
    {standard input}:2940   .data.VBUS_port:00000000 VBUS_port
    {standard input}:2901   .data.XMC_USBH0_device:00000000 $d
    {standard input}:2905   .data.XMC_USBH0_device:00000000 XMC_USBH0_device
    {standard input}:2915   .bss.XMC_USBH0_dfifo_ptr:00000000 $d
    {standard input}:2919   .bss.XMC_USBH0_dfifo_ptr:00000000 XMC_USBH0_dfifo_ptr
    {standard input}:2922   .data.VBUS_pin:00000000 $d
    {standard input}:2929   .bss.is_nack:00000000 $d
    {standard input}:2936   .data.VBUS_port:00000000 $d
    {standard input}:2943   .rodata.xmc_usbh_driver_version:00000000 $d
    {standard input}:2947   .rodata.xmc_usbh_driver_version:00000000 xmc_usbh_driver_version
    {standard input}:2951   .rodata.Driver_USBH0:00000000 $d
    {standard input}:2974   .bss.pipe:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_GPIO_SetMode
memset
XMC_SCU_POWER_DisableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
