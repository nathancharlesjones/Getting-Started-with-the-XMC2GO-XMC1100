   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ccu4.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU4_EnableModule,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_CCU4_EnableModule
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_CCU4_EnableModule:
  26              	.LFB220:
  27              	 .file 1 "C:/Files/Projects/Git/XMCLib/src/xmc_ccu4.c"
   1:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /**
   2:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * @file xmc_ccu4.c
   3:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * @date 2017-04-27
   4:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *
   5:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *
   9:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * 
  18:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * 
  21:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *
  36:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *
  39:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *     - Initial <br>
  41:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *
  42:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * 2015-06-20:
  43:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *
  45:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * 2015-07-01:
  46:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *     - In XMC_CCU4_SLICE_StartConfig(), Options in XMC_ASSERT check for start mode is corrected. 
  47:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *
  48:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * 2015-07-24:
  49:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  50:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *
  51:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * 2015-08-17:
  52:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *     - Start of prescaler XMC_CCU4_StartPrescaler() is invoked in XMC_CCU4_Init() API. <br>
  53:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *     - Bug fix XMC_CCU4_SLICE_ConfigureEvent() during the level setting for XMC14 devices. <br>
  54:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *     - XMC_CCU4_EnableShadowTransfer() definition is removed, since the API is made as inline. <b
  55:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *
  56:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * 2015-10-07:
  57:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  58:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *     - DOC updates for the newly added APIs.
  59:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *
  60:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * 2017-02-25:
  61:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *     - XMC_CCU4_lAssertReset(), XMC_CCU4_lDeassertReset(), XMC_CCU4_lGateClock() and XMC_CCU4_lUn
  62:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *
  63:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * 2017-04-27:
  64:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU4_SLICE_PRESCALER_t
  65:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  *
  66:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * @endcond
  67:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  */
  68:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  
  69:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /**************************************************************************************************
  70:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * HEADER FILES
  71:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  **************************************************************************************************
  72:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #include "xmc_ccu4.h"
  73:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
  74:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU40)
  75:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #include "xmc_scu.h"
  76:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /**************************************************************************************************
  77:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * MACROS
  78:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  **************************************************************************************************
  79:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_NUM_SLICES_PER_MODULE          (4U)
  80:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_DITHER_PERIOD_MASK       (1U)
  81:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_DITHER_DUTYCYCLE_MASK    (2U)
  82:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK   (3U)
  83:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK  (1U)
  84:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK (3U)
  85:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
  86:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK  CCU4_CC4_INS1_EV0IS_Msk
  87:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #else
  88:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK  CCU4_CC4_INS_EV0IS_Msk
  89:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
  90:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_GIDLC_CLOCK_MASK               (15U)
  91:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE0_MASK               (1U)
  92:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE1_MASK               (16U)
  93:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE2_MASK               (256U)
  94:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE3_MASK               (4096U)
  95:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
  96:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /** Macro to check if the clock selected enum passed is valid */
  97:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_CLOCK(clock) \
  98:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     ((clock == XMC_CCU4_CLOCK_SCU)        || \
  99:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_A) || \
 100:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_B) || \
 101:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_C))
 102:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 103:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /** Macro used to check if the event ID is valid*/
 104:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EVENT_ID(event_id) \
 105:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     ((event_id == XMC_CCU4_SLICE_EVENT_NONE)|| \
 106:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_0)   || \
 107:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_1)   || \
 108:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_2))
 109:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 110:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /** Macro used to check if the edge sensitivity is valid*/
 111:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(edge) \
 112:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     ((edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE)        || \
 113:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE) || \
 114:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE)|| \
 115:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE))
 116:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 117:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /** Macro used to check if the filter clock cycles are valid */
 118:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EVENT_FILTER(cycles) \
 119:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     ((cycles == XMC_CCU4_SLICE_EVENT_FILTER_DISABLED) || \
 120:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES) || \
 121:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES) || \
 122:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES))
 123:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 124:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /** Macro used to check if the Multi-channel input related action is valid*/
 125:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_MCS_ACTION(mcs_action) \
 126:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     ((mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR)      || \
 127:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP) || \
 128:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT))
 129:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 130:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /** Macro used to check if the SR line is valid*/
 131:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_SR_ID(id) \
 132:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     ((id == XMC_CCU4_SLICE_SR_ID_0) || \
 133:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_1) || \
 134:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_2) || \
 135:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_3))
 136:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 137:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /** Macro to check if the end mode enum passed is valid */
 138:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #define XMC_CCU4_CHECK_END_MODE(end_mode) \
 139:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     ((end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_STOP) || \
 140:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR) || \
 141:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****      (end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR))
 142:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 143:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /**************************************************************************************************
 144:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * LOCAL ROUTINES
 145:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  **************************************************************************************************
 146:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 147:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lAssertReset(const XMC_CCU4_MODULE_t *const module)
 148:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 149:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if (module == CCU40)
 150:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 151:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU40);
 152:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 153:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU41)
 154:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else if (module == CCU41)
 155:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 156:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU41);
 157:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 158:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 159:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU42)
 160:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else if (module == CCU42)
 161:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 162:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU42);
 163:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 164:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 165:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU43)
 166:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else if (module == CCU43)
 167:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 168:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU43);
 169:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 170:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 171:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
 172:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 173:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_ASSERT("XMC_CCU4_lAssertReset:Invalid Module Pointer", 0);
 174:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 175:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 176:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 177:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lDeassertReset(const XMC_CCU4_MODULE_t *const module)
 178:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 179:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if (module == CCU40)
 180:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 181:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU40);
 182:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 183:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU41)
 184:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else if (module == CCU41)
 185:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 186:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU41);
 187:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 188:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 189:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU42)
 190:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else if (module == CCU42)
 191:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 192:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU42);
 193:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 194:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 195:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU43)
 196:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else if (module == CCU43)
 197:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 198:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU43);
 199:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 200:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 201:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
 202:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 203:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_ASSERT("XMC_CCU4_lDeassertReset:Invalid Module Pointer", 0);
 204:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 205:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 206:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 207:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 208:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 209:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lGateClock(const XMC_CCU4_MODULE_t *const module)
 210:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 211:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 212:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if (module == CCU40)
 213:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 214:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU40);
 215:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 216:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU41)
 217:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else if (module == CCU41)
 218:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 219:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU41);
 220:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 221:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 222:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU42)
 223:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else if (module == CCU42)
 224:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 225:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU42);
 226:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 227:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 228:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU43)
 229:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else if (module == CCU43)
 230:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 231:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU43);
 232:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 233:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 234:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
 235:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 236:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_ASSERT("XMC_CCU4_lGateClock:Invalid Module Pointer", 0);
 237:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 238:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 239:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 240:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lUngateClock(const XMC_CCU4_MODULE_t *const module)
 241:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 242:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if (module == CCU40)
 243:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 244:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU40);
 245:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 246:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU41)
 247:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else if (module == CCU41)
 248:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 249:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU41);
 250:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 251:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 252:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU42)
 253:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else if (module == CCU42)
 254:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 255:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU42);
 256:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 257:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 258:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU43)
 259:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else if (module == CCU43)
 260:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 261:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU43);
 262:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 263:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 264:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
 265:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 266:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     XMC_ASSERT("XMC_CCU4_lUngateClock:Invalid Module Pointer", 0);
 267:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 268:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 269:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 270:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 271:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined (XMC_ASSERT_ENABLE)
 272:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsInputvalid(XMC_CCU4_SLICE_INPUT_t input)
 273:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 274:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if (UC_SERIES == XMC14)
 275:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   return (input < 48U);
 276:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #else
 277:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   return (input < 16U);
 278:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 279:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 280:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 281:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /**************************************************************************************************
 282:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  * API IMPLEMENTATION
 283:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****  **************************************************************************************************
 284:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 285:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module)
 286:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
  28              	 .loc 1 286 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 10B5     	 push {r4,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 4,-8
  37              	 .cfi_offset 14,-4
  38 0002 0446     	 mov r4,r0
 287:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_EnableModule:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 288:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 289:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if UC_FAMILY == XMC4
 290:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Enable CCU4 module clock */
 291:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
  39              	 .loc 1 291 0
  40 0004 1020     	 movs r0,#16
  41              	.LVL1:
  42 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
  43              	.LVL2:
  44              	.LBB8:
  45              	.LBB9:
 179:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
  46              	 .loc 1 179 0
  47 000a 0E4B     	 ldr r3,.L7
  48 000c 9C42     	 cmp r4,r3
  49 000e 03D1     	 bne .L2
 181:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
  50              	 .loc 1 181 0
  51 0010 0420     	 movs r0,#4
  52 0012 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  53              	.LVL3:
  54 0016 10BD     	 pop {r4,pc}
  55              	.LVL4:
  56              	.L2:
 184:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
  57              	 .loc 1 184 0
  58 0018 0B4B     	 ldr r3,.L7+4
  59 001a 9C42     	 cmp r4,r3
  60 001c 03D1     	 bne .L4
 186:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
  61              	 .loc 1 186 0
  62 001e 0820     	 movs r0,#8
  63 0020 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  64              	.LVL5:
  65 0024 10BD     	 pop {r4,pc}
  66              	.LVL6:
  67              	.L4:
 190:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
  68              	 .loc 1 190 0
  69 0026 094B     	 ldr r3,.L7+8
  70 0028 9C42     	 cmp r4,r3
  71 002a 03D1     	 bne .L5
 192:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
  72              	 .loc 1 192 0
  73 002c 1020     	 movs r0,#16
  74 002e FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  75              	.LVL7:
  76 0032 10BD     	 pop {r4,pc}
  77              	.LVL8:
  78              	.L5:
 196:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
  79              	 .loc 1 196 0
  80 0034 064B     	 ldr r3,.L7+12
  81 0036 9C42     	 cmp r4,r3
  82 0038 02D1     	 bne .L1
 198:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
  83              	 .loc 1 198 0
  84 003a 0648     	 ldr r0,.L7+16
  85 003c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  86              	.LVL9:
  87              	.L1:
  88 0040 10BD     	 pop {r4,pc}
  89              	.LVL10:
  90              	.L8:
  91 0042 00BF     	 .align 2
  92              	.L7:
  93 0044 00C00040 	 .word 1073790976
  94 0048 00000140 	 .word 1073807360
  95 004c 00400140 	 .word 1073823744
  96 0050 00400048 	 .word 1207975936
  97 0054 01000010 	 .word 268435457
  98              	.LBE9:
  99              	.LBE8:
 100              	 .cfi_endproc
 101              	.LFE220:
 103              	 .section .text.XMC_CCU4_DisableModule,"ax",%progbits
 104              	 .align 2
 105              	 .global XMC_CCU4_DisableModule
 106              	 .thumb
 107              	 .thumb_func
 109              	XMC_CCU4_DisableModule:
 110              	.LFB221:
 292:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 293:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 294:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 295:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_CCU4_lUngateClock(module);
 296:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 297:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 298:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 299:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_CCU4_lDeassertReset(module);
 300:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 301:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 302:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 303:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module)
 304:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 111              	 .loc 1 304 0
 112              	 .cfi_startproc
 113              	 
 114              	 
 115              	.LVL11:
 116 0000 08B5     	 push {r3,lr}
 117              	.LCFI1:
 118              	 .cfi_def_cfa_offset 8
 119              	 .cfi_offset 3,-8
 120              	 .cfi_offset 14,-4
 121              	.LVL12:
 122              	.LBB12:
 123              	.LBB13:
 149:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 124              	 .loc 1 149 0
 125 0002 0E4B     	 ldr r3,.L15
 126 0004 9842     	 cmp r0,r3
 127 0006 03D1     	 bne .L10
 151:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 128              	 .loc 1 151 0
 129 0008 0420     	 movs r0,#4
 130              	.LVL13:
 131 000a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 132              	.LVL14:
 133 000e 08BD     	 pop {r3,pc}
 134              	.LVL15:
 135              	.L10:
 154:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 136              	 .loc 1 154 0
 137 0010 0B4B     	 ldr r3,.L15+4
 138 0012 9842     	 cmp r0,r3
 139 0014 03D1     	 bne .L12
 156:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 140              	 .loc 1 156 0
 141 0016 0820     	 movs r0,#8
 142              	.LVL16:
 143 0018 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 144              	.LVL17:
 145 001c 08BD     	 pop {r3,pc}
 146              	.LVL18:
 147              	.L12:
 160:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 148              	 .loc 1 160 0
 149 001e 094B     	 ldr r3,.L15+8
 150 0020 9842     	 cmp r0,r3
 151 0022 03D1     	 bne .L13
 162:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 152              	 .loc 1 162 0
 153 0024 1020     	 movs r0,#16
 154              	.LVL19:
 155 0026 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 156              	.LVL20:
 157 002a 08BD     	 pop {r3,pc}
 158              	.LVL21:
 159              	.L13:
 166:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 160              	 .loc 1 166 0
 161 002c 064B     	 ldr r3,.L15+12
 162 002e 9842     	 cmp r0,r3
 163 0030 02D1     	 bne .L9
 168:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 164              	 .loc 1 168 0
 165 0032 0648     	 ldr r0,.L15+16
 166              	.LVL22:
 167 0034 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 168              	.LVL23:
 169              	.L9:
 170 0038 08BD     	 pop {r3,pc}
 171              	.L16:
 172 003a 00BF     	 .align 2
 173              	.L15:
 174 003c 00C00040 	 .word 1073790976
 175 0040 00000140 	 .word 1073807360
 176 0044 00400140 	 .word 1073823744
 177 0048 00400048 	 .word 1207975936
 178 004c 01000010 	 .word 268435457
 179              	.LBE13:
 180              	.LBE12:
 181              	 .cfi_endproc
 182              	.LFE221:
 184              	 .section .text.XMC_CCU4_Init,"ax",%progbits
 185              	 .align 2
 186              	 .global XMC_CCU4_Init
 187              	 .thumb
 188              	 .thumb_func
 190              	XMC_CCU4_Init:
 191              	.LFB222:
 305:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_DisableModule:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 306:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 307:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 308:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_CCU4_lAssertReset(module);
 309:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 310:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 311:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 312:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_CCU4_lGateClock(module);
 313:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 314:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 315:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 316:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to initialize CCU4 global resources  */
 317:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action)
 318:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 192              	 .loc 1 318 0
 193              	 .cfi_startproc
 194              	 
 195              	 
 196              	.LVL24:
 197 0000 38B5     	 push {r3,r4,r5,lr}
 198              	.LCFI2:
 199              	 .cfi_def_cfa_offset 16
 200              	 .cfi_offset 3,-16
 201              	 .cfi_offset 4,-12
 202              	 .cfi_offset 5,-8
 203              	 .cfi_offset 14,-4
 204 0002 0446     	 mov r4,r0
 205 0004 0D46     	 mov r5,r1
 319:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t gctrl;
 320:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 321:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_Init:Invalid module pointer", XMC_CCU4_IsValidModule(module));
 322:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_Init:Invalid mcs action", XMC_CCU4_SLICE_CHECK_MCS_ACTION(mcs_action));
 323:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 324:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Enable CCU4 module */
 325:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_CCU4_EnableModule(module);
 206              	 .loc 1 325 0
 207 0006 FFF7FEFF 	 bl XMC_CCU4_EnableModule
 208              	.LVL25:
 209              	.LBB14:
 210              	.LBB15:
 211              	 .file 2 "C:/Files/Projects/Git/XMCLib/inc/xmc_ccu4.h"
   1:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
   2:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @file xmc_ccu4.h
   3:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @date 2019-03-30
   4:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
   5:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
   9:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
  18:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
  21:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
  36:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
  39:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - Initial <br>
  41:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - Documentation updates <br>
  42:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
  43:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 2015-06-20:
  44:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
  46:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 2015-07-22:
  47:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  48:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
  49:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 2015-08-17:
  50:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  51:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t enum item names are updated according to the guideli
  52:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  53:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
  54:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 2015-09-29:
  55:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - In XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  56:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *       settings.
  57:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
  58:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 2015-10-07:
  59:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  60:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU4_SLICE_EnableMultipleEvents(
  61:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *       XMC_CCU4_SLICE_DisableMultipleEvents() APIs.
  62:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - DOC updates for the newly added APIs.
  63:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
  64:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 2016-03-09:
  65:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - Optimization of write only registers 
  66:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
  67:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 2016-05-20:
  68:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - Added XMC_CCU4_SLICE_StopClearTimer()
  69:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - Changed implementation of XMC_CCU4_SLICE_StopTimer() and XMC_CCU4_SLICE_ClearTimer() to av
  70:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
  71:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 2017-04-27:
  72:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU4_SLICE_PRESCALER_t
  73:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
  74:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 2017-09-15:
  75:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - Fix XMC_CCU4_SLICE_SetShadowTransferMode()
  76:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
  77:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 2019-03-30:
  78:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - Changed XMC_CCU4_StartPrescaler(), XMC_CCU4_StopPrescaler(), XMC_CCU4_EnableMultipleClocks
  79:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - Changed XMC_CCU4_SLICE_SetEvent(), XMC_CCU4_SLICE_ClearEvent() to avoid RMW access
  80:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *     - Added XMC_CCU4_SetSuspendMode(), XMC_CCU4_SLICE_GetPrescaler()
  81:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
  82:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @endcond
  83:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
  84:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
  85:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #ifndef XMC_CCU4_H
  86:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_H
  87:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  
  88:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
  89:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * HEADER FILES
  90:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  91:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #include "xmc_common.h"
  92:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40)
  93:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
  94:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC1
  95:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  #include "xmc1_ccu4_map.h"
  96:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
  97:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
  98:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC4
  99:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  #include "xmc4_ccu4_map.h"
 100:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 101:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 102:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 103:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup XMClib XMC Peripheral Library
 104:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @{
 105:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 106:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  
 107:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 108:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup CCU4
 109:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @brief Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<br>
 110:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 111:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * The CCU4 peripheral is a major component for systems that need general purpose timers for signal
 112:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic con
 113:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * switched mode power supplies or interruptible power supplies, can easily be implemented with the
 114:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * CCU4 peripheral.\n
 115:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where
 116:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * timer slice can work in compare mode or in capture mode.
 117:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 118:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * APIs provided in this file cover the following functional blocks of CCU4:\n
 119:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 120:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par Note:
 121:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)
 122:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU4_)
 123:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 124:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par Timer(Compare mode) configuration:
 125:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_COMPARE_CONFIG_t and
 126:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CompareInit().
 127:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 128:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 129:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * -# Start and Stop the timer. (XMC_CCU4_SLICE_StartTimer(), XMC_CCU4_SLICE_StopTimer())
 130:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU4_SLICE_SetTimerPe
 131:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetTimerCompareMatch(), XMC_CCU4_SLICE_SetPrescaler(), XMC_CCU4_SLICE_SetDithe
 132:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetPassiveLevel())
 133:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU4_SLICE_EnableMultiChannelMode())
 134:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
 135:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par Capture configuration:
 136:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_CAPTURE_CONFIG_t and
 137:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CaptureInit().
 138:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 139:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 140:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * -# Configure the capture functionality. (XMC_CCU4_SLICE_Capture0Config(), XMC_CCU4_SLICE_Capture
 141:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 142:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    (XMC_CCU4_SLICE_GetCaptureRegisterValue())
 143:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
 144:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par Function/Event configuration:
 145:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_EVENT_CONFIG_t.\n
 146:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
 147:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 148:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * -# Enable and Disable the events. (XMC_CCU4_SLICE_EnableEvent(), XMC_CCU4_SLICE_DisableEvent())
 149:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU4_SLICE_StartConfig(), XMC_C
 150:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU4_SLICE_ModulationConfig(), 
 151:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_LoadConfig(), XMC_CCU4_SLICE_GateConfig())
 152:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU4_SLICE_Directi
 153:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * -# Count the external events.(XMC_CCU4_SLICE_CountConfig())
 154:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU4_SLICE_EnableTrap(), XMC_CCU4
 155:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_TrapConfig())
 156:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 157:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par Interrupt configuration:
 158:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 159:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @{
 160:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 161:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  
 162:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 163:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * MACROS
 164:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 165:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /* Macro to check if the interrupt enum passed is valid */
 166:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_CHECK_INTERRUPT(interrupt) \
 167:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****     ((interrupt == XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 168:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH)              || \
 169:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP)  || \
 170:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN)|| \
 171:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT0)                 || \
 172:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT1)                 || \
 173:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT2)                 || \
 174:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_TRAP))
 175:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 176:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 177:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * ENUMS
 178:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 179:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 180:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 181:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Global data structure
 182:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 183:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t;
 184:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 185:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 186:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Slice data structure
 187:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 188:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t;
 189:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 190:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 191:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Return Value of an API
 192:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 193:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_STATUS
 194:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 195:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_OK      = 0U, /**< API fulfils request */
 196:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_ERROR       , /**< API cannot fulfil the request */
 197:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_RUNNING     , /**< The timer slice is currently running */
 198:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_IDLE          /**< The timer slice is currently idle */
 199:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_STATUS_t;
 200:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 201:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 202:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  CCU4 module clock
 203:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 204:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_CLOCK
 205:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 206:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 207:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_A     , /**< External clock-A */
 208:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_B     , /**< External clock-B */
 209:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_C       /**< External clock-C */
 210:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_CLOCK_t;
 211:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 212:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 213:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * CCU4 set the shadow transfer type for multichannel mode
 214:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 215:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER
 216:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 217:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 218:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 219:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 220:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 221:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 222:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 223:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 224:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 225:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 226:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 227:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 228:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 229:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 230:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 231:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 232:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 233:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 234:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 235:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 236:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Operational modes of CCU4 slice
 237:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 238:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODE
 239:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 240:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_COMPARE  = 0U, /**< slice(CC4y) operates in Compare Mode */
 241:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_CAPTURE        /**< slice(CC4y) operates in Capture Mode */
 242:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODE_t;
 243:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 244:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 245:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Timer counting modes for the slice
 246:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 247:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_MODE
 248:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 249:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 250:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA        /**< Center Aligned Mode */
 251:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_MODE_t;
 252:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 253:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 254:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Timer repetition mode for the slice
 255:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 256:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_REPEAT_MODE
 257:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 258:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U,  /**< Repetitive mode: continuous mode of operation
 259:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE        /**< Single shot mode: Once a Period match/One mat
 260:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                       occurs timer goes to idle state */
 261:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t;
 262:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 263:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 264:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Timer counting direction for the CCU4 slice
 265:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 266:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_DIR
 267:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 268:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 269:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 270:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_DIR_t;
 271:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 272:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 273:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Capture mode register sets
 274:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 275:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_CAP_REG_SET
 276:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 277:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 278:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_HIGH       /**< Capture register-2, Capture register-3 used */
 279:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAP_REG_SET_t;
 280:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 281:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 282:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Prescaler mode
 283:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 284:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER_MODE
 285:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 286:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 287:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider. */
 288:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_MODE_t;
 289:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 290:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 291:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Timer output passive level
 292:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 293:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL
 294:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 295:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 296:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 297:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 298:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 299:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 300:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Timer clock Divider
 301:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 302:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER
 303:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 304:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu4 */
 305:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2      , /**< Slice Clock = fccu4/2 */
 306:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4      , /**< Slice Clock = fccu4/4 */
 307:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8      , /**< Slice Clock = fccu4/8 */
 308:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16     , /**< Slice Clock = fccu4/16 */
 309:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32     , /**< Slice Clock = fccu4/32 */
 310:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_64     , /**< Slice Clock = fccu4/64 */
 311:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_128    , /**< Slice Clock = fccu4/128 */
 312:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_256    , /**< Slice Clock = fccu4/256 */
 313:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_512    , /**< Slice Clock = fccu4/512 */
 314:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu4/1024 */
 315:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu4/2048 */
 316:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu4/4096 */
 317:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu4/8192 */
 318:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu4/16384 */
 319:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32768    /**< Slice Clock = fccu4/32768 */
 320:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_t;
 321:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 322:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 323:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  External Function list
 324:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 325:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_FUNCTION
 326:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 327:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_START           = 0U, /**< Start function */
 328:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_STOP                , /**< Stop function */
 329:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 330:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 331:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 332:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 333:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_GATING              , /**< Gating function */
 334:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 335:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_LOAD                , /**< Load function */
 336:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_COUNT               , /**< Counting function */
 337:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 338:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 339:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_TRAP                  /**< Trap function */
 340:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_FUNCTION_t;
 341:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 342:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 343:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  External Event list
 344:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 345:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT
 346:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 347:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_NONE  = 0U, /**< None */
 348:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_0         , /**< Event-0 */
 349:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_1         , /**< Event-1 */
 350:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_2           /**< Event-2 */
 351:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_t;
 352:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 353:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 354:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Edge sensitivity
 355:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 356:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY
 357:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 358:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE         = 0U, /**< None */
 359:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE      , /**< Rising Edge of the input signal gen
 360:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE     , /**< Falling Edge of the input signal ge
 361:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                 trigger */
 362:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE          /**< Both Rising and Falling edges cause
 363:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t;
 364:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 365:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 366:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Level sensitivity
 367:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 368:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY
 369:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 370:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 371:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 372:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   /* Below enum items can be utilised specific to the functionality */
 373:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 374:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 375:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 376:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 377:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 378:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 379:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 380:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_FILTER
 381:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 382:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filter */
 383:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES      , /**< 3 clock cycles */
 384:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES      , /**< 5 clock cycles */
 385:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES        /**< 7 clock cycles */
 386:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_FILTER_t;
 387:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 388:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 389:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU4 slice.
 390:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Interconnects are specific to each device.
 391:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 392:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef uint8_t XMC_CCU4_SLICE_INPUT_t;
 393:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 394:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 395:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 396:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 397:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_END_MODE
 398:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 399:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 400:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 401:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 402:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_END_MODE_t;
 403:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 404:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 405:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Actions that can be performed upon detection of an external Timer START event
 406:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 407:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_START_MODE
 408:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 409:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 410:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 411:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_START_MODE_t;
 412:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 413:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 414:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Modulation of timer output signals
 415:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 416:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODULATION_MODE
 417:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 418:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 419:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 420:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODULATION_MODE_t;
 421:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 422:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 423:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Trap exit mode
 424:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 425:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TRAP_EXIT_MODE
 426:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 427:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 428:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 429:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TRAP_EXIT_MODE_t;
 430:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 431:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 432:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Timer clear on capture
 433:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 434:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_CLEAR_MODE
 435:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 436:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 437:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 438:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 439:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 440:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t;
 441:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 442:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 443:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Multi Channel Shadow transfer request configuration options
 444:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 445:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MCMS_ACTION
 446:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 447:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 448:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                 the actual registers upon MCS xfer 
 449:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 450:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                 register values to the actual regis
 451:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                 request */
 452:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 453:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                 Compare register values to the actu
 454:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                 MCS xfer request */
 455:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MCMS_ACTION_t;
 456:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 457:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 458:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids
 459:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 460:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_IRQ_ID
 461:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 462:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH       = 0U , /**< Period match counting up */
 463:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH          = 1U , /**< Period match -> One match counting down */
 464:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP   = 2U , /**< Compare match counting up */
 465:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN = 3U , /**< Compare match counting down */
 466:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT0             = 8U , /**< Event-0 occurrence */
 467:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT1             = 9U , /**< Event-1 occurrence */
 468:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT2             = 10U, /**< Event-2 occurrence */
 469:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_TRAP               = 11U  /**< Trap occurrence */
 470:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_IRQ_ID_t;
 471:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 472:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 473:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 474:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 475:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MULTI_IRQ_ID
 476:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 477:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_PERIOD_MATCH       = 0x1U,   /**< Period match counting up */
 478:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_ONE_MATCH          = 0x2U,   /**< Period match -> One match counting 
 479:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP   = 0x4U,   /**< Compare match counting up */
 480:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN = 0x8U,   /**< Compare match counting down */
 481:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT0             = 0x100U, /**< Event-0 occurrence */
 482:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT1             = 0x200U, /**< Event-1 occurrence */
 483:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT2             = 0x400U, /**< Event-2 occurrence */
 484:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MULTI_IRQ_ID_t;
 485:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 486:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 487:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generat
 488:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 489:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SR_ID
 490:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 491:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 492:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 493:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 494:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 495:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SR_ID_t;
 496:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 497:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 498:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer options.
 499:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 500:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SHADOW_TRANSFER
 501:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 502:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_0            = CCU4_GCSS_S0SE_Msk, /**< Transfer Period, Compare a
 503:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 504:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-0 */
 505:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU4_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 506:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 507:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU4_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 508:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 509:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_1            = CCU4_GCSS_S1SE_Msk, /**< Transfer Period, Compare a
 510:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 511:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-1 */
 512:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU4_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 513:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual registers for S
 514:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU4_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 515:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 516:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_2            = CCU4_GCSS_S2SE_Msk, /**< Transfer Period, Compare a
 517:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 518:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-2 */
 519:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU4_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 520:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 521:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU4_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 522:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 523:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_3            = CCU4_GCSS_S3SE_Msk, /**< Transfer Period, Compare a
 524:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 525:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-3 */
 526:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU4_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 527:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 528:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU4_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 529:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 530:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SHADOW_TRANSFER_t;
 531:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 532:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V3) || defined(DOXYGEN)/* Defined for XMC1400 devices only */
 533:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 534:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer mode options.
 535:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @note Only available for XMC1400 series
 536:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 537:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE
 538:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 539:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U,  /**< Shadow transfer is 
 540:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                 One match. */
 541:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 542:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 543:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t; 
 544:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   
 545:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   
 546:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 547:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Immediate write into configuration register
 548:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 549:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 550:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_WRITE_INTO
 551:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 552:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU4_CC4_STC_IRPC_Msk,                  /**< Imm
 553:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 554:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 555:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_COMPARE_CONFIGURATION = CCU4_CC4_STC_IRCC_Msk,                 /**< Imm
 556:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 557:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 558:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU4_CC4_STC_IRLC_Msk,           /**< Imm
 559:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 560:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 561:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRDC_Msk,            /**< Imm
 562:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 563:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 564:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRFC_Msk /**< Imm
 565:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 566:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Val
 567:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_WRITE_INTO_t;
 568:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 569:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 570:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 571:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 572:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 573:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 574:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 575:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 576:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU4_CC4_STC_ASPC_Msk,        
 577:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 578:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 579:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 580:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE_SHADOW = CCU4_CC4_STC_ASCC_Msk,       
 581:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 582:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 583:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 584:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU4_CC4_STC_ASLC_Msk,        
 585:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 586:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 587:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU4_CC4_STC_ASDC_Msk,        
 588:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 589:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 590:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU4_CC4_STC_ASFC_
 591:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 592:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 593:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 594:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 595:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 596:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 597:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 598:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Used to create Mask needed for Multi-channel Shadow transfer enable/disable
 599:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 600:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MASK
 601:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 602:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 603:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 604:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 605:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 606:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MASK_t;
 607:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 608:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 609:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Selects suspend mode
 610:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 611:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SUSPEND_MODE
 612:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 613:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SUSPEND_MODE_IGNORE = 0 << CCU4_GCTRL_SUSCFG_Pos, /**< Suspend request ignored. The modu
 614:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SUSPEND_MODE_STOPS_INMEDIATELLY = 1 << CCU4_GCTRL_SUSCFG_Pos, /**< Stops all the running
 615:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SUSPEND_MODE_SAFE_STOP = 2 << CCU4_GCTRL_SUSCFG_Pos, /**< Stops the block immediately an
 616:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SUSPEND_MODE_WAIT_ROLL_OVER = 3 << CCU4_GCTRL_SUSCFG_Pos /**< Waits for the roll over of
 617:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SUSPEND_MODE_t;
 618:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 619:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 620:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 621:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * DATA STRUCTURES
 622:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 623:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 624:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 625:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 626:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Needed to configure the various aspects of an External Event.
 627:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  This structure will not connect the external event with an external function.
 628:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 629:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_EVENT_CONFIG
 630:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 631:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event *
 632:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 633:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an edge sensitive 
 634:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 635:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an level sensitive
 636:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 637:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_CONFIG_t;
 638:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 639:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard start*/
 640:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 641:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   #pragma push
 642:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   #pragma anon_unions
 643:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 644:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   #pragma warning 586
 645:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 646:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 647:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 648:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to compare 
 649:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 650:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 651:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_COMPARE_CONFIG
 652:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 653:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   union
 654:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   {
 655:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****     struct
 656:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****     {
 657:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 658:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t */
 659:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 660:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t*/
 661:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t shadow_xfer_clear : 1;  /**< Should PR and CR shadow xfer happen when timer is clear
 662:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 10;
 663:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 664:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 665:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 1;
 666:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 667:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_PRESCALER_MODE_t*/
 668:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 8;
 669:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t mcm_enable : 1;         /**< Multi-Channel mode enable? */
 670:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 6;
 671:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****     };
 672:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 673:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   };
 674:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 675:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                             Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t */
 676:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 677:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering */
 678:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   uint32_t passive_level : 1;          /**< Configuration of ST and OUT passive levels.
 679:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t*
 680:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true.*/
 681:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_COMPARE_CONFIG_t;
 682:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 683:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 684:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to capture 
 685:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 686:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */ 
 687:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_CAPTURE_CONFIG
 688:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 689:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   union
 690:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   {
 691:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****     struct
 692:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****     {
 693:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 694:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 695:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 696:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                           Accepts enum ::XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t*/
 697:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 698:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 699:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 700:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 3;
 701:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU4_SLI
 702:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 15;
 703:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****     };
 704:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 705:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   };
 706:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 707:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 708:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;  /**< Enables the concatenation of the timer */
 709:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAPTURE_CONFIG_t;
 710:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard end*/
 711:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 712:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   #pragma pop
 713:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 714:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   #pragma warning restore
 715:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 716:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 717:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * API Prototypes
 718:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 719:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 720:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #ifdef __cplusplus
 721:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** extern "C" {
 722:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 723:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 724:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidModule(const XMC_CCU4_MODULE_t *const module)
 725:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 726:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 727:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   
 728:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = (module == CCU40);
 729:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   
 730:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41) 
 731:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU41);
 732:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 733:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 734:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)
 735:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU42);
 736:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 737:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 738:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)
 739:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU43);
 740:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 741:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   
 742:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 743:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } 
 744:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 745:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidSlice(const XMC_CCU4_SLICE_t *const slice)
 746:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 747:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 748:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   
 749:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = (slice == CCU40_CC40);
 750:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC41)  
 751:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC41);
 752:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 753:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC42)  
 754:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC42);
 755:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 756:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC43)  
 757:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC43);
 758:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 759:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41)  
 760:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC40);
 761:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC41)  
 762:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC41);
 763:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 764:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC42)  
 765:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC42);
 766:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 767:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC43)  
 768:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC43);
 769:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 770:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif 
 771:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)  
 772:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC40);
 773:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC41)  
 774:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC41);
 775:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 776:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC42)  
 777:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC42);
 778:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 779:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC43)  
 780:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC43);
 781:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 782:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 783:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)  
 784:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC40);
 785:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC41)  
 786:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC41);
 787:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 788:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC42)  
 789:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC42);
 790:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 791:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC43)  
 792:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC43);
 793:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
 794:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif 
 795:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   
 796:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 797:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** } 
 798:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 799:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 800:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 801:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param mcs_action multi-channel shadow transfer request configuration
 802:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 803:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 804:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 805:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 806:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Initialization of global register GCTRL.<br>\n
 807:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  As part of module initialization, behaviour of the module upon detection
 808:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU4_EnableModule().
 809:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  The API call would bring up the required CCU4 module and also initialize the module for
 810:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  the required multi-channel shadow transfer.
 811:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 812:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 813:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
 814:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 815:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action);
 816:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 817:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 818:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 819:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param clock Choice of input clock to the module
 820:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 821:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 822:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 823:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 824:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.<BR>\n
 825:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
 826:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Call to this API is valid after the XMC_CCU4_Init().
 827:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 828:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 829:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * None.<BR>
 830:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 831:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock);
 832:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 833:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 834:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 835:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 836:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 837:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 838:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 839:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Enables the CCU4 module and brings it to active state.<BR>\n
 840:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
 841:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API before any operations are done on the CCU4 module. Invoked from  XMC_CCU4_Init()
 842:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 843:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 844:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SetModuleClock()<BR> XMC_CCU4_DisableModule()<BR> XMC_CCU4_StartPrescaler().
 845:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 846:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module);
 847:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 848:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 849:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 850:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 851:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 852:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 853:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 854:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depen
 855:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * on the device being selected).<BR>\n
 856:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API when a CCU4 module needs to be disabled completely.
 857:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Any operation on the CCU4 module will have no effect after this API is called.
 858:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 859:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 860:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableModule()<BR> XMC_CCU4_DisableModule().
 861:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 862:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module);
 863:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 864:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 865:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 866:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 867:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 868:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 869:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 870:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<BR>\n
 871:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
 872:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU4_Init()
 873:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  (Mandatory to fully initialize the module).Directly accessed register is GIDLC.
 874:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 875:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 876:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescal
 877:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StopPrescaler().
 878:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 879:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
 880:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 881:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 882:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC = (uint32_t) CCU4_GIDLC_SPRB_Msk;
 212              	 .loc 2 882 0
 213 000a 4FF48073 	 mov r3,#256
 214 000e E360     	 str r3,[r4,#12]
 215              	.LBE15:
 216              	.LBE14:
 326:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Start the prescaler */
 327:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_CCU4_StartPrescaler(module);
 328:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 329:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   gctrl = module->GCTRL;
 217              	 .loc 1 329 0
 218 0010 2168     	 ldr r1,[r4]
 219              	.LVL26:
 330:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   gctrl &= ~((uint32_t) CCU4_GCTRL_MSDE_Msk);
 220              	 .loc 1 330 0
 221 0012 21F44041 	 bic r1,r1,#49152
 222              	.LVL27:
 331:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   gctrl |= ((uint32_t) mcs_action) << CCU4_GCTRL_MSDE_Pos;
 223              	 .loc 1 331 0
 224 0016 41EA8531 	 orr r1,r1,r5,lsl#14
 225              	.LVL28:
 332:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 333:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   module->GCTRL = gctrl;
 226              	 .loc 1 333 0
 227 001a 2160     	 str r1,[r4]
 228 001c 38BD     	 pop {r3,r4,r5,pc}
 229              	 .cfi_endproc
 230              	.LFE222:
 232 001e 00BF     	 .section .text.XMC_CCU4_SetModuleClock,"ax",%progbits
 233              	 .align 2
 234              	 .global XMC_CCU4_SetModuleClock
 235              	 .thumb
 236              	 .thumb_func
 238              	XMC_CCU4_SetModuleClock:
 239              	.LFB223:
 334:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 335:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 336:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to select CCU4 module clock */
 337:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock)
 338:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 240              	 .loc 1 338 0
 241              	 .cfi_startproc
 242              	 
 243              	 
 244              	 
 245              	.LVL29:
 339:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t gctrl;
 340:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 341:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetModuleClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 342:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetModuleClock:Invalid Module Clock", XMC_CCU4_SLICE_CHECK_CLOCK(clock));
 343:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 344:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   gctrl = module->GCTRL;
 246              	 .loc 1 344 0
 247 0000 0368     	 ldr r3,[r0]
 248              	.LVL30:
 345:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   gctrl &= ~((uint32_t) CCU4_GCTRL_PCIS_Msk);
 249              	 .loc 1 345 0
 250 0002 23F03003 	 bic r3,r3,#48
 251              	.LVL31:
 346:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   gctrl |= ((uint32_t) clock) << CCU4_GCTRL_PCIS_Pos;
 252              	 .loc 1 346 0
 253 0006 43EA0111 	 orr r1,r3,r1,lsl#4
 254              	.LVL32:
 347:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 348:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   module->GCTRL = gctrl;
 255              	 .loc 1 348 0
 256 000a 0160     	 str r1,[r0]
 257 000c 7047     	 bx lr
 258              	 .cfi_endproc
 259              	.LFE223:
 261 000e 00BF     	 .section .text.XMC_CCU4_SetMultiChannelShadowTransferMode,"ax",%progbits
 262              	 .align 2
 263              	 .global XMC_CCU4_SetMultiChannelShadowTransferMode
 264              	 .thumb
 265              	 .thumb_func
 267              	XMC_CCU4_SetMultiChannelShadowTransferMode:
 268              	.LFB224:
 349:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 350:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 351:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure the multichannel shadow transfer request via SW and via the CCU4x.MCSS input. *
 352:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SetMultiChannelShadowTransferMode(XMC_CCU4_MODULE_t *const module, const uint32_t sli
 353:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 269              	 .loc 1 353 0
 270              	 .cfi_startproc
 271              	 
 272              	 
 273              	 
 274              	.LVL33:
 354:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t gctrl;
 355:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 356:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetMultiChannelShadowTransferMode:Invalid module Pointer", XMC_CCU4_IsValidM
 357:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 358:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   gctrl = module->GCTRL;
 275              	 .loc 1 358 0
 276 0000 0368     	 ldr r3,[r0]
 277              	.LVL34:
 359:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   gctrl &= ~((uint32_t)slice_mode_msk >> 16U);
 278              	 .loc 1 359 0
 279 0002 23EA1143 	 bic r3,r3,r1,lsr#16
 280              	.LVL35:
 360:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   gctrl |= ((uint32_t)slice_mode_msk & 0xFFFFU);
 281              	 .loc 1 360 0
 282 0006 89B2     	 uxth r1,r1
 283              	.LVL36:
 284 0008 1943     	 orrs r1,r1,r3
 285              	.LVL37:
 361:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   module->GCTRL = gctrl;
 286              	 .loc 1 361 0
 287 000a 0160     	 str r1,[r0]
 288 000c 7047     	 bx lr
 289              	 .cfi_endproc
 290              	.LFE224:
 292 000e 00BF     	 .section .text.XMC_CCU4_SLICE_CompareInit,"ax",%progbits
 293              	 .align 2
 294              	 .global XMC_CCU4_SLICE_CompareInit
 295              	 .thumb
 296              	 .thumb_func
 298              	XMC_CCU4_SLICE_CompareInit:
 299              	.LFB225:
 362:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 363:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 364:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure CC4 Slice as Timer */
 365:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 366:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init)
 367:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 300              	 .loc 1 367 0
 301              	 .cfi_startproc
 302              	 
 303              	 
 304              	 
 305              	.LVL38:
 368:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CompareInit:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 369:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CompareInit:Compare Init Pointer is NULL",
 370:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              (XMC_CCU4_SLICE_COMPARE_CONFIG_t *) NULL != compare_init);
 371:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 372:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Program the timer mode */
 373:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->TC = compare_init->tc;
 306              	 .loc 1 373 0
 307 0000 0B68     	 ldr r3,[r1]
 308 0002 4361     	 str r3,[r0,#20]
 374:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Enable the timer concatenation */
 375:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = ((uint32_t) compare_init->timer_concatenation << CCU4_CC4_CMC_TCE_Pos);
 309              	 .loc 1 375 0
 310 0004 4B79     	 ldrb r3,[r1,#5]
 311 0006 C3F34013 	 ubfx r3,r3,#5,#1
 312 000a 1B05     	 lsls r3,r3,#20
 313 000c 4360     	 str r3,[r0,#4]
 376:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Program initial prescaler divider value */
 377:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->PSC = (uint32_t) compare_init->prescaler_initval;
 314              	 .loc 1 377 0
 315 000e 0B79     	 ldrb r3,[r1,#4]
 316 0010 03F00F03 	 and r3,r3,#15
 317 0014 4362     	 str r3,[r0,#36]
 378:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Program the dither compare value */
 379:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->DITS = (uint32_t) compare_init->dither_limit;
 318              	 .loc 1 379 0
 319 0016 4B79     	 ldrb r3,[r1,#5]
 320 0018 03F00F03 	 and r3,r3,#15
 321 001c 0362     	 str r3,[r0,#32]
 380:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Program timer output passive level */
 381:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->PSL = (uint32_t) compare_init->passive_level;
 322              	 .loc 1 381 0
 323 001e 4B79     	 ldrb r3,[r1,#5]
 324 0020 C3F30013 	 ubfx r3,r3,#4,#1
 325 0024 8361     	 str r3,[r0,#24]
 382:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Program floating prescaler compare value */
 383:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->FPCS = (uint32_t) compare_init->float_limit;
 326              	 .loc 1 383 0
 327 0026 0B79     	 ldrb r3,[r1,#4]
 328 0028 1B09     	 lsrs r3,r3,#4
 329 002a C362     	 str r3,[r0,#44]
 330 002c 7047     	 bx lr
 331              	 .cfi_endproc
 332              	.LFE225:
 334 002e 00BF     	 .section .text.XMC_CCU4_SLICE_CaptureInit,"ax",%progbits
 335              	 .align 2
 336              	 .global XMC_CCU4_SLICE_CaptureInit
 337              	 .thumb
 338              	 .thumb_func
 340              	XMC_CCU4_SLICE_CaptureInit:
 341              	.LFB226:
 384:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 385:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 386:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure CC4 Slice for Capture */
 387:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
 388:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                             const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init)
 389:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 342              	 .loc 1 389 0
 343              	 .cfi_startproc
 344              	 
 345              	 
 346              	 
 347              	.LVL39:
 390:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CaptureInit:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 391:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CaptureInit:Capture Init Pointer is NULL",
 392:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              (XMC_CCU4_SLICE_CAPTURE_CONFIG_t *) NULL != capture_init);
 393:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 394:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Program the capture mode */
 395:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->TC = capture_init->tc;
 348              	 .loc 1 395 0
 349 0000 0B68     	 ldr r3,[r1]
 350 0002 4361     	 str r3,[r0,#20]
 396:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Enable the timer concatenation */
 397:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = ((uint32_t)capture_init->timer_concatenation << CCU4_CC4_CMC_TCE_Pos);
 351              	 .loc 1 397 0
 352 0004 4B79     	 ldrb r3,[r1,#5]
 353 0006 03F00103 	 and r3,r3,#1
 354 000a 1B05     	 lsls r3,r3,#20
 355 000c 4360     	 str r3,[r0,#4]
 398:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Program initial prescaler divider value */
 399:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->PSC = (uint32_t) capture_init->prescaler_initval;
 356              	 .loc 1 399 0
 357 000e 0B79     	 ldrb r3,[r1,#4]
 358 0010 03F00F03 	 and r3,r3,#15
 359 0014 4362     	 str r3,[r0,#36]
 400:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Program initial floating prescaler compare value */
 401:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->FPCS = (uint32_t) capture_init->float_limit;
 360              	 .loc 1 401 0
 361 0016 0B79     	 ldrb r3,[r1,#4]
 362 0018 1B09     	 lsrs r3,r3,#4
 363 001a C362     	 str r3,[r0,#44]
 364 001c 7047     	 bx lr
 365              	 .cfi_endproc
 366              	.LFE226:
 368 001e 00BF     	 .section .text.XMC_CCU4_SLICE_StartConfig,"ax",%progbits
 369              	 .align 2
 370              	 .global XMC_CCU4_SLICE_StartConfig
 371              	 .thumb
 372              	 .thumb_func
 374              	XMC_CCU4_SLICE_StartConfig:
 375              	.LFB227:
 402:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 403:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 404:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 405:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure the Start trigger function of a slice */
 406:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
 407:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                             const XMC_CCU4_SLICE_EVENT_t event,
 408:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode)
 409:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 376              	 .loc 1 409 0
 377              	 .cfi_startproc
 378              	 
 379              	 
 380              	 
 381              	.LVL40:
 410:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t cmc;
 411:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t tc;
 412:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 413:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 414:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 415:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Start Mode", 
 416:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              ((start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR) ||\
 417:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****               (start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START)));
 418:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* First, Bind the event with the stop function */
 419:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc = slice->CMC;
 382              	 .loc 1 419 0
 383 0000 4368     	 ldr r3,[r0,#4]
 384              	.LVL41:
 420:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_STRTS_Msk);
 385              	 .loc 1 420 0
 386 0002 23F00303 	 bic r3,r3,#3
 387              	.LVL42:
 421:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_STRTS_Pos;
 388              	 .loc 1 421 0
 389 0006 1943     	 orrs r1,r1,r3
 390              	.LVL43:
 422:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 423:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = cmc;
 391              	 .loc 1 423 0
 392 0008 4160     	 str r1,[r0,#4]
 424:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 425:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   tc  = slice->TC;
 393              	 .loc 1 425 0
 394 000a 4369     	 ldr r3,[r0,#20]
 395              	.LVL44:
 426:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Next, Configure the start mode */
 427:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if (start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR)
 396              	 .loc 1 427 0
 397 000c 012A     	 cmp r2,#1
 428:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 429:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     tc |= (uint32_t)CCU4_CC4_TC_STRM_Msk;
 398              	 .loc 1 429 0
 399 000e 0CBF     	 ite eq
 400 0010 43F48063 	 orreq r3,r3,#1024
 401              	.LVL45:
 430:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 431:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
 432:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 433:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     tc &= ~((uint32_t)CCU4_CC4_TC_STRM_Msk);
 402              	 .loc 1 433 0
 403 0014 23F48063 	 bicne r3,r3,#1024
 404              	.LVL46:
 434:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 435:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 436:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->TC = tc;
 405              	 .loc 1 436 0
 406 0018 4361     	 str r3,[r0,#20]
 407 001a 7047     	 bx lr
 408              	 .cfi_endproc
 409              	.LFE227:
 411              	 .section .text.XMC_CCU4_SLICE_StopConfig,"ax",%progbits
 412              	 .align 2
 413              	 .global XMC_CCU4_SLICE_StopConfig
 414              	 .thumb
 415              	 .thumb_func
 417              	XMC_CCU4_SLICE_StopConfig:
 418              	.LFB228:
 437:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 438:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 439:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure the Stop trigger function of a slice */
 440:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
 441:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                            const XMC_CCU4_SLICE_EVENT_t event,
 442:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode)
 443:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 419              	 .loc 1 443 0
 420              	 .cfi_startproc
 421              	 
 422              	 
 423              	 
 424              	.LVL47:
 444:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t cmc;
 445:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t tc;
 446:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 447:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 448:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 449:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Start Mode", XMC_CCU4_CHECK_END_MODE(end_mode));
 450:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 451:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* First, Bind the event with the stop function */
 452:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc = slice->CMC;
 425              	 .loc 1 452 0
 426 0000 4368     	 ldr r3,[r0,#4]
 427              	.LVL48:
 453:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_ENDS_Msk);
 428              	 .loc 1 453 0
 429 0002 23F00C03 	 bic r3,r3,#12
 430              	.LVL49:
 454:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_ENDS_Pos;
 431              	 .loc 1 454 0
 432 0006 43EA8101 	 orr r1,r3,r1,lsl#2
 433              	.LVL50:
 455:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 456:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = cmc;
 434              	 .loc 1 456 0
 435 000a 4160     	 str r1,[r0,#4]
 457:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 458:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Next, Configure the stop mode */
 459:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   tc = slice->TC;
 436              	 .loc 1 459 0
 437 000c 4369     	 ldr r3,[r0,#20]
 438              	.LVL51:
 460:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   tc &= ~((uint32_t) CCU4_CC4_TC_ENDM_Msk);
 439              	 .loc 1 460 0
 440 000e 23F44073 	 bic r3,r3,#768
 441              	.LVL52:
 461:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   tc |= ((uint32_t) end_mode) << CCU4_CC4_TC_ENDM_Pos;
 442              	 .loc 1 461 0
 443 0012 43EA0222 	 orr r2,r3,r2,lsl#8
 444              	.LVL53:
 462:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 463:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->TC = tc;
 445              	 .loc 1 463 0
 446 0016 4261     	 str r2,[r0,#20]
 447 0018 7047     	 bx lr
 448              	 .cfi_endproc
 449              	.LFE228:
 451 001a 00BF     	 .section .text.XMC_CCU4_SLICE_LoadConfig,"ax",%progbits
 452              	 .align 2
 453              	 .global XMC_CCU4_SLICE_LoadConfig
 454              	 .thumb
 455              	 .thumb_func
 457              	XMC_CCU4_SLICE_LoadConfig:
 458              	.LFB229:
 464:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 465:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 466:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure the Load trigger function of a slice */
 467:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 468:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 459              	 .loc 1 468 0
 460              	 .cfi_startproc
 461              	 
 462              	 
 463              	 
 464              	.LVL54:
 469:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t cmc;
 470:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 471:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_LoadConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 472:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_LoadConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 473:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 474:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Bind the event with the load function */
 475:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc = slice->CMC;
 465              	 .loc 1 475 0
 466 0000 4368     	 ldr r3,[r0,#4]
 467              	.LVL55:
 476:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_LDS_Msk);
 468              	 .loc 1 476 0
 469 0002 23F44053 	 bic r3,r3,#12288
 470              	.LVL56:
 477:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_LDS_Pos;
 471              	 .loc 1 477 0
 472 0006 43EA0131 	 orr r1,r3,r1,lsl#12
 473              	.LVL57:
 478:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 479:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = cmc;
 474              	 .loc 1 479 0
 475 000a 4160     	 str r1,[r0,#4]
 476 000c 7047     	 bx lr
 477              	 .cfi_endproc
 478              	.LFE229:
 480 000e 00BF     	 .section .text.XMC_CCU4_SLICE_ModulationConfig,"ax",%progbits
 481              	 .align 2
 482              	 .global XMC_CCU4_SLICE_ModulationConfig
 483              	 .thumb
 484              	 .thumb_func
 486              	XMC_CCU4_SLICE_ModulationConfig:
 487              	.LFB230:
 480:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 481:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 482:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure the slice modulation function */
 483:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
 484:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_EVENT_t event,
 485:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
 486:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                      const bool synch_with_pwm)
 487:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 488              	 .loc 1 487 0
 489              	 .cfi_startproc
 490              	 
 491              	 
 492              	 
 493              	.LVL58:
 494 0000 30B4     	 push {r4,r5}
 495              	.LCFI3:
 496              	 .cfi_def_cfa_offset 8
 497              	 .cfi_offset 4,-8
 498              	 .cfi_offset 5,-4
 488:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t cmc;
 489:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t tc;
 490:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 491:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
 492:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(even
 493:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Modulation Mode",
 494:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              ((mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT) ||\
 495:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****               (mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT)));
 496:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 497:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   tc  = slice->TC;
 499              	 .loc 1 497 0
 500 0002 4469     	 ldr r4,[r0,#20]
 501              	.LVL59:
 498:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc = slice->CMC;
 502              	 .loc 1 498 0
 503 0004 4568     	 ldr r5,[r0,#4]
 504              	.LVL60:
 499:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 500:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* First, Bind the event with the modulation function */
 501:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_MOS_Msk);
 505              	 .loc 1 501 0
 506 0006 25F44025 	 bic r5,r5,#786432
 507              	.LVL61:
 502:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_MOS_Pos;
 508              	 .loc 1 502 0
 509 000a 45EA8141 	 orr r1,r5,r1,lsl#18
 510              	.LVL62:
 503:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = cmc;
 511              	 .loc 1 503 0
 512 000e 4160     	 str r1,[r0,#4]
 504:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 505:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Next, Modulation mode */
 506:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if (mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT)
 513              	 .loc 1 506 0
 514 0010 012A     	 cmp r2,#1
 507:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 508:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_EMT_Msk;
 515              	 .loc 1 508 0
 516 0012 0CBF     	 ite eq
 517 0014 44F08074 	 orreq r4,r4,#16777216
 518              	.LVL63:
 509:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 510:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
 511:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 512:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_EMT_Msk);
 519              	 .loc 1 512 0
 520 0018 24F08074 	 bicne r4,r4,#16777216
 521              	.LVL64:
 513:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 514:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 515:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Synchronization of modulation effect with PWM cycle */
 516:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if (synch_with_pwm == (bool) true)
 522              	 .loc 1 516 0
 523 001c 13B1     	 cbz r3,.L31
 517:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 518:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_EMS_Msk;
 524              	 .loc 1 518 0
 525 001e 44F40004 	 orr r4,r4,#8388608
 526              	.LVL65:
 527 0022 01E0     	 b .L32
 528              	.L31:
 519:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 520:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
 521:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 522:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_EMS_Msk);
 529              	 .loc 1 522 0
 530 0024 24F40004 	 bic r4,r4,#8388608
 531              	.LVL66:
 532              	.L32:
 523:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 524:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 525:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->TC = tc;
 533              	 .loc 1 525 0
 534 0028 4461     	 str r4,[r0,#20]
 526:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 535              	 .loc 1 526 0
 536 002a 30BC     	 pop {r4,r5}
 537              	.LCFI4:
 538              	 .cfi_restore 5
 539              	 .cfi_restore 4
 540              	 .cfi_def_cfa_offset 0
 541              	.LVL67:
 542 002c 7047     	 bx lr
 543              	 .cfi_endproc
 544              	.LFE230:
 546 002e 00BF     	 .section .text.XMC_CCU4_SLICE_CountConfig,"ax",%progbits
 547              	 .align 2
 548              	 .global XMC_CCU4_SLICE_CountConfig
 549              	 .thumb
 550              	 .thumb_func
 552              	XMC_CCU4_SLICE_CountConfig:
 553              	.LFB231:
 527:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 528:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure the slice count function */
 529:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 530:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 554              	 .loc 1 530 0
 555              	 .cfi_startproc
 556              	 
 557              	 
 558              	 
 559              	.LVL68:
 531:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t cmc;
 532:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 533:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CountConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 534:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CountConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 535:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 536:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Bind the event with the count function */
 537:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc = slice->CMC;
 560              	 .loc 1 537 0
 561 0000 4368     	 ldr r3,[r0,#4]
 562              	.LVL69:
 538:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CNTS_Msk);
 563              	 .loc 1 538 0
 564 0002 23F44043 	 bic r3,r3,#49152
 565              	.LVL70:
 539:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CNTS_Pos;
 566              	 .loc 1 539 0
 567 0006 43EA8131 	 orr r1,r3,r1,lsl#14
 568              	.LVL71:
 540:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 541:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = cmc;
 569              	 .loc 1 541 0
 570 000a 4160     	 str r1,[r0,#4]
 571 000c 7047     	 bx lr
 572              	 .cfi_endproc
 573              	.LFE231:
 575 000e 00BF     	 .section .text.XMC_CCU4_SLICE_GateConfig,"ax",%progbits
 576              	 .align 2
 577              	 .global XMC_CCU4_SLICE_GateConfig
 578              	 .thumb
 579              	 .thumb_func
 581              	XMC_CCU4_SLICE_GateConfig:
 582              	.LFB232:
 542:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 543:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 544:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure slice gate function */
 545:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 546:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 583              	 .loc 1 546 0
 584              	 .cfi_startproc
 585              	 
 586              	 
 587              	 
 588              	.LVL72:
 547:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t cmc;
 548:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 549:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GateConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 550:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GateConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 551:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 552:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Bind the event with the gate function */
 553:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc = slice->CMC;
 589              	 .loc 1 553 0
 590 0000 4368     	 ldr r3,[r0,#4]
 591              	.LVL73:
 554:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_GATES_Msk);
 592              	 .loc 1 554 0
 593 0002 23F44073 	 bic r3,r3,#768
 594              	.LVL74:
 555:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_GATES_Pos;
 595              	 .loc 1 555 0
 596 0006 43EA0121 	 orr r1,r3,r1,lsl#8
 597              	.LVL75:
 556:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 557:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = cmc;
 598              	 .loc 1 557 0
 599 000a 4160     	 str r1,[r0,#4]
 600 000c 7047     	 bx lr
 601              	 .cfi_endproc
 602              	.LFE232:
 604 000e 00BF     	 .section .text.XMC_CCU4_SLICE_Capture0Config,"ax",%progbits
 605              	 .align 2
 606              	 .global XMC_CCU4_SLICE_Capture0Config
 607              	 .thumb
 608              	 .thumb_func
 610              	XMC_CCU4_SLICE_Capture0Config:
 611              	.LFB233:
 558:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 559:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 560:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure Capture-0 function */
 561:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
 562:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 612              	 .loc 1 562 0
 613              	 .cfi_startproc
 614              	 
 615              	 
 616              	 
 617              	.LVL76:
 563:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t cmc;
 564:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 565:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture0Config:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 566:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture0Config:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 567:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 568:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Bind the event with the gate function */
 569:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc = slice->CMC;
 618              	 .loc 1 569 0
 619 0000 4368     	 ldr r3,[r0,#4]
 620              	.LVL77:
 570:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CAP0S_Msk);
 621              	 .loc 1 570 0
 622 0002 23F03003 	 bic r3,r3,#48
 623              	.LVL78:
 571:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CAP0S_Pos;
 624              	 .loc 1 571 0
 625 0006 43EA0111 	 orr r1,r3,r1,lsl#4
 626              	.LVL79:
 572:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 573:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = cmc;
 627              	 .loc 1 573 0
 628 000a 4160     	 str r1,[r0,#4]
 629 000c 7047     	 bx lr
 630              	 .cfi_endproc
 631              	.LFE233:
 633 000e 00BF     	 .section .text.XMC_CCU4_SLICE_Capture1Config,"ax",%progbits
 634              	 .align 2
 635              	 .global XMC_CCU4_SLICE_Capture1Config
 636              	 .thumb
 637              	 .thumb_func
 639              	XMC_CCU4_SLICE_Capture1Config:
 640              	.LFB234:
 574:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 575:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 576:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure Capture-1 function */
 577:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
 578:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 641              	 .loc 1 578 0
 642              	 .cfi_startproc
 643              	 
 644              	 
 645              	 
 646              	.LVL80:
 579:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t cmc;
 580:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 581:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture1Config:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 582:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture1Config:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 583:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 584:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Bind the event with the gate function */
 585:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc = slice->CMC;
 647              	 .loc 1 585 0
 648 0000 4368     	 ldr r3,[r0,#4]
 649              	.LVL81:
 586:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CAP1S_Msk);
 650              	 .loc 1 586 0
 651 0002 23F0C003 	 bic r3,r3,#192
 652              	.LVL82:
 587:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CAP1S_Pos;
 653              	 .loc 1 587 0
 654 0006 43EA8111 	 orr r1,r3,r1,lsl#6
 655              	.LVL83:
 588:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 589:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = cmc;
 656              	 .loc 1 589 0
 657 000a 4160     	 str r1,[r0,#4]
 658 000c 7047     	 bx lr
 659              	 .cfi_endproc
 660              	.LFE234:
 662 000e 00BF     	 .section .text.XMC_CCU4_SLICE_DirectionConfig,"ax",%progbits
 663              	 .align 2
 664              	 .global XMC_CCU4_SLICE_DirectionConfig
 665              	 .thumb
 666              	 .thumb_func
 668              	XMC_CCU4_SLICE_DirectionConfig:
 669              	.LFB235:
 590:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 591:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 592:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure direction function */
 593:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
 594:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 670              	 .loc 1 594 0
 671              	 .cfi_startproc
 672              	 
 673              	 
 674              	 
 675              	.LVL84:
 595:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t cmc;
 596:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 597:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_DirectionConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 598:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_DirectionConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event
 599:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 600:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Bind the event with the direction function */
 601:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc = slice->CMC;
 676              	 .loc 1 601 0
 677 0000 4368     	 ldr r3,[r0,#4]
 678              	.LVL85:
 602:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_UDS_Msk);
 679              	 .loc 1 602 0
 680 0002 23F44063 	 bic r3,r3,#3072
 681              	.LVL86:
 603:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_UDS_Pos;
 682              	 .loc 1 603 0
 683 0006 43EA8121 	 orr r1,r3,r1,lsl#10
 684              	.LVL87:
 604:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 605:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = cmc;
 685              	 .loc 1 605 0
 686 000a 4160     	 str r1,[r0,#4]
 687 000c 7047     	 bx lr
 688              	 .cfi_endproc
 689              	.LFE235:
 691 000e 00BF     	 .section .text.XMC_CCU4_SLICE_StatusBitOverrideConfig,"ax",%progbits
 692              	 .align 2
 693              	 .global XMC_CCU4_SLICE_StatusBitOverrideConfig
 694              	 .thumb
 695              	 .thumb_func
 697              	XMC_CCU4_SLICE_StatusBitOverrideConfig:
 698              	.LFB236:
 606:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 607:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 608:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure slice status bit override function */
 609:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice)
 610:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 699              	 .loc 1 610 0
 700              	 .cfi_startproc
 701              	 
 702              	 
 703              	 
 704              	.LVL88:
 611:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t cmc;
 612:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 613:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StatusBitOverrideConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
 614:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 615:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Bind the event with the override function */
 616:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc = slice->CMC;
 705              	 .loc 1 616 0
 706 0000 4368     	 ldr r3,[r0,#4]
 707              	.LVL89:
 617:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Map status bit trigger override to Event 1 & 
 618:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****          status bit value override to Event 2 */
 619:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_OFS_Msk);
 620:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc |= ((uint32_t) 1) << CCU4_CC4_CMC_OFS_Pos;
 708              	 .loc 1 620 0
 709 0002 43F48033 	 orr r3,r3,#65536
 710              	.LVL90:
 621:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 622:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = cmc;
 711              	 .loc 1 622 0
 712 0006 4360     	 str r3,[r0,#4]
 713 0008 7047     	 bx lr
 714              	 .cfi_endproc
 715              	.LFE236:
 717 000a 00BF     	 .section .text.XMC_CCU4_SLICE_TrapConfig,"ax",%progbits
 718              	 .align 2
 719              	 .global XMC_CCU4_SLICE_TrapConfig
 720              	 .thumb
 721              	 .thumb_func
 723              	XMC_CCU4_SLICE_TrapConfig:
 724              	.LFB237:
 623:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 624:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 625:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure trap function */
 626:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
 627:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
 628:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                const bool synch_with_pwm)
 629:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 725              	 .loc 1 629 0
 726              	 .cfi_startproc
 727              	 
 728              	 
 729              	 
 730              	.LVL91:
 630:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t cmc;
 631:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t tc;
 632:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 633:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_TrapConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 634:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_TrapConfig:Invalid Exit Mode", ((exit_mode == XMC_CCU4_SLICE_TRAP_EXIT
 635:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                                              (exit_mode == XMC_CCU4_SLICE_TRAP_EXIT
 636:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     
 637:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* First, Map trap function to Event 2 */
 638:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc = slice->CMC;
 731              	 .loc 1 638 0
 732 0000 4368     	 ldr r3,[r0,#4]
 733              	.LVL92:
 639:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_TS_Msk);
 640:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cmc |= ((uint32_t) 1) << CCU4_CC4_CMC_TS_Pos;
 734              	 .loc 1 640 0
 735 0002 43F40033 	 orr r3,r3,#131072
 736              	.LVL93:
 641:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->CMC = cmc;
 737              	 .loc 1 641 0
 738 0006 4360     	 str r3,[r0,#4]
 642:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 643:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Next, Configure synchronization option */
 644:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   tc = slice->TC;
 739              	 .loc 1 644 0
 740 0008 4369     	 ldr r3,[r0,#20]
 741              	.LVL94:
 645:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 646:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if (synch_with_pwm == (bool) true)
 742              	 .loc 1 646 0
 743 000a 12B1     	 cbz r2,.L41
 647:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 648:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_TRPSE_Msk;
 744              	 .loc 1 648 0
 745 000c 43F40013 	 orr r3,r3,#2097152
 746              	.LVL95:
 747 0010 01E0     	 b .L42
 748              	.L41:
 649:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 650:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
 651:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 652:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_TRPSE_Msk);
 749              	 .loc 1 652 0
 750 0012 23F40013 	 bic r3,r3,#2097152
 751              	.LVL96:
 752              	.L42:
 653:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 654:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 655:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure exit mode */
 656:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if (exit_mode == XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW)
 753              	 .loc 1 656 0
 754 0016 0129     	 cmp r1,#1
 657:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 658:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_TRPSW_Msk;
 755              	 .loc 1 658 0
 756 0018 0CBF     	 ite eq
 757 001a 43F48003 	 orreq r3,r3,#4194304
 758              	.LVL97:
 659:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 660:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
 661:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 662:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_TRPSW_Msk);
 759              	 .loc 1 662 0
 760 001e 23F48003 	 bicne r3,r3,#4194304
 761              	.LVL98:
 663:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 664:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 665:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->TC = tc;
 762              	 .loc 1 665 0
 763 0022 4361     	 str r3,[r0,#20]
 764              	.LVL99:
 765 0024 7047     	 bx lr
 766              	 .cfi_endproc
 767              	.LFE237:
 769 0026 00BF     	 .section .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 770              	 .align 2
 771              	 .global XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent
 772              	 .thumb
 773              	 .thumb_func
 775              	XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:
 776              	.LFB238:
 666:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 667:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 668:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure a slice Status Bit Override event */
 669:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
 670:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
 671:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
 672:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 777              	 .loc 1 672 0
 778              	 .cfi_startproc
 779              	 
 780              	 
 781              	 
 782              	.LVL100:
 783 0000 10B4     	 push {r4}
 784              	.LCFI5:
 785              	 .cfi_def_cfa_offset 4
 786              	 .cfi_offset 4,-4
 673:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t ins;
 674:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 675:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Slice Pointer", XMC_CCU4_IsVal
 676:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 677:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****          XMC_CCU4_SLICE_IsInputvalid(ev1_config->mapped_input));
 678:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 679:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(ev1_config->edge));
 680:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 681:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              ((ev1_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 682:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****               (ev1_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 683:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 684:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(ev1_config->duration));
 685:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 686:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****          XMC_CCU4_SLICE_IsInputvalid(ev2_config->mapped_input));
 687:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 688:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(ev2_config->edge));
 689:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 690:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              ((ev2_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 691:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****               (ev2_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 692:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period", 
 693:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(ev2_config->duration));
 694:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 695:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins = slice->INS2;
 696:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 697:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure the edge sensitivity for event 1 */
 698:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS2_EV1EM_Pos);
 699:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU4_CC4_INS2_EV1EM_Pos;
 700:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 701:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure the edge sensitivity for event 2 */
 702:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS2_EV2EM_Pos);
 703:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU4_CC4_INS2_EV2EM_Pos;
 704:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 705:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure the level sensitivity for event 1 */
 706:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS2_EV1LM_Pos);
 707:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->level) << CCU4_CC4_INS2_EV1LM_Pos;
 708:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 709:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure the level sensitivity for event 2 */
 710:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS2_EV2LM_Pos);
 711:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->level) << CCU4_CC4_INS2_EV2LM_Pos;
 712:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 713:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure the debounce filter for event 1 */
 714:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS2_LPF1M_Pos);
 715:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU4_CC4_INS2_LPF1M_Pos;
 716:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 717:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure the debounce filter for event 2 */
 718:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS2_LPF2M_Pos);
 719:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU4_CC4_INS2_LPF2M_Pos;
 720:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 721:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->INS2 = ins;
 722:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 723:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins = slice->INS1;
 724:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 725:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Next, the input for Event1 */
 726:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS1_EV1IS_Pos);
 727:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU4_CC4_INS1_EV1IS_Pos;
 728:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 729:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Finally, the input for Event2 */
 730:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS1_EV2IS_Pos);
 731:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU4_CC4_INS1_EV2IS_Pos;
 732:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 733:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->INS1 = ins;
 734:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #else
 735:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins = slice->INS;
 787              	 .loc 1 735 0
 788 0002 0368     	 ldr r3,[r0]
 789              	.LVL101:
 736:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 737:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure the edge sensitivity for event 1 */
 738:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS_EV1EM_Pos);
 790              	 .loc 1 738 0
 791 0004 23F44023 	 bic r3,r3,#786432
 792              	.LVL102:
 739:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU4_CC4_INS_EV1EM_Pos;
 793              	 .loc 1 739 0
 794 0008 4C78     	 ldrb r4,[r1,#1]
 795 000a 43EA8443 	 orr r3,r3,r4,lsl#18
 796              	.LVL103:
 740:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 741:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure the edge sensitivity for event 2 */
 742:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS_EV2EM_Pos);
 797              	 .loc 1 742 0
 798 000e 23F44013 	 bic r3,r3,#3145728
 799              	.LVL104:
 743:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU4_CC4_INS_EV2EM_Pos;
 800              	 .loc 1 743 0
 801 0012 5478     	 ldrb r4,[r2,#1]
 802 0014 43EA0453 	 orr r3,r3,r4,lsl#20
 803              	.LVL105:
 744:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 745:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure the level sensitivity for event 1 */
 746:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS_EV1LM_Pos);
 804              	 .loc 1 746 0
 805 0018 23F40003 	 bic r3,r3,#8388608
 806              	.LVL106:
 747:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->level) << CCU4_CC4_INS_EV1LM_Pos;
 807              	 .loc 1 747 0
 808 001c 8C78     	 ldrb r4,[r1,#2]
 809 001e 43EAC453 	 orr r3,r3,r4,lsl#23
 810              	.LVL107:
 748:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 749:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure the level sensitivity for event 2 */
 750:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS_EV2LM_Pos);
 811              	 .loc 1 750 0
 812 0022 23F08073 	 bic r3,r3,#16777216
 813              	.LVL108:
 751:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->level) << CCU4_CC4_INS_EV2LM_Pos;
 814              	 .loc 1 751 0
 815 0026 9478     	 ldrb r4,[r2,#2]
 816 0028 43EA0463 	 orr r3,r3,r4,lsl#24
 817              	.LVL109:
 752:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 753:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure the debounce filter for event 1 */
 754:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS_LPF1M_Pos);
 818              	 .loc 1 754 0
 819 002c 23F0C053 	 bic r3,r3,#402653184
 820              	.LVL110:
 755:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU4_CC4_INS_LPF1M_Pos;
 821              	 .loc 1 755 0
 822 0030 CC78     	 ldrb r4,[r1,#3]
 823 0032 43EAC463 	 orr r3,r3,r4,lsl#27
 824              	.LVL111:
 756:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 757:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Configure the debounce filter for event 2 */
 758:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS_LPF2M_Pos);
 825              	 .loc 1 758 0
 826 0036 23F0C043 	 bic r3,r3,#1610612736
 827              	.LVL112:
 759:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU4_CC4_INS_LPF2M_Pos;
 828              	 .loc 1 759 0
 829 003a D478     	 ldrb r4,[r2,#3]
 830 003c 43EA4473 	 orr r3,r3,r4,lsl#29
 831              	.LVL113:
 760:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 761:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Next, the input for Event1 */
 762:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS_EV1IS_Pos);
 832              	 .loc 1 762 0
 833 0040 23F0F003 	 bic r3,r3,#240
 834              	.LVL114:
 763:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU4_CC4_INS_EV1IS_Pos;
 835              	 .loc 1 763 0
 836 0044 0978     	 ldrb r1,[r1]
 837              	.LVL115:
 838 0046 43EA0113 	 orr r3,r3,r1,lsl#4
 839              	.LVL116:
 764:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 765:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Finally, the input for Event2 */
 766:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS_EV2IS_Pos);
 840              	 .loc 1 766 0
 841 004a 23F47063 	 bic r3,r3,#3840
 842              	.LVL117:
 767:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU4_CC4_INS_EV2IS_Pos;
 843              	 .loc 1 767 0
 844 004e 1278     	 ldrb r2,[r2]
 845              	.LVL118:
 846 0050 43EA0223 	 orr r3,r3,r2,lsl#8
 847              	.LVL119:
 768:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 769:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->INS = ins;
 848              	 .loc 1 769 0
 849 0054 0360     	 str r3,[r0]
 770:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 771:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 850              	 .loc 1 771 0
 851 0056 5DF8044B 	 ldr r4,[sp],#4
 852              	.LCFI6:
 853              	 .cfi_restore 4
 854              	 .cfi_def_cfa_offset 0
 855 005a 7047     	 bx lr
 856              	 .cfi_endproc
 857              	.LFE238:
 859              	 .section .text.XMC_CCU4_SLICE_ConfigureEvent,"ax",%progbits
 860              	 .align 2
 861              	 .global XMC_CCU4_SLICE_ConfigureEvent
 862              	 .thumb
 863              	 .thumb_func
 865              	XMC_CCU4_SLICE_ConfigureEvent:
 866              	.LFB239:
 772:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 773:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to configure a slice trigger event */
 774:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
 775:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                    const XMC_CCU4_SLICE_EVENT_t event,
 776:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config)
 777:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 867              	 .loc 1 777 0
 868              	 .cfi_startproc
 869              	 
 870              	 
 871              	.LVL120:
 872 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 873              	.LCFI7:
 874              	 .cfi_def_cfa_offset 20
 875              	 .cfi_offset 4,-20
 876              	 .cfi_offset 5,-16
 877              	 .cfi_offset 6,-12
 878              	 .cfi_offset 7,-8
 879              	 .cfi_offset 14,-4
 778:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t ins;
 779:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint8_t  pos;
 780:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint8_t  offset;
 781:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 782:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 783:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 784:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Input", XMC_CCU4_SLICE_IsInputvalid(config->map
 785:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Edge Sensitivity",
 786:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(config->edge));
 787:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Level Sensitivity",
 788:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              ((config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 789:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****               (config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 790:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Debounce Period", 
 791:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(config->duration));
 792:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Calculate offset with reference to event */
 793:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   offset = ((uint8_t) event) - 1U;
 880              	 .loc 1 793 0
 881 0002 4C1E     	 subs r4,r1,#1
 882 0004 E4B2     	 uxtb r4,r4
 883              	.LVL121:
 794:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 795:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 796:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins = slice->INS2;
 797:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 798:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* First, configure the edge sensitivity */
 799:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_EV0EM_Pos) + (uint8_t)(offset << 2U);
 800:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 801:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) config->edge) << pos;
 802:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 803:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Next, the level */
 804:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_EV0LM_Pos) + (uint8_t)(offset << 2U);
 805:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 806:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) config->level) << pos;
 807:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 808:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Next, the debounce filter */
 809:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_LPF0M_Pos) + (uint8_t)(offset << 2U);
 810:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 811:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) config->duration) << pos;
 812:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 813:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->INS2 = ins;
 814:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 815:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins = slice->INS1;
 816:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 817:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Finally the input */
 818:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS1_EV0IS_Pos) + (uint8_t)(offset << 3U);
 819:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 820:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 821:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 822:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->INS1 = ins;
 823:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 824:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #else
 825:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins = slice->INS;
 884              	 .loc 1 825 0
 885 0006 0568     	 ldr r5,[r0]
 886              	.LVL122:
 826:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 827:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* First, configure the edge sensitivity */
 828:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0EM_Pos) + (uint8_t)(offset << 1U);
 887              	 .loc 1 828 0
 888 0008 6600     	 lsls r6,r4,#1
 889 000a F6B2     	 uxtb r6,r6
 890              	.LVL123:
 891 000c 06F1100C 	 add ip,r6,#16
 829:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 892              	 .loc 1 829 0
 893 0010 5FFA8CFC 	 uxtb ip,ip
 894 0014 0323     	 movs r3,#3
 895 0016 03FA0CFE 	 lsl lr,r3,ip
 896 001a 25EA0E0E 	 bic lr,r5,lr
 897              	.LVL124:
 830:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) config->edge) << pos;
 898              	 .loc 1 830 0
 899 001e 5778     	 ldrb r7,[r2,#1]
 900 0020 07FA0CF7 	 lsl r7,r7,ip
 901 0024 4EEA070E 	 orr lr,lr,r7
 902              	.LVL125:
 831:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 832:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Next, the level */
 833:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0LM_Pos) + offset;
 903              	 .loc 1 833 0
 904 0028 1531     	 adds r1,r1,#21
 905              	.LVL126:
 834:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 906              	 .loc 1 834 0
 907 002a 5FFA81FC 	 uxtb ip,r1
 908 002e 0125     	 movs r5,#1
 909 0030 05FA0CF5 	 lsl r5,r5,ip
 910 0034 2EEA0507 	 bic r7,lr,r5
 911              	.LVL127:
 835:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) config->level) << pos;
 912              	 .loc 1 835 0
 913 0038 9578     	 ldrb r5,[r2,#2]
 914 003a 05FA0CF5 	 lsl r5,r5,ip
 915 003e 3D43     	 orrs r5,r5,r7
 916              	.LVL128:
 836:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 837:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Next, the debounce filter */
 838:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_LPF0M_Pos) + (uint8_t)(offset << 1U);
 917              	 .loc 1 838 0
 918 0040 1936     	 adds r6,r6,#25
 919              	.LVL129:
 839:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 920              	 .loc 1 839 0
 921 0042 F6B2     	 uxtb r6,r6
 922              	.LVL130:
 923 0044 B340     	 lsls r3,r3,r6
 924 0046 25EA0301 	 bic r1,r5,r3
 925              	.LVL131:
 840:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) config->duration) << pos;
 926              	 .loc 1 840 0
 927 004a D378     	 ldrb r3,[r2,#3]
 928 004c B340     	 lsls r3,r3,r6
 929 004e 1943     	 orrs r1,r1,r3
 930              	.LVL132:
 841:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 842:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Finally the input */
 843:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0IS_Pos) + (uint8_t)(offset << 2U);
 931              	 .loc 1 843 0
 932 0050 A400     	 lsls r4,r4,#2
 933              	.LVL133:
 844:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 934              	 .loc 1 844 0
 935 0052 E4B2     	 uxtb r4,r4
 936 0054 0F23     	 movs r3,#15
 937 0056 A340     	 lsls r3,r3,r4
 938 0058 21EA0303 	 bic r3,r1,r3
 939              	.LVL134:
 845:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 940              	 .loc 1 845 0
 941 005c 1278     	 ldrb r2,[r2]
 942              	.LVL135:
 943 005e A240     	 lsls r2,r2,r4
 944 0060 1343     	 orrs r3,r3,r2
 945              	.LVL136:
 846:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 847:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->INS = ins;
 946              	 .loc 1 847 0
 947 0062 0360     	 str r3,[r0]
 948 0064 F0BD     	 pop {r4,r5,r6,r7,pc}
 949              	 .cfi_endproc
 950              	.LFE239:
 952 0066 00BF     	 .section .text.XMC_CCU4_SLICE_SetInput,"ax",%progbits
 953              	 .align 2
 954              	 .global XMC_CCU4_SLICE_SetInput
 955              	 .thumb
 956              	 .thumb_func
 958              	XMC_CCU4_SLICE_SetInput:
 959              	.LFB240:
 848:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 849:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 850:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 851:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to bind an input to a slice trigger event */
 852:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
 853:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                          const XMC_CCU4_SLICE_EVENT_t event,
 854:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                              const XMC_CCU4_SLICE_INPUT_t input)
 855:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 960              	 .loc 1 855 0
 961              	 .cfi_startproc
 962              	 
 963              	 
 964              	 
 965              	.LVL137:
 966 0000 10B4     	 push {r4}
 967              	.LCFI8:
 968              	 .cfi_def_cfa_offset 4
 969              	 .cfi_offset 4,-4
 970              	.LVL138:
 856:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t ins;
 857:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint8_t  pos;
 858:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint8_t  offset;
 859:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 860:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 861:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 862:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Input", XMC_CCU4_SLICE_IsInputvalid(input));
 863:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 864:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Calculate offset with reference to event */
 865:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   offset = ((uint8_t) event) - 1U;
 866:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 867:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 868:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS1_EV0IS_Pos) + (uint8_t) (offset << 3U);
 869:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 870:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins = slice->INS1;
 871:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 872:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) input) << pos;
 873:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 874:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->INS1 = ins;
 875:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #else
 876:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0IS_Pos) + (uint8_t) (offset << 2U);
 877:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 878:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins = slice->INS;
 971              	 .loc 1 878 0
 972 0002 0368     	 ldr r3,[r0]
 973              	.LVL139:
 865:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 974              	 .loc 1 865 0
 975 0004 0139     	 subs r1,r1,#1
 976              	.LVL140:
 876:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 977              	 .loc 1 876 0
 978 0006 8900     	 lsls r1,r1,#2
 879:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 979              	 .loc 1 879 0
 980 0008 C9B2     	 uxtb r1,r1
 981 000a 0F24     	 movs r4,#15
 982 000c 8C40     	 lsls r4,r4,r1
 983 000e 23EA0403 	 bic r3,r3,r4
 984              	.LVL141:
 880:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   ins |= ((uint32_t) input) << pos;
 985              	 .loc 1 880 0
 986 0012 8A40     	 lsls r2,r2,r1
 987              	.LVL142:
 988 0014 1A43     	 orrs r2,r2,r3
 989              	.LVL143:
 881:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 882:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->INS = ins;
 990              	 .loc 1 882 0
 991 0016 0260     	 str r2,[r0]
 883:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
 884:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 992              	 .loc 1 884 0
 993 0018 5DF8044B 	 ldr r4,[sp],#4
 994              	.LCFI9:
 995              	 .cfi_restore 4
 996              	 .cfi_def_cfa_offset 0
 997 001c 7047     	 bx lr
 998              	 .cfi_endproc
 999              	.LFE240:
 1001 001e 00BF     	 .section .text.XMC_CCU4_SLICE_SetTimerRepeatMode,"ax",%progbits
 1002              	 .align 2
 1003              	 .global XMC_CCU4_SLICE_SetTimerRepeatMode
 1004              	 .thumb
 1005              	 .thumb_func
 1007              	XMC_CCU4_SLICE_SetTimerRepeatMode:
 1008              	.LFB241:
 885:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 886:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* API to program timer repeat mode - Single shot vs repeat */
 887:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
 888:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 1009              	 .loc 1 888 0
 1010              	 .cfi_startproc
 1011              	 
 1012              	 
 1013              	 
 1014              	.LVL144:
 889:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
 890:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerRepeatMode:Invalid Timer Repeat Mode",
 891:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****              ((mode == XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT) ||\
 892:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****           (mode == XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE)));
 893:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 894:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if (XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT == mode)
 1015              	 .loc 1 894 0
 1016 0000 21B9     	 cbnz r1,.L52
 895:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 896:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     slice->TC &= ~((uint32_t) CCU4_CC4_TC_TSSM_Msk);
 1017              	 .loc 1 896 0
 1018 0002 4369     	 ldr r3,[r0,#20]
 1019 0004 23F00203 	 bic r3,r3,#2
 1020 0008 4361     	 str r3,[r0,#20]
 1021 000a 7047     	 bx lr
 1022              	.L52:
 897:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 898:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
 899:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 900:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     slice->TC |= (uint32_t) CCU4_CC4_TC_TSSM_Msk;
 1023              	 .loc 1 900 0
 1024 000c 4369     	 ldr r3,[r0,#20]
 1025 000e 43F00203 	 orr r3,r3,#2
 1026 0012 4361     	 str r3,[r0,#20]
 1027 0014 7047     	 bx lr
 1028              	 .cfi_endproc
 1029              	.LFE241:
 1031 0016 00BF     	 .section .text.XMC_CCU4_SLICE_SetTimerCountingMode,"ax",%progbits
 1032              	 .align 2
 1033              	 .global XMC_CCU4_SLICE_SetTimerCountingMode
 1034              	 .thumb
 1035              	 .thumb_func
 1037              	XMC_CCU4_SLICE_SetTimerCountingMode:
 1038              	.LFB242:
 901:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 902:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 903:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 904:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* Programs timer counting mode */
 905:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
 906:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 1039              	 .loc 1 906 0
 1040              	 .cfi_startproc
 1041              	 
 1042              	 
 1043              	 
 1044              	.LVL145:
 907:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
 908:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCountingMode:Invalid Timer Count Mode", ((mode == XMC_CCU4_SLI
 909:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                                                               (mode == XMC_CCU4_SLI
 910:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 911:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if (XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA == mode)
 1045              	 .loc 1 911 0
 1046 0000 21B9     	 cbnz r1,.L55
 912:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 913:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     slice->TC &= ~((uint32_t) CCU4_CC4_TC_TCM_Msk);
 1047              	 .loc 1 913 0
 1048 0002 4369     	 ldr r3,[r0,#20]
 1049 0004 23F00103 	 bic r3,r3,#1
 1050 0008 4361     	 str r3,[r0,#20]
 1051 000a 7047     	 bx lr
 1052              	.L55:
 914:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 915:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
 916:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 917:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     slice->TC |= (uint32_t) CCU4_CC4_TC_TCM_Msk;
 1053              	 .loc 1 917 0
 1054 000c 4369     	 ldr r3,[r0,#20]
 1055 000e 43F00103 	 orr r3,r3,#1
 1056 0012 4361     	 str r3,[r0,#20]
 1057 0014 7047     	 bx lr
 1058              	 .cfi_endproc
 1059              	.LFE242:
 1061 0016 00BF     	 .section .text.XMC_CCU4_SLICE_GetCaptureRegisterValue,"ax",%progbits
 1062              	 .align 2
 1063              	 .global XMC_CCU4_SLICE_GetCaptureRegisterValue
 1064              	 .thumb
 1065              	 .thumb_func
 1067              	XMC_CCU4_SLICE_GetCaptureRegisterValue:
 1068              	.LFB243:
 918:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 919:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 920:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 921:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* Retrieves desired capture register value */
 922:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** uint32_t XMC_CCU4_SLICE_GetCaptureRegisterValue(const XMC_CCU4_SLICE_t *const slice, const uint8_t 
 923:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 1069              	 .loc 1 923 0
 1070              	 .cfi_startproc
 1071              	 
 1072              	 
 1073              	 
 1074              	.LVL146:
 924:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCaptureRegisterValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
 925:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCaptureRegisterValue:Invalid register number", (reg_num < 4U));
 926:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   return(slice->CV[reg_num]);
 1075              	 .loc 1 926 0
 1076 0000 1C31     	 adds r1,r1,#28
 1077              	.LVL147:
 1078 0002 00EB8100 	 add r0,r0,r1,lsl#2
 1079              	.LVL148:
 1080 0006 4068     	 ldr r0,[r0,#4]
 927:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 1081              	 .loc 1 927 0
 1082 0008 7047     	 bx lr
 1083              	 .cfi_endproc
 1084              	.LFE243:
 1086 000a 00BF     	 .section .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 1087              	 .align 2
 1088              	 .global XMC_CCU4_SLICE_GetLastCapturedTimerValue
 1089              	 .thumb
 1090              	 .thumb_func
 1092              	XMC_CCU4_SLICE_GetLastCapturedTimerValue:
 1093              	.LFB244:
 928:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 929:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* @brief Retrieves the latest captured timer value */
 930:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** XMC_CCU4_STATUS_t XMC_CCU4_SLICE_GetLastCapturedTimerValue(const XMC_CCU4_SLICE_t *const slice,
 931:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                                            const XMC_CCU4_SLICE_CAP_REG_SET_t set,
 932:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                                            uint32_t *val_ptr)
 933:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 1094              	 .loc 1 933 0
 1095              	 .cfi_startproc
 1096              	 
 1097              	 
 1098              	 
 1099              	.LVL149:
 1100 0000 30B4     	 push {r4,r5}
 1101              	.LCFI10:
 1102              	 .cfi_def_cfa_offset 8
 1103              	 .cfi_offset 4,-8
 1104              	 .cfi_offset 5,-4
 1105              	.LVL150:
 934:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_CCU4_STATUS_t retval;
 935:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint8_t i;
 936:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint8_t start;
 937:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint8_t end;
 938:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 939:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetLastCapturedTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlic
 940:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetLastCapturedTimerValue:Invalid Register Set", ((set == XMC_CCU4_SLI
 941:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                                                                (set == XMC_CCU4_SLI
 942:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 943:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   retval = XMC_CCU4_STATUS_ERROR;
 944:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 945:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* First check if extended capture mode is enabled */
 946:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if ((slice->TC) & CCU4_CC4_TC_ECM_Msk)
 1106              	 .loc 1 946 0
 1107 0002 4369     	 ldr r3,[r0,#20]
 1108 0004 13F0100F 	 tst r3,#16
 1109 0008 1CD1     	 bne .L64
 947:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 948:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     /* Extended capture mode has been enabled. So start with the lowest capture register and work y
 949:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     start = 0U;
 950:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     end = XMC_CCU4_NUM_SLICES_PER_MODULE;
 951:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 952:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
 953:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 954:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     /* Extended capture mode is not enabled */
 955:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     if (set == XMC_CCU4_SLICE_CAP_REG_SET_HIGH)
 956:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     {
 957:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       start = ((uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE) >> 1U;
 958:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       end   = (uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE;
 959:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     }
 960:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     else
 961:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     {
 962:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       start = 0U;
 963:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       end = ((uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE) >> 1U;
 1110              	 .loc 1 963 0
 1111 000a 0129     	 cmp r1,#1
 1112 000c 0BBF     	 itete eq
 1113 000e 0425     	 moveq r5,#4
 1114 0010 0225     	 movne r5,#2
 1115 0012 0223     	 moveq r3,#2
 1116 0014 0023     	 movne r3,#0
 1117 0016 17E0     	 b .L59
 1118              	.LVL151:
 1119              	.L62:
 964:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     }
 965:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 966:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 967:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   for(i=start; i < end; i++)
 968:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 969:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     if ( (slice->CV[i]) & CCU4_CC4_CV_FFL_Msk )
 1120              	 .loc 1 969 0
 1121 0018 1C46     	 mov r4,r3
 1122 001a 03F11C01 	 add r1,r3,#28
 1123 001e 00EB8101 	 add r1,r0,r1,lsl#2
 1124 0022 4968     	 ldr r1,[r1,#4]
 1125 0024 11F4801F 	 tst r1,#1048576
 1126 0028 06D0     	 beq .L60
 1127              	.L63:
 970:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     {
 971:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       *val_ptr = slice->CV[i];
 1128              	 .loc 1 971 0
 1129 002a 1C34     	 adds r4,r4,#28
 1130 002c 00EB8400 	 add r0,r0,r4,lsl#2
 1131              	.LVL152:
 1132 0030 4368     	 ldr r3,[r0,#4]
 1133              	.LVL153:
 1134 0032 1360     	 str r3,[r2]
 1135              	.LVL154:
 972:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       retval = XMC_CCU4_STATUS_OK;
 1136              	 .loc 1 972 0
 1137 0034 0020     	 movs r0,#0
 973:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       break;
 1138              	 .loc 1 973 0
 1139 0036 11E0     	 b .L67
 1140              	.LVL155:
 1141              	.L60:
 967:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 1142              	 .loc 1 967 0 discriminator 2
 1143 0038 0133     	 adds r3,r3,#1
 1144              	.LVL156:
 1145 003a DBB2     	 uxtb r3,r3
 1146              	.LVL157:
 1147 003c AB42     	 cmp r3,r5
 1148 003e EBD3     	 bcc .L62
 943:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 1149              	 .loc 1 943 0
 1150 0040 0120     	 movs r0,#1
 1151              	.LVL158:
 1152 0042 0BE0     	 b .L67
 1153              	.LVL159:
 1154              	.L64:
 950:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 1155              	 .loc 1 950 0
 1156 0044 0425     	 movs r5,#4
 949:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     end = XMC_CCU4_NUM_SLICES_PER_MODULE;
 1157              	 .loc 1 949 0
 1158 0046 0023     	 movs r3,#0
 1159              	.L59:
 1160              	.LVL160:
 969:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     {
 1161              	 .loc 1 969 0
 1162 0048 1C46     	 mov r4,r3
 1163 004a 03F11C01 	 add r1,r3,#28
 1164              	.LVL161:
 1165 004e 00EB8101 	 add r1,r0,r1,lsl#2
 1166 0052 4968     	 ldr r1,[r1,#4]
 1167 0054 11F4801F 	 tst r1,#1048576
 1168 0058 EED0     	 beq .L60
 1169 005a E6E7     	 b .L63
 1170              	.LVL162:
 1171              	.L67:
 974:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     }
 975:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 976:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 977:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   return retval;
 978:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 1172              	 .loc 1 978 0
 1173 005c 30BC     	 pop {r4,r5}
 1174              	.LCFI11:
 1175              	 .cfi_restore 5
 1176              	 .cfi_restore 4
 1177              	 .cfi_def_cfa_offset 0
 1178              	.LVL163:
 1179 005e 7047     	 bx lr
 1180              	 .cfi_endproc
 1181              	.LFE244:
 1183              	 .section .text.XMC_CCU4_GetCapturedValueFromFifo,"ax",%progbits
 1184              	 .align 2
 1185              	 .global XMC_CCU4_GetCapturedValueFromFifo
 1186              	 .thumb
 1187              	 .thumb_func
 1189              	XMC_CCU4_GetCapturedValueFromFifo:
 1190              	.LFB245:
 979:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 980:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
 981:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #if defined(CCU4V1) /* Defined for XMC4500, XMC400, XMC4200, XMC4100 devices only */
 982:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
 983:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 1191              	 .loc 1 983 0
 1192              	 .cfi_startproc
 1193              	 
 1194              	 
 1195              	 
 1196              	.LVL164:
 984:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   int32_t   cap;
 985:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t  extracted_slice;
 986:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
 987:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU4_IsValidModule(modu
 988:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 989:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* First read the global fifo register */
 990:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   cap = (int32_t) module->ECRD;
 1197              	 .loc 1 990 0
 1198 0000 006D     	 ldr r0,[r0,#80]
 1199              	.LVL165:
 991:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 992:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   extracted_slice = (((uint32_t) cap) & ((uint32_t) CCU4_ECRD_SPTR_Msk)) >> CCU4_ECRD_SPTR_Pos;
 1200              	 .loc 1 992 0
 1201 0002 C0F30152 	 ubfx r2,r0,#20,#2
 1202              	.LVL166:
 993:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
 994:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Return captured result only if it were applicable to this slice */
 995:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if(extracted_slice != ((uint32_t)slice_number))
 996:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
 997:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     cap = -1;
 998:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
 999:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1000:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   return (cap);
1001:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 1203              	 .loc 1 1001 0
 1204 0006 9142     	 cmp r1,r2
 1205 0008 18BF     	 it ne
 1206 000a 4FF0FF30 	 movne r0,#-1
 1207              	.LVL167:
 1208 000e 7047     	 bx lr
 1209              	 .cfi_endproc
 1210              	.LFE245:
 1212              	 .section .text.XMC_CCU4_SLICE_EnableDithering,"ax",%progbits
 1213              	 .align 2
 1214              	 .global XMC_CCU4_SLICE_EnableDithering
 1215              	 .thumb
 1216              	 .thumb_func
 1218              	XMC_CCU4_SLICE_EnableDithering:
 1219              	.LFB246:
1002:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #else
1003:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1004:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                              const XMC_CCU4_SLICE_CAP_REG_SET_t set)
1005:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
1006:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t cap;
1007:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1008:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1009:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCapturedValueFromFifo:Invalid Register Set", 
1010:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       ((set == XMC_CCU4_SLICE_CAP_REG_SET_LOW) ||\
1011:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****        (set == XMC_CCU4_SLICE_CAP_REG_SET_HIGH)));
1012:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1013:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if(XMC_CCU4_SLICE_CAP_REG_SET_LOW == set)
1014:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
1015:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     cap = slice->ECRD0;
1016:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
1017:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   else
1018:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
1019:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     cap = slice->ECRD1;
1020:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
1021:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1022:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   return cap;
1023:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
1024:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** #endif
1025:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1026:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* Enables PWM dithering feature */
1027:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1028:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                     const bool period_dither,
1029:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                     const bool duty_dither,
1030:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                     const uint8_t spread)
1031:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 1220              	 .loc 1 1031 0
 1221              	 .cfi_startproc
 1222              	 
 1223              	 
 1224              	 
 1225              	.LVL168:
 1226 0000 10B4     	 push {r4}
 1227              	.LCFI12:
 1228              	 .cfi_def_cfa_offset 4
 1229              	 .cfi_offset 4,-4
1032:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t tc;
1033:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1034:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1035:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1036:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   tc = slice->TC;
 1230              	 .loc 1 1036 0
 1231 0002 4469     	 ldr r4,[r0,#20]
 1232              	.LVL169:
1037:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   tc &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
 1233              	 .loc 1 1037 0
 1234 0004 24F4C044 	 bic r4,r4,#24576
 1235              	.LVL170:
1038:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1039:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if ((bool) true == period_dither)
 1236              	 .loc 1 1039 0
 1237 0008 09B1     	 cbz r1,.L72
1040:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
1041:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     tc |= (((uint32_t) XMC_CCU4_SLICE_DITHER_PERIOD_MASK) << CCU4_CC4_TC_DITHE_Pos);
 1238              	 .loc 1 1041 0
 1239 000a 44F40054 	 orr r4,r4,#8192
 1240              	.LVL171:
 1241              	.L72:
1042:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
1043:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   if ((bool) true == duty_dither)
 1242              	 .loc 1 1043 0
 1243 000e 0AB1     	 cbz r2,.L73
1044:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
1045:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     tc |= (((uint32_t) XMC_CCU4_SLICE_DITHER_DUTYCYCLE_MASK) << CCU4_CC4_TC_DITHE_Pos);
 1244              	 .loc 1 1045 0
 1245 0010 44F48044 	 orr r4,r4,#16384
 1246              	.LVL172:
 1247              	.L73:
1046:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
1047:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1048:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->TC = tc;
 1248              	 .loc 1 1048 0
 1249 0014 4461     	 str r4,[r0,#20]
 1250              	.LVL173:
 1251              	.LBB16:
 1252              	.LBB17:
 883:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
 884:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 885:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 886:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 887:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 888:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 889:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 890:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 891:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<BR>\n
 892:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Opposite of the StartPrescaler routine.
 893:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
 894:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * the slices of the module.Registers directly accessed is GIDLS.
 895:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 896:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 897:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_St
 898:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 899:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StopPrescaler(XMC_CCU4_MODULE_t *const module)
 900:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 901:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StopPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 902:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS = (uint32_t) CCU4_GIDLS_CPRB_Msk;
 903:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
 904:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 905:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 906:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 907:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 908:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 909:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 910:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 911:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.<BR>\n
 912:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This will return true if the prescaler is running. If clock is being supplied to the slices of t
 913:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * module then returns as true.
 914:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 915:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 916:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_StopPrescaler()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_D
 917:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 918:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsPrescalerRunning(XMC_CCU4_MODULE_t *const module)
 919:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 920:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 921:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   return((bool)((module->GSTAT & (uint32_t) CCU4_GSTAT_PRB_Msk) == (uint32_t)CCU4_GSTAT_PRB_Msk));
 922:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
 923:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 924:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 925:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 926:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
 927:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
 928:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x1 to 0xF]
 929:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 930:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 931:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 932:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 933:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 934:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * GIDLC.CS3I bits.\n\n
 935:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
 936:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * of the idle state simultaneously.
 937:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 938:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 939:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock().
 940:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 941:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableMultipleClocks(XMC_CCU4_MODULE_t *const module, const uint8_t c
 942:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 943:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
 944:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Wrong clock mask", (clock_mask < 16U));
 945:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   
 946:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC = (uint32_t) clock_mask;
 947:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
 948:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 949:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 950:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 951:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be Enabled.
 952:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 953:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 954:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 955:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 956:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 957:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 958:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
 959:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
 960:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  slice whose clock needs to be enabled.
 961:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 962:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 963:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_DisableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XM
 964:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 965:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_numb
 966:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 967:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 968:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Slice Number", (slice_number < 4U));
 969:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 970:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC = ((uint32_t) 1) << slice_number;
 971:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
 972:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 973:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 974:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 975:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be disabled.
 976:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 977:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 978:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 979:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
 980:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 981:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
 982:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
 983:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * It is possible to disable clock at slice level using the module pointer.
 984:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
 985:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GIDLS.
 986:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
 987:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 988:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XMC
 989:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
 990:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_DisableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_num
 991:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
 992:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 993:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Slice Number", (slice_number < 4U));
 994:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 995:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS = ((uint32_t) 1) << slice_number;
 996:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
 997:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
 998:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
 999:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU8 module
1000:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param mode   Selects suspend mode
1001:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1002:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1003:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1004:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1005:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures the entering in suspend mode for all the CCU8 slices.
1006:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1007:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1008:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * None.
1009:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1010:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SetSuspendMode(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SUSPEN
1011:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1012:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
1013:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   module->GCTRL = (module->GCTRL & (uint32_t)~CCU4_GCTRL_SUSCFG_Msk) | mode;
1014:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1015:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1016:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1017:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1018:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param compare_init Pointer to slice configuration structure
1019:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1020:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1021:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1022:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1023:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH
1024:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * CC4yFPCS, CC4yCHC registers.\n\n 
1025:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Timer configurations in this routine.
1026:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * After initialization user has to explicitly enable the shadow transfer for the required values b
1027:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask.
1028:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1029:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1030:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * None.
1031:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1032:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
1033:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init);
1034:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1035:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1036:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1037:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param capture_init Pointer to slice configuration structure
1038:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1039:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1040:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1041:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1042:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS 
1043:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Capture configurations in  this routine.After initialization user h
1044:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * enable the shadow transfer for the required  values by calling XMC_CCU4_EnableShadowTransfer()
1045:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * with appropriate mask.
1046:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1047:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1048:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config().
1049:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1050:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
1051:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init);
1052:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1053:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1054:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1055:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1056:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Start Function
1057:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param start_mode Behavior of slice when the start function is activated
1058:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1059:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1060:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1061:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1062:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.\n
1063:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC4 ti
1064:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1065:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1066:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1067:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1068:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1069:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
1070:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_EVENT_t event,
1071:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode);
1072:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1073:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1074:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1075:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Stop Function
1076:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param end_mode Behavior of slice when the stop function is activated
1077:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1078:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1079:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1080:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1081:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.\n
1082:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 tim
1083:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1084:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1085:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1086:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1087:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1088:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
1089:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_EVENT_t event,
1090:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode);
1091:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1092:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1093:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1094:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External load Function
1095:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1096:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1097:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1098:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1099:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.\n\n
1100:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1101:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register\n
1102:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register\n
1103:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1104:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1105:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1106:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1107:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1108:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1109:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1110:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1111:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1112:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Modulation Function
1113:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param mod_mode Desired Modulation mode
1114:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1115:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1116:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1117:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1118:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
1119:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1120:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT a
1121:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.EMS bits.\n\n
1122:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1123:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1124:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * of the modulation function is configured as well.
1125:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1126:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1127:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1128:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1129:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
1130:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_EVENT_t event,
1131:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
1132:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                      const bool synch_with_pwm);
1133:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1134:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1135:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1136:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Function
1137:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1138:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1139:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
1140:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1141:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.\n\n
1142:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Count function is mapped with one of the 3 events. CCU4 slice can take an external
1143:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * signal to act as the counting event. The CCU4 slice would count the
1144:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * edges present on the \b event selected.
1145:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1146:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1147:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1148:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1149:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1150:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1151:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1152:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1153:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param event  Map an External event to the External Gating Function
1154:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1155:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1156:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
1157:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1158:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.\n\n
1159:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Gating function is mapped with one of the 3 events.  A CCU4 slice can use an input signal that w
1160:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1161:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1162:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1163:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1164:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1165:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1166:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1167:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1168:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1169:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-0 Function
1170:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1171:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1172:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
1173:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1174:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.\n\n
1175:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events.  A CCU4 slice can be configured into captur
1176:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC0V and 
1177:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1178:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1179:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1180:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1181:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1182:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1183:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1184:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1185:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-1 Function
1186:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1187:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1188:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
1189:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1190:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.\n\n
1191:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture
1192:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * mode with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC2V
1193:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1194:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1195:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1196:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1197:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1198:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1199:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1200:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1201:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1202:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1203:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1204:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1205:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.E
1206:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * In this mode the there is only one associated read address for all the capture registers.
1207:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Individual capture registers can still be accessed in this mode.
1208:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1209:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1210:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_GetCapturedValueFromFifo().
1211:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1212:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled(const XMC_CCU4_SLICE_t *const slice)
1213:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1214:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_IsExtendedCapReadEnabled:Invalid Module Pointer", XMC_CCU4_IsValidSlic
1215:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   return((bool)((slice->TC & (uint32_t) CCU4_CC4_TC_ECM_Msk) == (uint32_t)CCU4_CC4_TC_ECM_Msk));
1216:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1217:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1218:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V1) /* Defined for XMC4500, XMC4400, XMC4200, XMC4100 devices only */
1219:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1220:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1221:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number to check whether read value belongs to required slice or not
1222:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1223:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1224:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1225:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                     Range: [0x0 to 0xFFFF]
1226:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1227:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1228:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(ECRD register).\n\n
1229:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1230:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1231:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1232:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1233:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1234:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1235:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1236:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC4500, XMC4400, XMC4200 and XMC4100 series 
1237:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1238:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
1239:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #else
1240:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1241:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1242:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param set The capture register set from which the captured value is to be retrieved
1243:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1244:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t Returns the value captured in the \b slice_number
1245:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *             Range: [0x0 to 0xFFFF]
1246:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1247:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1248:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).\n\n
1249:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1250:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1251:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1252:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1253:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1254:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1255:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1256:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1257:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1258:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1259:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 		                                             const XMC_CCU4_SLICE_CAP_REG_SET_t set);
1260:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** #endif
1261:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1262:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1263:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1264:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Direction Function
1265:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1266:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1267:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
1268:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1269:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.\n\n
1270:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1271:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * CC4yTIMER count direction depending on an external signal.
1272:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1273:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1274:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1275:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1276:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
1277:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1278:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1279:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1280:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1281:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1282:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1283:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1284:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.\n\n
1285:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1286:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * output of the timer's CC4yST signal depending on an external signal. 
1287:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1288:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1289:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent().
1290:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1291:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice);
1292:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1293:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1294:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1295:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param exit_mode How should a previously logged trap state be exited?
1296:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1297:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1298:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1299:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1300:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1301:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.T
1302:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1303:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1304:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1305:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1306:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1307:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1308:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1309:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1310:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
1311:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
1312:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                bool synch_with_pwm);
1313:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1314:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1315:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1316:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1317:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param ev1_config Pointer to event 1 configuration data
1318:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param ev2_config Pointer to event 2 configuration data
1319:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1320:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1321:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1322:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1323:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1324:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC4yINS reg
1325:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1326:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1327:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Event-2 input would be the override value.
1328:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1329:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1330:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig().
1331:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1332:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
1333:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
1334:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
1335:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1336:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1337:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1338:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1339:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param config Pointer to event configuration data.
1340:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1341:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1342:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1343:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1344:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures an External Event of the slice, by updating CC4yINS register .\n\n
1345:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1346:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1347:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1348:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1349:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1350:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1351:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1352:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1353:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1354:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1355:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
1356:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_t event,
1357:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config);
1358:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1359:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1360:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1361:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1362:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1363:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1364:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1365:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1366:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
1367:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1368:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Selects an input for an external event, by configuring CC4yINS register.\n\n
1369:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1370:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This configures the CC4yINS.EVxIS for the selected event.
1371:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1372:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1373:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1374:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1375:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1376:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1377:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1378:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
1379:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_EVENT_t event,
1380:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_INPUT_t input);
1381:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1382:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1383:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1384:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1385:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1386:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1387:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1388:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAP
1389:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n
1390:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1391:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1392:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1393:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1394:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_TrapConfig()<BR> XMC_CCU4_SLICE_DisableTrap()<BR> XMC_CCU4_SLICE_ConfigureEvent(
1395:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInput().
1396:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1397:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableTrap(XMC_CCU4_SLICE_t *const slice)
1398:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1399:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1400:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_TRAPE_Msk;
1401:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1402:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1403:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1404:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1405:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1406:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1407:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1408:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1409:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TR
1410:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n.\n\n
1411:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This API will revert the changes done by XMC_CCU4_SLICE_EnableTrap().
1412:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU4 slice.
1413:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1414:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1415:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableTrap().
1416:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1417:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableTrap(XMC_CCU4_SLICE_t *const slice)
1418:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1419:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1420:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_TRAPE_Msk);
1421:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1422:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1423:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1424:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1425:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1426:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1427:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1428:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1429:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.
1430:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1431:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1432:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer()<BR> XMC_CCU4_SLICE_StopTimer().
1433:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1434:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsTimerRunning(const XMC_CCU4_SLICE_t *const slice)
1435:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1436:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1437:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   return (bool)(((slice->TCST) & CCU4_CC4_TCST_TRB_Msk) == CCU4_CC4_TCST_TRB_Msk);
1438:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1439:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1440:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1441:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1442:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1443:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *   ::XMC_CCU4_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1444:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1445:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1446:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Returns the timer counting direction, by reading CC4yTCST.CDIR bit.\n\n
1447:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This API will return the direction in which the timer is currently
1448:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_
1449:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1450:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1451:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  None.
1452:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1453:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir(const XMC_CCU4_SLICE
1454:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1455:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1456:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU4_CC4_TCST_CDIR_Msk) >> CCU4_CC4_TC
1457:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1458:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1459:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1460:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1461:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1462:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1463:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1464:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1465:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.\n\n
1466:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have configured the CC4 slice before starting its timer.
1467:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1468:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1469:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1470:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StopTimer().
1471:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1472:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StartTimer(XMC_CCU4_SLICE_t *const slice)
1473:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1474:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1475:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
1476:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1477:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1478:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1479:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1480:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1481:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1482:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1483:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1484:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Stops the Timer.<BR>\n
1485:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.
1486:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1487:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1488:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1489:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1490:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopTimer(XMC_CCU4_SLICE_t *const slice)
1491:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1492:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1493:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TRBC_Msk;
1494:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1495:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1496:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1497:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1498:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1499:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1500:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1501:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1502:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.\n\n
1503:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * A timer which has been stopped can still retain the last counted value.
1504:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * After invoking this API the timer value will be cleared.
1505:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1506:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1507:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1508:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1509:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearTimer(XMC_CCU4_SLICE_t *const slice)
1510:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1511:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1512:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TCC_Msk;
1513:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1514:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1515:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1516:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1517:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1518:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1519:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1520:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1521:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Stops and resets the timer count to zero, by setting CC4yTCCLR.TCC and CC4yTCCLR.TRBC bit.\n\n
1522:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1523:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1524:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1525:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1526:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopClearTimer(XMC_CCU4_SLICE_t *const slice)
1527:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1528:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1529:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = CCU4_CC4_TCCLR_TRBC_Msk | CCU4_CC4_TCCLR_TCC_Msk;
1530:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1531:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1532:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1533:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1534:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1535:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    ::XMC_CCU4_SLICE_MODE_t returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in comp
1536:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                          returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in captur
1537:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1538:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1539:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1540:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.CMOD bit.\n\n
1541:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of
1542:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * invalid.
1543:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1544:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1545:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  None.
1546:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1547:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode(const XMC_CCU4_SLICE_t *const sli
1548:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1549:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1550:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_MODE_t)(((slice->TC) & CCU4_CC4_TC_CMOD_Msk) >> CCU4_CC4_TC_CMOD_Pos));
1551:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1552:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1553:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1554:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1555:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1556:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1557:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1558:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1559:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM b
1560:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1561:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1562:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * reaching the terminal count.
1563:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1564:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1565:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerRepeatMode().
1566:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1567:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
1568:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1569:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1570:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1571:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1572:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1573:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1574:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1575:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1576:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.T
1577:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1578:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1579:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * all over again after reaching the terminal count.
1580:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1581:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1582:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerRepeatMode().
1583:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1584:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode(
1585:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 		                                                                            const XMC_CCU4_SLICE_
1586:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1587:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
1588:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TSSM_Msk) >> CCU4_CC4_TC_T
1589:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1590:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1591:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1592:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1593:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1594:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1595:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1596:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1597:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.
1598:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1599:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1600:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1601:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1602:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * greater than the compare value.
1603:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1604:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1605:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerCountingMode().
1606:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1607:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
1608:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1609:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1610:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1611:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1612:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1613:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned
1614:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1615:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1616:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.\
1617:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1618:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1619:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCountingMode().
1620:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1621:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode(
1622:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 		                                                                           const XMC_CCU4_SLICE_t
1623:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1624:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1625:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TCM_Msk) >> CCU4_CC4_TC_TCM
1626:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1627:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1628:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1629:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param period_val Timer period value
1630:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *        Range: [0x0 to 0xFFFF]
1631:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1632:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1633:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1634:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1635:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer period, by writing CC4yPRS register.\n\n
1636:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1637:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1638:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1639:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual period register.
1640:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1641:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1642:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1643:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1644:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerPeriodMatch(XMC_CCU4_SLICE_t *const slice, const uint16
1645:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1646:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1647:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->PRS = (uint32_t) period_val;
1648:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1649:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1650:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1651:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1652:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1653:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer period value
1654:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1655:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1656:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1657:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer period value currently effective, by reading CC4yPR register.\n\n
1658:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1659:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1660:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1661:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1662:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1663:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerPeri
1664:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1665:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1666:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1667:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerPeriodMatch().
1668:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1669:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch(const XMC_CCU4_SLICE_t *const slice)
1670:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1671:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1672:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->PR);
1673:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1674:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1675:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1676:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1677:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param compare_val Timer compare value
1678:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1679:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1680:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1681:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1682:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer compare value, by writing CC4yCRS register.<BR>\n
1683:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  The PWM duty cycle is determined by this value.
1684:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1685:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * the the period/compare value by calling XMC_CCU4_EnableShadowTransfer() with
1686:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1687:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1688:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1689:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1690:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1691:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1692:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerCompareMatch(XMC_CCU4_SLICE_t *const slice, const uint1
1693:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1694:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1695:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->CRS = (uint32_t) compare_val;
1696:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1697:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1698:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1699:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1700:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1701:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer compare value
1702:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1703:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1704:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1705:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer compare value currently effective, by reading CC4yCRS register.\n\n
1706:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
1707:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1708:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1709:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
1710:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
1711:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerComp
1712:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1713:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is CC4yCR.
1714:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1715:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1716:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCompareMatch().
1717:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1718:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch(const XMC_CCU4_SLICE_t *const slice)
1719:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1720:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1721:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->CR);
1722:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1723:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1724:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1725:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1726:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
1727:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                             Use ::XMC_CCU4_SHADOW_TRANSFER_t enum items to create a mask of choi
1728:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                              using a bit wise OR operation.
1729:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1730:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1731:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1732:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1733:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
1734:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * the GCSS register.\n\n
1735:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
1736:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * shadow transfer trigger after the API is called.
1737:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1738:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Any call to XMC_CCU4_SLICE_SetTimerPeriodMatch()<BR> XMC_CCU4_SLICE_SetTimerCompareMatch()<BR>
1739:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetPrescaler()<BR> XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
1740:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * must be succeeded by this API.
1741:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GCSS.
1742:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1743:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1744:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  None.
1745:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1746:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableShadowTransfer(XMC_CCU4_MODULE_t *const module, const uint32_t 
1747:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1748:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableShadowTransfer:Invalid Slice Pointer", XMC_CCU4_IsValidModule(module))
1749:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
1750:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1751:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1752:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1753:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1754:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1755:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer value
1756:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1757:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1758:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1759:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest timer value, from CC4yTIMER register.\n\n
1760:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1761:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1762:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerValue().
1763:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1764:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerValue(const XMC_CCU4_SLICE_t *const slice)
1765:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1766:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1767:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->TIMER);
1768:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1769:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1770:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1771:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
1772:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                  Range: [0x0 to 0xFFFF]
1773:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1774:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1775:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1776:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1777:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Loads a new timer value, by setting CC4yTIMER register.\n\n
1778:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * 
1779:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1780:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  Request to load is ignored if the timer is running.
1781:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1782:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1783:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerValue().
1784:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1785:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerValue(XMC_CCU4_SLICE_t *const slice, const uint16_t tim
1786:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1787:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1788:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->TIMER = (uint32_t) timer_val;
1789:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1790:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1791:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1792:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param period_dither Boolean instruction on dithering of period match
1793:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param duty_dither Boolean instruction on dithering of compare match
1794:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param spread Dither compare value
1795:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1796:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1797:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1798:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1799:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC4yTC.DITHE and CC4yDITS bits
1800:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
1801:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
1802:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
1803:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
1804:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
1805:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetDitherCompareValue().
1806:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1807:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1808:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * After this API call, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask
1809:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * to transfer the dither value.
1810:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1811:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1812:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableDithering().
1813:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1814:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1815:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                     const bool period_dither,
1816:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                     const bool duty_dither,
1817:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****                                     const uint8_t spread);
1818:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1819:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1820:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1821:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1822:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1823:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1824:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1825:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC4yTC.DITHE bits.\n\n
1826:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This disables the Dither mode that was set in XMC_CCU4_SLICE_EnableDithering().
1827:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This API will not clear the dither compare value.
1828:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1829:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1830:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1831:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1832:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableDithering(XMC_CCU4_SLICE_t *const slice)
1833:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1834:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1835:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
1836:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1837:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1838:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1839:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1840:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1841:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1842:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1843:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1844:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Enables the floating prescaler, by setting CC4yTC.FPE bit.\n\n
1845:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
1846:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
1847:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
1848:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1849:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1850:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()<BR> XMC_CCU4_SLICE_DisableFloatingPrescaler()
1851:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1852:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1853:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1854:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1855:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1856:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_FPE_Msk;
1857:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1858:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1859:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1860:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1861:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1862:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1863:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1864:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1865:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Disables the floating prescaler, by clearing CC4yTC.FPE bit.\n\n
1866:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This would return the prescaler to the normal mode.
1867:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * The prescaler that would be applied is the value present in CC4yPSC.
1868:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1869:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1870:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableFloatingPrescaler().
1871:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1872:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1873:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1874:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1875:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_FPE_Msk);
1876:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** }
1877:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** 
1878:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** /**
1879:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1880:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @param comp_val Dither compare value
1881:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1882:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1883:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1884:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1885:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1886:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * Sets the dither spread/compare value, by setting CC4yDITS.DCVS bits.\n\n
1887:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
1888:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
1889:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU4_EnableShadowTransfer()
1890:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * called with appropriate mask.
1891:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *
1892:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1893:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1894:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****  */
1895:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetDitherCompareValue(XMC_CCU4_SLICE_t *const slice, const uint
1896:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h **** {
1897:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
1898:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu4.h ****   slice->DITS = comp_val;
 1253              	 .loc 2 1898 0
 1254 0016 0362     	 str r3,[r0,#32]
 1255              	.LBE17:
 1256              	.LBE16:
1049:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
1050:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_CCU4_SLICE_SetDitherCompareValue((XMC_CCU4_SLICE_t *)slice, (uint8_t)spread);
1051:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 1257              	 .loc 1 1051 0
 1258 0018 5DF8044B 	 ldr r4,[sp],#4
 1259              	.LCFI13:
 1260              	 .cfi_restore 4
 1261              	 .cfi_def_cfa_offset 0
 1262              	.LVL174:
 1263 001c 7047     	 bx lr
 1264              	 .cfi_endproc
 1265              	.LFE246:
 1267 001e 00BF     	 .section .text.XMC_CCU4_SLICE_SetPrescaler,"ax",%progbits
 1268              	 .align 2
 1269              	 .global XMC_CCU4_SLICE_SetPrescaler
 1270              	 .thumb
 1271              	 .thumb_func
 1273              	XMC_CCU4_SLICE_SetPrescaler:
 1274              	.LFB247:
1052:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1053:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* Programs Pre-scalar divider  */
1054:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_SetPrescaler(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_PRESCALER_t di
1055:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 1275              	 .loc 1 1055 0
 1276              	 .cfi_startproc
 1277              	 
 1278              	 
 1279              	 
 1280              	.LVL175:
1056:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t fpc;
1057:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
1058:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1059:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1060:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   fpc = slice->FPC;
 1281              	 .loc 1 1060 0
 1282 0000 836A     	 ldr r3,[r0,#40]
 1283              	.LVL176:
1061:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   fpc &= ~((uint32_t) CCU4_CC4_FPC_PVAL_Msk);
 1284              	 .loc 1 1061 0
 1285 0002 23F47063 	 bic r3,r3,#3840
 1286              	.LVL177:
1062:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   fpc |= ((uint32_t) div_val) << CCU4_CC4_FPC_PVAL_Pos;
 1287              	 .loc 1 1062 0
 1288 0006 43EA0123 	 orr r3,r3,r1,lsl#8
 1289              	.LVL178:
1063:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->FPC = fpc;
 1290              	 .loc 1 1063 0
 1291 000a 8362     	 str r3,[r0,#40]
1064:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* 
1065:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****    * In any case, update the initial value of the divider which is to be loaded once the prescaler 
1066:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****    * compare value.
1067:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****    */
1068:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->PSC = (uint32_t) div_val;
 1292              	 .loc 1 1068 0
 1293 000c 4162     	 str r1,[r0,#36]
 1294 000e 7047     	 bx lr
 1295              	 .cfi_endproc
 1296              	.LFE247:
 1298              	 .section .text.XMC_CCU4_SLICE_SetInterruptNode,"ax",%progbits
 1299              	 .align 2
 1300              	 .global XMC_CCU4_SLICE_SetInterruptNode
 1301              	 .thumb
 1302              	 .thumb_func
 1304              	XMC_CCU4_SLICE_SetInterruptNode:
 1305              	.LFB248:
1069:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
1070:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1071:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* Binds a capcom event to an NVIC node  */
1072:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_SetInterruptNode(XMC_CCU4_SLICE_t *const slice,
1073:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_IRQ_ID_t event,
1074:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_SR_ID_t sr)
1075:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 1306              	 .loc 1 1075 0
 1307              	 .cfi_startproc
 1308              	 
 1309              	 
 1310              	 
 1311              	.LVL179:
 1312 0000 10B4     	 push {r4}
 1313              	.LCFI14:
 1314              	 .cfi_def_cfa_offset 4
 1315              	 .cfi_offset 4,-4
1076:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t srs;
1077:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t pos;
1078:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t mask;
1079:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1080:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1081:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid SR ID ", XMC_CCU4_SLICE_CHECK_SR_ID(sr));
1082:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event)
1083:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
1084:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   srs = slice->SRS;
 1316              	 .loc 1 1084 0
 1317 0002 D0F8A830 	 ldr r3,[r0,#168]
 1318              	.LVL180:
1085:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
1086:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   switch(event)
 1319              	 .loc 1 1086 0
 1320 0006 0929     	 cmp r1,#9
 1321 0008 11D8     	 bhi .L77
 1322 000a DFE801F0 	 tbb [pc,r1]
 1323              	.L79:
 1324 000e 14       	 .byte (.L83-.L79)/2
 1325 000f 14       	 .byte (.L83-.L79)/2
 1326 0010 05       	 .byte (.L80-.L79)/2
 1327 0011 05       	 .byte (.L80-.L79)/2
 1328 0012 10       	 .byte (.L77-.L79)/2
 1329 0013 10       	 .byte (.L77-.L79)/2
 1330 0014 10       	 .byte (.L77-.L79)/2
 1331 0015 10       	 .byte (.L77-.L79)/2
 1332 0016 08       	 .byte (.L81-.L79)/2
 1333 0017 0C       	 .byte (.L82-.L79)/2
 1334              	 .p2align 1
 1335              	.L80:
1087:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   {
1088:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH:
1089:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH:
1090:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_POSR_Msk);
1091:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_POSR_Pos;
1092:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       break;
1093:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1094:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP:
1095:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN:
1096:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_CMSR_Msk);
 1336              	 .loc 1 1096 0
 1337 0018 0C24     	 movs r4,#12
1097:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_CMSR_Pos;
 1338              	 .loc 1 1097 0
 1339 001a 0221     	 movs r1,#2
 1340              	.LVL181:
 1341 001c 0DE0     	 b .L78
 1342              	.LVL182:
 1343              	.L81:
1098:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       break;
1099:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1100:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_EVENT0:
1101:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E0SR_Msk);
 1344              	 .loc 1 1101 0
 1345 001e 4FF44074 	 mov r4,#768
1102:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E0SR_Pos;
 1346              	 .loc 1 1102 0
 1347 0022 0821     	 movs r1,#8
 1348              	.LVL183:
1103:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       break;
 1349              	 .loc 1 1103 0
 1350 0024 09E0     	 b .L78
 1351              	.LVL184:
 1352              	.L82:
1104:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1105:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_EVENT1:
1106:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E1SR_Msk);
 1353              	 .loc 1 1106 0
 1354 0026 4FF44064 	 mov r4,#3072
1107:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E1SR_Pos;
 1355              	 .loc 1 1107 0
 1356 002a 0A21     	 movs r1,#10
 1357              	.LVL185:
1108:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       break;
 1358              	 .loc 1 1108 0
 1359 002c 05E0     	 b .L78
 1360              	.LVL186:
 1361              	.L77:
1109:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1110:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****     default:
1111:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E2SR_Msk);
 1362              	 .loc 1 1111 0
 1363 002e 4FF44054 	 mov r4,#12288
1112:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E2SR_Pos;
 1364              	 .loc 1 1112 0
 1365 0032 0C21     	 movs r1,#12
 1366              	.LVL187:
1113:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       break;
 1367              	 .loc 1 1113 0
 1368 0034 01E0     	 b .L78
 1369              	.LVL188:
 1370              	.L83:
1090:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_POSR_Pos;
 1371              	 .loc 1 1090 0
 1372 0036 0324     	 movs r4,#3
1091:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****       break;
 1373              	 .loc 1 1091 0
 1374 0038 0021     	 movs r1,#0
 1375              	.LVL189:
 1376              	.L78:
1114:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   }
1115:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
1116:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   srs &= ~mask; 
 1377              	 .loc 1 1116 0
 1378 003a 23EA0403 	 bic r3,r3,r4
 1379              	.LVL190:
1117:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   srs |= (uint32_t)sr << pos;
 1380              	 .loc 1 1117 0
 1381 003e 8A40     	 lsls r2,r2,r1
 1382              	.LVL191:
 1383 0040 1A43     	 orrs r2,r2,r3
 1384              	.LVL192:
1118:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->SRS = srs;
 1385              	 .loc 1 1118 0
 1386 0042 C0F8A820 	 str r2,[r0,#168]
1119:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** }
 1387              	 .loc 1 1119 0
 1388 0046 5DF8044B 	 ldr r4,[sp],#4
 1389              	.LCFI15:
 1390              	 .cfi_restore 4
 1391              	 .cfi_def_cfa_offset 0
 1392              	.LVL193:
 1393 004a 7047     	 bx lr
 1394              	 .cfi_endproc
 1395              	.LFE248:
 1397              	 .section .text.XMC_CCU4_SLICE_SetPassiveLevel,"ax",%progbits
 1398              	 .align 2
 1399              	 .global XMC_CCU4_SLICE_SetPassiveLevel
 1400              	 .thumb
 1401              	 .thumb_func
 1403              	XMC_CCU4_SLICE_SetPassiveLevel:
 1404              	.LFB249:
1120:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** 
1121:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** /* Asserts passive level for the slice output */
1122:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** void XMC_CCU4_SLICE_SetPassiveLevel(XMC_CCU4_SLICE_t *const slice,
1123:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                     const XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t level)
1124:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c **** {
 1405              	 .loc 1 1124 0
 1406              	 .cfi_startproc
 1407              	 
 1408              	 
 1409              	 
 1410              	.LVL194:
1125:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   uint32_t psl; 
1126:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
1127:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPassiveLevel:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1128:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPassiveLevel:Invalid Passive level", ((level == XMC_CCU4_SLICE_OUTP
1129:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****                                                                       (level == XMC_CCU4_SLICE_OUTP
1130:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
1131:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   psl = slice->PSL;
 1411              	 .loc 1 1131 0
 1412 0000 8369     	 ldr r3,[r0,#24]
 1413              	.LVL195:
1132:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   psl &= ~((uint32_t) CCU4_CC4_PSL_PSL_Msk);
 1414              	 .loc 1 1132 0
 1415 0002 23F00103 	 bic r3,r3,#1
 1416              	.LVL196:
1133:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   psl |= (uint32_t) level;
 1417              	 .loc 1 1133 0
 1418 0006 1943     	 orrs r1,r1,r3
 1419              	.LVL197:
1134:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   
1135:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   /* Program CC4 slice output passive level */
1136:C:/Files/Projects/Git/XMCLib/src\xmc_ccu4.c ****   slice->PSL = psl;
 1420              	 .loc 1 1136 0
 1421 0008 8161     	 str r1,[r0,#24]
 1422 000a 7047     	 bx lr
 1423              	 .cfi_endproc
 1424              	.LFE249:
 1426              	 .text
 1427              	.Letext0:
 1428              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1429              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1430              	 .file 5 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1431              	 .file 6 "C:/Files/Projects/Git/XMCLib/inc/xmc4_scu.h"
 1432              	 .file 7 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
 1433              	 .file 8 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
 1434              	 .file 9 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu4.c
    {standard input}:20     .text.XMC_CCU4_EnableModule:00000000 $t
    {standard input}:25     .text.XMC_CCU4_EnableModule:00000000 XMC_CCU4_EnableModule
    {standard input}:93     .text.XMC_CCU4_EnableModule:00000044 $d
    {standard input}:104    .text.XMC_CCU4_DisableModule:00000000 $t
    {standard input}:109    .text.XMC_CCU4_DisableModule:00000000 XMC_CCU4_DisableModule
    {standard input}:174    .text.XMC_CCU4_DisableModule:0000003c $d
    {standard input}:185    .text.XMC_CCU4_Init:00000000 $t
    {standard input}:190    .text.XMC_CCU4_Init:00000000 XMC_CCU4_Init
    {standard input}:233    .text.XMC_CCU4_SetModuleClock:00000000 $t
    {standard input}:238    .text.XMC_CCU4_SetModuleClock:00000000 XMC_CCU4_SetModuleClock
    {standard input}:262    .text.XMC_CCU4_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:267    .text.XMC_CCU4_SetMultiChannelShadowTransferMode:00000000 XMC_CCU4_SetMultiChannelShadowTransferMode
    {standard input}:293    .text.XMC_CCU4_SLICE_CompareInit:00000000 $t
    {standard input}:298    .text.XMC_CCU4_SLICE_CompareInit:00000000 XMC_CCU4_SLICE_CompareInit
    {standard input}:335    .text.XMC_CCU4_SLICE_CaptureInit:00000000 $t
    {standard input}:340    .text.XMC_CCU4_SLICE_CaptureInit:00000000 XMC_CCU4_SLICE_CaptureInit
    {standard input}:369    .text.XMC_CCU4_SLICE_StartConfig:00000000 $t
    {standard input}:374    .text.XMC_CCU4_SLICE_StartConfig:00000000 XMC_CCU4_SLICE_StartConfig
    {standard input}:412    .text.XMC_CCU4_SLICE_StopConfig:00000000 $t
    {standard input}:417    .text.XMC_CCU4_SLICE_StopConfig:00000000 XMC_CCU4_SLICE_StopConfig
    {standard input}:452    .text.XMC_CCU4_SLICE_LoadConfig:00000000 $t
    {standard input}:457    .text.XMC_CCU4_SLICE_LoadConfig:00000000 XMC_CCU4_SLICE_LoadConfig
    {standard input}:481    .text.XMC_CCU4_SLICE_ModulationConfig:00000000 $t
    {standard input}:486    .text.XMC_CCU4_SLICE_ModulationConfig:00000000 XMC_CCU4_SLICE_ModulationConfig
    {standard input}:547    .text.XMC_CCU4_SLICE_CountConfig:00000000 $t
    {standard input}:552    .text.XMC_CCU4_SLICE_CountConfig:00000000 XMC_CCU4_SLICE_CountConfig
    {standard input}:576    .text.XMC_CCU4_SLICE_GateConfig:00000000 $t
    {standard input}:581    .text.XMC_CCU4_SLICE_GateConfig:00000000 XMC_CCU4_SLICE_GateConfig
    {standard input}:605    .text.XMC_CCU4_SLICE_Capture0Config:00000000 $t
    {standard input}:610    .text.XMC_CCU4_SLICE_Capture0Config:00000000 XMC_CCU4_SLICE_Capture0Config
    {standard input}:634    .text.XMC_CCU4_SLICE_Capture1Config:00000000 $t
    {standard input}:639    .text.XMC_CCU4_SLICE_Capture1Config:00000000 XMC_CCU4_SLICE_Capture1Config
    {standard input}:663    .text.XMC_CCU4_SLICE_DirectionConfig:00000000 $t
    {standard input}:668    .text.XMC_CCU4_SLICE_DirectionConfig:00000000 XMC_CCU4_SLICE_DirectionConfig
    {standard input}:692    .text.XMC_CCU4_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:697    .text.XMC_CCU4_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU4_SLICE_StatusBitOverrideConfig
    {standard input}:718    .text.XMC_CCU4_SLICE_TrapConfig:00000000 $t
    {standard input}:723    .text.XMC_CCU4_SLICE_TrapConfig:00000000 XMC_CCU4_SLICE_TrapConfig
    {standard input}:770    .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:775    .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:860    .text.XMC_CCU4_SLICE_ConfigureEvent:00000000 $t
    {standard input}:865    .text.XMC_CCU4_SLICE_ConfigureEvent:00000000 XMC_CCU4_SLICE_ConfigureEvent
    {standard input}:953    .text.XMC_CCU4_SLICE_SetInput:00000000 $t
    {standard input}:958    .text.XMC_CCU4_SLICE_SetInput:00000000 XMC_CCU4_SLICE_SetInput
    {standard input}:1002   .text.XMC_CCU4_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:1007   .text.XMC_CCU4_SLICE_SetTimerRepeatMode:00000000 XMC_CCU4_SLICE_SetTimerRepeatMode
    {standard input}:1032   .text.XMC_CCU4_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:1037   .text.XMC_CCU4_SLICE_SetTimerCountingMode:00000000 XMC_CCU4_SLICE_SetTimerCountingMode
    {standard input}:1062   .text.XMC_CCU4_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:1067   .text.XMC_CCU4_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU4_SLICE_GetCaptureRegisterValue
    {standard input}:1087   .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:1092   .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU4_SLICE_GetLastCapturedTimerValue
    {standard input}:1184   .text.XMC_CCU4_GetCapturedValueFromFifo:00000000 $t
    {standard input}:1189   .text.XMC_CCU4_GetCapturedValueFromFifo:00000000 XMC_CCU4_GetCapturedValueFromFifo
    {standard input}:1213   .text.XMC_CCU4_SLICE_EnableDithering:00000000 $t
    {standard input}:1218   .text.XMC_CCU4_SLICE_EnableDithering:00000000 XMC_CCU4_SLICE_EnableDithering
    {standard input}:1268   .text.XMC_CCU4_SLICE_SetPrescaler:00000000 $t
    {standard input}:1273   .text.XMC_CCU4_SLICE_SetPrescaler:00000000 XMC_CCU4_SLICE_SetPrescaler
    {standard input}:1299   .text.XMC_CCU4_SLICE_SetInterruptNode:00000000 $t
    {standard input}:1304   .text.XMC_CCU4_SLICE_SetInterruptNode:00000000 XMC_CCU4_SLICE_SetInterruptNode
    {standard input}:1324   .text.XMC_CCU4_SLICE_SetInterruptNode:0000000e $d
    {standard input}:1334   .text.XMC_CCU4_SLICE_SetInterruptNode:00000018 $t
    {standard input}:1398   .text.XMC_CCU4_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:1403   .text.XMC_CCU4_SLICE_SetPassiveLevel:00000000 XMC_CCU4_SLICE_SetPassiveLevel
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_EnableClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
