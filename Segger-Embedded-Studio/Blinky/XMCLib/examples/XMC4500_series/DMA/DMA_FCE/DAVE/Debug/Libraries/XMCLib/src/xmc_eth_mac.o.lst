   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_eth_mac.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_ETH_MAC_InitRxDescriptors,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_ETH_MAC_InitRxDescriptors
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_ETH_MAC_InitRxDescriptors:
  26              	.LFB235:
  27              	 .file 1 "C:/Files/Projects/Git/XMCLib/src/xmc_eth_mac.c"
   1:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
   2:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /**
   3:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * @file xmc_eth_mac.c
   4:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * @date 2018-08-08
   5:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
   6:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * @cond
   7:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  **************************************************************************************************
   8:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library
   9:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  10:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  11:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * All rights reserved.                        
  12:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *                                             
  13:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * following conditions are met:   
  15:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *                                                                              
  16:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * disclaimer.                        
  18:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 
  19:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.
  21:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 
  22:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * products derived from this software without specific prior written permission.                  
  24:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *                                                                              
  25:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *                                                                              
  33:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  **************************************************************************************************
  36:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  37:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * Change History
  38:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * --------------
  39:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  40:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2015-06-20:
  41:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Initial
  42:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  43:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2015-09-01:
  44:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Add clock gating control in enable/disable APIs
  45:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Add transmit polling if run out of buffers
  46:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  47:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2015-11-30:
  48:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Fix XMC_ETH_MAC_GetRxFrameSize return value in case of errors
  49:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  50:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2016-03-16:
  51:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Fix XMC_ETH_MAC_DisableEvent
  52:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  53:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2016-05-19:
  54:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_ReturnTxDescriptor and XMC_ETH_MAC_ReturnRxDescriptor
  55:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  56:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2016-08-30:
  57:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to disable MMC interrupt events
  58:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  59:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2016-11-22:
  60:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to optimize access to bus
  61:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  62:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2017-02-25:
  63:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - XMC_ETH_MAC_Enable() and XMC_ETH_MAC_Disable(), fixed compilation warnings
  64:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  65:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2017-03-27:
  66:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to disable PMT and timestamp interrupt events
  67:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  68:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2017-04-02:
  69:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Added XMC_ETH_MAC_InitPTPEx()
  70:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Added XMC_ETH_MAC_SetPTPTime()
  71:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Added XMC_ETH_MAC_UpdateAddend() 
  72:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_InitPTP(), XMC_ETH_MAC_UpdatePTPTime(), XMC_ETH_MAC_SetPTPAlarm()
  73:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *       - nanoseconds initializazion
  74:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *       - added polling to wait for setup
  75:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  76:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2017-04-04:
  77:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to disable MMC IPC receive interrupt events
  78:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  79:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2017-04-11:
  80:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_SetPTPAlarm() nanoseconds conversion
  81:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  82:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2017-04-17:
  83:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_GetTxTimeStamp() and XMC_ETH_MAC_GetRxTimeStamp() return the timestamp
  84:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  85:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2017-04-27:
  86:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_GetRxTimeStamp() and XMC_ETH_MAC_GetTxTimeStamp() fixed returned nanosec
  87:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  88:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2017-08-03:
  89:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_InitPTP(), XMC_ETH_MAC_InitPTPEx(), XMC_ETH_MAC_GetPTPTime(), XMC_ETH_
  90:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *       rollover mode of nanosecond counter from binary to digital mode, i.e 1ns resolution
  91:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  92:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2017-09-27:
  93:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Added XMC_ETH_MAC_InitEx()
  94:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - XMC_ETH_MAC_SetAddressEx(), XMC_ETH_MAC_GetAddressEx() and XMC_ETH_MAC_SetAddressPerfectFi
  95:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  96:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2018-06-21:
  97:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_SetAddressPerfectFilterEx()
  98:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
  99:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * 2018-08-08:
 100:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *      - Fixed XMC_ETH_MAC_SetVLANTag() which now accepts a 32bit tag parameter that allows settin
 101:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *
 102:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * @endcond
 103:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  */
 104:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 105:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /*******************************************************************************
 106:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * HEADER FILES
 107:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *******************************************************************************/
 108:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #include <xmc_eth_mac.h>
 109:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 110:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #if defined (ETH0)
 111:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 112:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #include <stdlib.h>
 113:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #include <xmc_scu.h>
 114:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 115:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /*******************************************************************************
 116:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * MACROS
 117:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *******************************************************************************/
 118:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 119:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /**
 120:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * ETH MAC clock speed
 121:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  */
 122:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_35MHZ  (35000000U)  /**< ETH MAC clock speed 35 MHZ */
 123:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_60MHZ  (60000000U)  /**< ETH MAC clock speed 60 MHZ */
 124:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_100MHZ (100000000U) /**< ETH MAC clock speed 100 MHZ */
 125:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_150MHZ (150000000U) /**< ETH MAC clock speed 150 MHZ */
 126:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_200MHZ (200000000U) /**< ETH MAC clock speed 200 MHZ */
 127:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_250MHZ (250000000U) /**< ETH MAC clock speed 250 MHZ */
 128:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 129:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /**
 130:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * ETH MAC MDC divider
 131:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  */
 132:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_16  (2U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/16 */
 133:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_26  (3U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/26 */
 134:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_42  (0U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/42 */
 135:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_62  (1U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/62 */
 136:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_102 (4U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/102 *
 137:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_124 (5U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/124 *
 138:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 139:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 140:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /**
 141:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * RDES1 Descriptor RX Packet Control
 142:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  */
 143:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RBS2 (0x1FFF0000U) /**< Receive buffer 2 size */
 144:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RER  (0x00008000U) /**< Receive end of ring */
 145:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RCH  (0x00004000U) /**< Second address chained */
 146:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RBS1 (0x00001FFFU) /**< Receive buffer 1 size */
 147:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 148:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /**
 149:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * Interrupt masking
 150:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  */
 151:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define ETH_MAC_DISABLE_MMC_INTERRUPT_MSK              (0x03ffffffU) /**< Bit mask to disable MMMC 
 152:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define ETH_MAC_DISABLE_MMC_IPC_RECEIVE_INTERRUPT_MSK  (0x3fff3fffU) /**< Bit mask to disable MMC I
 153:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 154:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /**
 155:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * Normal MAC events
 156:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  */
 157:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define ETH_MAC_EVENT_NORMAL (XMC_ETH_MAC_EVENT_TRANSMIT |\
 158:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                               XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE |\
 159:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                               XMC_ETH_MAC_EVENT_RECEIVE |\
 160:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                               XMC_ETH_MAC_EVENT_EARLY_RECEIVE)
 161:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 162:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /**
 163:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * Abnormal MAC events
 164:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  */
 165:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define ETH_MAC_EVENT_ABNORMAL (XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED |\
 166:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT |\
 167:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW |\
 168:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW |\
 169:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE |\
 170:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED |\
 171:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT |\
 172:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_EARLY_TRANSMIT |\
 173:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_BUS_ERROR)
 174:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 175:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Definition needed in case of device header file previous to v1.5.1*/
 176:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #ifndef ETH_BUS_MODE_ATDS_Msk
 177:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define ETH_BUS_MODE_ATDS_Msk  (0x00000080UL)
 178:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #endif
 179:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 180:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Resolution of sub second counter ~ 20ns */
 181:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #define XMC_ETH_SUB_SECOND_UPDATE_FREQ (50000000)
 182:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 183:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /*******************************************************************************
 184:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  * API IMPLEMENTATION
 185:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  *******************************************************************************/
 186:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 187:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Check if the event passed is a normal event */
 188:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** __STATIC_INLINE bool XCM_ETH_MAC_IsNormalEvent(uint32_t event)
 189:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 190:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return (bool)((event & ((uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT |
 191:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE |
 192:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE |
 193:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_EARLY_RECEIVE)) != (uint32_t)0);
 194:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 195:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 196:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Check if the event passed is an abnormal event */
 197:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** __STATIC_INLINE bool XCM_ETH_MAC_IsAbnormalEvent(uint32_t event)
 198:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 199:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****    return (bool)((event & ((uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED |
 200:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT |
 201:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW |
 202:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW |
 203:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE |
 204:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED |
 205:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT |
 206:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_EARLY_TRANSMIT |
 207:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_BUS_ERROR)) != (uint32_t)0);
 208:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  }
 209:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 210:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #ifdef XMC_ASSERT_ENABLE 
 211:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****  
 212:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Check if the passed argument is a valid ETH module */ 
 213:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** __STATIC_INLINE bool XMC_ETH_MAC_IsValidModule(ETH_GLOBAL_TypeDef *const eth)
 214:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 215:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return (eth == ETH0);
 216:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 217:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 218:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #endif
 219:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 220:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_InitEx(XMC_ETH_MAC_t *const eth_mac)
 221:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 222:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitEx: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 223:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 224:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_Reset(eth_mac);
 225:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 226:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Initialize MAC configuration */
 227:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->MAC_CONFIGURATION = (uint32_t)ETH_MAC_CONFIGURATION_IPC_Msk;
 228:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 229:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Initialize Filter registers */
 230:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->FLOW_CONTROL = ETH_FLOW_CONTROL_DZPQ_Msk; /* Disable Zero Quanta Pause */
 231:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 232:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE = (uint32_t)ETH_OPERATION_MODE_RSF_Msk |
 233:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 	                              (uint32_t)ETH_OPERATION_MODE_TSF_Msk |
 234:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 	                              (uint32_t)ETH_OPERATION_MODE_OSF_Msk;
 235:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 236:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Increase enhanced descriptor to 8 WORDS, required when the Advanced Time-Stamp feature or Full
 237:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->BUS_MODE = (uint32_t)ETH_BUS_MODE_ATDS_Msk |
 238:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 	                        (uint32_t)ETH_BUS_MODE_AAL_Msk | /* the AHB interface generates all bursts
 239:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 	                        (uint32_t)ETH_BUS_MODE_FB_Msk | /* DMA attempts to execute fixed-length Bu
 240:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 	                        (uint32_t)(0x20 << ETH_BUS_MODE_PBL_Pos); /* maximum Burst length */
 241:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 242:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Initialize DMA Descriptors */
 243:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_InitRxDescriptors(eth_mac);
 244:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_InitTxDescriptors(eth_mac);
 245:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 246:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Clear interrupts */
 247:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->STATUS = 0xFFFFFFFFUL;
 248:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 249:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Disable MMC interrupt events */
 250:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->MMC_TRANSMIT_INTERRUPT_MASK = ETH_MAC_DISABLE_MMC_INTERRUPT_MSK;
 251:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->MMC_RECEIVE_INTERRUPT_MASK = ETH_MAC_DISABLE_MMC_INTERRUPT_MSK;
 252:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->MMC_IPC_RECEIVE_INTERRUPT_MASK = ETH_MAC_DISABLE_MMC_IPC_RECEIVE_INTERRUPT_MSK;
 253:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 254:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Disable PMT and timestamp interrupt events */
 255:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK = ETH_INTERRUPT_MASK_PMTIM_Msk | ETH_INTERRUPT_MASK_TSIM_Msk;
 256:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 257:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->frame_end = NULL;
 258:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 259:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 260:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* ETH MAC initialize */
 261:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_Init(XMC_ETH_MAC_t *const eth_mac)
 262:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 263:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 264:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 265:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_Init: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 266:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 267:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_Enable(eth_mac);
 268:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   status = XMC_ETH_MAC_SetManagmentClockDivider(eth_mac);
 269:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 270:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_InitEx(eth_mac);
 271:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 272:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_SetAddress(eth_mac, eth_mac->address);
 273:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 274:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return status;
 275:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 276:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 277:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Initialize RX descriptors */
 278:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_InitRxDescriptors(XMC_ETH_MAC_t *const eth_mac)
 279:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
  28              	 .loc 1 279 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
  34 0000 F0B4     	 push {r4,r5,r6,r7}
  35              	.LCFI0:
  36              	 .cfi_def_cfa_offset 16
  37              	 .cfi_offset 4,-16
  38              	 .cfi_offset 5,-12
  39              	 .cfi_offset 6,-8
  40              	 .cfi_offset 7,-4
  41              	.LVL1:
 280:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t i;
 281:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t next;
 282:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 283:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitRxDescriptors: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac
 284:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 285:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /*
 286:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****    * Chained structure (ETH_MAC_DMA_RDES1_RCH), second address in the descriptor
 287:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****    * (buffer2) is the next descriptor address
 288:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****    */
 289:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   for (i = 0U; i < eth_mac->num_rx_buf; ++i)
  42              	 .loc 1 289 0
  43 0002 90F82430 	 ldrb r3,[r0,#36]
  44 0006 13B3     	 cbz r3,.L2
  45 0008 0025     	 movs r5,#0
  46 000a 2A46     	 mov r2,r5
 290:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 291:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->rx_desc[i].status = (uint32_t)ETH_MAC_DMA_RDES0_OWN;
  47              	 .loc 1 291 0
  48 000c 4FF00047 	 mov r7,#-2147483648
 292:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->rx_desc[i].length = (uint32_t)ETH_MAC_DMA_RDES1_RCH | (uint32_t)XMC_ETH_MAC_BUF_SIZE;
  49              	 .loc 1 292 0
  50 0010 44F2F456 	 movw r6,#17908
  51              	.LVL2:
  52              	.L4:
  53 0014 5301     	 lsls r3,r2,#5
 291:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->rx_desc[i].length = (uint32_t)ETH_MAC_DMA_RDES1_RCH | (uint32_t)XMC_ETH_MAC_BUF_SIZE;
  54              	 .loc 1 291 0
  55 0016 0169     	 ldr r1,[r0,#16]
  56 0018 CF50     	 str r7,[r1,r3]
  57              	 .loc 1 292 0
  58 001a 0169     	 ldr r1,[r0,#16]
  59 001c 1944     	 add r1,r1,r3
  60 001e 4E60     	 str r6,[r1,#4]
 293:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->rx_desc[i].buffer1 = (uint32_t)&(eth_mac->rx_buf[i * XMC_ETH_MAC_BUF_SIZE]);
  61              	 .loc 1 293 0
  62 0020 0169     	 ldr r1,[r0,#16]
  63 0022 1944     	 add r1,r1,r3
  64 0024 8469     	 ldr r4,[r0,#24]
  65 0026 2C44     	 add r4,r4,r5
  66 0028 8C60     	 str r4,[r1,#8]
 294:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     next = i + 1U;
  67              	 .loc 1 294 0
  68 002a 0132     	 adds r2,r2,#1
  69              	.LVL3:
 295:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     if (next == eth_mac->num_rx_buf)
  70              	 .loc 1 295 0
  71 002c 90F82410 	 ldrb r1,[r0,#36]
 296:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 297:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       next = 0U;
  72              	 .loc 1 297 0
  73 0030 9142     	 cmp r1,r2
  74 0032 14BF     	 ite ne
  75 0034 1446     	 movne r4,r2
  76 0036 0024     	 moveq r4,#0
  77              	.LVL4:
 298:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 299:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     eth_mac->rx_desc[i].buffer2 = (uint32_t)&(eth_mac->rx_desc[next]);
  78              	 .loc 1 299 0
  79 0038 0169     	 ldr r1,[r0,#16]
  80 003a 0B44     	 add r3,r3,r1
  81 003c 01EB4411 	 add r1,r1,r4,lsl#5
  82 0040 D960     	 str r1,[r3,#12]
  83              	.LVL5:
  84 0042 05F2F455 	 addw r5,r5,#1524
 289:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
  85              	 .loc 1 289 0
  86 0046 90F82430 	 ldrb r3,[r0,#36]
  87 004a 9342     	 cmp r3,r2
  88 004c E2D8     	 bhi .L4
  89              	.LVL6:
  90              	.L2:
 300:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 301:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->RECEIVE_DESCRIPTOR_LIST_ADDRESS = (uint32_t)&(eth_mac->rx_desc[0]);
  91              	 .loc 1 301 0
  92 004e 0268     	 ldr r2,[r0]
  93 0050 0169     	 ldr r1,[r0,#16]
  94 0052 41F20C03 	 movw r3,#4108
  95 0056 D150     	 str r1,[r2,r3]
 302:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->rx_index = 0U;
  96              	 .loc 1 302 0
  97 0058 0023     	 movs r3,#0
  98 005a 80F82730 	 strb r3,[r0,#39]
 303:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
  99              	 .loc 1 303 0
 100 005e F0BC     	 pop {r4,r5,r6,r7}
 101              	.LCFI1:
 102              	 .cfi_restore 7
 103              	 .cfi_restore 6
 104              	 .cfi_restore 5
 105              	 .cfi_restore 4
 106              	 .cfi_def_cfa_offset 0
 107 0060 7047     	 bx lr
 108              	 .cfi_endproc
 109              	.LFE235:
 111 0062 00BF     	 .section .text.XMC_ETH_MAC_InitTxDescriptors,"ax",%progbits
 112              	 .align 2
 113              	 .global XMC_ETH_MAC_InitTxDescriptors
 114              	 .thumb
 115              	 .thumb_func
 117              	XMC_ETH_MAC_InitTxDescriptors:
 118              	.LFB236:
 304:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 305:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Initialize TX descriptors */
 306:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_InitTxDescriptors(XMC_ETH_MAC_t *const eth_mac)
 307:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 119              	 .loc 1 307 0
 120              	 .cfi_startproc
 121              	 
 122              	 
 123              	 
 124              	.LVL7:
 125 0000 70B4     	 push {r4,r5,r6}
 126              	.LCFI2:
 127              	 .cfi_def_cfa_offset 12
 128              	 .cfi_offset 4,-12
 129              	 .cfi_offset 5,-8
 130              	 .cfi_offset 6,-4
 131              	.LVL8:
 308:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t i;
 309:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t next;
 310:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 311:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitTxDescriptors: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac
 312:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 313:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Chained structure (ETH_MAC_DMA_TDES0_TCH), second address in the descriptor (buffer2) is the n
 314:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   for (i = 0U; i < eth_mac->num_tx_buf; ++i)
 132              	 .loc 1 314 0
 133 0002 90F82530 	 ldrb r3,[r0,#37]
 134 0006 E3B1     	 cbz r3,.L9
 135 0008 0025     	 movs r5,#0
 136 000a 2B46     	 mov r3,r5
 315:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 316:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->tx_desc[i].status = ETH_MAC_DMA_TDES0_TCH | ETH_MAC_DMA_TDES0_LS | ETH_MAC_DMA_TDES0_FS;
 137              	 .loc 1 316 0
 138 000c 124E     	 ldr r6,.L15
 139              	.LVL9:
 140              	.L11:
 141 000e 5A01     	 lsls r2,r3,#5
 142 0010 4169     	 ldr r1,[r0,#20]
 143 0012 8E50     	 str r6,[r1,r2]
 317:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->tx_desc[i].buffer1 = (uint32_t)&(eth_mac->tx_buf[i * XMC_ETH_MAC_BUF_SIZE]);
 144              	 .loc 1 317 0
 145 0014 4169     	 ldr r1,[r0,#20]
 146 0016 1144     	 add r1,r1,r2
 147 0018 C469     	 ldr r4,[r0,#28]
 148 001a 2C44     	 add r4,r4,r5
 149 001c 8C60     	 str r4,[r1,#8]
 318:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     next = i + 1U;
 150              	 .loc 1 318 0
 151 001e 0133     	 adds r3,r3,#1
 152              	.LVL10:
 319:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     if (next == eth_mac->num_tx_buf)
 153              	 .loc 1 319 0
 154 0020 90F82510 	 ldrb r1,[r0,#37]
 320:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 321:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****         next = 0U;
 155              	 .loc 1 321 0
 156 0024 9942     	 cmp r1,r3
 157 0026 14BF     	 ite ne
 158 0028 1C46     	 movne r4,r3
 159 002a 0024     	 moveq r4,#0
 160              	.LVL11:
 322:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 323:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     eth_mac->tx_desc[i].buffer2 = (uint32_t)&(eth_mac->tx_desc[next]);
 161              	 .loc 1 323 0
 162 002c 4169     	 ldr r1,[r0,#20]
 163 002e 0A44     	 add r2,r2,r1
 164 0030 01EB4411 	 add r1,r1,r4,lsl#5
 165 0034 D160     	 str r1,[r2,#12]
 166              	.LVL12:
 167 0036 05F2F455 	 addw r5,r5,#1524
 314:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 168              	 .loc 1 314 0
 169 003a 90F82520 	 ldrb r2,[r0,#37]
 170 003e 9A42     	 cmp r2,r3
 171 0040 E5D8     	 bhi .L11
 172              	.LVL13:
 173              	.L9:
 324:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 325:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->TRANSMIT_DESCRIPTOR_LIST_ADDRESS = (uint32_t)&(eth_mac->tx_desc[0]);
 174              	 .loc 1 325 0
 175 0042 0268     	 ldr r2,[r0]
 176 0044 4169     	 ldr r1,[r0,#20]
 177 0046 41F21003 	 movw r3,#4112
 178 004a D150     	 str r1,[r2,r3]
 326:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->tx_index = 0U;
 179              	 .loc 1 326 0
 180 004c 0023     	 movs r3,#0
 181 004e 80F82630 	 strb r3,[r0,#38]
 327:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 182              	 .loc 1 327 0
 183 0052 70BC     	 pop {r4,r5,r6}
 184              	.LCFI3:
 185              	 .cfi_restore 6
 186              	 .cfi_restore 5
 187              	 .cfi_restore 4
 188              	 .cfi_def_cfa_offset 0
 189 0054 7047     	 bx lr
 190              	.L16:
 191 0056 00BF     	 .align 2
 192              	.L15:
 193 0058 00001030 	 .word 806354944
 194              	 .cfi_endproc
 195              	.LFE236:
 197              	 .section .text.XMC_ETH_MAC_InitEx,"ax",%progbits
 198              	 .align 2
 199              	 .global XMC_ETH_MAC_InitEx
 200              	 .thumb
 201              	 .thumb_func
 203              	XMC_ETH_MAC_InitEx:
 204              	.LFB233:
 221:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitEx: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 205              	 .loc 1 221 0
 206              	 .cfi_startproc
 207              	 
 208              	 
 209              	.LVL14:
 210 0000 10B5     	 push {r4,lr}
 211              	.LCFI4:
 212              	 .cfi_def_cfa_offset 8
 213              	 .cfi_offset 4,-8
 214              	 .cfi_offset 14,-4
 215 0002 0446     	 mov r4,r0
 216              	.LVL15:
 217              	.LBB21:
 218              	.LBB22:
 219              	 .file 2 "C:/Files/Projects/Git/XMCLib/inc/xmc_eth_mac.h"
   1:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
   2:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
   3:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @file xmc_eth_mac.h
   4:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @date 2018-08-08
   5:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
   6:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @cond
   7:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
   8:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   9:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  10:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  11:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * All rights reserved.                        
  12:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *                                             
  13:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * following conditions are met:   
  15:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *                                                                              
  16:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * disclaimer.                        
  18:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 
  19:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 
  22:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * products derived from this software without specific prior written permission.                  
  24:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *                                                                              
  25:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *                                                                              
  33:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
  36:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  37:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Change History
  38:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * --------------
  39:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  40:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 2015-06-20:
  41:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *     - Initial
  42:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  43:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 2016-04-25:
  44:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *     - Change XMC_ETH_MAC_BUF_SIZE to 1524 to allow for Tagged MAC frame format
  45:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *  
  46:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 2016-05-19:
  47:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_GetTxBuffer() and XMC_ETH_MAC_GetRxBuffer()
  48:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_SetTxBufferSize()
  49:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  50:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 2016-06-08:
  51:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_IsRxDescriptorOwnedByDma()
  52:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 
  53:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 2017-02-25:
  54:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *      - XMC_ETH_MAC_SetPortControl() fixed compilation warning
  55:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  56:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 2017-04-02:
  57:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_InitPTPEx()
  58:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_SetPTPTime()
  59:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_UpdateAddend()
  60:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  61:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 2017-04-11:
  62:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_EnablePTPAlarm() and XMC_ETH_MAC_DisablePTPAlarm
  63:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  64:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 2017-04-17:
  65:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *     - Fixed ordering of PTP nanoseconds and seconds in XMC_ETH_MAC_DMA_DESC_t
  66:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  67:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 2017-08-07:
  68:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_TIMESTAMP_STATUS_t
  69:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  70:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 2017-09-27:
  71:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_InitEx()
  72:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *     - XMC_ETH_MAC_SetAddressEx(), XMC_ETH_MAC_GetAddressEx() and XMC_ETH_MAC_SetAddressPerfectFi
  73:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  74:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 2018-06-21:
  75:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *     - Changed definition of XMC_ETH_MAC_DMA_DESC_t declaring its fields volatile
  76:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  77:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * 2018-08-08:
  78:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *     - Fixed XMC_ETH_MAC_SetVLANTag() which now accepts a 32bit tag parameter that allows setting
  79:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  80:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @endcond
  81:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
  82:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
  83:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
  84:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @addtogroup XMClib XMC Peripheral Library
  85:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @{
  86:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
  87:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
  88:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
  89:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @addtogroup ETH_MAC
  90:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @brief Ethernet Low level driver for XMC4000 microcontroller family.
  91:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  92:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The Ethernet MAC (ETH) is a major communication peripheral that supports 10/100
  93:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * MBit/s data transfer rates in compliance with the IEEE 802.3-2002 standard. The ETH
  94:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * may be used to implement internet connected applications using IPv4 and IPv6. The
  95:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * ETH also includes support for IEEE1588 time synchronisation to allow implementation
  96:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * of Real Time Ethernet protocols.
  97:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
  98:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The XMC_ETH_MAC low level driver provides functions to configure and initialize
  99:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * the ETH_MAC hardware peripheral.
 100:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @{
 101:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 102:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 103:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #ifndef XMC_ETH_MAC_H
 104:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_H
 105:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 106:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 107:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * HEADER FILES
 108:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 109:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 110:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #include "xmc_common.h"
 111:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 112:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #if defined (ETH0)
 113:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 114:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #include "xmc_eth_mac_map.h"
 115:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 116:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 117:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * MACROS
 118:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 119:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 120:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_BUF_SIZE           (1524)     /**< ETH MAC buffer size */
 121:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_PHY_MAX_RETRIES    (0xffffUL) /**< Maximum retries */
 122:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_WAKEUP_REGISTER_LENGTH (8U)       /**< Remote wakeup frame reg length */
 123:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 124:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 125:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * TDES0 Descriptor TX Packet Control/Status
 126:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 127:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_OWN  (0x80000000U) /**< Own bit 1=DMA, 0=CPU */
 128:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IC   (0x40000000U) /**< Interrupt on competition */
 129:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LS   (0x20000000U) /**< Last segment */
 130:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_FS   (0x10000000U) /**< First segment */
 131:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DC   (0x08000000U) /**< Disable CRC */
 132:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DP   (0x04000000U) /**< Disable pad */
 133:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TTSE (0x02000000U) /**< Transmit time stamp enable */
 134:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_CIC  (0x00C00000U) /**< Checksum insertion control */
 135:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TER  (0x00200000U) /**< Transmit end of ring */
 136:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TCH  (0x00100000U) /**< Second address chained */
 137:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TTSS (0x00020000U) /**< Transmit time stamp status */
 138:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IHE  (0x00010000U) /**< IP header error */
 139:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_ES   (0x00008000U) /**< Error summary */
 140:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_JT   (0x00004000U) /**< Jabber timeout */
 141:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_FF   (0x00002000U) /**< Frame flushed */
 142:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IPE  (0x00001000U) /**< IP payload error */
 143:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LOC  (0x00000800U) /**< Loss of carrier */
 144:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_NC   (0x00000400U) /**< No carrier */
 145:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LC   (0x00000200U) /**< Late collision */
 146:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_EC   (0x00000100U) /**< Excessive collision */
 147:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_VF   (0x00000080U) /**< VLAN frame */
 148:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_CC   (0x00000078U) /**< Collision count */
 149:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_ED   (0x00000004U) /**< Excessive deferral */
 150:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_UF   (0x00000002U) /**< Underflow error */
 151:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DB   (0x00000001U) /**< Deferred bit */
 152:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 153:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 154:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * RDES0 Descriptor RX Packet Status
 155:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 156:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_OWN  (0x80000000U) /**< Own bit 1=DMA, 0=CPU */
 157:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_AFM  (0x40000000U) /**< Destination address filter fail */
 158:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FL   (0x3FFF0000U) /**< Frame length mask */
 159:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_ES   (0x00008000U) /**< Error summary */
 160:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_DE   (0x00004000U) /**< Descriptor error */
 161:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_SAF  (0x00002000U) /**< Source address filter fail */
 162:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LE   (0x00001000U) /**< Length error */
 163:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_OE   (0x00000800U) /**< Overflow error */
 164:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_VLAN (0x00000400U) /**< VLAN tag */
 165:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FS   (0x00000200U) /**< First descriptor */
 166:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LS   (0x00000100U) /**< Last descriptor */
 167:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_TSA  (0x00000080U) /**< Timestamp available */
 168:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LC   (0x00000040U) /**< Late collision */
 169:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FT   (0x00000020U) /**< Frame type */
 170:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_RWT  (0x00000010U) /**< Receive watchdog timeout */
 171:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_RE   (0x00000008U) /**< Receive error */
 172:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_DBE  (0x00000004U) /**< Dribble bit error */
 173:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_CE   (0x00000002U) /**< CRC error */
 174:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_ESA  (0x00000001U) /**< Extended Status/Rx MAC address */
 175:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 176:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 177:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * ENUMS
 178:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 179:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 180:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 181:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Ethernet MAC status return values
 182:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 183:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_STATUS
 184:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 185:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_OK    = 0U, /**< Driver accepted application request */
 186:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_BUSY  = 1U, /**< Driver is busy and cannot handle request */
 187:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_ERROR = 2U  /**< Driver could not fulfil application request */
 188:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_STATUS_t;
 189:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 190:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 191:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Transmission frame
 192:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 193:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TX_FRAME
 194:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 195:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_FRAGMENT  = 0x1U, /**< Indicate frame fragment */
 196:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_EVENT     = 0x2U, /**< Generate event when frame is transmitted */
 197:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_TIMESTAMP = 0x4U  /**< Capture frame time stamp */
 198:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TX_FRAME_t;
 199:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 200:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 201:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC event
 202:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 203:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_EVENT
 204:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 205:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_PMT = ETH_INTERRUPT_MASK_PMTIM_Msk << 16,        /**< Power management event */
 206:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TIMESTAMP = ETH_INTERRUPT_MASK_TSIM_Msk << 16,   /**< Time stamp event */
 207:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_EARLY_RECEIVE = ETH_STATUS_ERI_Msk,              /**< Early receive */
 208:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_BUS_ERROR = ETH_STATUS_FBI_Msk,                  /**< Bus error */
 209:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_EARLY_TRANSMIT = ETH_STATUS_ETI_Msk,             /**< Early transmit */
 210:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT = ETH_STATUS_RWT_Msk,   /**< Receive watchdog time-out
 211:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED = ETH_STATUS_RPS_Msk,    /**< Receive process stopped *
 212:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE = ETH_STATUS_RU_Msk,  /**< Receive buffer unavailabl
 213:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE = ETH_STATUS_RI_Msk,                     /**< Receive event */
 214:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW = ETH_STATUS_UNF_Msk,         /**< Transmit underflow */
 215:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW = ETH_STATUS_OVF_Msk,           /**< Receive overflow */
 216:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT = ETH_STATUS_TJT_Msk,    /**< Transmit jabber time-out 
 217:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE = ETH_STATUS_TU_Msk, /**< Transmit buffer unavailab
 218:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED = ETH_STATUS_TPS_Msk,   /**< Transmit process stopped 
 219:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT = ETH_STATUS_TI_Msk                     /**< Transmit event */
 220:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_EVENT_t;
 221:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 222:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 223:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Link interface
 224:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 225:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_INTERFACE
 226:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 227:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_INTERFACE_MII, /**< Link interface: Media independent interface */
 228:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_INTERFACE_RMII /**< Link interface: Reduced media independent interface */
 229:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_INTERFACE_t;
 230:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 231:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 232:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * ETH link status
 233:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 234:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_STATUS
 235:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 236:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_STATUS_DOWN, /**< Link status down */
 237:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_STATUS_UP    /**< Link status up */
 238:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_STATUS_t;
 239:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 240:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 241:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * ETH link speed
 242:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 243:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_SPEED
 244:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 245:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_SPEED_10M  = 0UL << ETH_MAC_CONFIGURATION_FES_Pos, /**< Link speed: 10M */
 246:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_SPEED_100M = 1UL << ETH_MAC_CONFIGURATION_FES_Pos  /**< Link speed: 100M */
 247:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_SPEED_t;
 248:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 249:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 250:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * ETH duplex settings (full/half?)
 251:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 252:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_DUPLEX
 253:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 254:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_DUPLEX_HALF = 0UL << ETH_MAC_CONFIGURATION_DM_Pos, /**< Half duplex */
 255:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_DUPLEX_FULL = 1UL << ETH_MAC_CONFIGURATION_DM_Pos  /**< Full duplex */
 256:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_DUPLEX_t;
 257:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 258:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 259:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * MAC address filter
 260:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 261:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_ADDR_FILTER
 262:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 263:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE0 = 0x01000000UL, /**< Address filter mask: byte 0 */
 264:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE1 = 0x02000000UL, /**< Address filter mask: byte 1 */
 265:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE2 = 0x04000000UL, /**< Address filter mask: byte 2 */
 266:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE3 = 0x08000000UL, /**< Address filter mask: byte 3 */
 267:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE4 = 0x10000000UL, /**< Address filter mask: byte 4 */
 268:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE5 = 0x20000000UL, /**< Address filter mask: byte 5 */
 269:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_SA         = 0x40000000UL  /**< Address filter SA */
 270:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_ADDR_FILTER_t;
 271:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 272:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 273:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Power management events that triggers a PMT interrupt
 274:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 275:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_PMT_EVENT
 276:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 277:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_WAKEUP_FRAME         = ETH_PMT_CONTROL_STATUS_RWKPKTEN_Msk,  /**< Wakeup
 278:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_MAGIC_PACKET         = ETH_PMT_CONTROL_STATUS_MGKPKTEN_Msk,  /**< Magic 
 279:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_UNICAST_FRAME_FILTER = ETH_PMT_CONTROL_STATUS_GLBLUCAST_Msk  /**< Unicas
 280:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_PMT_EVENT_t;
 281:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 282:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 283:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 284:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time-stamp configuration enable
 285:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 286:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TIMESTAMP_CONFIG
 287:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 288:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_FINE_UPDATE = ETH_TIMESTAMP_CONTROL_TSCFUPDT_Msk,             /**< F
 289:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_TS_INTERRUPT = ETH_TIMESTAMP_CONTROL_TSTRIG_Msk,       /**< T
 290:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_ALL_FRAMES = ETH_TIMESTAMP_CONTROL_TSENALL_Msk,        /**< E
 291:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTPV2 = ETH_TIMESTAMP_CONTROL_TSVER2ENA_Msk,           /**< P
 292:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_ETHERNET = ETH_TIMESTAMP_CONTROL_TSIPENA_Msk, /**< P
 293:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV6 = ETH_TIMESTAMP_CONTROL_TSIPV6ENA_Msk,   /**< P
 294:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV4 = ETH_TIMESTAMP_CONTROL_TSIPV4ENA_Msk,   /**< P
 295:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_MAC_ADDRESS_FILTER = ETH_TIMESTAMP_CONTROL_TSENMACADDR_Msk /*
 296:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIMESTAMP_CONFIG_t;
 297:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 298:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 299:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time-stamp status
 300:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 301:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TIMESTAMP_STATUS
 302:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 303:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_STATUS_SECONDS_OVERFLOW = ETH_TIMESTAMP_STATUS_TSSOVF_Msk,           /**< I
 304:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_STATUS_TARGET_TIME_REACHED = ETH_TIMESTAMP_STATUS_TSTARGT_Msk,       /**< I
 305:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_STATUS_TARGET_TIMER_ERROR = ETH_TIMESTAMP_STATUS_TSTRGTERR_Msk,      /**< S
 306:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIMESTAMP_STATUS_t;
 307:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 308:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 309:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 310:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * DATA STRUCTURES
 311:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 312:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 313:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /* Anonymous structure/union guard start */
 314:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #if defined (__CC_ARM)
 315:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #pragma push
 316:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #pragma anon_unions
 317:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #elif defined (__TASKING__)
 318:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #pragma warning 586
 319:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #endif
 320:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 321:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 322:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC port control
 323:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 324:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef union XMC_ETH_MAC_PORT_CTRL
 325:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 326:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   struct
 327:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   {
 328:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ETH_MAC_PORT_CTRL_RXD0_t) */
 329:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ETH_MAC_PORT_CTRL_RXD1_t) */
 330:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd2: 2;     /**< Receive data bit 2 (only MII) (::XMC_ETH_MAC_PORT_CTRL_RXD2_t) */
 331:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd3: 2;     /**< Receive data bit 3 (only MII) (::XMC_ETH_MAC_PORT_CTRL_RXD3_t) */
 332:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t clk_rmii: 2; /**< RMII: Continuous 50 MHz reference clock.
 333:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****                                MII: Receive clock, 25 MHz for 100Mbit/s, 2.5 MHz for 10Mbit/s
 334:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****                                (::XMC_ETH_MAC_PORT_CTRL_CLK_RMII_t) */
 335:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t crs_dv: 2;   /**< RMII: carrier sense/RX_Data valid. MII: RX_Data valid (::XMC_ETH_MAC
 336:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t crs: 2;      /**< Carrier sense for only MII (::XMC_ETH_MAC_PORT_CTRL_CRS_t) */
 337:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxer: 2;     /**< Receive error (::XMC_ETH_MAC_PORT_CTRL_RXER_t) */
 338:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t col: 2;      /**< Collision Detect for only MII (::XMC_ETH_MAC_PORT_CTRL_COL_t) */
 339:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t clk_tx: 2;   /**< Transmit clock (only MII), 25 MHz for 100Mbit/s, 2.5 MHz for 10Mbit/
 340:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t: 2;          /**< Reserved bits */
 341:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t mdio: 2;     /**< Bidirectional, push-pull management data I/O line (::XMC_ETH_MAC_POR
 342:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t: 2;          /**< Reserved bits */
 343:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****     uint32_t mode: 1;     /**< RMII or MII (::XMC_ETH_MAC_PORT_CTRL_MODE_t) */
 344:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   };
 345:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 346:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   uint32_t raw;
 347:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_PORT_CTRL_t;
 348:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 349:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 350:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC DMA descriptor
 351:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 352:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC_DMA_DESC
 353:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 354:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t status;                 /**< DMA descriptor status */
 355:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t length;                 /**< Descriptor length */
 356:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t buffer1;                /**< Buffer 1 */
 357:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t buffer2;                /**< Buffer 2 */
 358:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t extended_status;        /**< Extended status */
 359:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t reserved;               /**< Reserved */
 360:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t time_stamp_nanoseconds; /**< Time stamp low */
 361:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t time_stamp_seconds;     /**< Time stamp high */
 362:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_DMA_DESC_t;
 363:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 364:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 365:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time
 366:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 367:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC_TIME
 368:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 369:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   uint32_t seconds;                 /**< Seconds */
 370:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   int32_t nanoseconds;              /**< Nanoseconds */
 371:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIME_t;
 372:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 373:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 374:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * ETH driver structure
 375:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 376:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC
 377:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 378:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   ETH_GLOBAL_TypeDef *regs;        /**< ETH module 0 (now, we have a single ETH module) */
 379:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   uint64_t address;              /**< MAC address */
 380:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_DMA_DESC_t *rx_desc; /**< DMA descriptor: RX */
 381:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_DMA_DESC_t *tx_desc; /**< DMA descriptor: TX */
 382:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *rx_buf;                /**< RX buffer */
 383:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *tx_buf;                /**< TX buffer */
 384:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *frame_end;              /**< End of assembled frame fragments */
 385:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   uint8_t num_rx_buf;              /**< How many RX descriptors? */
 386:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   uint8_t num_tx_buf;              /**< How many TX descriptors? */
 387:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   uint8_t tx_index;                /**< Transmit descriptor index */
 388:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   uint8_t rx_index;                /**< Receive descriptor index */
 389:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   uint8_t tx_ts_index;             /**< Transmit time-stamp descriptor index */
 390:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_t;
 391:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 392:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /* Anonymous structure/union guard end */
 393:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #if defined (__CC_ARM)
 394:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #pragma pop
 395:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #elif defined (__TASKING__)
 396:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #pragma warning restore
 397:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #endif
 398:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 399:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 400:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * API PROTOTYPES
 401:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 402:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 403:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #ifdef __cplusplus
 404:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** extern "C" {
 405:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** #endif
 406:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 407:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 408:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 409:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t Initialization status
 410:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 411:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 412:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the Ethernet MAC peripheral <br>
 413:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 414:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 415:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 416:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * and loop-back settings.
 417:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 418:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_Init(XMC_ETH_MAC_t *const eth_mac);
 419:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 420:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 421:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 422:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 423:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 424:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 425:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the Ethernet MAC peripheral. <br>
 426:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Required when initializing the PHY, to deliver the clocks to the MAC, before MAC is reseted.
 427:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \note The module needs to be enabled before using XMC_ETH_MAC_Enable() <br>
 428:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 429:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 430:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 431:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * and loop-back settings.
 432:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 433:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitEx(XMC_ETH_MAC_t *const eth_mac);
 434:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 435:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 436:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 437:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 438:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 439:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 440:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the RX DMA descriptors <br>
 441:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 442:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 443:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function initializes the RX descriptors in a chained configuration. It sets
 444:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * up the status bit, control bit, buffer length and the buffer pointer.
 445:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 446:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitRxDescriptors(XMC_ETH_MAC_t *const eth_mac);
 447:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 448:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 449:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 450:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 451:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 452:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 453:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the TX DMA descriptors <br>
 454:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 455:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 456:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function initializes the TX descriptors in a chained configuration. It sets
 457:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * up the status bit, control bit, buffer length and the buffer pointer.
 458:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 459:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitTxDescriptors(XMC_ETH_MAC_t *const eth_mac);
 460:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  
 461:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 462:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 463:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 464:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 465:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 466:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Enable the Ethernet MAC peripheral <br>
 467:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 468:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 469:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function de-asserts the peripheral reset.
 470:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 471:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_Enable(XMC_ETH_MAC_t *const eth_mac);
 472:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 473:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 474:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 475:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 476:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 477:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 478:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Disable the Ethernet MAC peripheral <br>
 479:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 480:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 481:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function asserts the peripheral reset.
 482:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 483:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_Disable(XMC_ETH_MAC_t *const eth_mac);
 484:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 485:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 486:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 487:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return bool
 488:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 489:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 490:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Check if the ETH MAC is enabled <br>
 491:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 492:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 493:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function checks if the ETH MAC is enabled or not. It returns "true" if the
 494:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * peripheral is enabled, "false" otherwise.
 495:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 496:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** bool XMC_ETH_MAC_IsEnabled(const XMC_ETH_MAC_t *const eth_mac);
 497:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 498:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 499:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 500:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 501:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 502:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 503:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Reset the ETH MAC peripheral <br>
 504:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 505:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 506:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function resets the ETH MAC peripheral. It blocks until reset.
 507:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 508:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_Reset(XMC_ETH_MAC_t *const eth_mac)
 509:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 510:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->BUS_MODE |= (uint32_t)ETH_BUS_MODE_SWR_Msk;
 220              	 .loc 2 510 0
 221 0004 0368     	 ldr r3,[r0]
 222 0006 03F58053 	 add r3,r3,#4096
 223 000a 1A68     	 ldr r2,[r3]
 224 000c 42F00102 	 orr r2,r2,#1
 225 0010 1A60     	 str r2,[r3]
 511:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   while ((eth_mac->regs->BUS_MODE & (uint32_t)ETH_BUS_MODE_SWR_Msk) != 0U)
 226              	 .loc 2 511 0
 227 0012 0168     	 ldr r1,[r0]
 228 0014 01F58052 	 add r2,r1,#4096
 229              	.L18:
 230 0018 1368     	 ldr r3,[r2]
 231 001a 13F0010F 	 tst r3,#1
 232 001e FBD1     	 bne .L18
 233              	.LBE22:
 234              	.LBE21:
 227:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 235              	 .loc 1 227 0
 236 0020 4FF48063 	 mov r3,#1024
 237 0024 0B60     	 str r3,[r1]
 230:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 238              	 .loc 1 230 0
 239 0026 2368     	 ldr r3,[r4]
 240 0028 8022     	 movs r2,#128
 241 002a 9A61     	 str r2,[r3,#24]
 232:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 	                              (uint32_t)ETH_OPERATION_MODE_TSF_Msk |
 242              	 .loc 1 232 0
 243 002c 2268     	 ldr r2,[r4]
 244 002e 1449     	 ldr r1,.L21
 245 0030 41F21803 	 movw r3,#4120
 246 0034 D150     	 str r1,[r2,r3]
 237:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 	                        (uint32_t)ETH_BUS_MODE_AAL_Msk | /* the AHB interface generates all bursts
 247              	 .loc 1 237 0
 248 0036 2368     	 ldr r3,[r4]
 249 0038 03F58053 	 add r3,r3,#4096
 250 003c 114A     	 ldr r2,.L21+4
 251 003e 1A60     	 str r2,[r3]
 243:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_InitTxDescriptors(eth_mac);
 252              	 .loc 1 243 0
 253 0040 2046     	 mov r0,r4
 254              	.LVL16:
 255 0042 FFF7FEFF 	 bl XMC_ETH_MAC_InitRxDescriptors
 256              	.LVL17:
 244:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 257              	 .loc 1 244 0
 258 0046 2046     	 mov r0,r4
 259 0048 FFF7FEFF 	 bl XMC_ETH_MAC_InitTxDescriptors
 260              	.LVL18:
 247:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 261              	 .loc 1 247 0
 262 004c 2268     	 ldr r2,[r4]
 263 004e 4FF0FF31 	 mov r1,#-1
 264 0052 41F21403 	 movw r3,#4116
 265 0056 D150     	 str r1,[r2,r3]
 250:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->MMC_RECEIVE_INTERRUPT_MASK = ETH_MAC_DISABLE_MMC_INTERRUPT_MSK;
 266              	 .loc 1 250 0
 267 0058 2268     	 ldr r2,[r4]
 268 005a 6FF07C43 	 mvn r3,#-67108864
 269 005e C2F81031 	 str r3,[r2,#272]
 251:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->MMC_IPC_RECEIVE_INTERRUPT_MASK = ETH_MAC_DISABLE_MMC_IPC_RECEIVE_INTERRUPT_MSK;
 270              	 .loc 1 251 0
 271 0062 2268     	 ldr r2,[r4]
 272 0064 C2F80C31 	 str r3,[r2,#268]
 252:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 273              	 .loc 1 252 0
 274 0068 2368     	 ldr r3,[r4]
 275 006a 6FF0C022 	 mvn r2,#-1073692672
 276 006e C3F80022 	 str r2,[r3,#512]
 255:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 277              	 .loc 1 255 0
 278 0072 2368     	 ldr r3,[r4]
 279 0074 4FF40272 	 mov r2,#520
 280 0078 DA63     	 str r2,[r3,#60]
 257:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 281              	 .loc 1 257 0
 282 007a 0023     	 movs r3,#0
 283 007c 2362     	 str r3,[r4,#32]
 284 007e 10BD     	 pop {r4,pc}
 285              	.LVL19:
 286              	.L22:
 287              	 .align 2
 288              	.L21:
 289 0080 04002002 	 .word 35651588
 290 0084 80200102 	 .word 33628288
 291              	 .cfi_endproc
 292              	.LFE233:
 294              	 .section .text.XMC_ETH_MAC_SetAddressEx,"ax",%progbits
 295              	 .align 2
 296              	 .global XMC_ETH_MAC_SetAddressEx
 297              	 .thumb
 298              	 .thumb_func
 300              	XMC_ETH_MAC_SetAddressEx:
 301              	.LFB237:
 328:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 329:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressEx(XMC_ETH_MAC_t *const eth_mac, uint8_t *const addr)
 330:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 302              	 .loc 1 330 0
 303              	 .cfi_startproc
 304              	 
 305              	 
 306              	 
 307              	.LVL20:
 308 0000 10B4     	 push {r4}
 309              	.LCFI5:
 310              	 .cfi_def_cfa_offset 4
 311              	 .cfi_offset 4,-4
 331:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->MAC_ADDRESS0_HIGH = addr[4] | (addr[5] << 8); 
 312              	 .loc 1 331 0
 313 0002 0268     	 ldr r2,[r0]
 314 0004 4C79     	 ldrb r4,[r1,#5]
 315 0006 0B79     	 ldrb r3,[r1,#4]
 316 0008 43EA0423 	 orr r3,r3,r4,lsl#8
 317 000c 1364     	 str r3,[r2,#64]
 332:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->MAC_ADDRESS0_LOW = addr[0] | (addr[1] << 8) | (addr[2] << 16) | (addr[3] << 24); 
 318              	 .loc 1 332 0
 319 000e 0068     	 ldr r0,[r0]
 320              	.LVL21:
 321 0010 4A78     	 ldrb r2,[r1,#1]
 322 0012 8B78     	 ldrb r3,[r1,#2]
 323 0014 1B04     	 lsls r3,r3,#16
 324 0016 43EA0223 	 orr r3,r3,r2,lsl#8
 325 001a 0A78     	 ldrb r2,[r1]
 326 001c 1343     	 orrs r3,r3,r2
 327 001e CA78     	 ldrb r2,[r1,#3]
 328 0020 43EA0263 	 orr r3,r3,r2,lsl#24
 329 0024 4364     	 str r3,[r0,#68]
 333:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 330              	 .loc 1 333 0
 331 0026 5DF8044B 	 ldr r4,[sp],#4
 332              	.LCFI6:
 333              	 .cfi_restore 4
 334              	 .cfi_def_cfa_offset 0
 335 002a 7047     	 bx lr
 336              	 .cfi_endproc
 337              	.LFE237:
 339              	 .section .text.XMC_ETH_MAC_GetAddressEx,"ax",%progbits
 340              	 .align 2
 341              	 .global XMC_ETH_MAC_GetAddressEx
 342              	 .thumb
 343              	 .thumb_func
 345              	XMC_ETH_MAC_GetAddressEx:
 346              	.LFB238:
 334:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 335:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_GetAddressEx(XMC_ETH_MAC_t *const eth_mac, uint8_t *const addr)
 336:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 347              	 .loc 1 336 0
 348              	 .cfi_startproc
 349              	 
 350              	 
 351              	 
 352              	.LVL22:
 337:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t low_addr = eth_mac->regs->MAC_ADDRESS0_LOW;
 353              	 .loc 1 337 0
 354 0000 0268     	 ldr r2,[r0]
 355 0002 536C     	 ldr r3,[r2,#68]
 356              	.LVL23:
 338:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t high_addr = eth_mac->regs->MAC_ADDRESS0_HIGH;
 357              	 .loc 1 338 0
 358 0004 126C     	 ldr r2,[r2,#64]
 359              	.LVL24:
 339:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 340:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   addr[0] = low_addr & 0xff;
 360              	 .loc 1 340 0
 361 0006 0B70     	 strb r3,[r1]
 341:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   addr[1] = (low_addr >> 8) & 0xff;
 362              	 .loc 1 341 0
 363 0008 180A     	 lsrs r0,r3,#8
 364              	.LVL25:
 365 000a 4870     	 strb r0,[r1,#1]
 342:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   addr[2] = (low_addr >> 16) & 0xff;
 366              	 .loc 1 342 0
 367 000c 180C     	 lsrs r0,r3,#16
 368 000e 8870     	 strb r0,[r1,#2]
 343:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   addr[3] = (low_addr >> 24) & 0xff;
 369              	 .loc 1 343 0
 370 0010 1B0E     	 lsrs r3,r3,#24
 371              	.LVL26:
 372 0012 CB70     	 strb r3,[r1,#3]
 344:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   addr[4] = high_addr & 0xff;
 373              	 .loc 1 344 0
 374 0014 0A71     	 strb r2,[r1,#4]
 345:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   addr[5] = (high_addr >> 8) & 0xff;
 375              	 .loc 1 345 0
 376 0016 120A     	 lsrs r2,r2,#8
 377              	.LVL27:
 378 0018 4A71     	 strb r2,[r1,#5]
 379 001a 7047     	 bx lr
 380              	 .cfi_endproc
 381              	.LFE238:
 383              	 .section .text.XMC_ETH_MAC_SetAddressPerfectFilter,"ax",%progbits
 384              	 .align 2
 385              	 .global XMC_ETH_MAC_SetAddressPerfectFilter
 386              	 .thumb
 387              	 .thumb_func
 389              	XMC_ETH_MAC_SetAddressPerfectFilter:
 390              	.LFB239:
 346:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 347:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 348:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Set address perfect filter */
 349:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressPerfectFilter(XMC_ETH_MAC_t *const eth_mac,
 350:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                          uint8_t index,
 351:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                          const uint64_t addr,
 352:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                          uint32_t flags)
 353:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 391              	 .loc 1 353 0
 392              	 .cfi_startproc
 393              	 
 394              	 
 395              	 
 396              	.LVL28:
 397 0000 30B4     	 push {r4,r5}
 398              	.LCFI7:
 399              	 .cfi_def_cfa_offset 8
 400              	 .cfi_offset 4,-8
 401              	 .cfi_offset 5,-4
 354:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   __IO uint32_t *reg;
 355:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 356:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressPerfectFilter: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(e
 357:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressFilter: index is out of range", ((index > 0) && (index < 4)));
 358:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 359:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   reg = &(eth_mac->regs->MAC_ADDRESS0_HIGH);
 402              	 .loc 1 359 0
 403 0002 0068     	 ldr r0,[r0]
 404              	.LVL29:
 405 0004 4030     	 adds r0,r0,#64
 406              	.LVL30:
 360:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   reg[index] = (uint32_t)(addr >> 32U) | flags;
 407              	 .loc 1 360 0
 408 0006 8C00     	 lsls r4,r1,#2
 409 0008 029D     	 ldr r5,[sp,#8]
 410 000a 2B43     	 orrs r3,r3,r5
 411 000c 40F82130 	 str r3,[r0,r1,lsl#2]
 361:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   reg[index + 1U] = (uint32_t)addr;
 412              	 .loc 1 361 0
 413 0010 0434     	 adds r4,r4,#4
 414 0012 0251     	 str r2,[r0,r4]
 362:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 415              	 .loc 1 362 0
 416 0014 30BC     	 pop {r4,r5}
 417              	.LCFI8:
 418              	 .cfi_restore 5
 419              	 .cfi_restore 4
 420              	 .cfi_def_cfa_offset 0
 421              	.LVL31:
 422 0016 7047     	 bx lr
 423              	 .cfi_endproc
 424              	.LFE239:
 426              	 .section .text.XMC_ETH_MAC_SetAddressPerfectFilterEx,"ax",%progbits
 427              	 .align 2
 428              	 .global XMC_ETH_MAC_SetAddressPerfectFilterEx
 429              	 .thumb
 430              	 .thumb_func
 432              	XMC_ETH_MAC_SetAddressPerfectFilterEx:
 433              	.LFB240:
 363:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 364:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressPerfectFilterEx(XMC_ETH_MAC_t *const eth_mac,
 365:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                            uint8_t index,
 366:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                            uint8_t *const addr,
 367:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                            uint32_t flags)
 368:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 434              	 .loc 1 368 0
 435              	 .cfi_startproc
 436              	 
 437              	 
 438              	 
 439              	.LVL32:
 440 0000 70B4     	 push {r4,r5,r6}
 441              	.LCFI9:
 442              	 .cfi_def_cfa_offset 12
 443              	 .cfi_offset 4,-12
 444              	 .cfi_offset 5,-8
 445              	 .cfi_offset 6,-4
 369:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   __IO uint32_t *reg;
 370:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 371:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressPerfectFilter: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(e
 372:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressFilter: index is out of range", ((index > 0) && (index < 4)));
 373:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 374:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   reg = &(eth_mac->regs->MAC_ADDRESS0_HIGH);
 446              	 .loc 1 374 0
 447 0002 0468     	 ldr r4,[r0]
 448 0004 4034     	 adds r4,r4,#64
 449              	.LVL33:
 375:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   reg[index] = addr[4] | (addr[5] << 8) | flags; 
 450              	 .loc 1 375 0
 451 0006 8D00     	 lsls r5,r1,#2
 452 0008 5679     	 ldrb r6,[r2,#5]
 453 000a 1079     	 ldrb r0,[r2,#4]
 454              	.LVL34:
 455 000c 40EA0620 	 orr r0,r0,r6,lsl#8
 456 0010 0343     	 orrs r3,r3,r0
 457              	.LVL35:
 458 0012 44F82130 	 str r3,[r4,r1,lsl#2]
 376:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   reg[index + 1U] = addr[0] | (addr[1] << 8) | (addr[2] << 16) | (addr[3] << 24); 
 459              	 .loc 1 376 0
 460 0016 0435     	 adds r5,r5,#4
 461 0018 5178     	 ldrb r1,[r2,#1]
 462              	.LVL36:
 463 001a 9378     	 ldrb r3,[r2,#2]
 464 001c 1B04     	 lsls r3,r3,#16
 465 001e 43EA0123 	 orr r3,r3,r1,lsl#8
 466 0022 1178     	 ldrb r1,[r2]
 467 0024 0B43     	 orrs r3,r3,r1
 468 0026 D278     	 ldrb r2,[r2,#3]
 469              	.LVL37:
 470 0028 43EA0263 	 orr r3,r3,r2,lsl#24
 471 002c 6351     	 str r3,[r4,r5]
 377:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 472              	 .loc 1 377 0
 473 002e 70BC     	 pop {r4,r5,r6}
 474              	.LCFI10:
 475              	 .cfi_restore 6
 476              	 .cfi_restore 5
 477              	 .cfi_restore 4
 478              	 .cfi_def_cfa_offset 0
 479              	.LVL38:
 480 0030 7047     	 bx lr
 481              	 .cfi_endproc
 482              	.LFE240:
 484 0032 00BF     	 .section .text.XMC_ETH_MAC_SetAddressHashFilter,"ax",%progbits
 485              	 .align 2
 486              	 .global XMC_ETH_MAC_SetAddressHashFilter
 487              	 .thumb
 488              	 .thumb_func
 490              	XMC_ETH_MAC_SetAddressHashFilter:
 491              	.LFB241:
 378:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 379:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Set address hash filter */
 380:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressHashFilter(XMC_ETH_MAC_t *const eth_mac, const uint64_t hash)
 381:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 492              	 .loc 1 381 0
 493              	 .cfi_startproc
 494              	 
 495              	 
 496              	 
 497              	.LVL39:
 382:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->HASH_TABLE_HIGH = (uint32_t)(hash >> 32);
 498              	 .loc 1 382 0
 499 0000 0168     	 ldr r1,[r0]
 500 0002 8B60     	 str r3,[r1,#8]
 383:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->HASH_TABLE_LOW = (uint32_t)hash;
 501              	 .loc 1 383 0
 502 0004 0368     	 ldr r3,[r0]
 503 0006 DA60     	 str r2,[r3,#12]
 504 0008 7047     	 bx lr
 505              	 .cfi_endproc
 506              	.LFE241:
 508 000a 00BF     	 .section .text.XMC_ETH_MAC_SendFrame,"ax",%progbits
 509              	 .align 2
 510              	 .global XMC_ETH_MAC_SendFrame
 511              	 .thumb
 512              	 .thumb_func
 514              	XMC_ETH_MAC_SendFrame:
 515              	.LFB242:
 384:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 385:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 386:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Send frame */
 387:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SendFrame(XMC_ETH_MAC_t *const eth_mac, const uint8_t *frame, uint
 388:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 516              	 .loc 1 388 0
 517              	 .cfi_startproc
 518              	 
 519              	 
 520              	.LVL40:
 521 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 522              	.LCFI11:
 523              	 .cfi_def_cfa_offset 24
 524              	 .cfi_offset 3,-24
 525              	 .cfi_offset 4,-20
 526              	 .cfi_offset 5,-16
 527              	 .cfi_offset 6,-12
 528              	 .cfi_offset 7,-8
 529              	 .cfi_offset 14,-4
 389:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 390:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint8_t *dst;
 391:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t ctrl;
 392:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 393:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SendFrame:", eth_mac != NULL);
 394:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SendFrame:", eth_mac->regs == ETH0);
 395:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SendFrame:", (frame != NULL) && (len > 0));
 396:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 397:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   dst = eth_mac->frame_end;
 530              	 .loc 1 397 0
 531 0002 066A     	 ldr r6,[r0,#32]
 532              	.LVL41:
 398:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 399:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if (eth_mac->tx_desc[eth_mac->tx_index].status & ETH_MAC_DMA_TDES0_OWN)
 533              	 .loc 1 399 0
 534 0004 90F82640 	 ldrb r4,[r0,#38]
 535 0008 6401     	 lsls r4,r4,#5
 536 000a 4769     	 ldr r7,[r0,#20]
 537 000c 07EB040E 	 add lr,r7,r4
 538 0010 3C59     	 ldr r4,[r7,r4]
 539 0012 002C     	 cmp r4,#0
 540 0014 11DA     	 bge .L32
 541              	.LVL42:
 400:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 401:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     /* Transmitter is busy, wait */
 402:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_BUSY;
 403:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     if (eth_mac->regs->STATUS & ETH_STATUS_TU_Msk)
 542              	 .loc 1 403 0
 543 0016 0368     	 ldr r3,[r0]
 544              	.LVL43:
 545 0018 41F21402 	 movw r2,#4116
 546              	.LVL44:
 547 001c 9A58     	 ldr r2,[r3,r2]
 548 001e 12F0040F 	 tst r2,#4
 549 0022 53D0     	 beq .L41
 404:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 405:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       /* Receive buffer unavailable, resume DMA */
 406:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_TU_Msk;
 550              	 .loc 1 406 0
 551 0024 0421     	 movs r1,#4
 552              	.LVL45:
 553 0026 41F21402 	 movw r2,#4116
 554 002a 9950     	 str r1,[r3,r2]
 407:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->regs->TRANSMIT_POLL_DEMAND = 0U;
 555              	 .loc 1 407 0
 556 002c 0268     	 ldr r2,[r0]
 557 002e 0021     	 movs r1,#0
 558 0030 41F20403 	 movw r3,#4100
 559 0034 D150     	 str r1,[r2,r3]
 402:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     if (eth_mac->regs->STATUS & ETH_STATUS_TU_Msk)
 560              	 .loc 1 402 0
 561 0036 0120     	 movs r0,#1
 562              	.LVL46:
 563 0038 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 564              	.LVL47:
 565              	.L32:
 408:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 409:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 410:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 411:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   else
 412:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 413:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     if (dst == NULL)
 566              	 .loc 1 413 0
 567 003a 26B9     	 cbnz r6,.L34
 414:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 415:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       /* Start of a new transmit frame */
 416:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       dst = (uint8_t *)eth_mac->tx_desc[eth_mac->tx_index].buffer1;
 568              	 .loc 1 416 0
 569 003c DEF80860 	 ldr r6,[lr,#8]
 570              	.LVL48:
 417:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->tx_desc[eth_mac->tx_index].length = len;
 571              	 .loc 1 417 0
 572 0040 CEF80420 	 str r2,[lr,#4]
 573 0044 04E0     	 b .L35
 574              	.L34:
 418:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 419:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     else
 420:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 421:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       /* Sending data fragments in progress */
 422:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->tx_desc[eth_mac->tx_index].length += len;
 575              	 .loc 1 422 0
 576 0046 DEF80440 	 ldr r4,[lr,#4]
 577 004a 1444     	 add r4,r4,r2
 578 004c CEF80440 	 str r4,[lr,#4]
 579              	.L35:
 580 0050 1D46     	 mov r5,r3
 581 0052 0446     	 mov r4,r0
 423:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 424:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 425:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     memcpy(dst, frame, len);
 582              	 .loc 1 425 0
 583 0054 3046     	 mov r0,r6
 584              	.LVL49:
 585 0056 FFF7FEFF 	 bl memcpy
 586              	.LVL50:
 426:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 427:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     if (flags & (uint32_t)XMC_ETH_MAC_TX_FRAME_FRAGMENT)
 587              	 .loc 1 427 0
 588 005a 15F0010F 	 tst r5,#1
 589 005e 02D0     	 beq .L36
 428:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 429:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       /* More data to come, remember current write position */
 430:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->frame_end = dst;
 590              	 .loc 1 430 0
 591 0060 2662     	 str r6,[r4,#32]
 431:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 432:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     else
 433:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 434:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       /* Frame is now ready, send it to DMA */
 435:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       ctrl = eth_mac->tx_desc[eth_mac->tx_index].status | ETH_MAC_DMA_TDES0_CIC;
 436:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       ctrl &= ~(ETH_MAC_DMA_TDES0_IC | ETH_MAC_DMA_TDES0_TTSE);
 437:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 438:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       if (flags & (uint32_t)XMC_ETH_MAC_TX_FRAME_EVENT)
 439:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       {
 440:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       ctrl |= ETH_MAC_DMA_TDES0_IC;
 441:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       }
 442:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 443:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       if (flags & (uint32_t)XMC_ETH_MAC_TX_FRAME_TIMESTAMP)
 444:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       {
 445:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       ctrl |= ETH_MAC_DMA_TDES0_TTSE;
 446:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       }
 447:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->tx_ts_index = eth_mac->tx_index;
 448:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 449:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->tx_desc[eth_mac->tx_index].status = ctrl | ETH_MAC_DMA_TDES0_OWN;
 450:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 451:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->tx_index++;
 452:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       if (eth_mac->tx_index == eth_mac->num_tx_buf)
 453:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       {
 454:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->tx_index = 0U;
 455:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       }
 456:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->frame_end = NULL;
 457:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 458:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       /* Start frame transmission */
 459:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_TPS_Msk;
 460:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->regs->TRANSMIT_POLL_DEMAND = 0U;
 461:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 462:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_OK;
 592              	 .loc 1 462 0
 593 0062 0020     	 movs r0,#0
 594 0064 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 595              	.LVL51:
 596              	.L36:
 435:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       ctrl &= ~(ETH_MAC_DMA_TDES0_IC | ETH_MAC_DMA_TDES0_TTSE);
 597              	 .loc 1 435 0
 598 0066 94F82600 	 ldrb r0,[r4,#38]
 599 006a 4301     	 lsls r3,r0,#5
 600 006c 6169     	 ldr r1,[r4,#20]
 601 006e CA58     	 ldr r2,[r1,r3]
 602              	.LVL52:
 436:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 603              	 .loc 1 436 0
 604 0070 22F08442 	 bic r2,r2,#1107296256
 605              	.LVL53:
 438:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       {
 606              	 .loc 1 438 0
 607 0074 15F0020F 	 tst r5,#2
 436:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 608              	 .loc 1 436 0
 609 0078 0EBF     	 itee eq
 610 007a 42F44002 	 orreq r2,r2,#12582912
 611              	.LVL54:
 440:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       }
 612              	 .loc 1 440 0
 613 007e 42F08142 	 orrne r2,r2,#1082130432
 614 0082 42F48002 	 orrne r2,r2,#4194304
 615              	.LVL55:
 443:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       {
 616              	 .loc 1 443 0
 617 0086 15F0040F 	 tst r5,#4
 445:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       }
 618              	 .loc 1 445 0
 619 008a 18BF     	 it ne
 620 008c 42F00072 	 orrne r2,r2,#33554432
 621              	.LVL56:
 447:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 622              	 .loc 1 447 0
 623 0090 84F82800 	 strb r0,[r4,#40]
 449:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 624              	 .loc 1 449 0
 625 0094 42F00042 	 orr r2,r2,#-2147483648
 626              	.LVL57:
 627 0098 CA50     	 str r2,[r1,r3]
 451:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       if (eth_mac->tx_index == eth_mac->num_tx_buf)
 628              	 .loc 1 451 0
 629 009a 94F82630 	 ldrb r3,[r4,#38]
 630 009e 0133     	 adds r3,r3,#1
 631 00a0 DBB2     	 uxtb r3,r3
 632 00a2 84F82630 	 strb r3,[r4,#38]
 452:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       {
 633              	 .loc 1 452 0
 634 00a6 94F82520 	 ldrb r2,[r4,#37]
 635 00aa 9A42     	 cmp r2,r3
 454:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       }
 636              	 .loc 1 454 0
 637 00ac 04BF     	 itt eq
 638 00ae 0023     	 moveq r3,#0
 639 00b0 84F82630 	 strbeq r3,[r4,#38]
 456:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 640              	 .loc 1 456 0
 641 00b4 0020     	 movs r0,#0
 642 00b6 2062     	 str r0,[r4,#32]
 459:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       eth_mac->regs->TRANSMIT_POLL_DEMAND = 0U;
 643              	 .loc 1 459 0
 644 00b8 2268     	 ldr r2,[r4]
 645 00ba 0221     	 movs r1,#2
 646 00bc 41F21403 	 movw r3,#4116
 647 00c0 D150     	 str r1,[r2,r3]
 460:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 648              	 .loc 1 460 0
 649 00c2 2268     	 ldr r2,[r4]
 650 00c4 41F20403 	 movw r3,#4100
 651 00c8 D050     	 str r0,[r2,r3]
 652 00ca F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 653              	.LVL58:
 654              	.L41:
 402:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     if (eth_mac->regs->STATUS & ETH_STATUS_TU_Msk)
 655              	 .loc 1 402 0
 656 00cc 0120     	 movs r0,#1
 657              	.LVL59:
 463:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 464:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 465:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return status;
 466:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 658              	 .loc 1 466 0
 659 00ce F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 660              	 .cfi_endproc
 661              	.LFE242:
 663              	 .section .text.XMC_ETH_MAC_ReadFrame,"ax",%progbits
 664              	 .align 2
 665              	 .global XMC_ETH_MAC_ReadFrame
 666              	 .thumb
 667              	 .thumb_func
 669              	XMC_ETH_MAC_ReadFrame:
 670              	.LFB243:
 467:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 468:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Read frame */
 469:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_ReadFrame(XMC_ETH_MAC_t *const eth_mac, uint8_t *frame, uint32_t len)
 470:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 671              	 .loc 1 470 0
 672              	 .cfi_startproc
 673              	 
 674              	 
 675              	.LVL60:
 676 0000 38B5     	 push {r3,r4,r5,lr}
 677              	.LCFI12:
 678              	 .cfi_def_cfa_offset 16
 679              	 .cfi_offset 3,-16
 680              	 .cfi_offset 4,-12
 681              	 .cfi_offset 5,-8
 682              	 .cfi_offset 14,-4
 683 0002 0446     	 mov r4,r0
 684 0004 1546     	 mov r5,r2
 471:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint8_t const *src;
 472:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 473:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ReadFrame:", eth_mac != NULL);
 474:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ReadFrame:", eth_mac->regs == ETH0);
 475:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ReadFrame:", (frame != NULL) && (len > 0));
 476:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 477:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Fast-copy data to packet buffer */
 478:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   src = (uint8_t const *)eth_mac->rx_desc[eth_mac->rx_index].buffer1;
 685              	 .loc 1 478 0
 686 0006 90F82700 	 ldrb r0,[r0,#39]
 687              	.LVL61:
 688 000a 2369     	 ldr r3,[r4,#16]
 689 000c 03EB4013 	 add r3,r3,r0,lsl#5
 690 0010 9B68     	 ldr r3,[r3,#8]
 691              	.LVL62:
 479:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 480:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   memcpy(frame, src, len);
 692              	 .loc 1 480 0
 693 0012 0846     	 mov r0,r1
 694 0014 1946     	 mov r1,r3
 695              	.LVL63:
 696 0016 FFF7FEFF 	 bl memcpy
 697              	.LVL64:
 481:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 482:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Return this block back to DMA */
 483:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->rx_desc[eth_mac->rx_index].status = ETH_MAC_DMA_RDES0_OWN;
 698              	 .loc 1 483 0
 699 001a 94F82730 	 ldrb r3,[r4,#39]
 700 001e 5B01     	 lsls r3,r3,#5
 701 0020 2269     	 ldr r2,[r4,#16]
 702 0022 4FF00041 	 mov r1,#-2147483648
 703 0026 D150     	 str r1,[r2,r3]
 484:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 485:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->rx_index++;
 704              	 .loc 1 485 0
 705 0028 94F82730 	 ldrb r3,[r4,#39]
 706 002c 0133     	 adds r3,r3,#1
 707 002e DBB2     	 uxtb r3,r3
 708 0030 84F82730 	 strb r3,[r4,#39]
 486:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if (eth_mac->rx_index == eth_mac->num_rx_buf)
 709              	 .loc 1 486 0
 710 0034 94F82420 	 ldrb r2,[r4,#36]
 711 0038 9A42     	 cmp r2,r3
 487:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 488:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     eth_mac->rx_index = 0U;
 712              	 .loc 1 488 0
 713 003a 04BF     	 itt eq
 714 003c 0023     	 moveq r3,#0
 715 003e 84F82730 	 strbeq r3,[r4,#39]
 489:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 490:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 491:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if (eth_mac->regs->STATUS & ETH_STATUS_RU_Msk)
 716              	 .loc 1 491 0
 717 0042 2368     	 ldr r3,[r4]
 718 0044 41F21402 	 movw r2,#4116
 719 0048 9A58     	 ldr r2,[r3,r2]
 720 004a 12F0800F 	 tst r2,#128
 721 004e 08D0     	 beq .L45
 492:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 493:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     /* Receive buffer unavailable, resume DMA */
 494:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_RU_Msk;
 722              	 .loc 1 494 0
 723 0050 8021     	 movs r1,#128
 724 0052 41F21402 	 movw r2,#4116
 725 0056 9950     	 str r1,[r3,r2]
 495:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->RECEIVE_POLL_DEMAND = 0U;
 726              	 .loc 1 495 0
 727 0058 2268     	 ldr r2,[r4]
 728 005a 0021     	 movs r1,#0
 729 005c 41F20803 	 movw r3,#4104
 730 0060 D150     	 str r1,[r2,r3]
 731              	.L45:
 496:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 497:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 498:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return (len);
 499:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 732              	 .loc 1 499 0
 733 0062 2846     	 mov r0,r5
 734 0064 38BD     	 pop {r3,r4,r5,pc}
 735              	 .cfi_endproc
 736              	.LFE243:
 738 0066 00BF     	 .section .text.XMC_ETH_MAC_GetRxFrameSize,"ax",%progbits
 739              	 .align 2
 740              	 .global XMC_ETH_MAC_GetRxFrameSize
 741              	 .thumb
 742              	 .thumb_func
 744              	XMC_ETH_MAC_GetRxFrameSize:
 745              	.LFB244:
 500:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 501:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Get RX frame size */
 502:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_GetRxFrameSize(XMC_ETH_MAC_t *const eth_mac)
 503:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 746              	 .loc 1 503 0
 747              	 .cfi_startproc
 748              	 
 749              	 
 750              	 
 751              	.LVL65:
 504:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t status;
 505:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t len = 0U;
 506:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 507:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   status = eth_mac->rx_desc[eth_mac->rx_index].status;
 752              	 .loc 1 507 0
 753 0000 90F82730 	 ldrb r3,[r0,#39]
 754 0004 5B01     	 lsls r3,r3,#5
 755 0006 0269     	 ldr r2,[r0,#16]
 756 0008 D058     	 ldr r0,[r2,r3]
 757              	.LVL66:
 508:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 509:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if (status & ETH_MAC_DMA_RDES0_OWN)
 758              	 .loc 1 509 0
 759 000a 0028     	 cmp r0,#0
 760 000c 08DB     	 blt .L49
 510:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 511:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     /* Owned by DMA */
 512:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     len = 0U;
 513:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 514:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   else if (((status & ETH_MAC_DMA_RDES0_ES) != 0U) ||
 515:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_FS) == 0U) ||
 761              	 .loc 1 515 0
 762 000e 00F40343 	 and r3,r0,#33536
 514:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_FS) == 0U) ||
 763              	 .loc 1 514 0
 764 0012 B3F5407F 	 cmp r3,#768
 765 0016 05D1     	 bne .L50
 516:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_LS) == 0U)) 
 517:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 518:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     /* Error, this block is invalid */
 519:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     len = 0xFFFFFFFFU;
 520:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 521:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   else 
 522:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 523:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     /* Subtract CRC */
 524:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     len = ((status & ETH_MAC_DMA_RDES0_FL) >> 16U) - 4U;
 766              	 .loc 1 524 0
 767 0018 C0F30D40 	 ubfx r0,r0,#16,#14
 768              	.LVL67:
 769 001c 0438     	 subs r0,r0,#4
 770              	.LVL68:
 771 001e 7047     	 bx lr
 772              	.LVL69:
 773              	.L49:
 512:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 774              	 .loc 1 512 0
 775 0020 0020     	 movs r0,#0
 776              	.LVL70:
 777 0022 7047     	 bx lr
 778              	.LVL71:
 779              	.L50:
 519:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 780              	 .loc 1 519 0
 781 0024 4FF0FF30 	 mov r0,#-1
 782              	.LVL72:
 525:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 526:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 527:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return len;
 528:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 783              	 .loc 1 528 0
 784 0028 7047     	 bx lr
 785              	 .cfi_endproc
 786              	.LFE244:
 788 002a 00BF     	 .section .text.XMC_ETH_MAC_SetManagmentClockDivider,"ax",%progbits
 789              	 .align 2
 790              	 .global XMC_ETH_MAC_SetManagmentClockDivider
 791              	 .thumb
 792              	 .thumb_func
 794              	XMC_ETH_MAC_SetManagmentClockDivider:
 795              	.LFB245:
 529:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 530:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Set management clock divider */
 531:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SetManagmentClockDivider(XMC_ETH_MAC_t *const eth_mac)
 532:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 796              	 .loc 1 532 0
 797              	 .cfi_startproc
 798              	 
 799              	 
 800              	 
 801              	.LVL73:
 802              	.LBB23:
 803              	.LBB24:
 804              	.LBB25:
 805              	.LBB26:
 806              	 .file 3 "C:/Files/Projects/Git/XMCLib/inc/xmc4_scu.h"
   1:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
   2:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @file xmc4_scu.h
   3:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @date 2019-02-18
   4:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
   5:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
   9:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
  18:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
  21:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  36:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  39:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2015-06-20:
  40:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Initial version
  41:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  42:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  43:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2015-11-30:
  44:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  45:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *      
  46:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2016-03-09:
  47:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_EnableMonitor/XMC_SCU_POWER_DisableMonitor
  48:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_POWER_GetEVRStatus, XMC_SCU_POWER_GetEVR13Voltage, XMC_SCU_POWER_GetEVR33Vol
  49:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  50:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  51:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  52:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  53:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  54:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  55:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2016-04-15:
  56:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Fixed naming of XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG peripheral clock.
  57:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *       Added enable and disable for peripheral clocks       
  58:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
  59:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2016-05-19:
  60:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  61:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_WaitForInterrupt() and XMC_SCU_POWER_WaitForEvent()
  62:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  63:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  64:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  65:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  66:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  67:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  68:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Removed XMC_SCU_INTERRUPT_EVENT_OSCULSTAT_UPDATED, XMC_SCU_INTERRUPT_EVENT_HDSTAT_UPDATED
  69:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  70:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2016-06-14:
  71:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_IsWakeupEventDetected() and XMC_SCU_HIB_ClearWakeupEventDetectionStatus(
  72:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  73:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2016-06-15:
  74:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  75:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  76:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  77:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  78:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 2019-02-18:
  79:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Fix conditional definition of XMC_SCU_PARITY_t elements
  80:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
  81:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
  82:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SetParityWriteValue(uint8_t val)
  83:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_GetParityReadValue(void)
  84:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  85:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @endcond 
  86:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
  87:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
  88:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
  89:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #ifndef XMC4_SCU_H
  90:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC4_SCU_H
  91:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
  92:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
  93:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * HEADER FILES
  94:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  95:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
  96:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #include "xmc_common.h"
  97:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
  98:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if UC_FAMILY == XMC4
  99:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 100:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 101:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
 102:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @{
 103:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 104:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  
 105:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 106:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @addtogroup SCU
 107:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @{
 108:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 109:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 110:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 111:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * MACROS
 112:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 113:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_8MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8MH
 114:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_8MHZ (89U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8M
 115:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_8MHZ (2U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 8
 116:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 117:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_12MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 12
 118:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_12MHZ (79U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 119:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_12MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 120:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 121:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_16MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 16
 122:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_16MHZ (59U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 123:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_16MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 124:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 125:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_WDT_WARN           SCU_INTERRUPT_SRSTAT_PRWARN_Msk /**< Watchdog pr
 126:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC       SCU_INTERRUPT_SRSTAT_PI_Msk     /**< RTC periodi
 127:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_ALARM          SCU_INTERRUPT_SRSTAT_AI_Msk     /**< RTC alarm e
 128:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_DLR_OVERRUN        SCU_INTERRUPT_SRSTAT_DLROVR_Msk /**< DLR overrun
 129:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCR_Msk)
 130:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCR_UPDATED     SCU_INTERRUPT_SRSTAT_LPACCR_Msk /**< LPAC Contro
 131:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 132:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH0_Msk)
 133:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH0_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH0_Msk /**< LPAC Thres
 134:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 135:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH1_Msk)
 136:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH1_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH1_Msk  /**< LPAC Thre
 137:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 138:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACST_Msk)
 139:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACST_UPDATED     SCU_INTERRUPT_SRSTAT_LPACST_Msk  /**< LPAC Statu
 140:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 141:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCLR_Msk)
 142:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCLR_UPDATED    SCU_INTERRUPT_SRSTAT_LPACCLR_Msk /**< LPAC event
 143:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 144:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACSET_Msk)
 145:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACSET_UPDATED    SCU_INTERRUPT_SRSTAT_LPACSET_Msk /**< LPAC event
 146:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 147:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTST_Msk)
 148:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTST_UPDATED     SCU_INTERRUPT_SRSTAT_HINTST_Msk /**< HIB HINTST 
 149:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 150:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTCLR_Msk)
 151:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTCLR_UPDATED    SCU_INTERRUPT_SRSTAT_HINTCLR_Msk /**< HIB HINTCL
 152:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 153:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTSET_Msk)
 154:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTSET_UPDATED    SCU_INTERRUPT_SRSTAT_HINTSET_Msk /**< HIB HINTSE
 155:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 156:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED      SCU_INTERRUPT_SRSTAT_HDCLR_Msk /**< HIB HDCLR re
 157:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDSET_UPDATED      SCU_INTERRUPT_SRSTAT_HDSET_Msk /**< HIB HDSET re
 158:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED       SCU_INTERRUPT_SRSTAT_HDCR_Msk /**< HIB HDCR regi
 159:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCSICTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCSICTRL_Msk /**< HIB OSCS
 160:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCULCTRL_Msk /**< HIB OSCU
 161:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED     SCU_INTERRUPT_SRSTAT_RTC_CTR_Msk /**< HIB RTCCTR
 162:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM0_Msk /**< HIB RTCA
 163:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM1_Msk /**< HIB RTCA
 164:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM0_Msk /**< HIB TIM0 
 165:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM1_Msk /**< HIB TIM1 
 166:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RMX_UPDATED        SCU_INTERRUPT_SRSTAT_RMX_Msk /**< HIB RMX regist
 167:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 168:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 169:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * ENUMS
 170:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 171:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 172:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines Capture/Compare unit timer slice trigger, that enables synchronous start function avail
 173:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  CCUCON register. Use type \a XMC_SCU_CCU_TRIGGER_t for accessing these enum parameters.
 174:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 175:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CCU_TRIGGER
 176:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 177:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU40)
 178:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU40 = SCU_GENERAL_CCUCON_GSC40_Msk, /**< Trigger mask used for Global Start
 179:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  CCU40 peripheral. */
 180:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 181:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 182:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU41 = SCU_GENERAL_CCUCON_GSC41_Msk, /**< Trigger mask used for Global Start
 183:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  CCU41 peripheral. */
 184:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 185:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 186:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU42 = SCU_GENERAL_CCUCON_GSC42_Msk, /**< Trigger mask used for Global Start
 187:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  CCU42 peripheral. */
 188:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 189:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 190:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU43 = SCU_GENERAL_CCUCON_GSC43_Msk, /**< Trigger mask used for Global Start
 191:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  CCU43 peripheral. */
 192:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 193:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 194:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU80 = SCU_GENERAL_CCUCON_GSC80_Msk, /**< Trigger mask used for Global Start
 195:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  CCU80 peripheral. */
 196:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 197:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 198:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU81 = SCU_GENERAL_CCUCON_GSC81_Msk /**< Trigger mask used for Global Start 
 199:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  CCU81 peripheral. */
 200:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 201:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CCU_TRIGGER_t;
 202:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 203:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 204:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations representing the status of trap cause. The cause of the trap gets automati
 205:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  the \a TRAPSTAT register and can be checked by user software to determine the state of the syst
 206:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  purpose. 
 207:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_TRAP_t for accessing these enum parameters.
 208:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 209:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_TRAP 
 210:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 211:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_OSC_WDG      = SCU_TRAP_TRAPSTAT_SOSCWDGT_Msk, /**< OSC_HP Oscillator Watchdog trap.
 212:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_VCO_LOCK     = SCU_TRAP_TRAPSTAT_SVCOLCKT_Msk, /**< PLL loss of lock trap. */
 213:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_USB_VCO_LOCK = SCU_TRAP_TRAPSTAT_UVCOLCKT_Msk, /**< USB PLL loss of lock trap. */ 
 214:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PARITY_ERROR = SCU_TRAP_TRAPSTAT_PET_Msk,      /**< Memory Parity error trap. */  
 215:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_BROWNOUT     = SCU_TRAP_TRAPSTAT_BRWNT_Msk,    /**< Brownout trap. */ 
 216:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ULP_WDG      = SCU_TRAP_TRAPSTAT_ULPWDGT_Msk,  /**< Unstable 32KHz clock trap. */ 
 217:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE0  = SCU_TRAP_TRAPSTAT_BWERR0T_Msk,  /**< Bad memory access of peripherals
 218:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE1  = SCU_TRAP_TRAPSTAT_BWERR1T_Msk,  /**< Bad memory access of peripherals
 219:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPHIT_Msk)
 220:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_HIGH = SCU_TRAP_TRAPSTAT_TEMPHIT_Msk,  /**< Die temperature higher than expe
 221:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 222:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPLOT_Msk)
 223:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_LOW  = SCU_TRAP_TRAPSTAT_TEMPLOT_Msk,  /**< Die temperature lower than expec
 224:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 225:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 226:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ECAT_RESET = SCU_TRAP_TRAPSTAT_ECAT0RST_Msk, /**< EtherCat Reset */ 
 227:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 228:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_TRAP_t;
 229:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 230:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 231:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for different parity event generating modules that in turn generate a trap
 232:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Parity can be enabled with \a PETE register in order to get the trap flag reflected in \a TRAPR
 233:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  configure parity error trap generation mechanism bits of \a PETE register.
 234:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PETE register.
 235:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PARITY_t for accessing these enum parameters.
 236:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 237:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PARITY
 238:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 239:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PSRAM_MEM  = SCU_PARITY_PEEN_PEENPS_Msk,   /**< Program SRAM parity error trap. */
 240:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM1_MEM = SCU_PARITY_PEEN_PEENDS1_Msk,  /**< Data SRAM-1 parity error trap. */ 
 241:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENDS2_Msk)
 242:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM2_MEM = SCU_PARITY_PEEN_PEENDS2_Msk,  /**< Data SRAM-2 parity error trap. */ 
 243:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 244:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC0_MEM  = SCU_PARITY_PEEN_PEENU0_Msk,   /**< USIC0 memory parity error trap. */
 245:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU1_Msk)
 246:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC1_MEM  = SCU_PARITY_PEEN_PEENU1_Msk,   /**< USIC1 memory parity error trap. */
 247:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 248:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU2_Msk)
 249:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC2_MEM  = SCU_PARITY_PEEN_PEENU2_Msk,   /**< USIC2 memory parity error trap. */
 250:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 251:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_MCAN_MEM   = SCU_PARITY_PEEN_PEENMC_Msk,   /**< CAN memory parity error trap. */
 252:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PMU_MEM    = SCU_PARITY_PEEN_PEENPPRF_Msk, /**< PMU Prefetch memory parity error t
 253:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USB_MEM    = SCU_PARITY_PEEN_PEENUSB_Msk,  /**< USB memory parity error trap. */ 
 254:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0TX_Msk)
 255:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_TXMEM  = SCU_PARITY_PEEN_PEENETH0TX_Msk, /**< Ethernet transmit memory parity 
 256:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 257:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0RX_Msk)
 258:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_RXMEM  = SCU_PARITY_PEEN_PEENETH0RX_Msk, /**< Ethernet receive memory parity e
 259:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 260:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD0_Msk)
 261:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM0 = SCU_PARITY_PEEN_PEENSD0_Msk, /**< SDMMC Memory-0 parity error trap. *
 262:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 263:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD1_Msk)
 264:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM1 = SCU_PARITY_PEEN_PEENSD1_Msk, /**< SDMMC Memory-1 parity error trap. *
 265:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 266:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENECAT0_Msk)
 267:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ECAT_MEM = SCU_PARITY_PEEN_PEENECAT0_Msk, /**< ECAT0 SRAM parity error trap. */ 
 268:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 269:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PARITY_t;
 270:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 271:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 272:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines the different causes for last reset. The cause of the last reset gets automatically sto
 273:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  the \a SCU_RSTSTAT register and can be checked by user software to determine the state of the s
 274:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  purpose. All the enum items are tabulated as per bits present in \a SCU_RSTSTAT register.
 275:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_RESET_REASON_t for accessing these enum parameters.
 276:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 277:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_RESET_REASON
 278:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 279:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PORST        = (1UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 280:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SWD          = (2UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sup
 281:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PV           = (4UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 282:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SW           = (8UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sof
 283:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_LOCKUP       = (16UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to re
 284:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_WATCHDOG     = (32UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Wa
 285:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PARITY_ERROR = (128UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to r
 286:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_RESET_REASON_t;
 287:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 288:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 289:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for events which can lead to interrupt. These enumeration values represent
 290:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * status of one of the bits in \a SRSTAT register. 
 291:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_INTERRUPT_EVENT_t for accessing these enum parameters.
 292:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 293:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t;
 294:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 295:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  
 296:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 297:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration for the events that can generate non maskable interrupt(NMI).
 298:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  The NMI generation can be enabled with \a NMIREQEN register. The event will be reflected in \a 
 299:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  mirrored in the TRAPSTAT register. These enums can be used to configure NMI request generation 
 300:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  NMIREQEN register.  Once configured, these events can generate non maskable interrupt.
 301:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a NMIREQEN register.
 302:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_NMIREQ_t for accessing these enum parameters.
 303:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 304:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_NMIREQ
 305:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 306:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_WDT_WARN = SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, /**< Watchdog timer Pre-Warning even
 307:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_PI   = SCU_INTERRUPT_NMIREQEN_PI_Msk,     /**< RTC Periodic event */ 
 308:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_AI   = SCU_INTERRUPT_NMIREQEN_AI_Msk,     /**< RTC Alarm event */ 
 309:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_0   = SCU_INTERRUPT_NMIREQEN_ERU00_Msk,  /**< Channel 0 event of ERU0 */  
 310:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_1   = SCU_INTERRUPT_NMIREQEN_ERU01_Msk,  /**< Channel 1 event of ERU0 */ 
 311:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_2   = SCU_INTERRUPT_NMIREQEN_ERU02_Msk,  /**< Channel 2 event of ERU0 */ 
 312:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_3   = SCU_INTERRUPT_NMIREQEN_ERU03_Msk   /**< Channel 3 event of ERU0 */ 
 313:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_NMIREQ_t;
 314:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   
 315:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 316:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 317:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration representing different peripheral reset bits in the \a PRSTAT registers.
 318:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PRSTAT0,  \a PRSTAT1,  \a PRSTAT2,
 319:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  \a PRSTAT3 registers. Use type \a XMC_SCU_PERIPHERAL_RESET_t for accessing these enum parameter
 320:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Note: Release of reset should be prevented when the peripheral clock is gated in cases where ke
 321:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  clock and bus interface clocks are shared, in order to avoid system hang-up.
 322:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 323:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_RESET
 324:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 325:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_VADC   = SCU_RESET_PRSTAT0_VADCRS_Msk,   /**< VADC reset. */ 
 326:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 327:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DSD    = SCU_RESET_PRSTAT0_DSDRS_Msk,    /**< DSD reset. */
 328:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 329:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU40  = SCU_RESET_PRSTAT0_CCU40RS_Msk,  /**< CCU40 reset. */
 330:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 331:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU41  = SCU_RESET_PRSTAT0_CCU41RS_Msk,  /**< CCU41 reset. */
 332:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 333:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 334:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU42  = SCU_RESET_PRSTAT0_CCU42RS_Msk,  /**< CCU42 reset. */
 335:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 336:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 337:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU80  = SCU_RESET_PRSTAT0_CCU80RS_Msk,  /**< CCU80 reset. */
 338:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 339:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 340:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU81  = SCU_RESET_PRSTAT0_CCU81RS_Msk,  /**< CCU81 reset. */
 341:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 342:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 343:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF0 = SCU_RESET_PRSTAT0_POSIF0RS_Msk, /**< POSIF0 reset. */
 344:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 345:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 346:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF1 = SCU_RESET_PRSTAT0_POSIF1RS_Msk, /**< POSIF1 reset.*/
 347:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 348:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC0  = SCU_RESET_PRSTAT0_USIC0RS_Msk,  /**< USIC0 reset. */
 349:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ERU1   = SCU_RESET_PRSTAT0_ERU1RS_Msk,   /**< ERU1 reset. */
 350:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 351:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_HRPWM0 = SCU_RESET_PRSTAT0_HRPWM0RS_Msk,  /**< HRPWM0 reset. */
 352:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 353:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 354:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU43  = (SCU_RESET_PRSTAT1_CCU43RS_Msk | 0x10000000UL),   /**< CCU43 re
 355:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 356:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 357:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_LEDTS0 = (SCU_RESET_PRSTAT1_LEDTSCU0RS_Msk | 0x10000000UL), /**< LEDTS0 
 358:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 359:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 360:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_MCAN   = (SCU_RESET_PRSTAT1_MCAN0RS_Msk | 0x10000000UL), /**< MCAN reset
 361:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 362:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 363:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DAC    = (SCU_RESET_PRSTAT1_DACRS_Msk | 0x10000000UL),    /**< DAC reset
 364:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 365:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 366:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_SDMMC  = (SCU_RESET_PRSTAT1_MMCIRS_Msk | 0x10000000UL),     /**< SDMMC r
 367:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 368:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 369:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC1  = (SCU_RESET_PRSTAT1_USIC1RS_Msk | 0x10000000UL),    /**< USIC1 r
 370:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 371:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 372:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC2  = (SCU_RESET_PRSTAT1_USIC2RS_Msk | 0x10000000UL),    /**< USIC2 r
 373:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 374:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_PORTS  = (SCU_RESET_PRSTAT1_PPORTSRS_Msk | 0x10000000UL),   /**< PORTS r
 375:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_WDT    = (SCU_RESET_PRSTAT2_WDTRS_Msk | 0x20000000UL),      /**< WDT res
 376:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 377:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ETH0   = (SCU_RESET_PRSTAT2_ETH0RS_Msk | 0x20000000UL),     /**< ETH0 re
 378:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 379:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA0 = (SCU_RESET_PRSTAT2_DMA0RS_Msk | 0x20000000UL),     /**< DMA0 re
 380:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 381:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA1 = (SCU_RESET_PRSTAT2_DMA1RS_Msk | 0x20000000UL),     /**< DMA1 re
 382:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 383:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 384:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_FCE    = (SCU_RESET_PRSTAT2_FCERS_Msk | 0x20000000UL),      /**< FCE res
 385:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 386:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)  
 387:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USB0   = (SCU_RESET_PRSTAT2_USBRS_Msk | 0x20000000UL),      /**< USB0 re
 388:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 389:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)  
 390:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ECAT0  = (SCU_RESET_PRSTAT2_ECAT0RS_Msk | 0x20000000UL),      /**< ECAT0
 391:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 392:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 393:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_EBU    = (SCU_RESET_PRSTAT3_EBURS_Msk | 0x30000000UL)       /**< EBU res
 394:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 395:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_RESET_t;
 396:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 397:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 398:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for disabling the clocks sources of peripherals. Disabling of the peripher
 399:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  clock is configured via the \a CLKCLR registers.
 400:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 401:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 402:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK
 403:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 404:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USB = SCU_CLK_CLKCLR_USBCDI_Msk, /**< USB module clock. */
 405:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 406:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_MMC = SCU_CLK_CLKCLR_MMCCDI_Msk, /**< MMC module clock. */
 407:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 408:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 409:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ETH = SCU_CLK_CLKCLR_ETH0CDI_Msk, /**< Ethernet module clock. */
 410:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 411:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 412:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EBU = SCU_CLK_CLKCLR_EBUCDI_Msk, /**< EBU module clock. */
 413:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 414:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_CCU = SCU_CLK_CLKCLR_CCUCDI_Msk, /**< CCU module clock. */
 415:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDT = SCU_CLK_CLKCLR_WDTCDI_Msk  /**< WDT module clock. */
 416:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_t;
 417:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 418:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if(UC_SERIES != XMC45)
 419:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 420:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Defines enumeration for peripherals that support clock gating. 
 421:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The enumerations can be used for gating or ungating the peripheral clocks.
 422:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * All the enum items are tabulated as per bits present in \a CGATSTAT0 register.
 423:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 424:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 425:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_CLOCK
 426:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 427:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_VADC   = SCU_CLK_CGATSTAT0_VADC_Msk,  /**< VADC peripheral gating. */
 428:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 429:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DSD    = SCU_CLK_CGATSTAT0_DSD_Msk,   /**< DSD peripheral gating. */
 430:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 431:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU40  = SCU_CLK_CGATSTAT0_CCU40_Msk,  /**< CCU40 peripheral gating. */
 432:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 433:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU41  = SCU_CLK_CGATSTAT0_CCU41_Msk,  /**< CCU41 peripheral gating. */
 434:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 435:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 436:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU42  = SCU_CLK_CGATSTAT0_CCU42_Msk,  /**< CCU42 peripheral gating. */
 437:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 438:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 439:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU80  = SCU_CLK_CGATSTAT0_CCU80_Msk,  /**< CCU80 peripheral gating. */
 440:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 441:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 442:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU81  = SCU_CLK_CGATSTAT0_CCU81_Msk,  /**< CCU81 peripheral gating. */
 443:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 444:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 445:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF0 = SCU_CLK_CGATSTAT0_POSIF0_Msk,  /**< POSIF0 peripheral gating. *
 446:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 447:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 448:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF1 = SCU_CLK_CGATSTAT0_POSIF1_Msk,   /**< POSIF1 peripheral gating. 
 449:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 450:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC0  = SCU_CLK_CGATSTAT0_USIC0_Msk,   /**< USIC0 peripheral gating. */
 451:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ERU1   = SCU_CLK_CGATSTAT0_ERU1_Msk,    /**< ERU1 peripheral gating. */
 452:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 453:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_HRPWM0 = SCU_CLK_CGATSTAT0_HRPWM0_Msk,  /**< HRPWM0 peripheral gating. *
 454:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 455:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 456:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU43  = (SCU_CLK_CGATSTAT1_CCU43_Msk | 0x10000000UL),   /**< CCU43 peri
 457:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 458:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 459:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_LEDTS0 = (SCU_CLK_CGATSTAT1_LEDTSCU0_Msk | 0x10000000UL), /**< LEDTS0 pe
 460:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 461:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 462:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_MCAN   = (SCU_CLK_CGATSTAT1_MCAN0_Msk | 0x10000000UL),   /**< MCAN perip
 463:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 464:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 465:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DAC    = (SCU_CLK_CGATSTAT1_DAC_Msk | 0x10000000UL),     /**< DAC periph
 466:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 467:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 468:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_SDMMC  = (SCU_CLK_CGATSTAT1_MMCI_Msk | 0x10000000UL),    /**< SDMMC peri
 469:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 470:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 471:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC1  = (SCU_CLK_CGATSTAT1_USIC1_Msk | 0x10000000UL),   /**< USIC1 peri
 472:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 473:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 474:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC2  = (SCU_CLK_CGATSTAT1_USIC2_Msk | 0x10000000UL),    /**< USIC2 per
 475:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 476:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_PORTS  = (SCU_CLK_CGATSTAT1_PPORTS_Msk | 0x10000000UL),   /**< PORTS per
 477:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_WDT    = (SCU_CLK_CGATSTAT2_WDT_Msk | 0x20000000UL),      /**< WDT perip
 478:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 479:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ETH0   = (SCU_CLK_CGATSTAT2_ETH0_Msk | 0x20000000UL),     /**< ETH0 peri
 480:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 481:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA0 = (SCU_CLK_CGATSTAT2_DMA0_Msk | 0x20000000UL),     /**< DMA0 peri
 482:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 483:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA1 = (SCU_CLK_CGATSTAT2_DMA1_Msk | 0x20000000UL),     /**< DMA1 peri
 484:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 485:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 486:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_FCE    = (SCU_CLK_CGATSTAT2_FCE_Msk | 0x20000000UL),      /**< FCE perip
 487:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 488:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 489:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USB0   = (SCU_CLK_CGATSTAT2_USB_Msk | 0x20000000UL),      /**< USB0 peri
 490:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 491:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 492:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ECAT0   = (SCU_CLK_CGATSTAT2_ECAT0_Msk | 0x20000000UL),      /**< ECAT0 
 493:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 494:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 495:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_EBU    = (SCU_CLK_CGATSTAT3_EBU_Msk | 0x30000000UL)       /**< EBU perip
 496:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 497:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_CLOCK_t;
 498:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 499:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 500:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 501:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for system clock (fSYS) source. These enums are used to configure \a SYSSEL bit
 502:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Clock Control Register. 
 503:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_SYSCLKSRC_t for accessing these enum parameters.
 504:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */ 
 505:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSCLKSRC
 506:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 507:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_OFI = (0UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos), /**< Internal Fast Clock (fOF
 508:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 509:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_PLL = (1UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos)  /**< PLL output (fPLL) as a
 510:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 511:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSCLKSRC_t;
 512:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 513:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 514:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the P-Divider input frequency. These enums are used to configure 
 515:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  register. 
 516:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_OSCCLKSRC_t for accessing these enum parameters.
 517:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */ 
 518:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLLCLKSRC
 519:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 520:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP = 0UL,  /**< External crystal oscillator
 521:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                 (fOHP) as the source for P-Divider. */
 522:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk /**< Ba
 523:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                              as the source for P-Di
 524:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLLCLKSRC_t;
 525:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 526:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 527:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the USB clock source(fUSB/fSDMMC).
 528:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * These enums are used to configure \a USBSEL bits of \a USBCLKCR
 529:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * register. User can choose either fPLL or fUSBPLL clock as a source for USB clock. 
 530:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 531:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */ 
 532:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_USBCLKSRC
 533:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 534:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_USBPLL = (0UL << SCU_CLK_USBCLKCR_USBSEL_Pos), /**< USB PLL(fUSB PLL) as 
 535:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 536:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_SYSPLL = (1UL << SCU_CLK_USBCLKCR_USBSEL_Pos)  /**< Main PLL output (fPLL
 537:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 538:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_USBCLKSRC_t;
 539:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 540:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
 541:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 542:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the ECAT clock source.
 543:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */ 
 544:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_ECATCLKSRC
 545:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 546:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_USBPLL = (0UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos), /**< USB PLL (fUSBPLL) 
 547:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL = (1UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos)  /**< Main PLL output (f
 548:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_ECATCLKSRC_t;
 549:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 550:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 551:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 552:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of WDT clock(fWDT). These enums are used to configure 
 553:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOFI or fPLL or fSTDBY clock as a source for WDT clock. 
 554:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 555:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */ 
 556:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_WDTCLKSRC
 557:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 558:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_OFI = (0UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos),  /**< Internal Fast Clock 
 559:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            (fOFI) as the source for
 560:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_STDBY = (1UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos), /**< Standby clock 
 561:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            (fSTDBY) as the source f
 562:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_PLL = (2UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos)   /**< PLL output (fPLL) as th
 563:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for WDT clock (fW
 564:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_WDTCLKSRC_t;
 565:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 566:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 567:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of external clock out (fEXT). These enums are used to 
 568:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fSYS or fPLL or fUSBPLL clock as a source for external clock o
 569:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_EXTOUTCLKSRC_t for accessing these enum parameters.
 570:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */ 
 571:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_EXTOUTCLKSRC
 572:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 573:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS = (0UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos),  /**< System clock (fSYS) 
 574:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                             the source for external
 575:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_USB = (2UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< USB PLL output(fUSB P
 576:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 577:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL = (3UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Main PLL output(fPLL)
 578:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 579:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 580:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY = (4UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Standby clock(fSTDB
 581:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 582:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 583:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_EXTOUTCLKSRC_t;
 584:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 585:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 586:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of RTC Clock (fRTC). These enums are used to configure
 587:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  User can choose either fOSI or fULP clock as a source for RTC Clock (fRTC).
 588:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_RTCCLKSRC_t for accessing these enum parameters.
 589:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 590:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_RTCCLKSRC
 591:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 592:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_RCS_Pos), /**< Internal Slow Clock
 593:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                          (fOSI) as the source for R
 594:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_ULP = (1UL << SCU_HIBERNATE_HDCR_RCS_Pos) /**< Ultra Low Power Clock (fULP)
 595:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                         as the source for RTC Clock
 596:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_RTCCLKSRC_t;
 597:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 598:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 599:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of Standby Clock (fSTDBY). These enums are used to con
 600:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOSI or fULP clock as a source for Standby Clock (fSTDBY).
 601:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_STDBYCLKSRC_t for accessing these enum parameters.
 602:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 603:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_STDBYCLKSRC
 604:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 605:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos), /**< Internal Slow Clock 
 606:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                           (fOSI) as the source for 
 607:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 608:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSCULP = (1UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos) /**< Ultra Low Power Cl
 609:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                           (fULP) as the source for 
 610:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 611:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_STDBYCLKSRC_t;
 612:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 613:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 614:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for backup clock trimming. These enums are used to configure \a AOTREN  \a FOTR
 615:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  PLLCON0 register. Use type \a XMC_SCU_CLOCK_BACKUP_TRIM_t for accessing these enum parameters.
 616:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 617:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE
 618:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 619:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY   = 0UL,  /**< Factory Oscillator Calibration: 
 620:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                         Force adjustment of the internal oscillator
 621:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC = 1UL   /**<  Automatic Oscillator Calibration adju
 622:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t;
 623:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 624:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 625:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 626:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting device boot mode. These enums are used to configure \a SWCON bits
 627:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  User can choose among various boot modes by configuring SWCON bits.
 628:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_BOOTMODE_t for accessing these enum parameters.
 629:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 630:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_BOOTMODE 
 631:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 632:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_NORMAL     = (0UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from start of flash
 633:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ASC_BSL    = (1UL << SCU_GENERAL_STCON_SWCON_Pos), /**< UART bootstrap. */
 634:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_BMI        = (2UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot Mode Index - Custom
 635:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            sequence. */
 636:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_CAN_BSL    = (3UL << SCU_GENERAL_STCON_SWCON_Pos), /**< CAN bootstrap. */
 637:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_PSRAM_BOOT = (4UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from PSRAM. */
 638:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM0       = (8UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed 
 639:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                            address 0. */
 640:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM1       = (12UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed
 641:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                             address 1. */
 642:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_FABM       = (14UL << SCU_GENERAL_STCON_SWCON_Pos), /**< fallback Alternate Boot
 643:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                             Try ABM-0 then try ABM-
 644:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_BOOTMODE_t;
 645:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 646:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 647:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 648:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines various PLL modes of operation. These enums are used to configure \a VCOBYP bit of \a P
 649:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  User can choose either normal or prescalar mode by configuring VCOBYP bit.
 650:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PLL_MODE_t for accessing these enum parameters.
 651:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 652:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLL_MODE
 653:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 654:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED, /**< fPLL derived from fOSC and PLL operating in prescalar mo
 655:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,  /**< fPLL derived from fVCO and PLL operating in normal mode. 
 656:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR /**< fPLL derived from fOSC and PLL operating in prescalar mo
 657:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_MODE_t;
 658:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 659:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /** 
 660:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in SLEEP state.
 661:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetSleepConfig before going to SLEEP state.
 662:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 663:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  The SLEEP state of the system corresponds to the SLEEP state of the CPU. The state is
 664:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 665:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  stopped. Peripherals are only clocked when configured to stay enabled. 
 666:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 667:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Peripherals can continue to operate unaffected and eventually generate an event to
 668:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  wake-up the CPU. Any interrupt to the NVIC will bring the CPU back to operation. The
 669:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  clock tree upon exit from SLEEP state is restored to what it was before entry into SLEEP
 670:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  state.
 671:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  
 672:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 673:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SLEEP_MODE_CONFIG
 674:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 675:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in SLEEP 
 676:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_SLEEPCR_SYSSEL_Msk,  /**< fPLL used as syst
 677:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 678:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in SLEEP state */
 679:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_SLEEPCR_USBCR_Msk,  /**< USB clock enabled i
 680:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 681:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 682:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in SLEEP state */
 683:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_SLEEPCR_MMCCR_Msk,/**< SDMMC clock enabled
 684:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 685:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 686:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in SLEEP state */
 687:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_SLEEPCR_ETH0CR_Msk,  /**< ETH clock enabled 
 688:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 689:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 690:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in SLEEP state */
 691:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_SLEEPCR_EBUCR_Msk,  /**< EBU clock enabled i
 692:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 693:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_CCU = 0,  /**< CCU clock disabled in SLEEP state */
 694:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_SLEEPCR_CCUCR_Msk,  /**< CCU clock enabled i
 695:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_WDT = 0,  /**< WDT clock disabled in SLEEP state */
 696:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_SLEEPCR_WDTCR_Msk,  /**< WDT clock enabled i
 697:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_t;
 698:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 699:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /** 
 700:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in DEEPSLEEP state.
 701:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  In addition the state of FLASH, PLL and PLLVCO during DEEPSLEEP state.
 702:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetDeepSleepConfig before going to DEEPSLEEP state.
 703:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 704:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  The DEEPSLEEP state of the system corresponds to the DEEPSLEEP state of the CPU. The state is
 705:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 706:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  stopped. 
 707:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 708:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  In Deep Sleep state the OSC_HP and the PLL may be switched off. The wake-up logic in the NVIC i
 709:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  by a free-running clock. Peripherals are only clocked when configured to stay enabled. 
 710:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Configuration of peripherals and any SRAM content is preserved.
 711:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  The Flash module can be put into low-power mode to achieve a further power reduction.
 712:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  On wake-up Flash module will be restarted again before instructions or data access is possible.
 713:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Any interrupt will bring the system back to operation via the NVIC.The clock setup before
 714:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  entering Deep Sleep state is restored upon wake-up.
 715:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 716:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG
 717:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 718:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in DE
 719:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_DSLEEPCR_SYSSEL_Msk,  /**< fPLL used as
 720:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_FLASH_POWERDOWN = SCU_CLK_DSLEEPCR_FPDN_Msk,/**< Flash power 
 721:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_PLL_POWERDOWN = SCU_CLK_DSLEEPCR_PLLPDN_Msk,  /**<  Switch of
 722:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_VCO_POWERDOWN = SCU_CLK_DSLEEPCR_VCOPDN_Msk,  /**<  Switch of
 723:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 724:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in DEEPSLEEP state 
 725:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_DSLEEPCR_USBCR_Msk,  /**< USB clock enab
 726:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 727:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 728:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in DEEPSLEEP stat
 729:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_DSLEEPCR_MMCCR_Msk,/**< SDMMC clock en
 730:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 731:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 732:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in DEEPSLEEP state 
 733:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_DSLEEPCR_ETH0CR_Msk,  /**< ETH clock ena
 734:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 735:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 736:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in DEEPSLEEP state 
 737:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_DSLEEPCR_EBUCR_Msk,  /**< EBU clock enab
 738:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 739:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_CCU = 0,  /**< CCU clock disabled in DEEPSLEEP state 
 740:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_DSLEEPCR_CCUCR_Msk,  /**< CCU clock enab
 741:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_WDT = 0,  /**< WDT clock disabled in DEEPSLEEP state 
 742:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_DSLEEPCR_WDTCR_Msk,  /**< WDT clock enab
 743:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_t;
 744:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 745:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /** 
 746:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Defines status of EVR13 regulator
 747:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 748:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_EVR_STATUS
 749:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 750:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_OK = 0, /**< EVR13 regulator No overvoltage condition */
 751:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_EVR13_OVERVOLTAGE = SCU_POWER_EVRSTAT_OV13_Msk /**< EVR13 regulator is i
 752:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_EVR_STATUS_t;
 753:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 754:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 755:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Define status of external hibernate control  
 756:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 757:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_CTRL_STATUS
 758:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 759:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_NO_ACTIVE = 0, /**< Hibernate not driven active to pads */
 760:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_ACTIVE = SCU_HIBERNATE_HDSTAT_HIBNOUT_Msk, /**< Hibernate driven active t
 761:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_CTRL_STATUS_t;
 762:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 763:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /** 
 764:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Hibernate domain event status
 765:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 766:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_EVENT
 767:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 768:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_POS_EDGE = SCU_HIBERNATE_HDCR_WKPEP_Msk, /**< Wake-up on positive edg
 769:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_NEG_EDGE = SCU_HIBERNATE_HDCR_WKPEN_Msk, /**< Wake-up on negative edg
 770:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_RTC = SCU_HIBERNATE_HDCR_RTCE_Msk, /**< Wake-up on RTC event */
 771:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_ULPWDG = SCU_HIBERNATE_HDCR_ULPWDGEN_Msk, /**< ULP watchdog alarm status */
 772:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 773:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE = SCU_HIBERNATE_HDSTAT_VBATPEV_Msk, /**< Wake-up on LPAC posi
 774:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE = SCU_HIBERNATE_HDSTAT_VBATNEV_Msk, /**< Wake-up on LPAC nega
 775:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0PEV_Msk, /**< Wake-up on LP
 776:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0NEV_Msk, /**< Wake-up on LP
 777:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 778:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1PEV_Msk, /**< Wake-up on LP
 779:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1NEV_Msk, /**< Wake-up on LP
 780:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 781:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 782:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_EVENT_t;
 783:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 784:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /** 
 785:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   * Hibernate domain dedicated pins
 786:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   */
 787:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO
 788:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 789:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_0 = 0, /**< HIB_IO_0 pin. 
 790:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                              At the first power-up and with every reset of the hibernate domain thi
 791:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 792:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_1 = 1 /**< HIB_IO_1 pin. 
 793:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                             At the first power-up and with every reset of the hibernate domain this
 794:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                             @note : Only available in certain packages*/
 795:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 796:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_t;
 797:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 798:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 799:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * HIB_IOx pin I/O control
 800:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 801:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_PIN_MODE
 802:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 803:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_NONE = 0 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 804:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_DOWN = 1 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 805:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_UP = 2 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, in
 806:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_HIBCTRL = 8 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-
 807:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_WDTSRV = 9 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-p
 808:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_GPIO = 10 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-pu
 809:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_HIBCTRL = 12 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Ope
 810:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_WDTSRV = 13 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open
 811:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_GPIO = 14 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open d
 812:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_PIN_MODE_t;
 813:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 814:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 815:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the output polarity of the HIB_IOx
 816:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 817:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO_OUTPUT_LEVEL
 818:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 819:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_LOW = 0 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos, /**< Direct value */
 820:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_HIGH = 1 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos /**< Inverted value */
 821:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_OUTPUT_LEVEL_t;
 822:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 823:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 824:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects hibernate mode
 825:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 826:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_HIBERNATE_MODE
 827:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 828:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL = 0, /**< Request external hibernate mode */
 829:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 830:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL = 1, /**< Request internal hibernate mode. @note Only availab
 831:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 832:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_HIBERNATE_MODE_t;
 833:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 834:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 835:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR0 of ERU0
 836:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 837:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR0_INPUT
 838:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 839:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI0SEL_Msk, /**< Set HIB_SR0 to HIB_IO_0 dig
 840:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 841:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR0 to HIB_IO_1 digital input. @note Only availa
 842:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 843:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 844:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_ACMP0 = SCU_HIBERNATE_HDCR_ADIG0SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP0. @n
 845:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 846:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR0_INPUT_t;
 847:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 848:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 849:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 850:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
 851:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 852:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR1 of ERU0. @note Only available in XMC44 in certain packages.
 853:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 854:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR1_INPUT
 855:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 856:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI1SEL_Msk, /**< Set HIB_SR1 to HIB_IO_0 dig
 857:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR1 to HIB_IO_1 digital input.  */
 858:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_ACMP1 = SCU_HIBERNATE_HDCR_ADIG1SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP1. */
 859:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_XTAL_GPI = SCU_HIBERNATE_HDCR_XTALGPI1SEL_Msk,  /**< Set HIB_SR0 to RTC_XTA
 860:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR1_INPUT_t;
 861:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 862:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 863:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 864:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC input selection
 865:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 866:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_INPUT
 867:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 868:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_DISABLED = 0 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator permanen
 869:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_VBAT = 0x1 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activated 
 870:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_0 = 0x2 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 871:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))      
 872:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_1 = 0x4 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 873:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 874:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_INPUT_t;
 875:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 876:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 877:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC start trigger selection for selected inputs
 878:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 879:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_TRIGGER
 880:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 881:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SUBSECOND_INTERVAL_COUNTER = 0 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /*
 882:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_ALARM_EVENT = 0x1 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC al
 883:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_PERIODIC_EVENT = 0x2 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC
 884:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_POSITIVE_EDGE_EVENT = 0x3 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 885:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_NEGATIVE_EDGE_EVENT = 0x5 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 886:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_CONTINOUS = 0x6 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Continuous m
 887:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SINGLE_SHOT = 0x7 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Single sho
 888:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_TRIGGER_t;
 889:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 890:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 891:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC status
 892:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 893:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_STATUS
 894:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 895:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_COMPARE_DONE = SCU_HIBERNATE_LPACST_VBATSCMP_Msk, /**< VBAT compare 
 896:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO0SCMP_Msk, /**< HBI_IO
 897:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 898:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO1SCMP_Msk, /**< HBI_IO
 899:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 900:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_VBATVAL_Msk, /**< VBAT compar
 901:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO0VAL_Msk, /**< HBI_
 902:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 903:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO1VAL_Msk, /**< HBI_
 904:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif  
 905:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_STATUS_t;
 906:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 907:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif /* (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41)
 908:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 909:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 910:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * DATA STRUCTURES
 911:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 912:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 913:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 914:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure for initializing the PLL functional block.
 915:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Structure holds divider values for N-DIV, P-DIV, K1-DIV, K2-DIV in order to generate desired 
 916:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  frequency using VCO. It holds the PLL mode of operation either normal or prescaler (VCO bypasse
 917:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_PLL_CONFIG_t for accessing these structure parameters.
 918:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 919:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_SYSPLL_CONFIG
 920:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 921:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t n_div;                       /**<  PLL N-Divider value. */
 922:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t p_div;                       /**<  PLL P-Divider value. */
 923:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t k_div;                       /**<  K1-Divider(Prescalar mode) or K2-Divider (Normal mode)
 924:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_t mode;    /**<  PLL mode of operation. */
 925:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_t clksrc; /**<  PLL divider input frequency. */
 926:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_CONFIG_t;
 927:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 928:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 929:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure used for initializing the clock functional block.
 930:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Clock functional block configures clock source needed for various peripheral and its divider va
 931:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_CONFIG_t for accessing these structure parameters.
 932:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 933:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_CONFIG
 934:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 935:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_CONFIG_t         syspll_config;      /**< PLL configuration */
 936:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_oschp;       /**< Enable external high precision osc
 937:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fOHP has to
 938:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_osculp;      /**< Enable external ultra low power os
 939:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fULP has to
 940:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t calibration_mode;   /**< Backup clock trimming mode. */
 941:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_t             fstdby_clksrc;      /**< Standby clock source. */
 942:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_t             fsys_clksrc;        /**< Choice of system clock. */
 943:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fsys_clkdiv;        /**< Ratio of fPLL to fSYS. */
 944:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fcpu_clkdiv;        /**< Ratio of fSys to fCPU. */
 945:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fccu_clkdiv;        /**< Ratio of fSys to fCCU. */
 946:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fperipheral_clkdiv; /**< Ratio of fSYS to fPERI. */
 947:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } const XMC_SCU_CLOCK_CONFIG_t;
 948:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 949:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 950:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Low power modes
 951:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 952:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_MODE_t
 953:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
 954:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_SLEEP = 0, /**< sleep mode stops the processor clock */
 955:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_DEEPSLEEP = SCB_SCR_SLEEPDEEP_Msk /**< deep sleep mode stops the system clock 
 956:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_MODE_t;
 957:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 958:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 959:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * API PROTOTYPES
 960:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 961:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 962:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #ifdef __cplusplus
 963:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** extern "C" {
 964:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
 965:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 966:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 967:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
 968:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 969:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 970:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 971:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 972:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 973:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
 974:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 975:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 976:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables out of range comparator for the selected ADC group and channel. \n\n
 977:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The ADC channel input is compared by Out of Range Comparator (ORC) for overvoltage monitoring
 978:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * or for detection of out of range analog inputs. ORC must be turned on explicitly
 979:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * to leverage the auditing feature. ORC is enabled by setting the enable bit in the GORCEN registe
 980:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 981:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableOutOfRangeComparator()\n\n\n
 982:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
 983:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 984:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
 985:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
 986:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
 987:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 988:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 989:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 990:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 991:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 992:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
 993:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
 994:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 995:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables the out of range comparator for the selected ADC group and the channel. \n\n
 996:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Out of range comparator is disabled by clearing the enable bit in the GORCEN register.
 997:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 998:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableOutOfRangeComparator()\n\n\n
 999:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1000:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
1001:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1002:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1003:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1004:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1005:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1006:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables die temperature measurement by powering the DTS module.\n\n
1007:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is enabled by setting the PWD bit of DTSCON register.
1008:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTempe
1010:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1011:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1012:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableTemperatureSensor(void);
1013:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1014:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1015:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1016:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1017:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1018:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables die temperature measurement by powering the DTS module off.\n\n
1019:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is disabled by clearing the PWD bit of DTSCON register.
1020:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1021:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTemper
1022:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1023:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1024:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableTemperatureSensor(void);
1025:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1026:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1027:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return Status of die temperature sensor. \n
1028:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: true - if temperature sensor is enabled.\n
1029:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    false - if temperature sensor is disabled.
1030:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1031:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1032:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the die temperature sensor power status.\n\n
1033:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading the PWD bit of DTSCON register.
1034:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1035:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1036:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1037:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1038:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorEnabled(void);
1039:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1040:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1041:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1042:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param offset  Offset value for calibrating the DTS result.\n
1043:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 127.
1044:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param gain    Gain value for calibrating the DTS conversion result.\n
1045:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 63.
1046:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1047:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1048:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1049:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1050:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Calibrates the measurement of temperature by configuring the values of offset and gain of \a DTS
1051:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Allows to improve the accuracy of the temperature measurement with the adjustment of \a OFFSET a
1052:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * in the \a DTSCON register.
1053:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Offset adjustment is defined as a shift of the conversion result. The range of the offset adjust
1054:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * resolution that corresponds to +/- 12.5�C. The offset value gets added to the measure result. 
1055:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Offset is considered as a signed value.
1056:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Gain adjustment helps in minimizing gain error. When the \a gain value is 0, result is generated
1057:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * When the \a gain value is 63, result is generated with least gain, i.e, \a RESULT - 63 at the hi
1058:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1059:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1060:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CalibrateTempMonitor with desired offset and gain calibration values to the DT
1061:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1062:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1063:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1064:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1065:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1066:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1067:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(),
1068:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1069:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1070:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain);
1071:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1072:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1073:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_STATUS_t  Result of starting the temperature measurement.\n
1074:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                           \b Range: \n 
1075:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_OK if the measurement is started successfully.\n
1076:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_ERROR if temperature sensor is not enabled.\n
1077:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_BUSY if temperature sensor is busy measuring the tem
1078:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1079:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1080:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1081:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Starts die temperature measurement using internal temperature sensor.\n\n
1082:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API checks if the temperature sensor is enabled and is not busy in measurement.\n
1083:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1084:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1085:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1086:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1087:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1088:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1089:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1090:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1091:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1092:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1093:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1094:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void);
1095:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1096:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1097:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1098:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1099:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Measured temperature value.\n
1100:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Valid temperature range is 0 to 1023. \n
1101:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              If sensor is not enabled, 0x7FFFFFFFH is returned.
1102:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1103:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1104:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Reads the measured value of die temperature.\n\n
1105:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Temperature measurement result is read from \a RESULT bit field of \a DTSSTAT register.
1106:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The temperature measured in �C is given by (RESULT - 605) / 2.05 [�C]
1107:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1108:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1109:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1110:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetTemperatureMeasurement(void);
1111:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1112:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1113:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the die temperature sensor is busy.\n
1114:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    \b Range: \a true if sensor is busy in temperature measurement.
1115:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    \a false if sensor is free and can accept a new request for measurement.
1116:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1117:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1118:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks whether Die Temperature Sensor (DTS) is busy in temperature measurement.\n\n
1119:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The status is read from the \a BUSY bit field of the \a DTSSTAT register.
1120:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1121:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1122:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1123:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorBusy(void);
1124:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1125:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1126:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return bool Status of die temperature sensor whether it is ready to start measurement. \n
1127:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: \n \a true if temperature sensor is ready to start measurement. \n
1128:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \a false if temperature sensor is not ready to start measurement.
1129:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1130:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1131:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks if the die temperature sensor is ready to start a measurement\n\n
1132:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading \a RDY bit of \a DTSSTAT register. It is recommended
1133:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * to check the ready status of die temperature sensor before starting it.
1134:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1135:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1136:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1137:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorReady(void);
1138:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1139:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if (UC_SERIES != XMC45)
1140:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1141:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has exceeded the configured upper 
1142:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has exceeded the configured upper limit.
1143:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is less than the configured upper limit.
1144:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1145:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1146:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has exceeded the configured upper limit of temperature.\n\n
1147:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API checks \a OVERFL bit (Upper Limit Overflow Status bit) of \a DTEMPALARM register.
1148:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The \a OVERFL bit will be set if the measured temperature has exceeded the limit configured in 
1149:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a UPPER in the \a DTEMPLIM register.
1150:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1151:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_LowTemperature() \n\n\n
1152:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1153:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_HighTemperature(void);
1154:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1155:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1156:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1157:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param lower_temp  Lower threshold of die temperature. If measured temperature falls below this 
1158:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a UNDERFL bit field of \a DTEMPALARM register.
1159:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param upper_temp  Upper threshold of die temperature. If measured temperature exceeds this valu
1160:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a OVERFL bit field of \a DTEMPALARM register.
1161:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1162:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1163:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1164:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1165:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the lower and upper threshold of die temperature.\n\n
1166:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * API configures \a DTEMPLIM register for upper and lower die temperature threshold limits.
1167:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * When the measured temperature is outside the range defined by the limits, alarm bits \a UNDERFL 
1168:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * will be set in the register \a DTEMPALARM.\n
1169:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1170:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1171:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1172:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1173:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Use \a XMC_SCU_HighTemperature() and XMC_SCU_LowTemperature() to monitor the temperature.\n
1174:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1175:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature() \n\n\n
1176:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1177:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp);
1178:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1179:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1180:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has dropped below the configured l
1181:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has dropped below the configured lower l
1182:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is higher than the configured lower limit.
1183:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1184:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1185:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has dropped below the configured lower limit of temperature.\
1186:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API checks \a UNDERFL bit (Lower LimitUnderflow Status bit) of \a DTEMPALARM register.
1187:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The \a UNDERFL bit will be set if the measured temperature has dropped below the limit configure
1188:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a LOWER in the \a DTEMPLIM register.
1189:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1190:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_HighTemperature() \n\n\n
1191:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1192:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_LowTemperature(void);
1193:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
1194:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1195:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1196:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t Configured boot mode for the device.\n
1197:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for enumeration of different boot modes.
1198:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1199:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1200:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the boot mode configured for the device.\n\n
1201:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The boot mode is read from the \a STCON register bit field \a SWCON.
1202:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1203:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1204:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetBootMode() \n\n\n
1205:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1206:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetBootMode(void);
1207:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1208:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1209:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1210:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param mode Boot mode to be configured for the device.\n
1211:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for selecting the boot mode.
1212:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1213:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1214:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1215:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1216:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the desired boot mode for the device.\n\n
1217:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The XMC4 series devices support multiple boot modes. A running application can set a desired boo
1218:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * launch it by means of software reset. Switching of boot modes should be handled carefully. User 
1219:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the initial boot sequence is executed. A stable execution environment should be maintained when 
1220:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * eventually handed over to the application program.\n
1221:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to launch requested bootmode:\n
1222:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetBootMode() with desired boot mode value.\n
1223:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Trigger a software reset using system reset request by enabling a bit \a SYSRESETREQ of AIRCR 
1224:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *   (PPB->AIRCR |= PPB_AIRCR_SYSRESETREQ_Msk).\n
1225:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1226:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetBootMode() \n\n\n
1227:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1228:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t mode);
1229:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1230:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1231:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1232:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be read.\n
1233:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1234:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1235:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Data read from the selected general purpose register.
1236:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1237:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1238:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides stored data from general purpose SCU register.\n\n
1239:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1240:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * data. The API reads from either GPR0 or GPR1 based on the \a index value.
1241:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1242:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteGPR()\n\n\n
1243:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1244:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadGPR(const uint32_t index);
1245:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  
1246:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1247:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1248:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be written.\n
1249:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1250:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param data  Data to be written to the selected general purpose register.
1251:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1252:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1253:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1254:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1255:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Stores data in the selected general purpose SCU register.\n\n
1256:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1257:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * data. The API writes data to either GPR0 or GPR1 based on the \a index value.
1258:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1259:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadGPR()\n\n\n
1260:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1261:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data);
1262:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1263:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1264:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1265:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be written.\n
1266:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1267:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1268:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1269:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param data    32 bit data to be written into retention memory. The API writes
1270:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data to the address specified.\n
1271:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1272:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1273:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1274:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1275:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1276:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Writes input data to the selected address of Retention memory in hibernate domain.\n\n
1277:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1278:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1279:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1280:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1281:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1282:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadFromRetentionMemory() \n\n\n
1283:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1284:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data);
1285:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1286:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1287:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1288:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be read.\n
1289:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1290:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1291:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1292:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1293:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  32 bit data read from retention memory. The API reads
1294:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data from the address specified.\n
1295:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1296:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1297:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1298:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Reads data from selected address of retention memory in hibernate domain.\n\n
1299:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1300:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1301:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1302:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1303:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1304:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteToRetentionMemory() \n\n\n
1305:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1306:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address);
1307:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1308:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1309:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1310:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be enabled.\n
1311:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1312:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1313:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1314:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1315:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1316:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1317:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selectively enables interrupt sources to generate non maskable interrupt(NMI).\n\n
1318:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually enabled by setting corresponding bit of an interrupt in the 
1319:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \a NMIREQEN register.
1320:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1321:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_DisableNmiRequest() \n\n\n
1322:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1323:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request);
1324:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1325:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1326:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1327:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be disabled.\n
1328:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1329:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1330:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1331:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1332:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1333:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1334:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selectively disables interrupt sources from generating non maskable interrupt(NMI).\n\n
1335:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually disabled by clearing corresponding bits in the \a NMIREQEN reg
1336:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1337:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1338:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1339:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request);
1340:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1341:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1342:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1343:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be enabled.\n
1344:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1345:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1346:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1347:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1348:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1349:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables assertion of trap for the selected trap event.\n\n
1350:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually enabled by clearing respective bit of the 
1351:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * event in \a TRAPDIS register in order to get an exception.
1352:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1353:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Disable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1354:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1355:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Enable(const uint32_t trap);
1356:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1357:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1358:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1359:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be disabled.\n
1360:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1361:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1362:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1363:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1364:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1365:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables assertion of trap for the selected trap event.\n\n
1366:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually disabled by setting the respective event bit 
1367:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * in the \a TRAPDIS register in order to suppress trap generation.
1368:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1369:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1370:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1371:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Disable(const uint32_t trap);
1372:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1373:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1374:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1375:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap status bit has to be cleared.\n
1376:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1377:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1378:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1379:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1380:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1381:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Clears the trap status of input event.\n\n
1382:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Once a trap event is detected, it will have to be acknowledged and later serviced. 
1383:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The trap status bit should be cleared to detect the occurence of trap next time. 
1384:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * This is useful while polling for TRAPSTAT without enabling the NMI for trap.
1385:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap status can be cleared by setting the event bit in the \a TRAPCLR register.
1386:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1387:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1388:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1389:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap);
1390:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1391:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1392:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of trap generating events.\n
1393:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event. The returned
1394:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * value indicates the status of multiple events at their respective bit positions.
1395:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * User should mask the bits of the events of interest using the type specified.
1396:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1397:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1398:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the status of trap generating events. \n\n
1399:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The status is read from \a TRAPRAW register. Status of the specific events can be checked
1400:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * using their respective bits in the \a TRAPRAW register. The bit masks can be obtained from
1401:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the enumeration type @ref XMC_SCU_TRAP_t. Multiple events can be combined using \a OR operation.
1402:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * A trap event is considered to be asserted if the respective bit of the event is set to 1.
1403:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1404:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_ClearStatus() \n\n\n
1405:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1406:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_TRAP_GetStatus(void);  
1407:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1408:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1409:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1410:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap has to be triggered.\n
1411:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1412:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1413:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1414:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1415:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1416:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Triggers trap generation for the event specified. \n\n
1417:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The trap source has to be enabled before invocation of this API. 
1418:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap event can be triggered by setting its respective bit in the \a TRAPSET register.
1419:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap event can be configured to generate a non maskable interrupt by using the API XMC_SCU_INTER
1420:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to manually assert a trap event:\n
1421:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_EnableEvent with desired trap request source ID.\n
1422:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_SetEvent with same trap request source ID to manually assert a trap event
1423:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1424:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1425:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1426:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Trigger(const uint32_t trap);
1427:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1428:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1429:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1430:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be reset.\n
1431:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1432:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1433:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1434:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1435:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1436:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Puts the specified peripheral in to reset state. \n\n
1437:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API achieves reset of peripherals by setting the respective bit in the \a PRSET0,  \a PRSET1
1438:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset assertion automatically stored in the \a PRSTATn register and can be c
1439:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * user software to determine the state of the system and for debug purpose.\n
1440:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to assert a peripheral reset:\n
1441:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_AssertPeripheralReset() with desired peripheral identifier.\n
1442:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted with same peripheral identifier to verify whet
1443:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * is in reset state.\n
1444:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1445:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_IsPeripheralResetAsserted() \n\n\n
1446:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1447:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1448:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1449:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1450:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1451:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be moved out of reset state.\n
1452:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1453:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1454:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1455:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1456:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1457:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables the specified peripheral by moving it out of reset state.  \n\n
1458:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Any peripheral should be moved out of reset state for executing its functionality.
1459:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API enables the peripheral by setting its respective bit in the \a PRCLR0,  \a PRCLR1 or  \a
1460:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset deassertion is automatically stored in the \a PRSTATn register and can
1461:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the user software to determine the state of the system and for debug purpose.\n
1462:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to deassert a peripheral reset:\n
1463:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_DeassertPeripheralReset() with desired peripheral identifier.\n
1464:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted() with desired peripheral identifier to verify
1465:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * has been enabled.\n
1466:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1467:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1468:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1469:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1470:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1471:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1472:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1473:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral, whose reset status has to be checked.\n
1474:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals.
1475:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1476:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral reset. \n
1477:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *               \b Range: \a true if peripheral is in reset state. \a false if peripheral is enabl
1478:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1479:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1480:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks the reset status of the selected peripheral.\n\n
1481:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API reads the reset status from \a PRSTATn register. Returns true if the peripheral is in
1482:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * reset state. On power up of the device, all the peripherals will be in reset state. 
1483:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If the peripheral is enabled, \a false will be returned as the status.
1484:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1485:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n 
1486:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1487:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1488:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  
1489:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1490:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1491:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error status has to be cleared.\n
1492:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1493:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          memory status bits can be cleared by using the \a OR operation.
1494:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1495:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1496:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1497:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1498:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Clears the parity error status bit. \n\n
1499:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * When a memory parity error is detected using the status bits in \a PEFLAG register. It has to 
1500:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * be cleared by software to detect the parity error from the same memory next time.
1501:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API clears the parity error status bit of the selected peripheral by setting the 
1502:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * respective bit in the \a PEFLAG register. Status of multiple memory parity errors 
1503:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * can be cleared by combining the enum values using \a OR operation.
1504:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1505:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetStatus(), XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_EnableTrapGeneration() \n\n\
1506:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1507:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory);
1508:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1509:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1510:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1511:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error checking has to be enabled.\n
1512:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1513:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1514:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1515:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1516:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1517:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1518:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables parity error checking for the selected on-chip RAM type.\n\n
1519:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Parity error checking can be enabled by setting respective bits in the \a PEEN register.
1520:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Additionally parity error can be configured to generate trap when the error is detected,
1521:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * using the API XMC_SCU_PARITY_EnableTrapGeneration(). Such a trap can be further configured
1522:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * to generate non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1523:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1524:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration(), XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1525:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1526:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Enable(const uint32_t memory);
1527:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1528:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1529:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1530:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory   The on-chip RAM type, for which the parity error checking has to be disabled.\n
1531:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1532:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1533:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1534:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1535:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1536:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1537:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables parity error checking for the selected on-chip RAM type.\n\n
1538:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Parity error detection can be disabled by clearing the respective bit in the \a PEEN register.
1539:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1540:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1541:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1542:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Disable(const uint32_t memory);
1543:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1544:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1545:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1546:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be enable
1547:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1548:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1549:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1550:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1551:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1552:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1553:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables trap assertion for the parity error source.\n\n
1554:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Parity error detection for different types of on-chip RAM can generate trap.
1555:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap assertion for parity error can be individually enabled by setting the respective bits
1556:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * in the \a PETE register. The generated trap can be additionally configured to generate
1557:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1558:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1559:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1560:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1561:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory);
1562:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1563:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1564:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1565:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be disabl
1566:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1567:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1568:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1569:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1570:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1571:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1572:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables the assertion of trap for the parity error source.\n\n
1573:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be disabled by clearing the respective bit of the RAM type in the \a PETE reg
1574:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1575:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1576:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration() \n\n\n
1577:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1578:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory);
1579:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1580:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1581:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1582:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of parity error detection for the on-chip RAM modules.\n
1583:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to get the bit mask of each RAM module type.
1584:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1585:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1586:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the status of parity error detection for the on-chip RAM modules.\n\n
1587:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Parity error status information is obtained from the \a PEFLAG register.
1588:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If a particular RAM module has parity error, its respective bit field will be set to 1 in the 
1589:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * returned value. A check for the status of a particular RAM module can be done by
1590:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * masking the returned value with the RAM module identifier from the type @ref XMC_SCU_PARITY_t.
1591:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1592:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_ClearStatus() \n\n\n
1593:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1594:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_PARITY_GetStatus(void);  
1595:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1596:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1597:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1598:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity logic should be overriden.\n
1599:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1600:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1601:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1602:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1603:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1604:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1605:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enable access to parity bits of SRAM modules for various types of peripherals.
1606:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enable direct write to parity bits using value selected using XMC_SCU_PARITY_SetParityWriteValue
1607:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1608:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_SetParityWriteValue() \n\n\n
1609:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
1610:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1611:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
1612:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1613:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->MCHKCON = memory;
1614:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1615:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1616:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1617:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity test has to be enabled.\n
1618:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. 
1619:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Only a single memory type should be specified.
1620:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1621:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1622:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1623:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1624:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects parity test output from a memory instance that can be inspected using XMC_SCU_PARITY_Get
1625:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1626:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetParityReadValue() \n\n\n
1627:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
1628:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1629:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
1630:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1631:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTSR = memory;
1632:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1633:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1634:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1635:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param write_value parity bits value stored with next write access\n
1636:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1637:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None  
1638:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1639:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1640:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits corresponding to the next write access are sele
1641:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1642:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1643:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1644:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
1645:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1646:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SetParityWriteValue(uint8_t write_value)
1647:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1648:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTPR = ((write_value << SCU_PARITY_PMTPR_PWR_Pos) & SCU_PARITY_PMTPR_PWR_Msk);
1649:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1650:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1651:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1652:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return parity bits generated during last read access  
1653:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1654:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1655:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits generated during the most recent read access ca
1656:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1657:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1658:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1659:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * 
1660:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1661:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint8_t XMC_SCU_PARITY_GetParityReadValue(void)
1662:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1663:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return ((SCU_PARITY->PMTPR & SCU_PARITY_PMTPR_PRD_Msk) >> SCU_PARITY_PMTPR_PRD_Pos);
1664:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1665:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1666:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1667:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1668:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be enabled. \n
1669:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1670:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1671:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1672:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1673:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1674:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables the source clock for selected peripheral.\n\n
1675:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually enabled by setting the pe
1676:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * specific bit in the \a CLKSET register.\n
1677:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether a source clock of peripheral is enabl
1678:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_EnableClock() with desired peripheral identifier.\n
1679:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled() with same peripheral identifier to verify whether the c
1680:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1681:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableClock(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1682:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1683:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock);
1684:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1685:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1686:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1687:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be disabled. \n
1688:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1689:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1690:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1691:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1692:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1693:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables source clock for the peripheral selected.\n\n
1694:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually disabled  by setting the 
1695:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * specific bits in the \a CLKCLR register.\n
1696:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether clock source of the peripheral is ena
1697:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_DisableClock with desired peripheral identifier.\n
1698:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled with same peripheral identifier to verify whether periphe
1699:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1700:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1701:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1702:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock);
1703:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1704:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1705:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1706:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param clock   Peripheral for which the clock status has to be checked. \n
1707:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1708:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1709:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral clock.\n
1710:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: \a true if peripheral clock is enabled. \a false if peripheral clock is disable
1711:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1712:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1713:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks the status of peripheral source clock.\n\n
1714:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The status of peripheral source clock is read from the \a CLKSTATn register. 
1715:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Returns \a true if clock is enabled and returns \a false otherwise.
1716:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1717:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_CLOCK_DisableClock() \n\n\n
1718:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1719:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock);
1720:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1721:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1722:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1723:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for fSYS.\n
1724:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1725:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI for selecting internal fast clock as fSYS.\n
1726:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL for selecting the output of PLL fPLL as fSYS.
1727:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1728:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1729:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1730:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1731:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source for system clock (fSYS).\n\n
1732:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * System clock is selected by setting \a SYSSEL bits in the \a SYSCLKCR register.
1733:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSCLKSRC_PLL is selected, then the dividers of the PLL have to be
1734:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * additionally configured to achieve the required system clock frequency. 
1735:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   * \par<b>Related APIs:</b><BR>
1736:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_StartSystemPll(), XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
1737:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1738:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source);
1739:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1740:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1741:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_SYSCLKSRC_t   Source of clock for fSYS.\n
1742:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1743:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI - internal fast clock selected as fSYS.\n
1744:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL - output of PLL fPLL selected as fSYS.
1745:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1746:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1747:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of system clock (fSYS). \n\n
1748:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selected source of fSYS is obtained by reading \a SYSSEL bits of \a SYSCLKCR register.
1749:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1750:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource(), XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
1751:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1752:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSCLKSRC_t XMC_SCU_CLOCK_GetSystemClockSource(void)
1753:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1754:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSCLKSRC_t)(SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk);
1755:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1756:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1757:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1758:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1759:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1760:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to select the source of clock.\n
1761:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL as source of USB clock(fUSB/
1762:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL as source of USB clock(fUSB
1763:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1764:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1765:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1766:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1767:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of USB/SDMMC clock (fUSB/SDMMC).\n\n
1768:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * USB and SDMMC use a common clock source. They can either use fUSB PLL or fPLL as the source of c
1769:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The selection is done by configuring the \a USBSEL bits of \a USBCLKCR register.
1770:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1771:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1772:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1773:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source);
1774:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1775:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1776:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_USBCLKSRC_t   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1777:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to identify the source of clock.\n
1778:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL is selected as source of USB
1779:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL is selected as source of US
1780:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1781:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1782:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of USB and SDMMC clock frequency.\n\n
1783:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The clock source is read from from the \a USBSEL bits of \a USBCLKCR register.
1784:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1785:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1786:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1787:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_USBCLKSRC_t XMC_SCU_CLOCK_GetUsbClockSource(void)
1788:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1789:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_USBCLKSRC_t)(SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk);
1790:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1791:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1792:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1793:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1794:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source  Clock source for watchdog timer.\n
1795:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1796:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1797:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1798:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1799:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1800:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1801:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1802:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1803:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of WDT clock (fWDT).\n\n
1804:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The selected value is configured to the \a WDTSEL bits of \a WDTCLKCR register.
1805:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The watchdog timer counts at the frequency selected using this API. So the time for
1806:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * timeout or pre-warning of watchdog has to be calculated based on this selection.
1807:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1808:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1809:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_GetWdtClockFrequency() \n\n\n
1810:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1811:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source);
1812:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1813:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1814:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_WDTCLKSRC_t   Clock source configured for watchdog timer.\n
1815:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1816:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1817:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1818:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1819:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1820:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1821:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the source of clock used for watchdog timer.\n\n
1822:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTSEL bits of \a WDTCLKCR register.
1823:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The time for timeout or pre-warning of watchdog has to be calculated based on 
1824:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the clock source selected.
1825:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1826:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_SetWdtClockSource() \n\n\n
1827:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1828:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_WDTCLKSRC_t XMC_SCU_CLOCK_GetWdtClockSource(void)
1829:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1830:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_WDTCLKSRC_t)(SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk);
1831:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1832:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1833:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1834:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1835:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source   Source for standby clock.\n
1836:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1837:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1838:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1839:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1840:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1841:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1842:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1843:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of Standby clock (fSTDBY).\n\n
1844:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Clock source is configured by setting the \a STDBYSEL bits of \a HDCR register.
1845:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Hibernate domain should be enabled explicitly before using the API.
1846:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1847:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \note
1848:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1849:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1850:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1851:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetStdbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1852:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1853:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source);
1854:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1855:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1856:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source clock of standby clock(fSTDBY).\n
1857:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1858:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1859:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1860:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1861:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1862:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the source of standby clock (fSTDBY).\n\n
1863:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a STDBYSEL bits of \a HDCR register.\n
1864:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1865:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetStandbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1866:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1867:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetStdbyClockSource(void)
1868:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1869:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_STDBYSEL_Msk);
1870:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1871:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1872:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1873:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1874:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of RTC clock.\n
1875:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1876:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1877:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1878:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1879:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1880:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1881:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1882:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of RTC clock (fRTC).\n\n
1883:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a RCS bit of \a HDCR register.
1884:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * fULP needs external input powered by VBAT or VDDP. fOSI is internal clock.
1885:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1886:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1887:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \note
1888:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1889:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1890:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1891:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetRtcClockSource() \n\n\n
1892:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1893:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source);
1894:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1895:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1896:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source of RTC clock.\n
1897:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1898:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1899:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1900:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1901:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1902:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the source of RTC clock (fRTC).
1903:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a RCS bit of \a HDCR register.
1904:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1905:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1906:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1907:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1908:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetRtcClockSource(void)
1909:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1910:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_RCS_Msk);
1911:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1912:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1913:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1914:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1915:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param clock  Source of external clock output(fEXT).\n
1916:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1917:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1918:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1919:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1920:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1921:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1922:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1923:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \endif
1924:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1925:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1926:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \endif
1927:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1928:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1929:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1930:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1931:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of external clock out (fEXT).\n\n
1932:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKSEL bits of \a EXTCLKCR register.
1933:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1934:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1935:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1936:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t clock);
1937:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1938:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1939:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_EXTOUTCLKSRC_t   Source of external clock output(fEXT).\n
1940:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1941:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1942:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1943:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1944:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1945:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1946:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \endif
1947:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1948:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1949:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \endif
1950:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1951:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1952:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the source of external clock output(fEXT).\n\n
1953:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECKSEL bits of \a EXTCLKCR register.
1954:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1955:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1956:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1957:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_EXTOUTCLKSRC_t XMC_SCU_CLOCK_GetExternalOutputClockSource(void)
1958:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1959:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_EXTOUTCLKSRC_t)(SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKSEL_Msk);
1960:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1961:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1962:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1963:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1964:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for system PLL.\n
1965:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1966:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1967:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1968:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1969:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
1970:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1971:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1972:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of system PLL.\n\n
1973:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a VCOBYP bit of \a PLLCON0 register.
1974:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP is selected, ensure that the high performance oscillator 
1975:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * enabled by using the API XMC_SCU_CLOCK_EnableHighPerformanceOscillator().
1976:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1977:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator()\n\n\n
1978:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1979:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source);
1980:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1981:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
1982:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_OSCCLKSRC_t   Source of clock for system PLL.\n
1983:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1984:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1985:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1986:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
1987:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1988:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the source of system PLL clock (fPLL). \n\n
1989:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a VCOBYP bit of \a PLLCON0 register.
1990:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1991:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator(), XMC_SCU_CLOCK_SetSystemPllClockSource()\n\n\n
1992:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
1993:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSPLLCLKSRC_t XMC_SCU_CLOCK_GetSystemPllClockSource(void)
1994:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
1995:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSPLLCLKSRC_t)(SCU_PLL->PLLCON0 & SCU_PLL_PLLCON0_VCOBYP_Msk);
1996:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
1997:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
1998:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
1999:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2000:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2001:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of ECAT clock.\n
2002:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2003:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2004:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2005:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2006:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2007:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2008:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2009:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Selects the source of ECAT clock (fECAT).\n\n
2010:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECATSEL bit of \a ECATCLKCR register.
2011:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2012:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetECATClockSource() \n\n\n
2013:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2014:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_CLOCK_SetECATClockSource(const XMC_SCU_CLOCK_ECATCLKSRC_t source)
2015:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2016:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ((uint32_t)~SCU_CLK_ECATCLKCR_ECATSEL_Msk)) |
2017:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****                       ((uint32_t)source);
2018:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2019:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2020:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2021:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_ECATCLKSRC_t   Source of ECAT clock.\n
2022:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2023:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2024:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2025:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2026:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2027:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the source of ECAT clock (fECAT).
2028:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECATSEL bit of \a ECATCLKCR register.
2029:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2030:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
2031:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2032:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_ECATCLKSRC_t XMC_SCU_CLOCK_GetECATClockSource(void)
2033:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2034:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_ECATCLKSRC_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) >> SCU_C
2035:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2036:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
2037:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2038:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2039:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2040:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param divider   Ratio of fSYS clock source to the value of fSYS.
2041:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 to 256.
2042:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2043:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2044:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2045:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2046:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the ratio of system clock source to the value of system clock frequency.\n\n
2047:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is configured as \a SYSDIV bits of \a SYSCLKCR register. The divider value is 
2048:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * decremented by 1 before configuring.
2049:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2050:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2051:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2052:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider);
2053:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2054:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2055:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio of fSYS clock source to the value of fSYS.
2056:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 to 255.
2057:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2058:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2059:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the value of ratio between the source of system clock to the the value of system clock 
2060:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a SYSDIV bits of \a SYSCLKCR register.
2061:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2062:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2063:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2064:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockDivider(void)
2065:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2066:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) >> SCU_CLK_SYSCLKCR_SYSDIV_Po
2067:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2068:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2069:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2070:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2071:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of fCCU clock source to the value of fCCU.
2072:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 or 2.\n
2073:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS \n
2074:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  2-> fCCU= fSYS/2.
2075:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2076:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2077:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2078:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2079:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the divider for CCU clock source. \n\n
2080:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Capture compare unit(CCU) can take either fSYS or fSYS/2 as the source of clock.
2081:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The configuration is set to \a CCUDIV bit of \a CCUCLKCR register. The CCUDIV bit is 1 bit wide.
2082:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2083:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2084:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider() \n\n\n
2085:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2086:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t ratio);
2087:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2088:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2089:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of fCCU clock source to the value of fCCU.
2090:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 or 1.\n
2091:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  0-> fCCU= fSYS \n
2092:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS/2.
2093:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2094:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2095:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CCU clock(fCCU) to system clock(fSYS).\n\n
2096:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CCUDIV bit of \a CCUCLKCR register.
2097:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2098:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2099:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCcuClockDivider() \n\n\n
2100:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2101:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCcuClockDivider(void)
2102:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2103:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >> SCU_CLK_CCUCLKCR_CCUDIV_Po
2104:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2105:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2106:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2107:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2108:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between system clock(fSYS) and CPU clock(fCPU).
2109:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2110:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS. \n
2111:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            2-> fCPU= fSYS/2.
2112:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2113:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2114:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2115:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2116:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the CPU clock by setting the divider value for the system clock. \n\n
2117:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is set to the \a CPUDIV bit of \a CPUCLKCR register.
2118:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2119:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockDivider() \n\n\n
2120:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2121:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t ratio);
2122:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2123:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2124:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio between system clock(fSYS) and CPU clock(fCPU).
2125:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2126:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            0-> fCPU= fSYS. \n
2127:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS/2.
2128:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2129:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2130:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between system clock(fSYS) and CPU clock(fCPU). \n\n
2131:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CPUDIV bit of \a CPUCLKCR register.
2132:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2133:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCpuClockDivider() \n\n\n
2134:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2135:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockDivider(void)
2136:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2137:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_CPUDIV_Po
2138:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2139:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2140:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2141:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2142:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of peripheral clock source to the value of peripheral clock.\n
2143:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2144:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU.\n
2145:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                2-> fPERIPH= fCPU/2.
2146:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2147:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2148:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2149:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2150:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the peripheral clock by setting the divider for CPU clock(fCPU).\n\n
2151:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The peripheral clock can be equal to either fCPU or fCPU/2. The value is configured to \a PBDIV 
2152:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2153:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2154:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockDivider() \n\n\n
2155:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2156:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t ratio);
2157:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2158:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2159:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of peripheral clock source to the value of peripheral clock.\n
2160:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2161:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                0-> fPERIPH= fCPU.\n
2162:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU/2.
2163:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2164:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2165:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CPU clock(fCPU) to peripheral clock(fPERIPH).\n\n
2166:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a PBDIV bit of \a PBCLKCR register.
2167:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2168:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetPeripheralClockDivider() \n\n\n
2169:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2170:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetPeripheralClockDivider(void)
2171:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2172:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos);
2173:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2174:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2175:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2176:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2177:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2178:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 8.
2179:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2180:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2181:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2182:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2183:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the USB clock(fUSB) by setting the USB clock divider. \n\n
2184:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is decremented by 1 before setting it to \a USBDIV bits of \a USBCLKCR register.
2185:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2186:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2187:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockDivider(), XMC_SCU_CLOCK_SetUsbClockSource() \n\n\n
2188:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2189:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t ratio);
2190:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2191:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2192:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2193:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2194:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 7.
2195:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2196:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2197:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL output frequency(fPLL) and USB clock(fUSB).\n\n
2198:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a USBDIV bit of \a USBCLKCR register.
2199:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2200:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbClockSource() \n\n\n
2201:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2202:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetUsbClockDivider(void)
2203:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2204:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >> SCU_CLK_USBCLKCR_USBDIV_Po
2205:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2206:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2207:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2208:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2209:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
2210:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2211:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2212:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2213:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 64.
2214:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2215:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2216:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2217:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2218:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the EBU clock(fEBU) by setting the divider value.\n\n
2219:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The clock divider is configured to the \a EBUDIV bits of \a EBUCLKCR register.
2220:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2221:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetEbuClockDivider() \n\n\n
2222:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2223:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t ratio);
2224:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2225:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2226:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2227:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2228:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 63.
2229:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2230:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2231:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL clock(fPLL) and EBU clock(fEBU).\n\n
2232:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EBUDIV bits of \a EBUCLKCR register.
2233:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2234:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetEbuClockDivider() \n\n\n
2235:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2236:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEbuClockDivider(void)
2237:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2238:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >> SCU_CLK_EBUCLKCR_EBUDIV_Po
2239:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2240:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
2241:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2242:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2243:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2244:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between the source of WDT clock and the WDT clock.\n
2245:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 256.
2246:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2247:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2248:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2249:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2250:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the WDT clock by setting the clock divider for the WDT clock source.\n\n
2251:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a WDTDIV bits of \a WDTCLKCR register. The value of divider
2252:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring. Check the selected clock source for the WDT clock
2253:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * before configuring the divider using the API XMC_SCU_CLOCK_SetWdtClockSource().
2254:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2255:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_GetWdtClockDivider() \n\n\n
2256:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2257:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t ratio);
2258:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2259:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2260:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2261:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of WDT clock and the WDT clock.\n
2262:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 255.
2263:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2264:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2265:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the WDT parent clock and the WDT clock. \n\n
2266:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTDIV bits of \a WDTCLKCR register.
2267:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Ensure that the WDT parent clock is considered before using the value of
2268:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the divider value.
2269:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2270:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_SetWdtClockDivider() \n\n\n
2271:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2272:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetWdtClockDivider(void)
2273:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2274:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >> SCU_CLK_WDTCLKCR_WDTDIV_Po
2275:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2276:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2277:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2278:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2279:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the external output parent clock selected and the output clock.\n
2280:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 512.
2281:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2282:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2283:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2284:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2285:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the external output clock by setting the divider value for the parent clock. \n\n
2286:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKDIV bits of \a EXTCLKCR register.
2287:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The divider value is decremented by 1 before storing it to the bit fields.
2288:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Ensure that the source of external output clock is configured appropriately using the API
2289:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource().
2290:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2291:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_GetExternalOutputClockDivider() \n\n
2292:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2293:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t ratio);
2294:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2295:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2296:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2297:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the external output parent clock selected and the output clock.\
2298:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 511.
2299:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2300:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2301:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the divider value applied on parent clock before the generation of external output cloc
2302:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EXTDIV bit of \a EXTCLKCR register.
2303:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2304:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
2305:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2306:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetExternalOutputClockDivider(void)
2307:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2308:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >> SCU_CLK_EXTCLKCR_ECKDIV_Po
2309:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2310:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2311:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2312:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2313:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2314:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the source of ECAT clock and the ECAT clock.\n
2315:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 4.
2316:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2317:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2318:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2319:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2320:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Configures the ECAT clock by setting the clock divider for the ECAT clock source.\n\n
2321:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECADIV bits of \a ECATCLKCR register. The value of divider
2322:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring.
2323:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2324:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_GetECATClockDivider() \n\n\n
2325:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2326:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider);
2327:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2328:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2329:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2330:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of ECAT clock and the ECAT clock.\n
2331:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 3.
2332:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2333:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2334:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the ECAT parent clock and the ECAT clock. \n\n
2335:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECADIV bits of \a ECATCLKCR register.
2336:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2337:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_SetECATClockDivider() \n\n\n
2338:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2339:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetECATClockDivider(void)
2340:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2341:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECADIV_Msk) >> SCU_CLK_ECATCLKCR_ECADIV
2342:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2343:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** #endif
2344:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2345:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2346:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2347:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2348:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2349:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2350:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables the high precision oscillator by configuring external crystal mode.\n\n
2351:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 0, there by configuring the 
2352:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * external clock input.
2353:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The System Oscillator Watchdog is enabled. The user should check the status 
2354:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable()
2355:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2356:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2357:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2358:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void);
2359:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2360:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2361:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2362:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2363:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2364:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables the high precision oscillator by disabling the external oscillator.\n\n
2365:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 1, there by disabling the 
2366:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * external oscillator. 
2367:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2368:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2369:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2370:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void);
2371:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2372:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2373:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2374:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return Status of high performance oscillator
2375:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2376:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2377:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_HP oscillator is stable and usable
2378:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2379:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2380:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2381:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void);
2382:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2383:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2384:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2385:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2386:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2387:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2388:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2389:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus to monitor the status of
2390:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableHighPerformanceOscillator
2391:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2392:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2393:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2394:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void);
2395:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2396:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2397:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2398:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2399:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2400:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2401:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2402:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2403:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2404:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2405:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void);
2406:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2407:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2408:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2409:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_HP XTAL1 pin
2410:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2411:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2412:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_HP XTAL1 pin.
2413:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2414:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2415:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2416:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void);
2417:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2418:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2419:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2420:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2421:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2422:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2423:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables ultra low power oscillator(ULP). \n\n
2424:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It enables the hibernate domain, configures the ultra low power oscillator
2425:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * uisng the \a MODE bits of the \a OSCULCTRL register. The \a Mode bits will be
2426:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * reset to 0 to enable the low power oscillator. Mirror register update delays 
2427:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * are handled internally.
2428:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The OSC_ULP Oscillator Watchdog is enabled. The user should check the status 
2429:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsLowPowerOscillatorStable()
2430:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2431:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() 
2432:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_IsLowPowerOscillatorStable() \n\n\n
2433:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2434:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void);
2435:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2436:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2437:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2438:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2439:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2440:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2441:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables ultra low power oscillator.\n\n
2442:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It is disabled by setting the \a MODE bits of \a OSCULCTRL register to value 2.
2443:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * By default on power up, the ultra low power osciallator is disabled.
2444:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2445:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2446:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2447:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void);
2448:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2449:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2450:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2451:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return Status of low power oscillator
2452:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2453:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2454:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_ULP oscillator is stable and usable
2455:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2456:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2457:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2458:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void);
2459:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2460:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2461:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2462:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2463:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2464:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2465:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2466:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus to monitor the status of OSC_UL
2467:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableLowPowerOscillator().
2468:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2469:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \note
2470:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2471:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2472:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2473:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() \n\n\n
2474:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2475:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void);
2476:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2477:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2478:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2479:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return None
2480:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2481:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2482:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2483:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2484:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2485:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \note
2486:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2487:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2488:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2489:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2490:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void);
2491:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2492:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2493:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2494:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_ULP XTAL1 pin 
2495:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2496:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2497:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_ULP XTAL1 pin.
2498:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2499:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2500:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2501:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void);
2502:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2503:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2504:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2505:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System frequency in Hertz.\n
2506:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            \b Range: clock frequency in Hertz. Range of the value depends on the source clock fr
2507:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *            and the configured values of dividers.
2508:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2509:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2510:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the value of system PLL output clock frequency(fPLL).\n\n
2511:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API uses \a N-DIV,  \a P-DIV,  \a K1-DIV,  \a K2-DIV bits information from \a PLLCON1 regist
2512:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * VCOBYP bit information from \a PLLCON0 register. It calculates frequency of system pll clock usi
2513:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If normal Mode : fPLL = (fOSC * N)/(P * K2).
2514:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If prescaler mode: fPLL = fOSC/ K1.
2515:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2516:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2517:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2518:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void);
2519:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2520:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2521:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2522:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Source clock used for deriving system clock.\n
2523:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *          \b Range: fOHP frequency if external high precision frequency is used. \n
2524:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *                    fOFI fast internal clock frequency.
2525:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2526:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2527:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the value of the input clock frequency for deriving the system clock.
2528:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The API retrieves frequency of system PLL input clock (fPLLin).
2529:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Based on \a PINSEL bits information from \a PLLCON2 register, the parent clock source is obtaine
2530:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * This bit field specifies if fOHP or fOFI is used for deriving system clock.
2531:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * System clock frequency is obtained by dividing the source clock frequency with different divider
2532:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2533:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockFrequency() \n\n\n
2534:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2535:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void);
2536:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2537:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2538:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2539:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB PLL output clock frequency.
2540:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2541:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2542:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB PLL output clock (fUSBPLL).\n\n
2543:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * It obtains the \a VCOBYP bits information from \a USBPLLCON register and decides if USB PLL mode
2544:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If USB PLL mode is used, the USB clock frequency is obtained by dividing the source clock by USB
2545:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The frequency is obtained using following formula:\n
2546:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If Normal Mode : fUSBPLL = (fOSC * N)/(P * 2).\n
2547:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * If Prescaler mode: fPLL = fOSC.
2548:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2549:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
2550:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2551:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void);
2552:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2553:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2554:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2555:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System clock frequency in Hertz.
2556:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2557:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2558:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of system clock (fSYS).\n\n
2559:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value obtained by dividing \a CPUDIV bits information of \a CPUCLKCR register with SystemCor
2560:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fSYS clock frequency is derived using the following formula:\n
2561:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * fSYS = fCPU << CPUDIV.
2562:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2563:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
2564:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2565:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockFrequency(void)
2566:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2567:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return SystemCoreClock << ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_
 807              	 .loc 3 2567 0
 808 0000 194B     	 ldr r3,.L59
 809 0002 1A69     	 ldr r2,[r3,#16]
 810 0004 02F00102 	 and r2,r2,#1
 811 0008 184B     	 ldr r3,.L59+4
 812 000a 1B68     	 ldr r3,[r3]
 813 000c 9340     	 lsls r3,r3,r2
 814              	.LBE26:
 815              	.LBE25:
2568:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
2569:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  
2570:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2571:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2572:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2573:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  CCU clock frequency in Hertz.
2574:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2575:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2576:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of clock(fCPU) used for CCU4, CCU8, POSIF and HRPWM.\n\n
2577:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained from \a CCUDIV bits of \a CCUCLKCR register and system clock (fSYS) freque
2578:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fCCU clock frequency is calculated using following formula:\n
2579:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * fCCU = fSYS >> CCUDIV.\n
2580:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2581:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider(), XMC_SCU_CLOCK_GetSystemClockFrequency() \n\n\n
2582:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2583:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetCcuClockFrequency(void);
2584:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2585:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2586:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB clock frequency in Hertz.
2587:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2588:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2589:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB and SDMMC clock(fUSB/fSDMMC).\n\n
2590:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is obtained from \a USBDIV bits of \a USBCLKCR register and USB clock source.
2591:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Based on these values fUSB/fSDMMC clock frequency is calculated using following formula:\n
2592:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * if USB clock source = USBPLL: fUSB/fSDMMC = fUSBPLL/(USBDIV + 1).\n
2593:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * if USB clock source = PLL:  fUSB/fSDMMC = fPLL/(USBDIV + 1).\n
2594:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2595:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2596:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockSource(), XMC_SCU_CLOCK_GetUsbClockDivider() \n\n\n
2597:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2598:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbClockFrequency(void); 
2599:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** 
2600:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** /**
2601:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ethernet clock frequency in Hertz.
2602:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  *
2603:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2604:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of Ethernet clock(fETH).\n\n
2605:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * The value is derived from system clock frequency(fSYS). It is calculated using
2606:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * the following formula:\n
2607:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * fETH = fSYS >> 1;
2608:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2609:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockFrequency() \n\n\n
2610:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****  */
2611:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEthernetClockFrequency(void)
2612:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** {
2613:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h ****   return XMC_SCU_CLOCK_GetSystemClockFrequency() >> 1U;
 816              	 .loc 3 2613 0
 817 000e 5B08     	 lsrs r3,r3,#1
 818              	.LVL74:
 819              	.LBE24:
 820              	.LBE23:
 533:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t eth_mac_clk;
 534:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 535:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   __IO uint32_t *reg;
 536:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 537:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac_clk = XMC_SCU_CLOCK_GetEthernetClockFrequency();
 538:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   status = XMC_ETH_MAC_STATUS_OK;
 539:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 540:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   reg = &(eth_mac->regs->GMII_ADDRESS);
 821              	 .loc 1 540 0
 822 0010 0168     	 ldr r1,[r0]
 823              	.LVL75:
 541:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_35MHZ)
 824              	 .loc 1 541 0
 825 0012 174A     	 ldr r2,.L59+8
 826 0014 9342     	 cmp r3,r2
 827 0016 03D8     	 bhi .L52
 542:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 543:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_16;
 828              	 .loc 1 543 0
 829 0018 0823     	 movs r3,#8
 830 001a 0B61     	 str r3,[r1,#16]
 538:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 831              	 .loc 1 538 0
 832 001c 0020     	 movs r0,#0
 833              	.LVL76:
 834 001e 7047     	 bx lr
 835              	.LVL77:
 836              	.L52:
 544:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 545:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_60MHZ)
 837              	 .loc 1 545 0
 838 0020 144A     	 ldr r2,.L59+12
 839 0022 9342     	 cmp r3,r2
 840 0024 03D8     	 bhi .L54
 546:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 547:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_26;
 841              	 .loc 1 547 0
 842 0026 0C23     	 movs r3,#12
 843 0028 0B61     	 str r3,[r1,#16]
 538:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 844              	 .loc 1 538 0
 845 002a 0020     	 movs r0,#0
 846              	.LVL78:
 847 002c 7047     	 bx lr
 848              	.LVL79:
 849              	.L54:
 548:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 549:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_100MHZ)
 850              	 .loc 1 549 0
 851 002e 124A     	 ldr r2,.L59+16
 852 0030 9342     	 cmp r3,r2
 853 0032 02D8     	 bhi .L55
 550:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 551:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_42;
 854              	 .loc 1 551 0
 855 0034 0020     	 movs r0,#0
 856              	.LVL80:
 857 0036 0861     	 str r0,[r1,#16]
 858 0038 7047     	 bx lr
 859              	.LVL81:
 860              	.L55:
 552:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 553:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_150MHZ)
 861              	 .loc 1 553 0
 862 003a 104A     	 ldr r2,.L59+20
 863 003c 9342     	 cmp r3,r2
 864 003e 03D8     	 bhi .L56
 554:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 555:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_62;
 865              	 .loc 1 555 0
 866 0040 0423     	 movs r3,#4
 867 0042 0B61     	 str r3,[r1,#16]
 538:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 868              	 .loc 1 538 0
 869 0044 0020     	 movs r0,#0
 870              	.LVL82:
 871 0046 7047     	 bx lr
 872              	.LVL83:
 873              	.L56:
 556:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 557:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_200MHZ)
 874              	 .loc 1 557 0
 875 0048 0D4A     	 ldr r2,.L59+24
 876 004a 9342     	 cmp r3,r2
 877 004c 03D8     	 bhi .L57
 558:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 559:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_102;
 878              	 .loc 1 559 0
 879 004e 1023     	 movs r3,#16
 880 0050 0B61     	 str r3,[r1,#16]
 538:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 881              	 .loc 1 538 0
 882 0052 0020     	 movs r0,#0
 883              	.LVL84:
 884 0054 7047     	 bx lr
 885              	.LVL85:
 886              	.L57:
 560:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 561:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_250MHZ)
 887              	 .loc 1 561 0
 888 0056 0B4A     	 ldr r2,.L59+28
 889 0058 9342     	 cmp r3,r2
 562:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 563:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_124;
 890              	 .loc 1 563 0
 891 005a 9DBF     	 ittte ls
 892 005c 1423     	 movls r3,#20
 893 005e 0B61     	 strls r3,[r1,#16]
 538:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 894              	 .loc 1 538 0
 895 0060 0020     	 movls r0,#0
 896              	.LVL86:
 564:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 565:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   else
 566:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 567:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_ERROR;
 897              	 .loc 1 567 0
 898 0062 0220     	 movhi r0,#2
 899              	.LVL87:
 568:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 569:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 570:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return status;
 571:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 900              	 .loc 1 571 0
 901 0064 7047     	 bx lr
 902              	.L60:
 903 0066 00BF     	 .align 2
 904              	.L59:
 905 0068 00460050 	 .word 1342195200
 906 006c 00000000 	 .word SystemCoreClock
 907 0070 C00E1602 	 .word 35000000
 908 0074 00879303 	 .word 60000000
 909 0078 00E1F505 	 .word 100000000
 910 007c 80D1F008 	 .word 150000000
 911 0080 00C2EB0B 	 .word 200000000
 912 0084 80B2E60E 	 .word 250000000
 913              	 .cfi_endproc
 914              	.LFE245:
 916              	 .section .text.XMC_ETH_MAC_Enable,"ax",%progbits
 917              	 .align 2
 918              	 .global XMC_ETH_MAC_Enable
 919              	 .thumb
 920              	 .thumb_func
 922              	XMC_ETH_MAC_Enable:
 923              	.LFB246:
 572:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 573:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* ETH MAC enable */
 574:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_Enable(XMC_ETH_MAC_t *const eth_mac)
 575:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 924              	 .loc 1 575 0
 925              	 .cfi_startproc
 926              	 
 927              	 
 928              	.LVL88:
 929 0000 08B5     	 push {r3,lr}
 930              	.LCFI13:
 931              	 .cfi_def_cfa_offset 8
 932              	 .cfi_offset 3,-8
 933              	 .cfi_offset 14,-4
 576:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_UNUSED_ARG(eth_mac);
 577:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 578:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_ETH);
 934              	 .loc 1 578 0
 935 0002 0420     	 movs r0,#4
 936              	.LVL89:
 937 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 938              	.LVL90:
 579:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #if UC_DEVICE != XMC4500
 580:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ETH0);
 581:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #endif
 582:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ETH0);
 939              	 .loc 1 582 0
 940 0008 0148     	 ldr r0,.L63
 941 000a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 942              	.LVL91:
 943 000e 08BD     	 pop {r3,pc}
 944              	.L64:
 945              	 .align 2
 946              	.L63:
 947 0010 04000020 	 .word 536870916
 948              	 .cfi_endproc
 949              	.LFE246:
 951              	 .section .text.XMC_ETH_MAC_Init,"ax",%progbits
 952              	 .align 2
 953              	 .global XMC_ETH_MAC_Init
 954              	 .thumb
 955              	 .thumb_func
 957              	XMC_ETH_MAC_Init:
 958              	.LFB234:
 262:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 959              	 .loc 1 262 0
 960              	 .cfi_startproc
 961              	 
 962              	 
 963              	.LVL92:
 964 0000 38B5     	 push {r3,r4,r5,lr}
 965              	.LCFI14:
 966              	 .cfi_def_cfa_offset 16
 967              	 .cfi_offset 3,-16
 968              	 .cfi_offset 4,-12
 969              	 .cfi_offset 5,-8
 970              	 .cfi_offset 14,-4
 971 0002 0446     	 mov r4,r0
 267:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   status = XMC_ETH_MAC_SetManagmentClockDivider(eth_mac);
 972              	 .loc 1 267 0
 973 0004 FFF7FEFF 	 bl XMC_ETH_MAC_Enable
 974              	.LVL93:
 268:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 975              	 .loc 1 268 0
 976 0008 2046     	 mov r0,r4
 977 000a FFF7FEFF 	 bl XMC_ETH_MAC_SetManagmentClockDivider
 978              	.LVL94:
 979 000e 0546     	 mov r5,r0
 980              	.LVL95:
 270:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 981              	 .loc 1 270 0
 982 0010 2046     	 mov r0,r4
 983 0012 FFF7FEFF 	 bl XMC_ETH_MAC_InitEx
 984              	.LVL96:
 272:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 985              	 .loc 1 272 0
 986 0016 A268     	 ldr r2,[r4,#8]
 987 0018 E168     	 ldr r1,[r4,#12]
 988              	.LVL97:
 989              	.LBB27:
 990              	.LBB28:
 512:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   {
 513:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   }
 514:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** }
 515:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 516:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 517:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 518:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param phy_addr PHY address
 519:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param reg_addr Register address
 520:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param data The destination to which the read data needs to be copied to
 521:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 522:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 523:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 524:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Read a PHY register <br>
 525:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 526:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 527:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function reads a PHY register. It essentially polls busy bit during max
 528:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * PHY_TIMEOUT time and reads the information into 'data' when not busy.
 529:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 530:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_ReadPhy(XMC_ETH_MAC_t *const eth_mac, uint8_t phy_addr, uint8_t re
 531:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 532:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 533:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 534:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param phy_addr PHY address
 535:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param reg_addr Register address
 536:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param data The data to write
 537:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 538:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 539:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 540:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Write a PHY register <br>
 541:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 542:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 543:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function reads a PHY register. It essentially writes the data and polls
 544:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * the busy bit until it is no longer busy.
 545:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 546:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_WritePhy(XMC_ETH_MAC_t *const eth_mac, uint8_t phy_addr, uint8_t r
 547:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 548:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 549:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 550:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param port_ctrl Port control configuration
 551:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 552:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 553:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 554:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Set port control configuration <br>
 555:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 556:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 557:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the port control by writing the configuration into the
 558:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * CON register.
 559:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 560:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \note
 561:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * MII Mode is only available in:
 562:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4500 LQFP144 and BGA144 packages
 563:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4700 LQFP144 and BGA196 packages
 564:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4800 LQFP144 and BGA196 packages
 565:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 566:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 567:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetPortControl(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_POR
 568:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 569:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   XMC_UNUSED_ARG(eth_mac);
 570:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   ETH0_CON->CON = (uint32_t)port_ctrl.raw;
 571:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** }
 572:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 573:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 574:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 575:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 576:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 577:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 578:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Set management clock divider <br>
 579:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 580:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 581:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the management clock divider by writing to the GMII_ADDRESS
 582:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * register.
 583:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 584:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SetManagmentClockDivider(XMC_ETH_MAC_t *const eth_mac);
 585:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** 
 586:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** /**
 587:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 588:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @param addr The MAC address to set
 589:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 590:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 591:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 592:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * Set MAC address <br>
 593:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  *
 594:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * \par
 595:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the MAC address by writing to the MAC_ADDRESS0_HIGH and
 596:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  * MAC_ADDRESS0_LOW registers.
 597:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****  */
 598:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetAddress(XMC_ETH_MAC_t *const eth_mac, uint64_t addr)
 599:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h **** {
 600:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_ADDRESS0_HIGH = (uint32_t)(addr >> 32);
 991              	 .loc 2 600 0
 992 001a 2368     	 ldr r3,[r4]
 993 001c 1964     	 str r1,[r3,#64]
 601:C:/Files/Projects/Git/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_ADDRESS0_LOW = (uint32_t)addr;
 994              	 .loc 2 601 0
 995 001e 2368     	 ldr r3,[r4]
 996 0020 5A64     	 str r2,[r3,#68]
 997              	.LBE28:
 998              	.LBE27:
 275:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 999              	 .loc 1 275 0
 1000 0022 2846     	 mov r0,r5
 1001 0024 38BD     	 pop {r3,r4,r5,pc}
 1002              	 .cfi_endproc
 1003              	.LFE234:
 1005 0026 00BF     	 .section .text.XMC_ETH_MAC_Disable,"ax",%progbits
 1006              	 .align 2
 1007              	 .global XMC_ETH_MAC_Disable
 1008              	 .thumb
 1009              	 .thumb_func
 1011              	XMC_ETH_MAC_Disable:
 1012              	.LFB247:
 583:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 584:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 585:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* ETH MAC disable */
 586:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_Disable(XMC_ETH_MAC_t *const eth_mac)
 587:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1013              	 .loc 1 587 0
 1014              	 .cfi_startproc
 1015              	 
 1016              	 
 1017              	.LVL98:
 1018 0000 08B5     	 push {r3,lr}
 1019              	.LCFI15:
 1020              	 .cfi_def_cfa_offset 8
 1021              	 .cfi_offset 3,-8
 1022              	 .cfi_offset 14,-4
 588:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_UNUSED_ARG(eth_mac);
 589:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 590:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ETH0);
 1023              	 .loc 1 590 0
 1024 0002 0348     	 ldr r0,.L69
 1025              	.LVL99:
 1026 0004 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1027              	.LVL100:
 591:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #if UC_DEVICE != XMC4500
 592:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ETH0);
 593:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** #endif
 594:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_SCU_CLOCK_DisableClock(XMC_SCU_CLOCK_ETH);
 1028              	 .loc 1 594 0
 1029 0008 0420     	 movs r0,#4
 1030 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_DisableClock
 1031              	.LVL101:
 1032 000e 08BD     	 pop {r3,pc}
 1033              	.L70:
 1034              	 .align 2
 1035              	.L69:
 1036 0010 04000020 	 .word 536870916
 1037              	 .cfi_endproc
 1038              	.LFE247:
 1040              	 .section .text.XMC_ETH_MAC_ReadPhy,"ax",%progbits
 1041              	 .align 2
 1042              	 .global XMC_ETH_MAC_ReadPhy
 1043              	 .thumb
 1044              	 .thumb_func
 1046              	XMC_ETH_MAC_ReadPhy:
 1047              	.LFB248:
 595:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 596:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 597:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Read physical layer and obtain status */
 598:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_ReadPhy(XMC_ETH_MAC_t *eth_mac, uint8_t phy_addr, uint8_t reg_addr
 599:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1048              	 .loc 1 599 0
 1049              	 .cfi_startproc
 1050              	 
 1051              	 
 1052              	 
 1053              	.LVL102:
 1054 0000 30B4     	 push {r4,r5}
 1055              	.LCFI16:
 1056              	 .cfi_def_cfa_offset 8
 1057              	 .cfi_offset 4,-8
 1058              	 .cfi_offset 5,-4
 600:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t retries;
 601:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 602:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_PhyRead: Parameter error", data != NULL);
 603:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 604:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->GMII_ADDRESS = (uint32_t)((eth_mac->regs->GMII_ADDRESS & (uint32_t)ETH_GMII_ADDRES
 1059              	 .loc 1 604 0
 1060 0002 0568     	 ldr r5,[r0]
 1061 0004 2C69     	 ldr r4,[r5,#16]
 1062 0006 04F03C04 	 and r4,r4,#60
 1063 000a 44F00104 	 orr r4,r4,#1
 1064 000e 44EA8212 	 orr r2,r4,r2,lsl#6
 1065              	.LVL103:
 1066 0012 42EAC121 	 orr r1,r2,r1,lsl#11
 1067              	.LVL104:
 1068 0016 2961     	 str r1,[r5,#16]
 1069              	.LVL105:
 605:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 606:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)phy_addr << ETH_GMII_ADDRESS_PA_Pos
 607:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)reg_addr << ETH_GMII_ADDRESS_MR_Pos
 608:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 609:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Poll busy bit during max PHY_TIMEOUT time */
 610:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   retries = 0U;
 611:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   do
 612:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 613:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     if ((eth_mac->regs->GMII_ADDRESS & ETH_GMII_ADDRESS_MB_Msk) == 0U)
 1070              	 .loc 1 613 0
 1071 0018 0068     	 ldr r0,[r0]
 1072              	.LVL106:
 1073 001a 4FF6FF72 	 movw r2,#65535
 1074              	.LVL107:
 1075              	.L74:
 1076 001e 0169     	 ldr r1,[r0,#16]
 1077 0020 11F0010F 	 tst r1,#1
 1078 0024 03D1     	 bne .L72
 614:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 615:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       *data = (uint16_t)(eth_mac->regs->GMII_DATA & ETH_GMII_DATA_MD_Msk);
 1079              	 .loc 1 615 0
 1080 0026 4269     	 ldr r2,[r0,#20]
 1081              	.LVL108:
 1082 0028 1A80     	 strh r2,[r3]
 616:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       return XMC_ETH_MAC_STATUS_OK;
 1083              	 .loc 1 616 0
 1084 002a 0020     	 movs r0,#0
 1085 002c 02E0     	 b .L73
 1086              	.LVL109:
 1087              	.L72:
 617:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 618:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     ++retries;
 619:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   } while (retries < XMC_ETH_MAC_PHY_MAX_RETRIES);
 1088              	 .loc 1 619 0
 1089 002e 013A     	 subs r2,r2,#1
 1090              	.LVL110:
 1091 0030 F5D1     	 bne .L74
 620:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 621:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return XMC_ETH_MAC_STATUS_ERROR;
 1092              	 .loc 1 621 0
 1093 0032 0220     	 movs r0,#2
 1094              	.LVL111:
 1095              	.L73:
 622:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 1096              	 .loc 1 622 0
 1097 0034 30BC     	 pop {r4,r5}
 1098              	.LCFI17:
 1099              	 .cfi_restore 5
 1100              	 .cfi_restore 4
 1101              	 .cfi_def_cfa_offset 0
 1102 0036 7047     	 bx lr
 1103              	 .cfi_endproc
 1104              	.LFE248:
 1106              	 .section .text.XMC_ETH_MAC_WritePhy,"ax",%progbits
 1107              	 .align 2
 1108              	 .global XMC_ETH_MAC_WritePhy
 1109              	 .thumb
 1110              	 .thumb_func
 1112              	XMC_ETH_MAC_WritePhy:
 1113              	.LFB249:
 623:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 624:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Write physical layer and return status */
 625:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_WritePhy(XMC_ETH_MAC_t *eth_mac, uint8_t phy_addr, uint8_t reg_add
 626:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1114              	 .loc 1 626 0
 1115              	 .cfi_startproc
 1116              	 
 1117              	 
 1118              	 
 1119              	.LVL112:
 1120 0000 10B4     	 push {r4}
 1121              	.LCFI18:
 1122              	 .cfi_def_cfa_offset 4
 1123              	 .cfi_offset 4,-4
 627:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t retries;
 628:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 629:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->GMII_DATA  = data;
 1124              	 .loc 1 629 0
 1125 0002 0468     	 ldr r4,[r0]
 1126 0004 6361     	 str r3,[r4,#20]
 630:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->GMII_ADDRESS = (uint32_t)((eth_mac->regs->GMII_ADDRESS & (uint32_t)ETH_GMII_ADDRES
 1127              	 .loc 1 630 0
 1128 0006 0468     	 ldr r4,[r0]
 1129 0008 2369     	 ldr r3,[r4,#16]
 1130              	.LVL113:
 1131 000a 03F03C03 	 and r3,r3,#60
 1132 000e 43F00303 	 orr r3,r3,#3
 1133 0012 43EA8212 	 orr r2,r3,r2,lsl#6
 1134              	.LVL114:
 1135 0016 42EAC121 	 orr r1,r2,r1,lsl#11
 1136              	.LVL115:
 1137 001a 2161     	 str r1,[r4,#16]
 1138              	.LVL116:
 631:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 632:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MW_Msk |
 633:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)phy_addr << ETH_GMII_ADDRESS_PA_Pos
 634:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)reg_addr << ETH_GMII_ADDRESS_MR_Pos
 635:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 636:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****    /* Poll busy bit during max PHY_TIMEOUT time */
 637:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   retries = 0U;
 638:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   do
 639:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 640:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     if ((eth_mac->regs->GMII_ADDRESS & ETH_GMII_ADDRESS_MB_Msk) == 0U)
 1139              	 .loc 1 640 0
 1140 001c 0168     	 ldr r1,[r0]
 1141 001e 4FF6FF73 	 movw r3,#65535
 1142              	.LVL117:
 1143              	.L79:
 1144 0022 0A69     	 ldr r2,[r1,#16]
 1145 0024 12F0010F 	 tst r2,#1
 1146 0028 03D0     	 beq .L80
 1147              	.LVL118:
 641:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 642:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       return XMC_ETH_MAC_STATUS_OK;
 643:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 644:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     ++retries;
 645:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   } while (retries < XMC_ETH_MAC_PHY_MAX_RETRIES);
 1148              	 .loc 1 645 0
 1149 002a 013B     	 subs r3,r3,#1
 1150              	.LVL119:
 1151 002c F9D1     	 bne .L79
 646:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 647:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return XMC_ETH_MAC_STATUS_ERROR;
 1152              	 .loc 1 647 0
 1153 002e 0220     	 movs r0,#2
 1154              	.LVL120:
 1155 0030 00E0     	 b .L78
 1156              	.LVL121:
 1157              	.L80:
 642:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 1158              	 .loc 1 642 0
 1159 0032 0020     	 movs r0,#0
 1160              	.LVL122:
 1161              	.L78:
 648:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 1162              	 .loc 1 648 0
 1163 0034 5DF8044B 	 ldr r4,[sp],#4
 1164              	.LCFI19:
 1165              	 .cfi_restore 4
 1166              	 .cfi_def_cfa_offset 0
 1167 0038 7047     	 bx lr
 1168              	 .cfi_endproc
 1169              	.LFE249:
 1171 003a 00BF     	 .section .text.XMC_ETH_MAC_FlushTx,"ax",%progbits
 1172              	 .align 2
 1173              	 .global XMC_ETH_MAC_FlushTx
 1174              	 .thumb
 1175              	 .thumb_func
 1177              	XMC_ETH_MAC_FlushTx:
 1178              	.LFB250:
 649:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 650:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Flush TX */
 651:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_FlushTx(XMC_ETH_MAC_t *const eth_mac)
 652:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1179              	 .loc 1 652 0
 1180              	 .cfi_startproc
 1181              	 
 1182              	 
 1183              	.LVL123:
 1184 0000 38B5     	 push {r3,r4,r5,lr}
 1185              	.LCFI20:
 1186              	 .cfi_def_cfa_offset 16
 1187              	 .cfi_offset 3,-16
 1188              	 .cfi_offset 4,-12
 1189              	 .cfi_offset 5,-8
 1190              	 .cfi_offset 14,-4
 1191 0002 0546     	 mov r5,r0
 653:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE &= (uint32_t)~ETH_OPERATION_MODE_ST_Msk;
 1192              	 .loc 1 653 0
 1193 0004 0268     	 ldr r2,[r0]
 1194 0006 41F21804 	 movw r4,#4120
 1195 000a 1359     	 ldr r3,[r2,r4]
 1196 000c 23F40053 	 bic r3,r3,#8192
 1197 0010 1351     	 str r3,[r2,r4]
 654:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_InitTxDescriptors(eth_mac);
 1198              	 .loc 1 654 0
 1199 0012 FFF7FEFF 	 bl XMC_ETH_MAC_InitTxDescriptors
 1200              	.LVL124:
 655:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE |= (uint32_t)ETH_OPERATION_MODE_ST_Msk;
 1201              	 .loc 1 655 0
 1202 0016 2A68     	 ldr r2,[r5]
 1203 0018 1359     	 ldr r3,[r2,r4]
 1204 001a 43F40053 	 orr r3,r3,#8192
 1205 001e 1351     	 str r3,[r2,r4]
 1206 0020 38BD     	 pop {r3,r4,r5,pc}
 1207              	 .cfi_endproc
 1208              	.LFE250:
 1210 0022 00BF     	 .section .text.XMC_ETH_MAC_FlushRx,"ax",%progbits
 1211              	 .align 2
 1212              	 .global XMC_ETH_MAC_FlushRx
 1213              	 .thumb
 1214              	 .thumb_func
 1216              	XMC_ETH_MAC_FlushRx:
 1217              	.LFB251:
 656:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 657:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 658:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Flush RX */
 659:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_FlushRx(XMC_ETH_MAC_t *const eth_mac)
 660:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1218              	 .loc 1 660 0
 1219              	 .cfi_startproc
 1220              	 
 1221              	 
 1222              	.LVL125:
 1223 0000 38B5     	 push {r3,r4,r5,lr}
 1224              	.LCFI21:
 1225              	 .cfi_def_cfa_offset 16
 1226              	 .cfi_offset 3,-16
 1227              	 .cfi_offset 4,-12
 1228              	 .cfi_offset 5,-8
 1229              	 .cfi_offset 14,-4
 1230 0002 0546     	 mov r5,r0
 661:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE &= (uint32_t)~ETH_OPERATION_MODE_SR_Msk;
 1231              	 .loc 1 661 0
 1232 0004 0268     	 ldr r2,[r0]
 1233 0006 41F21804 	 movw r4,#4120
 1234 000a 1359     	 ldr r3,[r2,r4]
 1235 000c 23F00203 	 bic r3,r3,#2
 1236 0010 1351     	 str r3,[r2,r4]
 662:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_InitRxDescriptors(eth_mac);
 1237              	 .loc 1 662 0
 1238 0012 FFF7FEFF 	 bl XMC_ETH_MAC_InitRxDescriptors
 1239              	.LVL126:
 663:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE |= (uint32_t)ETH_OPERATION_MODE_SR_Msk;
 1240              	 .loc 1 663 0
 1241 0016 2A68     	 ldr r2,[r5]
 1242 0018 1359     	 ldr r3,[r2,r4]
 1243 001a 43F00203 	 orr r3,r3,#2
 1244 001e 1351     	 str r3,[r2,r4]
 1245 0020 38BD     	 pop {r3,r4,r5,pc}
 1246              	 .cfi_endproc
 1247              	.LFE251:
 1249 0022 00BF     	 .section .text.XMC_ETH_MAC_SetWakeUpFrameFilter,"ax",%progbits
 1250              	 .align 2
 1251              	 .global XMC_ETH_MAC_SetWakeUpFrameFilter
 1252              	 .thumb
 1253              	 .thumb_func
 1255              	XMC_ETH_MAC_SetWakeUpFrameFilter:
 1256              	.LFB252:
 664:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 665:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 666:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Set wakeup frame filter */
 667:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_SetWakeUpFrameFilter(XMC_ETH_MAC_t *const eth_mac,
 668:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****                                       const uint32_t (*const filter)[XMC_ETH_WAKEUP_REGISTER_LENGTH
 669:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1257              	 .loc 1 669 0
 1258              	 .cfi_startproc
 1259              	 
 1260              	 
 1261              	 
 1262              	.LVL127:
 1263 0000 10B4     	 push {r4}
 1264              	.LCFI22:
 1265              	 .cfi_def_cfa_offset 4
 1266              	 .cfi_offset 4,-4
 1267              	.LVL128:
 1268 0002 0B1F     	 subs r3,r1,#4
 1269 0004 1C31     	 adds r1,r1,#28
 1270              	.LVL129:
 1271              	.L88:
 670:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t i = 0U;
 671:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 672:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Fill Remote Wake-up frame filter register with buffer data */
 673:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   for (i = 0U; i < XMC_ETH_WAKEUP_REGISTER_LENGTH; i++)
 674:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 675:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     /* Write each time to the same register */
 676:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     eth_mac->regs->REMOTE_WAKE_UP_FRAME_FILTER = (*filter)[i];
 1272              	 .loc 1 676 0 discriminator 3
 1273 0006 0268     	 ldr r2,[r0]
 1274 0008 53F8044F 	 ldr r4,[r3,#4]!
 1275 000c 9462     	 str r4,[r2,#40]
 673:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 1276              	 .loc 1 673 0 discriminator 3
 1277 000e 8B42     	 cmp r3,r1
 1278 0010 F9D1     	 bne .L88
 677:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 678:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 1279              	 .loc 1 678 0
 1280 0012 5DF8044B 	 ldr r4,[sp],#4
 1281              	.LCFI23:
 1282              	 .cfi_restore 4
 1283              	 .cfi_def_cfa_offset 0
 1284 0016 7047     	 bx lr
 1285              	 .cfi_endproc
 1286              	.LFE252:
 1288              	 .section .text.XMC_ETH_MAC_EnableEvent,"ax",%progbits
 1289              	 .align 2
 1290              	 .global XMC_ETH_MAC_EnableEvent
 1291              	 .thumb
 1292              	 .thumb_func
 1294              	XMC_ETH_MAC_EnableEvent:
 1295              	.LFB253:
 679:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 680:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Enable event */
 681:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_EnableEvent(XMC_ETH_MAC_t *const eth_mac, uint32_t event)
 682:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1296              	 .loc 1 682 0
 1297              	 .cfi_startproc
 1298              	 
 1299              	 
 1300              	 
 1301              	.LVL130:
 683:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_EnableDMAEvent: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 684:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 685:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK &= ~(event >> 16U);
 1302              	 .loc 1 685 0
 1303 0000 0268     	 ldr r2,[r0]
 1304 0002 D36B     	 ldr r3,[r2,#60]
 1305 0004 23EA1143 	 bic r3,r3,r1,lsr#16
 1306 0008 D363     	 str r3,[r2,#60]
 686:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 687:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   event &= (uint16_t)0x7fffU;
 1307              	 .loc 1 687 0
 1308 000a C1F30E03 	 ubfx r3,r1,#0,#15
 1309              	.LVL131:
 688:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if (XCM_ETH_MAC_IsNormalEvent(event))
 1310              	 .loc 1 688 0
 1311 000e 44F24502 	 movw r2,#16453
 1312 0012 1142     	 tst r1,r2
 689:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 690:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   event |= (uint32_t)ETH_INTERRUPT_ENABLE_NIE_Msk;
 1313              	 .loc 1 690 0
 1314 0014 18BF     	 it ne
 1315 0016 43F48033 	 orrne r3,r3,#65536
 1316              	.LVL132:
 691:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 692:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 693:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if (XCM_ETH_MAC_IsAbnormalEvent(event))
 1317              	 .loc 1 693 0
 1318 001a 42F2BA72 	 movw r2,#10170
 1319 001e 1342     	 tst r3,r2
 694:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 695:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   event |= (uint32_t)ETH_INTERRUPT_ENABLE_AIE_Msk;
 1320              	 .loc 1 695 0
 1321 0020 18BF     	 it ne
 1322 0022 43F40043 	 orrne r3,r3,#32768
 1323              	.LVL133:
 696:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 697:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 698:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_ENABLE |= event;
 1324              	 .loc 1 698 0
 1325 0026 0068     	 ldr r0,[r0]
 1326              	.LVL134:
 1327 0028 41F21C01 	 movw r1,#4124
 1328              	.LVL135:
 1329 002c 4258     	 ldr r2,[r0,r1]
 1330 002e 1343     	 orrs r3,r3,r2
 1331              	.LVL136:
 1332 0030 4350     	 str r3,[r0,r1]
 1333 0032 7047     	 bx lr
 1334              	 .cfi_endproc
 1335              	.LFE253:
 1337              	 .section .text.XMC_ETH_MAC_DisableEvent,"ax",%progbits
 1338              	 .align 2
 1339              	 .global XMC_ETH_MAC_DisableEvent
 1340              	 .thumb
 1341              	 .thumb_func
 1343              	XMC_ETH_MAC_DisableEvent:
 1344              	.LFB254:
 699:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 700:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 701:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Disable event */
 702:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_DisableEvent(XMC_ETH_MAC_t *const eth_mac, uint32_t event)
 703:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1345              	 .loc 1 703 0
 1346              	 .cfi_startproc
 1347              	 
 1348              	 
 1349              	 
 1350              	.LVL137:
 704:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_DisableDMAEvent: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->
 705:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 706:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK |= event >> 16U;
 1351              	 .loc 1 706 0
 1352 0000 0268     	 ldr r2,[r0]
 1353 0002 D36B     	 ldr r3,[r2,#60]
 1354 0004 43EA1143 	 orr r3,r3,r1,lsr#16
 1355 0008 D363     	 str r3,[r2,#60]
 1356              	.LVL138:
 707:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 708:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   event &= 0x7fffU;
 709:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_ENABLE &= ~event;
 1357              	 .loc 1 709 0
 1358 000a 0068     	 ldr r0,[r0]
 1359              	.LVL139:
 1360 000c 41F21C02 	 movw r2,#4124
 1361 0010 8358     	 ldr r3,[r0,r2]
 708:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_ENABLE &= ~event;
 1362              	 .loc 1 708 0
 1363 0012 C1F30E01 	 ubfx r1,r1,#0,#15
 1364              	.LVL140:
 1365              	 .loc 1 709 0
 1366 0016 23EA0101 	 bic r1,r3,r1
 1367 001a 8150     	 str r1,[r0,r2]
 1368 001c 7047     	 bx lr
 1369              	 .cfi_endproc
 1370              	.LFE254:
 1372 001e 00BF     	 .section .text.XMC_ETH_MAC_ClearEventStatus,"ax",%progbits
 1373              	 .align 2
 1374              	 .global XMC_ETH_MAC_ClearEventStatus
 1375              	 .thumb
 1376              	 .thumb_func
 1378              	XMC_ETH_MAC_ClearEventStatus:
 1379              	.LFB255:
 710:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 711:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 712:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Clear event status */
 713:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_ClearEventStatus(XMC_ETH_MAC_t *const eth_mac, uint32_t event)
 714:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1380              	 .loc 1 714 0
 1381              	 .cfi_startproc
 1382              	 
 1383              	 
 1384              	 
 1385              	.LVL141:
 715:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ClearEventStatus: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac-
 716:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 717:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if ((eth_mac->regs->STATUS & ETH_STATUS_NIS_Msk) != 0U)
 1386              	 .loc 1 717 0
 1387 0000 0368     	 ldr r3,[r0]
 1388 0002 41F21402 	 movw r2,#4116
 1389 0006 9A58     	 ldr r2,[r3,r2]
 1390 0008 12F4803F 	 tst r2,#65536
 718:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 719:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     event |= (uint32_t)ETH_STATUS_NIS_Msk;
 1391              	 .loc 1 719 0
 1392 000c 18BF     	 it ne
 1393 000e 41F48031 	 orrne r1,r1,#65536
 1394              	.LVL142:
 720:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 721:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 722:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if ((eth_mac->regs->STATUS & ETH_STATUS_AIS_Msk) != 0U)
 1395              	 .loc 1 722 0
 1396 0012 41F21402 	 movw r2,#4116
 1397 0016 9A58     	 ldr r2,[r3,r2]
 1398 0018 12F4004F 	 tst r2,#32768
 723:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 724:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     event |= (uint32_t)ETH_STATUS_AIS_Msk;
 1399              	 .loc 1 724 0
 1400 001c 18BF     	 it ne
 1401 001e 41F40041 	 orrne r1,r1,#32768
 1402              	.LVL143:
 725:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 726:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 727:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->STATUS = event & 0x0001FFFFU;
 1403              	 .loc 1 727 0
 1404 0022 C1F31001 	 ubfx r1,r1,#0,#17
 1405              	.LVL144:
 1406 0026 41F21402 	 movw r2,#4116
 1407 002a 9950     	 str r1,[r3,r2]
 1408 002c 7047     	 bx lr
 1409              	 .cfi_endproc
 1410              	.LFE255:
 1412 002e 00BF     	 .section .text.XMC_ETH_MAC_GetEventStatus,"ax",%progbits
 1413              	 .align 2
 1414              	 .global XMC_ETH_MAC_GetEventStatus
 1415              	 .thumb
 1416              	 .thumb_func
 1418              	XMC_ETH_MAC_GetEventStatus:
 1419              	.LFB256:
 728:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 729:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 730:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Obtain event status */
 731:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_GetEventStatus(const XMC_ETH_MAC_t *const eth_mac)
 732:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1420              	 .loc 1 732 0
 1421              	 .cfi_startproc
 1422              	 
 1423              	 
 1424              	 
 1425              	.LVL145:
 733:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t temp_status = 0;
 734:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetEventStatus: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 735:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   
 736:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   temp_status =  (eth_mac->regs->STATUS & (uint32_t)0x7ffUL);
 1426              	 .loc 1 736 0
 1427 0000 0268     	 ldr r2,[r0]
 1428 0002 41F21403 	 movw r3,#4116
 1429 0006 D358     	 ldr r3,[r2,r3]
 1430              	.LVL146:
 737:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 738:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return ((uint32_t)((eth_mac->regs->INTERRUPT_STATUS & (ETH_INTERRUPT_MASK_PMTIM_Msk | ETH_INTERRU
 1431              	 .loc 1 738 0
 1432 0008 906B     	 ldr r0,[r2,#56]
 1433              	.LVL147:
 1434 000a 00F40270 	 and r0,r0,#520
 736:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 1435              	 .loc 1 736 0
 1436 000e C3F30A03 	 ubfx r3,r3,#0,#11
 1437              	.LVL148:
 739:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       temp_status);
 740:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 1438              	 .loc 1 740 0
 1439 0012 43EA0040 	 orr r0,r3,r0,lsl#16
 1440 0016 7047     	 bx lr
 1441              	 .cfi_endproc
 1442              	.LFE256:
 1444              	 .section .text.XMC_ETH_MAC_ReturnRxDescriptor,"ax",%progbits
 1445              	 .align 2
 1446              	 .global XMC_ETH_MAC_ReturnRxDescriptor
 1447              	 .thumb
 1448              	 .thumb_func
 1450              	XMC_ETH_MAC_ReturnRxDescriptor:
 1451              	.LFB257:
 741:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 742:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Return RX descriptor */
 743:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_ReturnRxDescriptor(XMC_ETH_MAC_t *const eth_mac)
 744:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1452              	 .loc 1 744 0
 1453              	 .cfi_startproc
 1454              	 
 1455              	 
 1456              	 
 1457              	.LVL149:
 745:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->rx_desc[eth_mac->rx_index].status |= ETH_MAC_DMA_RDES0_OWN;
 1458              	 .loc 1 745 0
 1459 0000 90F82730 	 ldrb r3,[r0,#39]
 1460 0004 5B01     	 lsls r3,r3,#5
 1461 0006 0169     	 ldr r1,[r0,#16]
 1462 0008 CA58     	 ldr r2,[r1,r3]
 1463 000a 42F00042 	 orr r2,r2,#-2147483648
 1464 000e CA50     	 str r2,[r1,r3]
 746:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->rx_index++;
 1465              	 .loc 1 746 0
 1466 0010 90F82730 	 ldrb r3,[r0,#39]
 1467 0014 0133     	 adds r3,r3,#1
 1468 0016 DBB2     	 uxtb r3,r3
 1469 0018 80F82730 	 strb r3,[r0,#39]
 747:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if (eth_mac->rx_index == eth_mac->num_rx_buf)
 1470              	 .loc 1 747 0
 1471 001c 90F82420 	 ldrb r2,[r0,#36]
 1472 0020 9A42     	 cmp r2,r3
 748:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 749:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     eth_mac->rx_index = 0U;
 1473              	 .loc 1 749 0
 1474 0022 04BF     	 itt eq
 1475 0024 0023     	 moveq r3,#0
 1476 0026 80F82730 	 strbeq r3,[r0,#39]
 1477 002a 7047     	 bx lr
 1478              	 .cfi_endproc
 1479              	.LFE257:
 1481              	 .section .text.XMC_ETH_MAC_ReturnTxDescriptor,"ax",%progbits
 1482              	 .align 2
 1483              	 .global XMC_ETH_MAC_ReturnTxDescriptor
 1484              	 .thumb
 1485              	 .thumb_func
 1487              	XMC_ETH_MAC_ReturnTxDescriptor:
 1488              	.LFB258:
 750:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   } 
 751:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 752:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 753:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Return TX descriptor */
 754:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_ReturnTxDescriptor(XMC_ETH_MAC_t *const eth_mac)
 755:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1489              	 .loc 1 755 0
 1490              	 .cfi_startproc
 1491              	 
 1492              	 
 1493              	 
 1494              	.LVL150:
 756:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->tx_ts_index = eth_mac->tx_index;
 1495              	 .loc 1 756 0
 1496 0000 90F82630 	 ldrb r3,[r0,#38]
 1497 0004 80F82830 	 strb r3,[r0,#40]
 757:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 758:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->tx_desc[eth_mac->tx_index].status |= ETH_MAC_DMA_TDES0_CIC |ETH_MAC_DMA_TDES0_OWN;
 1498              	 .loc 1 758 0
 1499 0008 5B01     	 lsls r3,r3,#5
 1500 000a 4169     	 ldr r1,[r0,#20]
 1501 000c CA58     	 ldr r2,[r1,r3]
 1502 000e 42F00042 	 orr r2,r2,#-2147483648
 1503 0012 42F44002 	 orr r2,r2,#12582912
 1504 0016 CA50     	 str r2,[r1,r3]
 759:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->tx_index++;
 1505              	 .loc 1 759 0
 1506 0018 90F82630 	 ldrb r3,[r0,#38]
 1507 001c 0133     	 adds r3,r3,#1
 1508 001e DBB2     	 uxtb r3,r3
 1509 0020 80F82630 	 strb r3,[r0,#38]
 760:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if (eth_mac->tx_index == eth_mac->num_tx_buf)
 1510              	 .loc 1 760 0
 1511 0024 90F82520 	 ldrb r2,[r0,#37]
 1512 0028 9A42     	 cmp r2,r3
 761:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 762:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     eth_mac->tx_index = 0U;
 1513              	 .loc 1 762 0
 1514 002a 04BF     	 itt eq
 1515 002c 0023     	 moveq r3,#0
 1516 002e 80F82630 	 strbeq r3,[r0,#38]
 763:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   } 
 764:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 765:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->frame_end = NULL;
 1517              	 .loc 1 765 0
 1518 0032 0023     	 movs r3,#0
 1519 0034 0362     	 str r3,[r0,#32]
 1520 0036 7047     	 bx lr
 1521              	 .cfi_endproc
 1522              	.LFE258:
 1524              	 .section .text.XMC_ETH_MAC_SetVLANTag,"ax",%progbits
 1525              	 .align 2
 1526              	 .global XMC_ETH_MAC_SetVLANTag
 1527              	 .thumb
 1528              	 .thumb_func
 1530              	XMC_ETH_MAC_SetVLANTag:
 1531              	.LFB259:
 766:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 767:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 768:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Set VLAN tag */
 769:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_SetVLANTag(XMC_ETH_MAC_t *const eth_mac, uint32_t tag)
 770:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1532              	 .loc 1 770 0
 1533              	 .cfi_startproc
 1534              	 
 1535              	 
 1536              	 
 1537              	.LVL151:
 771:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetVLANTag: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs)
 772:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 773:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->VLAN_TAG = tag;
 1538              	 .loc 1 773 0
 1539 0000 0368     	 ldr r3,[r0]
 1540 0002 D961     	 str r1,[r3,#28]
 1541 0004 7047     	 bx lr
 1542              	 .cfi_endproc
 1543              	.LFE259:
 1545 0006 00BF     	 .section .text.XMC_ETH_MAC_InitPTP,"ax",%progbits
 1546              	 .align 2
 1547              	 .global XMC_ETH_MAC_InitPTP
 1548              	 .thumb
 1549              	 .thumb_func
 1551              	XMC_ETH_MAC_InitPTP:
 1552              	.LFB260:
 774:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 775:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 776:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Initialize PTP */
 777:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_InitPTP(XMC_ETH_MAC_t *const eth_mac, uint32_t config)
 778:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1553              	 .loc 1 778 0
 1554              	 .cfi_startproc
 1555              	 
 1556              	 
 1557              	 
 1558              	.LVL152:
 779:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitPTP: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 780:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 781:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Mask the time stamp interrupt */
 782:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK |= (uint32_t)ETH_INTERRUPT_MASK_TSIM_Msk;
 1559              	 .loc 1 782 0
 1560 0000 0268     	 ldr r2,[r0]
 1561 0002 D36B     	 ldr r3,[r2,#60]
 1562 0004 43F40073 	 orr r3,r3,#512
 1563 0008 D363     	 str r3,[r2,#60]
 783:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 784:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Enable time stamp, rollover mode of nanosecond counter set to digital mode, i.e. after 0x3B9AC
 785:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL = ETH_TIMESTAMP_CONTROL_TSENA_Msk | ETH_TIMESTAMP_CONTROL_TSCTRL
 1564              	 .loc 1 785 0
 1565 000a 0268     	 ldr r2,[r0]
 1566 000c 41F40073 	 orr r3,r1,#512
 1567 0010 43F00103 	 orr r3,r3,#1
 1568 0014 C2F80037 	 str r3,[r2,#1792]
 786:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 787:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if ((config & (uint32_t)XMC_ETH_MAC_TIMESTAMP_CONFIG_FINE_UPDATE) != 0U)
 1569              	 .loc 1 787 0
 1570 0018 11F0020F 	 tst r1,#2
 1571 001c 2FD0     	 beq .L105
 1572              	.LBB29:
 788:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 789:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     /* Program sub-second increment register based on PTP clock frequency ~ 50MHz */
 790:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     eth_mac->regs->SUB_SECOND_INCREMENT = 20;
 1573              	 .loc 1 790 0
 1574 001e 0368     	 ldr r3,[r0]
 1575 0020 1422     	 movs r2,#20
 1576 0022 C3F80427 	 str r2,[r3,#1796]
 1577              	.LBB30:
 1578              	.LBB31:
2567:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
 1579              	 .loc 3 2567 0
 1580 0026 2A4B     	 ldr r3,.L111
 1581 0028 1A69     	 ldr r2,[r3,#16]
 1582              	.LVL153:
 1583              	.LBE31:
 1584              	.LBE30:
 791:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     
 792:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     /* fSYS = Reference Clock for the Time Stamp Update Logic*/
 793:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     float ratio = (float)XMC_SCU_CLOCK_GetSystemClockFrequency() / (float)XMC_ETH_SUB_SECOND_UPDATE
 794:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     eth_mac->regs->TIMESTAMP_ADDEND = (uint32_t)(((float)0x100000000ULL / ratio) + 0.5F);
 1585              	 .loc 1 794 0
 1586 002a 0168     	 ldr r1,[r0]
 1587              	.LVL154:
 1588              	.LBB33:
 1589              	.LBB32:
2567:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
 1590              	 .loc 3 2567 0
 1591 002c 02F00102 	 and r2,r2,#1
 1592              	.LVL155:
 1593 0030 284B     	 ldr r3,.L111+4
 1594 0032 1B68     	 ldr r3,[r3]
 1595 0034 9340     	 lsls r3,r3,r2
 1596              	.LBE32:
 1597              	.LBE33:
 793:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     eth_mac->regs->TIMESTAMP_ADDEND = (uint32_t)(((float)0x100000000ULL / ratio) + 0.5F);
 1598              	 .loc 1 793 0
 1599 0036 07EE903A 	 fmsr s15,r3
 1600 003a F8EE677A 	 fuitos s15,s15
 1601 003e 9FED267A 	 flds s14,.L111+8
 1602 0042 87EE877A 	 fdivs s14,s15,s14
 1603              	.LVL156:
 1604              	 .loc 1 794 0
 1605 0046 DFED257A 	 flds s15,.L111+12
 1606 004a C7EE877A 	 fdivs s15,s15,s14
 1607 004e B6EE007A 	 fconsts s14,#96
 1608              	.LVL157:
 1609 0052 77EE877A 	 fadds s15,s15,s14
 1610 0056 FCEEE77A 	 ftouizs s15,s15
 1611 005a 17EE903A 	 fmrs r3,s15
 1612 005e C1F81837 	 str r3,[r1,#1816]
 795:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 796:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     /* Addend register update */
 797:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSADDREG_Msk;
 1613              	 .loc 1 797 0
 1614 0062 0268     	 ldr r2,[r0]
 1615 0064 D2F80037 	 ldr r3,[r2,#1792]
 1616 0068 43F02003 	 orr r3,r3,#32
 1617 006c C2F80037 	 str r3,[r2,#1792]
 798:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 799:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     /* Poll the Timestamp Control register until the bit TSADDREG is cleared */
 800:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSADDREG_Msk);
 1618              	 .loc 1 800 0
 1619 0070 0268     	 ldr r2,[r0]
 1620              	.L106:
 1621              	 .loc 1 800 0 is_stmt 0 discriminator 1
 1622 0072 D2F80037 	 ldr r3,[r2,#1792]
 1623 0076 13F0200F 	 tst r3,#32
 1624 007a FAD1     	 bne .L106
 1625 007c 19E0     	 b .L107
 1626              	.LVL158:
 1627              	.L105:
 1628              	.LBE29:
 801:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 802:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   else
 803:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 804:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Program sub-second increment register based on PTP clock frequency = fSYS/2 */
 805:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->SUB_SECOND_INCREMENT = (uint32_t)(((float)1000000000 / (float)XMC_SCU_CLOCK_GetSys
 1629              	 .loc 1 805 0 is_stmt 1
 1630 007e 0168     	 ldr r1,[r0]
 1631              	.LVL159:
 1632              	.LBB34:
 1633              	.LBB35:
2567:C:/Files/Projects/Git/XMCLib/inc\xmc4_scu.h **** }
 1634              	 .loc 3 2567 0
 1635 0080 134B     	 ldr r3,.L111
 1636 0082 1A69     	 ldr r2,[r3,#16]
 1637 0084 02F00102 	 and r2,r2,#1
 1638 0088 124B     	 ldr r3,.L111+4
 1639 008a 1B68     	 ldr r3,[r3]
 1640 008c 9340     	 lsls r3,r3,r2
 1641              	.LBE35:
 1642              	.LBE34:
 1643              	 .loc 1 805 0
 1644 008e 07EE903A 	 fmsr s15,r3
 1645 0092 B8EE677A 	 fuitos s14,s15
 1646 0096 DFED127A 	 flds s15,.L111+16
 1647 009a C7EE877A 	 fdivs s15,s15,s14
 1648 009e B6EE007A 	 fconsts s14,#96
 1649 00a2 77EE877A 	 fadds s15,s15,s14
 1650 00a6 FCEEE77A 	 ftouizs s15,s15
 1651 00aa 17EE903A 	 fmrs r3,s15
 1652 00ae C1F80437 	 str r3,[r1,#1796]
 1653              	.L107:
 806:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 807:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   
 808:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSINIT_Msk;
 1654              	 .loc 1 808 0
 1655 00b2 0268     	 ldr r2,[r0]
 1656 00b4 D2F80037 	 ldr r3,[r2,#1792]
 1657 00b8 43F00403 	 orr r3,r3,#4
 1658 00bc C2F80037 	 str r3,[r2,#1792]
 809:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSINIT_Msk);  
 1659              	 .loc 1 809 0
 1660 00c0 0268     	 ldr r2,[r0]
 1661              	.L108:
 1662              	 .loc 1 809 0 is_stmt 0 discriminator 1
 1663 00c2 D2F80037 	 ldr r3,[r2,#1792]
 1664 00c6 13F0040F 	 tst r3,#4
 1665 00ca FAD1     	 bne .L108
 810:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 1666              	 .loc 1 810 0 is_stmt 1
 1667 00cc 7047     	 bx lr
 1668              	.L112:
 1669 00ce 00BF     	 .align 2
 1670              	.L111:
 1671 00d0 00460050 	 .word 1342195200
 1672 00d4 00000000 	 .word SystemCoreClock
 1673 00d8 20BC3E4C 	 .word 1279179808
 1674 00dc 0000804F 	 .word 1333788672
 1675 00e0 286B6E4E 	 .word 1315859240
 1676              	 .cfi_endproc
 1677              	.LFE260:
 1679              	 .section .text.XMC_ETH_MAC_InitPTPEx,"ax",%progbits
 1680              	 .align 2
 1681              	 .global XMC_ETH_MAC_InitPTPEx
 1682              	 .thumb
 1683              	 .thumb_func
 1685              	XMC_ETH_MAC_InitPTPEx:
 1686              	.LFB261:
 811:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 812:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Initialize PTP using a given time */
 813:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_InitPTPEx(XMC_ETH_MAC_t *const eth_mac, uint32_t config, XMC_ETH_MAC_TIME_t *const
 814:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1687              	 .loc 1 814 0
 1688              	 .cfi_startproc
 1689              	 
 1690              	 
 1691              	.LVL160:
 1692 0000 38B5     	 push {r3,r4,r5,lr}
 1693              	.LCFI24:
 1694              	 .cfi_def_cfa_offset 16
 1695              	 .cfi_offset 3,-16
 1696              	 .cfi_offset 4,-12
 1697              	 .cfi_offset 5,-8
 1698              	 .cfi_offset 14,-4
 815:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitPTP: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 816:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 817:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Initialize the system time */
 818:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_NANOSECONDS_UPDATE = time->nanoseconds;
 1699              	 .loc 1 818 0
 1700 0002 0468     	 ldr r4,[r0]
 1701 0004 5568     	 ldr r5,[r2,#4]
 1702 0006 C4F81457 	 str r5,[r4,#1812]
 819:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_SECONDS_UPDATE = time->seconds;
 1703              	 .loc 1 819 0
 1704 000a 0368     	 ldr r3,[r0]
 1705 000c 1268     	 ldr r2,[r2]
 1706              	.LVL161:
 1707 000e C3F81027 	 str r2,[r3,#1808]
 820:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 821:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_InitPTP(eth_mac, config);
 1708              	 .loc 1 821 0
 1709 0012 FFF7FEFF 	 bl XMC_ETH_MAC_InitPTP
 1710              	.LVL162:
 1711 0016 38BD     	 pop {r3,r4,r5,pc}
 1712              	 .cfi_endproc
 1713              	.LFE261:
 1715              	 .section .text.XMC_ETH_MAC_GetPTPTime,"ax",%progbits
 1716              	 .align 2
 1717              	 .global XMC_ETH_MAC_GetPTPTime
 1718              	 .thumb
 1719              	 .thumb_func
 1721              	XMC_ETH_MAC_GetPTPTime:
 1722              	.LFB262:
 822:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 823:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 824:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Get PTP time */
 825:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_GetPTPTime(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *const time)
 826:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1723              	 .loc 1 826 0
 1724              	 .cfi_startproc
 1725              	 
 1726              	 
 1727              	 
 1728              	.LVL163:
 827:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetPTPTime: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs)
 828:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 829:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   time->nanoseconds = (uint32_t)(eth_mac->regs->SYSTEM_TIME_NANOSECONDS); /* accuracy of 1 ns */
 1729              	 .loc 1 829 0
 1730 0000 0368     	 ldr r3,[r0]
 1731 0002 D3F80C37 	 ldr r3,[r3,#1804]
 1732 0006 4B60     	 str r3,[r1,#4]
 830:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   time->seconds = eth_mac->regs->SYSTEM_TIME_SECONDS;
 1733              	 .loc 1 830 0
 1734 0008 0368     	 ldr r3,[r0]
 1735 000a D3F80837 	 ldr r3,[r3,#1800]
 1736 000e 0B60     	 str r3,[r1]
 1737 0010 7047     	 bx lr
 1738              	 .cfi_endproc
 1739              	.LFE262:
 1741 0012 00BF     	 .section .text.XMC_ETH_MAC_SetPTPTime,"ax",%progbits
 1742              	 .align 2
 1743              	 .global XMC_ETH_MAC_SetPTPTime
 1744              	 .thumb
 1745              	 .thumb_func
 1747              	XMC_ETH_MAC_SetPTPTime:
 1748              	.LFB263:
 831:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 832:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 833:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Set PTP time */
 834:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_SetPTPTime(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *const time)
 835:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1749              	 .loc 1 835 0
 1750              	 .cfi_startproc
 1751              	 
 1752              	 
 1753              	 
 1754              	.LVL164:
 836:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetPTPTime: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs)
 837:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 838:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_SECONDS_UPDATE = time->seconds;
 1755              	 .loc 1 838 0
 1756 0000 0368     	 ldr r3,[r0]
 1757 0002 0A68     	 ldr r2,[r1]
 1758 0004 C3F81027 	 str r2,[r3,#1808]
 839:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_NANOSECONDS_UPDATE = time->nanoseconds;
 1759              	 .loc 1 839 0
 1760 0008 0368     	 ldr r3,[r0]
 1761 000a 4A68     	 ldr r2,[r1,#4]
 1762 000c C3F81427 	 str r2,[r3,#1812]
 840:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 841:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Initialize precision timer */
 842:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   ETH0->TIMESTAMP_CONTROL |= ETH_TIMESTAMP_CONTROL_TSINIT_Msk;
 1763              	 .loc 1 842 0
 1764 0010 064A     	 ldr r2,.L119
 1765 0012 D2F80037 	 ldr r3,[r2,#1792]
 1766 0016 43F00403 	 orr r3,r3,#4
 1767 001a C2F80037 	 str r3,[r2,#1792]
 843:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSINIT_Msk);
 1768              	 .loc 1 843 0
 1769 001e 0268     	 ldr r2,[r0]
 1770              	.L117:
 1771              	 .loc 1 843 0 is_stmt 0 discriminator 1
 1772 0020 D2F80037 	 ldr r3,[r2,#1792]
 1773 0024 13F0040F 	 tst r3,#4
 1774 0028 FAD1     	 bne .L117
 844:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 1775              	 .loc 1 844 0 is_stmt 1
 1776 002a 7047     	 bx lr
 1777              	.L120:
 1778              	 .align 2
 1779              	.L119:
 1780 002c 00C00050 	 .word 1342226432
 1781              	 .cfi_endproc
 1782              	.LFE263:
 1784              	 .section .text.XMC_ETH_MAC_UpdatePTPTime,"ax",%progbits
 1785              	 .align 2
 1786              	 .global XMC_ETH_MAC_UpdatePTPTime
 1787              	 .thumb
 1788              	 .thumb_func
 1790              	XMC_ETH_MAC_UpdatePTPTime:
 1791              	.LFB264:
 845:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 846:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Update PTP time */
 847:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_UpdatePTPTime(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_TIME_t *const time)
 848:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1792              	 .loc 1 848 0
 1793              	 .cfi_startproc
 1794              	 
 1795              	 
 1796              	 
 1797              	.LVL165:
 849:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   uint32_t temp;
 850:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 851:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_UpdatePTPTime: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->re
 852:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_UpdatePTPTime: time.time_stamp_nanoseconds not in range", (time->nanoseco
 853:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 854:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   temp = (uint32_t)(abs(time->nanoseconds));
 1798              	 .loc 1 854 0
 1799 0000 4B68     	 ldr r3,[r1,#4]
 1800 0002 83EAE372 	 eor r2,r3,r3,asr#31
 1801 0006 A2EBE372 	 sub r2,r2,r3,asr#31
 1802              	.LVL166:
 855:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if (time->nanoseconds < 0)
 1803              	 .loc 1 855 0
 1804 000a 002B     	 cmp r3,#0
 856:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 857:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     temp |= (uint32_t)ETH_SYSTEM_TIME_NANOSECONDS_UPDATE_ADDSUB_Msk;
 1805              	 .loc 1 857 0
 1806 000c B8BF     	 it lt
 1807 000e 42F00042 	 orrlt r2,r2,#-2147483648
 1808              	.LVL167:
 858:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 859:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 860:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_NANOSECONDS_UPDATE = temp;
 1809              	 .loc 1 860 0
 1810 0012 0368     	 ldr r3,[r0]
 1811 0014 C3F81427 	 str r2,[r3,#1812]
 861:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_SECONDS_UPDATE = time->seconds;
 1812              	 .loc 1 861 0
 1813 0018 0368     	 ldr r3,[r0]
 1814 001a 0A68     	 ldr r2,[r1]
 1815              	.LVL168:
 1816 001c C3F81027 	 str r2,[r3,#1808]
 862:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 863:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSUPDT_Msk;
 1817              	 .loc 1 863 0
 1818 0020 0268     	 ldr r2,[r0]
 1819 0022 D2F80037 	 ldr r3,[r2,#1792]
 1820 0026 43F00803 	 orr r3,r3,#8
 1821 002a C2F80037 	 str r3,[r2,#1792]
 1822 002e 7047     	 bx lr
 1823              	 .cfi_endproc
 1824              	.LFE264:
 1826              	 .section .text.XMC_ETH_MAC_SetPTPAlarm,"ax",%progbits
 1827              	 .align 2
 1828              	 .global XMC_ETH_MAC_SetPTPAlarm
 1829              	 .thumb
 1830              	 .thumb_func
 1832              	XMC_ETH_MAC_SetPTPAlarm:
 1833              	.LFB265:
 864:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 865:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 866:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Set PTP alarm */
 867:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_SetPTPAlarm(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_TIME_t *const time)
 868:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1834              	 .loc 1 868 0
 1835              	 .cfi_startproc
 1836              	 
 1837              	 
 1838              	 
 1839              	.LVL169:
 869:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetPTPAlarm: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs
 870:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetPTPAlarm: time.time_stamp_nanoseconds not in range", (time->nanosecond
 871:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 872:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->TARGET_TIME_NANOSECONDS = time->nanoseconds;
 1840              	 .loc 1 872 0
 1841 0000 0368     	 ldr r3,[r0]
 1842 0002 4A68     	 ldr r2,[r1,#4]
 1843 0004 C3F82027 	 str r2,[r3,#1824]
 873:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->TARGET_TIME_SECONDS = time->seconds;
 1844              	 .loc 1 873 0
 1845 0008 0368     	 ldr r3,[r0]
 1846 000a 0A68     	 ldr r2,[r1]
 1847 000c C3F81C27 	 str r2,[r3,#1820]
 1848 0010 7047     	 bx lr
 1849              	 .cfi_endproc
 1850              	.LFE265:
 1852 0012 00BF     	 .section .text.XMC_ETH_MAC_AdjustPTPClock,"ax",%progbits
 1853              	 .align 2
 1854              	 .global XMC_ETH_MAC_AdjustPTPClock
 1855              	 .thumb
 1856              	 .thumb_func
 1858              	XMC_ETH_MAC_AdjustPTPClock:
 1859              	.LFB266:
 874:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 875:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 876:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Adjust PTP clock */
 877:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_AdjustPTPClock(XMC_ETH_MAC_t *const eth_mac, uint32_t correction)
 878:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1860              	 .loc 1 878 0
 1861              	 .cfi_startproc
 1862              	 
 1863              	 
 1864              	 
 1865              	.LVL170:
 1866 0000 10B4     	 push {r4}
 1867              	.LCFI25:
 1868              	 .cfi_def_cfa_offset 4
 1869              	 .cfi_offset 4,-4
 879:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_AdjustPTPClock: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 880:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 881:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Correction factor is Q31 (0x80000000 = 1.000000000) */
 882:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_ADDEND = (uint32_t)(((uint64_t)correction * eth_mac->regs->TIMESTAMP_ADD
 1870              	 .loc 1 882 0
 1871 0002 0468     	 ldr r4,[r0]
 1872 0004 D4F81827 	 ldr r2,[r4,#1816]
 1873 0008 A1FB0223 	 umull r2,r3,r1,r2
 1874 000c D20F     	 lsrs r2,r2,#31
 1875 000e 42EA4302 	 orr r2,r2,r3,lsl#1
 1876 0012 C4F81827 	 str r2,[r4,#1816]
 883:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 884:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Update addend register */
 885:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSADDREG_Msk;
 1877              	 .loc 1 885 0
 1878 0016 0268     	 ldr r2,[r0]
 1879 0018 D2F80037 	 ldr r3,[r2,#1792]
 1880 001c 43F02003 	 orr r3,r3,#32
 1881 0020 C2F80037 	 str r3,[r2,#1792]
 886:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 887:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Poll the Timestamp Control register until the bit TSADDREG is cleared */
 888:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSADDREG_Msk);  
 1882              	 .loc 1 888 0
 1883 0024 0268     	 ldr r2,[r0]
 1884              	.L125:
 1885              	 .loc 1 888 0 is_stmt 0 discriminator 1
 1886 0026 D2F80037 	 ldr r3,[r2,#1792]
 1887 002a 13F0200F 	 tst r3,#32
 1888 002e FAD1     	 bne .L125
 889:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 1889              	 .loc 1 889 0 is_stmt 1
 1890 0030 5DF8044B 	 ldr r4,[sp],#4
 1891              	.LCFI26:
 1892              	 .cfi_restore 4
 1893              	 .cfi_def_cfa_offset 0
 1894 0034 7047     	 bx lr
 1895              	 .cfi_endproc
 1896              	.LFE266:
 1898 0036 00BF     	 .section .text.XMC_ETH_MAC_UpdateAddend,"ax",%progbits
 1899              	 .align 2
 1900              	 .global XMC_ETH_MAC_UpdateAddend
 1901              	 .thumb
 1902              	 .thumb_func
 1904              	XMC_ETH_MAC_UpdateAddend:
 1905              	.LFB267:
 890:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 891:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Update Addend */
 892:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** void XMC_ETH_MAC_UpdateAddend(XMC_ETH_MAC_t *const eth_mac, uint32_t addend)
 893:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1906              	 .loc 1 893 0
 1907              	 .cfi_startproc
 1908              	 
 1909              	 
 1910              	 
 1911              	.LVL171:
 894:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_AdjustPTPClock: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 895:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 896:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_ADDEND = addend;
 1912              	 .loc 1 896 0
 1913 0000 0368     	 ldr r3,[r0]
 1914 0002 C3F81817 	 str r1,[r3,#1816]
 897:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 898:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Update addend register */
 899:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSADDREG_Msk;
 1915              	 .loc 1 899 0
 1916 0006 0268     	 ldr r2,[r0]
 1917 0008 D2F80037 	 ldr r3,[r2,#1792]
 1918 000c 43F02003 	 orr r3,r3,#32
 1919 0010 C2F80037 	 str r3,[r2,#1792]
 900:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 901:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   /* Poll the Timestamp Control register until the bit TSADDREG is cleared */
 902:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSADDREG_Msk);
 1920              	 .loc 1 902 0
 1921 0014 0268     	 ldr r2,[r0]
 1922              	.L129:
 1923              	 .loc 1 902 0 is_stmt 0 discriminator 1
 1924 0016 D2F80037 	 ldr r3,[r2,#1792]
 1925 001a 13F0200F 	 tst r3,#32
 1926 001e FAD1     	 bne .L129
 903:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 1927              	 .loc 1 903 0 is_stmt 1
 1928 0020 7047     	 bx lr
 1929              	 .cfi_endproc
 1930              	.LFE267:
 1932 0022 00BF     	 .section .text.XMC_ETH_MAC_GetPTPStatus,"ax",%progbits
 1933              	 .align 2
 1934              	 .global XMC_ETH_MAC_GetPTPStatus
 1935              	 .thumb
 1936              	 .thumb_func
 1938              	XMC_ETH_MAC_GetPTPStatus:
 1939              	.LFB268:
 904:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 905:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Set PTP status */
 906:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_GetPTPStatus(const XMC_ETH_MAC_t *const eth_mac)
 907:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1940              	 .loc 1 907 0
 1941              	 .cfi_startproc
 1942              	 
 1943              	 
 1944              	 
 1945              	.LVL172:
 908:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetPTPStatus: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->reg
 909:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 910:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return (eth_mac->regs->TIMESTAMP_STATUS);
 1946              	 .loc 1 910 0
 1947 0000 0368     	 ldr r3,[r0]
 1948 0002 D3F82807 	 ldr r0,[r3,#1832]
 1949              	.LVL173:
 911:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 1950              	 .loc 1 911 0
 1951 0006 7047     	 bx lr
 1952              	 .cfi_endproc
 1953              	.LFE268:
 1955              	 .section .text.XMC_ETH_MAC_GetRxTimeStamp,"ax",%progbits
 1956              	 .align 2
 1957              	 .global XMC_ETH_MAC_GetRxTimeStamp
 1958              	 .thumb
 1959              	 .thumb_func
 1961              	XMC_ETH_MAC_GetRxTimeStamp:
 1962              	.LFB269:
 912:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 913:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Get TX time-stamp */
 914:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_GetRxTimeStamp(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *c
 915:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 1963              	 .loc 1 915 0
 1964              	 .cfi_startproc
 1965              	 
 1966              	 
 1967              	 
 1968              	.LVL174:
 1969 0000 10B4     	 push {r4}
 1970              	.LCFI27:
 1971              	 .cfi_def_cfa_offset 4
 1972              	 .cfi_offset 4,-4
 916:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_DMA_DESC_t *rx_desc;
 917:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 918:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 919:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetRxTimeStamp: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 920:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetRxTimeStamp: time is invalid", time != NULL);
 921:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 922:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   rx_desc = &eth_mac->rx_desc[eth_mac->rx_index];
 1973              	 .loc 1 922 0
 1974 0002 90F82730 	 ldrb r3,[r0,#39]
 1975 0006 5B01     	 lsls r3,r3,#5
 1976 0008 0269     	 ldr r2,[r0,#16]
 1977 000a D418     	 adds r4,r2,r3
 1978              	.LVL175:
 923:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if (rx_desc->status & ETH_MAC_DMA_RDES0_OWN)
 1979              	 .loc 1 923 0
 1980 000c D058     	 ldr r0,[r2,r3]
 1981              	.LVL176:
 1982 000e 0028     	 cmp r0,#0
 1983 0010 0BDB     	 blt .L134
 924:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 925:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_BUSY;
 926:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 927:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   else
 928:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 929:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     if ((rx_desc->status & (ETH_MAC_DMA_RDES0_TSA | ETH_MAC_DMA_RDES0_LS)) == (ETH_MAC_DMA_RDES0_TS
 1984              	 .loc 1 929 0
 1985 0012 D358     	 ldr r3,[r2,r3]
 1986 0014 03F4C073 	 and r3,r3,#384
 1987 0018 B3F5C07F 	 cmp r3,#384
 1988 001c 07D1     	 bne .L135
 930:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 931:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       time->nanoseconds = (int32_t)(rx_desc->time_stamp_nanoseconds);
 1989              	 .loc 1 931 0
 1990 001e A369     	 ldr r3,[r4,#24]
 1991 0020 4B60     	 str r3,[r1,#4]
 932:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       time->seconds = rx_desc->time_stamp_seconds;      
 1992              	 .loc 1 932 0
 1993 0022 E369     	 ldr r3,[r4,#28]
 1994 0024 0B60     	 str r3,[r1]
 1995              	.LVL177:
 933:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 934:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       status = XMC_ETH_MAC_STATUS_OK;
 1996              	 .loc 1 934 0
 1997 0026 0020     	 movs r0,#0
 1998 0028 02E0     	 b .L133
 1999              	.LVL178:
 2000              	.L134:
 925:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 2001              	 .loc 1 925 0
 2002 002a 0120     	 movs r0,#1
 2003 002c 00E0     	 b .L133
 2004              	.L135:
 935:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 936:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     else
 937:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 938:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       status = XMC_ETH_MAC_STATUS_ERROR;  
 2005              	 .loc 1 938 0
 2006 002e 0220     	 movs r0,#2
 2007              	.L133:
 2008              	.LVL179:
 939:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 940:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 941:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 942:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return status;
 943:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 2009              	 .loc 1 943 0
 2010 0030 5DF8044B 	 ldr r4,[sp],#4
 2011              	.LCFI28:
 2012              	 .cfi_restore 4
 2013              	 .cfi_def_cfa_offset 0
 2014              	.LVL180:
 2015 0034 7047     	 bx lr
 2016              	 .cfi_endproc
 2017              	.LFE269:
 2019 0036 00BF     	 .section .text.XMC_ETH_MAC_GetTxTimeStamp,"ax",%progbits
 2020              	 .align 2
 2021              	 .global XMC_ETH_MAC_GetTxTimeStamp
 2022              	 .thumb
 2023              	 .thumb_func
 2025              	XMC_ETH_MAC_GetTxTimeStamp:
 2026              	.LFB270:
 944:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 945:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** /* Get TX time-stamp */
 946:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_GetTxTimeStamp(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *c
 947:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** {
 2027              	 .loc 1 947 0
 2028              	 .cfi_startproc
 2029              	 
 2030              	 
 2031              	 
 2032              	.LVL181:
 2033 0000 10B4     	 push {r4}
 2034              	.LCFI29:
 2035              	 .cfi_def_cfa_offset 4
 2036              	 .cfi_offset 4,-4
 948:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_DMA_DESC_t *tx_desc;
 949:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 950:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 951:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetTxTimeStamp: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 952:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetTxTimeStamp: time is invalid", time != NULL);
 953:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 954:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   tx_desc = &eth_mac->tx_desc[eth_mac->tx_ts_index];
 2037              	 .loc 1 954 0
 2038 0002 90F82830 	 ldrb r3,[r0,#40]
 2039 0006 5B01     	 lsls r3,r3,#5
 2040 0008 4269     	 ldr r2,[r0,#20]
 2041 000a D418     	 adds r4,r2,r3
 2042              	.LVL182:
 955:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   if (tx_desc->status & ETH_MAC_DMA_TDES0_OWN)
 2043              	 .loc 1 955 0
 2044 000c D058     	 ldr r0,[r2,r3]
 2045              	.LVL183:
 2046 000e 0028     	 cmp r0,#0
 2047 0010 0ADB     	 blt .L139
 956:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 957:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_BUSY;
 958:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 959:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   else
 960:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   {
 961:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     if ((tx_desc->status & (ETH_MAC_DMA_TDES0_TTSS | ETH_MAC_DMA_TDES0_LS)) == (ETH_MAC_DMA_TDES0_T
 2048              	 .loc 1 961 0
 2049 0012 D358     	 ldr r3,[r2,r3]
 2050 0014 074A     	 ldr r2,.L142
 2051 0016 1340     	 ands r3,r3,r2
 2052 0018 9342     	 cmp r3,r2
 2053 001a 07D1     	 bne .L140
 962:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 963:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       time->nanoseconds = (int32_t)(tx_desc->time_stamp_nanoseconds); /* accuracy of 1 ns */
 2054              	 .loc 1 963 0
 2055 001c A369     	 ldr r3,[r4,#24]
 2056 001e 4B60     	 str r3,[r1,#4]
 964:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       time->seconds = tx_desc->time_stamp_seconds;
 2057              	 .loc 1 964 0
 2058 0020 E369     	 ldr r3,[r4,#28]
 2059 0022 0B60     	 str r3,[r1]
 2060              	.LVL184:
 965:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 966:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       status = XMC_ETH_MAC_STATUS_OK;
 2061              	 .loc 1 966 0
 2062 0024 0020     	 movs r0,#0
 2063 0026 02E0     	 b .L138
 2064              	.LVL185:
 2065              	.L139:
 957:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 2066              	 .loc 1 957 0
 2067 0028 0120     	 movs r0,#1
 2068 002a 00E0     	 b .L138
 2069              	.L140:
 967:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 968:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     else
 969:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     {
 970:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****       status = XMC_ETH_MAC_STATUS_ERROR;
 2070              	 .loc 1 970 0
 2071 002c 0220     	 movs r0,#2
 2072              	.L138:
 2073              	.LVL186:
 971:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****     }
 972:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   }
 973:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** 
 974:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c ****   return status;
 975:C:/Files/Projects/Git/XMCLib/src\xmc_eth_mac.c **** }
 2074              	 .loc 1 975 0
 2075 002e 5DF8044B 	 ldr r4,[sp],#4
 2076              	.LCFI30:
 2077              	 .cfi_restore 4
 2078              	 .cfi_def_cfa_offset 0
 2079              	.LVL187:
 2080 0032 7047     	 bx lr
 2081              	.L143:
 2082              	 .align 2
 2083              	.L142:
 2084 0034 00000220 	 .word 537001984
 2085              	 .cfi_endproc
 2086              	.LFE270:
 2088              	 .text
 2089              	.Letext0:
 2090              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2091              	 .file 5 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2092              	 .file 6 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 2093              	 .file 7 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
 2094              	 .file 8 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
 2095              	 .file 9 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_eth_mac.c
    {standard input}:20     .text.XMC_ETH_MAC_InitRxDescriptors:00000000 $t
    {standard input}:25     .text.XMC_ETH_MAC_InitRxDescriptors:00000000 XMC_ETH_MAC_InitRxDescriptors
    {standard input}:112    .text.XMC_ETH_MAC_InitTxDescriptors:00000000 $t
    {standard input}:117    .text.XMC_ETH_MAC_InitTxDescriptors:00000000 XMC_ETH_MAC_InitTxDescriptors
    {standard input}:193    .text.XMC_ETH_MAC_InitTxDescriptors:00000058 $d
    {standard input}:198    .text.XMC_ETH_MAC_InitEx:00000000 $t
    {standard input}:203    .text.XMC_ETH_MAC_InitEx:00000000 XMC_ETH_MAC_InitEx
    {standard input}:289    .text.XMC_ETH_MAC_InitEx:00000080 $d
    {standard input}:295    .text.XMC_ETH_MAC_SetAddressEx:00000000 $t
    {standard input}:300    .text.XMC_ETH_MAC_SetAddressEx:00000000 XMC_ETH_MAC_SetAddressEx
    {standard input}:340    .text.XMC_ETH_MAC_GetAddressEx:00000000 $t
    {standard input}:345    .text.XMC_ETH_MAC_GetAddressEx:00000000 XMC_ETH_MAC_GetAddressEx
    {standard input}:384    .text.XMC_ETH_MAC_SetAddressPerfectFilter:00000000 $t
    {standard input}:389    .text.XMC_ETH_MAC_SetAddressPerfectFilter:00000000 XMC_ETH_MAC_SetAddressPerfectFilter
    {standard input}:427    .text.XMC_ETH_MAC_SetAddressPerfectFilterEx:00000000 $t
    {standard input}:432    .text.XMC_ETH_MAC_SetAddressPerfectFilterEx:00000000 XMC_ETH_MAC_SetAddressPerfectFilterEx
    {standard input}:485    .text.XMC_ETH_MAC_SetAddressHashFilter:00000000 $t
    {standard input}:490    .text.XMC_ETH_MAC_SetAddressHashFilter:00000000 XMC_ETH_MAC_SetAddressHashFilter
    {standard input}:509    .text.XMC_ETH_MAC_SendFrame:00000000 $t
    {standard input}:514    .text.XMC_ETH_MAC_SendFrame:00000000 XMC_ETH_MAC_SendFrame
    {standard input}:664    .text.XMC_ETH_MAC_ReadFrame:00000000 $t
    {standard input}:669    .text.XMC_ETH_MAC_ReadFrame:00000000 XMC_ETH_MAC_ReadFrame
    {standard input}:739    .text.XMC_ETH_MAC_GetRxFrameSize:00000000 $t
    {standard input}:744    .text.XMC_ETH_MAC_GetRxFrameSize:00000000 XMC_ETH_MAC_GetRxFrameSize
    {standard input}:789    .text.XMC_ETH_MAC_SetManagmentClockDivider:00000000 $t
    {standard input}:794    .text.XMC_ETH_MAC_SetManagmentClockDivider:00000000 XMC_ETH_MAC_SetManagmentClockDivider
    {standard input}:905    .text.XMC_ETH_MAC_SetManagmentClockDivider:00000068 $d
    {standard input}:917    .text.XMC_ETH_MAC_Enable:00000000 $t
    {standard input}:922    .text.XMC_ETH_MAC_Enable:00000000 XMC_ETH_MAC_Enable
    {standard input}:947    .text.XMC_ETH_MAC_Enable:00000010 $d
    {standard input}:952    .text.XMC_ETH_MAC_Init:00000000 $t
    {standard input}:957    .text.XMC_ETH_MAC_Init:00000000 XMC_ETH_MAC_Init
    {standard input}:1006   .text.XMC_ETH_MAC_Disable:00000000 $t
    {standard input}:1011   .text.XMC_ETH_MAC_Disable:00000000 XMC_ETH_MAC_Disable
    {standard input}:1036   .text.XMC_ETH_MAC_Disable:00000010 $d
    {standard input}:1041   .text.XMC_ETH_MAC_ReadPhy:00000000 $t
    {standard input}:1046   .text.XMC_ETH_MAC_ReadPhy:00000000 XMC_ETH_MAC_ReadPhy
    {standard input}:1107   .text.XMC_ETH_MAC_WritePhy:00000000 $t
    {standard input}:1112   .text.XMC_ETH_MAC_WritePhy:00000000 XMC_ETH_MAC_WritePhy
    {standard input}:1172   .text.XMC_ETH_MAC_FlushTx:00000000 $t
    {standard input}:1177   .text.XMC_ETH_MAC_FlushTx:00000000 XMC_ETH_MAC_FlushTx
    {standard input}:1211   .text.XMC_ETH_MAC_FlushRx:00000000 $t
    {standard input}:1216   .text.XMC_ETH_MAC_FlushRx:00000000 XMC_ETH_MAC_FlushRx
    {standard input}:1250   .text.XMC_ETH_MAC_SetWakeUpFrameFilter:00000000 $t
    {standard input}:1255   .text.XMC_ETH_MAC_SetWakeUpFrameFilter:00000000 XMC_ETH_MAC_SetWakeUpFrameFilter
    {standard input}:1289   .text.XMC_ETH_MAC_EnableEvent:00000000 $t
    {standard input}:1294   .text.XMC_ETH_MAC_EnableEvent:00000000 XMC_ETH_MAC_EnableEvent
    {standard input}:1338   .text.XMC_ETH_MAC_DisableEvent:00000000 $t
    {standard input}:1343   .text.XMC_ETH_MAC_DisableEvent:00000000 XMC_ETH_MAC_DisableEvent
    {standard input}:1373   .text.XMC_ETH_MAC_ClearEventStatus:00000000 $t
    {standard input}:1378   .text.XMC_ETH_MAC_ClearEventStatus:00000000 XMC_ETH_MAC_ClearEventStatus
    {standard input}:1413   .text.XMC_ETH_MAC_GetEventStatus:00000000 $t
    {standard input}:1418   .text.XMC_ETH_MAC_GetEventStatus:00000000 XMC_ETH_MAC_GetEventStatus
    {standard input}:1445   .text.XMC_ETH_MAC_ReturnRxDescriptor:00000000 $t
    {standard input}:1450   .text.XMC_ETH_MAC_ReturnRxDescriptor:00000000 XMC_ETH_MAC_ReturnRxDescriptor
    {standard input}:1482   .text.XMC_ETH_MAC_ReturnTxDescriptor:00000000 $t
    {standard input}:1487   .text.XMC_ETH_MAC_ReturnTxDescriptor:00000000 XMC_ETH_MAC_ReturnTxDescriptor
    {standard input}:1525   .text.XMC_ETH_MAC_SetVLANTag:00000000 $t
    {standard input}:1530   .text.XMC_ETH_MAC_SetVLANTag:00000000 XMC_ETH_MAC_SetVLANTag
    {standard input}:1546   .text.XMC_ETH_MAC_InitPTP:00000000 $t
    {standard input}:1551   .text.XMC_ETH_MAC_InitPTP:00000000 XMC_ETH_MAC_InitPTP
    {standard input}:1671   .text.XMC_ETH_MAC_InitPTP:000000d0 $d
    {standard input}:1680   .text.XMC_ETH_MAC_InitPTPEx:00000000 $t
    {standard input}:1685   .text.XMC_ETH_MAC_InitPTPEx:00000000 XMC_ETH_MAC_InitPTPEx
    {standard input}:1716   .text.XMC_ETH_MAC_GetPTPTime:00000000 $t
    {standard input}:1721   .text.XMC_ETH_MAC_GetPTPTime:00000000 XMC_ETH_MAC_GetPTPTime
    {standard input}:1742   .text.XMC_ETH_MAC_SetPTPTime:00000000 $t
    {standard input}:1747   .text.XMC_ETH_MAC_SetPTPTime:00000000 XMC_ETH_MAC_SetPTPTime
    {standard input}:1780   .text.XMC_ETH_MAC_SetPTPTime:0000002c $d
    {standard input}:1785   .text.XMC_ETH_MAC_UpdatePTPTime:00000000 $t
    {standard input}:1790   .text.XMC_ETH_MAC_UpdatePTPTime:00000000 XMC_ETH_MAC_UpdatePTPTime
    {standard input}:1827   .text.XMC_ETH_MAC_SetPTPAlarm:00000000 $t
    {standard input}:1832   .text.XMC_ETH_MAC_SetPTPAlarm:00000000 XMC_ETH_MAC_SetPTPAlarm
    {standard input}:1853   .text.XMC_ETH_MAC_AdjustPTPClock:00000000 $t
    {standard input}:1858   .text.XMC_ETH_MAC_AdjustPTPClock:00000000 XMC_ETH_MAC_AdjustPTPClock
    {standard input}:1899   .text.XMC_ETH_MAC_UpdateAddend:00000000 $t
    {standard input}:1904   .text.XMC_ETH_MAC_UpdateAddend:00000000 XMC_ETH_MAC_UpdateAddend
    {standard input}:1933   .text.XMC_ETH_MAC_GetPTPStatus:00000000 $t
    {standard input}:1938   .text.XMC_ETH_MAC_GetPTPStatus:00000000 XMC_ETH_MAC_GetPTPStatus
    {standard input}:1956   .text.XMC_ETH_MAC_GetRxTimeStamp:00000000 $t
    {standard input}:1961   .text.XMC_ETH_MAC_GetRxTimeStamp:00000000 XMC_ETH_MAC_GetRxTimeStamp
    {standard input}:2020   .text.XMC_ETH_MAC_GetTxTimeStamp:00000000 $t
    {standard input}:2025   .text.XMC_ETH_MAC_GetTxTimeStamp:00000000 XMC_ETH_MAC_GetTxTimeStamp
    {standard input}:2084   .text.XMC_ETH_MAC_GetTxTimeStamp:00000034 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memcpy
SystemCoreClock
XMC_SCU_CLOCK_EnableClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_DisableClock
