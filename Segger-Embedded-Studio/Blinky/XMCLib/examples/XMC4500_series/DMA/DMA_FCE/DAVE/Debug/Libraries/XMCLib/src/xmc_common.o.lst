   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_common.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_LIST_Init,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_LIST_Init
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_LIST_Init:
  26              	.LFB137:
  27              	 .file 1 "C:/Files/Projects/Git/XMCLib/src/xmc_common.c"
   1:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** /**
   2:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * @file xmc_common.c
   3:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * @date 2017-02-25
   4:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *
   5:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *
   9:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * 
  18:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * 
  21:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *
  36:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *
  39:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *     - Initial <br>
  41:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *      
  42:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * 2017-02-25:
  43:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *     - Remove the need to define XMC_USER_ASSERT_FUNCTION
  44:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *     - XMC_AssertHandler fixed compilation warnings
  45:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *
  46:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * @endcond 
  47:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *
  48:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  */
  49:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
  50:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** #include "xmc_common.h"
  51:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
  52:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** /*******************************************************************************
  53:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * DATA STRUCTURES
  54:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *******************************************************************************/
  55:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** struct list
  56:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** {
  57:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   struct list *next;
  58:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** };
  59:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
  60:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** /*******************************************************************************
  61:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  * API IMPLEMENTATION
  62:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****  *******************************************************************************/
  63:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** #if defined(XMC_ASSERT_ENABLE)
  64:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** __WEAK void XMC_AssertHandler(const char *const msg, const char *const file, uint32_t line)
  65:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** {
  66:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   XMC_UNUSED_ARG(msg);
  67:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   XMC_UNUSED_ARG(file);
  68:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   XMC_UNUSED_ARG(line);
  69:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
  70:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   while(1)
  71:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   {
  72:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     /* Endless loop */
  73:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   }
  74:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** }
  75:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** #endif
  76:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
  77:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** void XMC_LIST_Init(XMC_LIST_t *list)
  78:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** {
  28              	 .loc 1 78 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
  79:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   *list = NULL;
  34              	 .loc 1 79 0
  35 0000 0023     	 movs r3,#0
  36 0002 0360     	 str r3,[r0]
  37 0004 7047     	 bx lr
  38              	 .cfi_endproc
  39              	.LFE137:
  41 0006 00BF     	 .section .text.XMC_LIST_GetHead,"ax",%progbits
  42              	 .align 2
  43              	 .global XMC_LIST_GetHead
  44              	 .thumb
  45              	 .thumb_func
  47              	XMC_LIST_GetHead:
  48              	.LFB138:
  80:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** }
  81:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
  82:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** void *XMC_LIST_GetHead(XMC_LIST_t *list)
  83:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** {
  49              	 .loc 1 83 0
  50              	 .cfi_startproc
  51              	 
  52              	 
  53              	 
  54              	.LVL1:
  84:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   return *list;
  85:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** }
  55              	 .loc 1 85 0
  56 0000 0068     	 ldr r0,[r0]
  57              	.LVL2:
  58 0002 7047     	 bx lr
  59              	 .cfi_endproc
  60              	.LFE138:
  62              	 .section .text.XMC_LIST_GetTail,"ax",%progbits
  63              	 .align 2
  64              	 .global XMC_LIST_GetTail
  65              	 .thumb
  66              	 .thumb_func
  68              	XMC_LIST_GetTail:
  69              	.LFB139:
  86:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
  87:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** void *XMC_LIST_GetTail(XMC_LIST_t *list)
  88:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** {
  70              	 .loc 1 88 0
  71              	 .cfi_startproc
  72              	 
  73              	 
  74              	 
  75              	.LVL3:
  89:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   struct list *tail;
  90:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   
  91:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   if (*list == NULL) 
  76              	 .loc 1 91 0
  77 0000 0068     	 ldr r0,[r0]
  78              	.LVL4:
  79 0002 08B9     	 cbnz r0,.L5
  80 0004 7047     	 bx lr
  81              	.LVL5:
  82              	.L6:
  92:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   {
  93:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     tail = NULL;
  94:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   }
  95:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   else
  96:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   {
  97:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     for (tail = (struct list *)*list; tail->next != NULL; tail = tail->next)
  83              	 .loc 1 97 0
  84 0006 1846     	 mov r0,r3
  85              	.LVL6:
  86              	.L5:
  87              	 .loc 1 97 0 is_stmt 0 discriminator 1
  88 0008 0368     	 ldr r3,[r0]
  89 000a 002B     	 cmp r3,#0
  90 000c FBD1     	 bne .L6
  98:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     {
  99:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****       /* Loop through the list */
 100:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     }  
 101:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   }
 102:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   
 103:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   return tail;    
 104:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** }
  91              	 .loc 1 104 0 is_stmt 1
  92 000e 7047     	 bx lr
  93              	 .cfi_endproc
  94              	.LFE139:
  96              	 .section .text.XMC_LIST_Add,"ax",%progbits
  97              	 .align 2
  98              	 .global XMC_LIST_Add
  99              	 .thumb
 100              	 .thumb_func
 102              	XMC_LIST_Add:
 103              	.LFB140:
 105:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 106:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** void XMC_LIST_Add(XMC_LIST_t *list, void *item)
 107:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** {
 104              	 .loc 1 107 0
 105              	 .cfi_startproc
 106              	 
 107              	 
 108              	.LVL7:
 109 0000 38B5     	 push {r3,r4,r5,lr}
 110              	.LCFI0:
 111              	 .cfi_def_cfa_offset 16
 112              	 .cfi_offset 3,-16
 113              	 .cfi_offset 4,-12
 114              	 .cfi_offset 5,-8
 115              	 .cfi_offset 14,-4
 116 0002 0546     	 mov r5,r0
 117 0004 0C46     	 mov r4,r1
 108:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   struct list *tail;
 109:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   
 110:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   ((struct list *)item)->next = NULL;
 118              	 .loc 1 110 0
 119 0006 0023     	 movs r3,#0
 120 0008 0B60     	 str r3,[r1]
 111:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   tail = (struct list *)XMC_LIST_GetTail(list);
 121              	 .loc 1 111 0
 122 000a FFF7FEFF 	 bl XMC_LIST_GetTail
 123              	.LVL8:
 112:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   
 113:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   if (tail == NULL) 
 124              	 .loc 1 113 0
 125 000e 08B9     	 cbnz r0,.L8
 114:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   {
 115:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     *list = item;
 126              	 .loc 1 115 0
 127 0010 2C60     	 str r4,[r5]
 128 0012 38BD     	 pop {r3,r4,r5,pc}
 129              	.LVL9:
 130              	.L8:
 116:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   } 
 117:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   else 
 118:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   {
 119:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     tail->next = (struct list *)item;
 131              	 .loc 1 119 0
 132 0014 0460     	 str r4,[r0]
 133 0016 38BD     	 pop {r3,r4,r5,pc}
 134              	 .cfi_endproc
 135              	.LFE140:
 137              	 .section .text.XMC_LIST_Remove,"ax",%progbits
 138              	 .align 2
 139              	 .global XMC_LIST_Remove
 140              	 .thumb
 141              	 .thumb_func
 143              	XMC_LIST_Remove:
 144              	.LFB141:
 120:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   }
 121:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** }
 122:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 123:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** void XMC_LIST_Remove(XMC_LIST_t *list, void *item)
 124:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** {
 145              	 .loc 1 124 0
 146              	 .cfi_startproc
 147              	 
 148              	 
 149              	 
 150              	.LVL10:
 125:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   struct list *right, *left;
 126:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   
 127:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   if (*list != NULL) 
 151              	 .loc 1 127 0
 152 0000 0268     	 ldr r2,[r0]
 153 0002 9AB1     	 cbz r2,.L11
 154              	.LVL11:
 128:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   {
 129:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     left = NULL;
 130:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     for(right = (struct list *)*list; right != NULL; right = right->next)
 131:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     {
 132:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****       if(right == item) 
 155              	 .loc 1 132 0 discriminator 1
 156 0004 8A42     	 cmp r2,r1
 157 0006 0ED1     	 bne .L14
 158 0008 03E0     	 b .L13
 159              	.LVL12:
 160              	.L17:
 161              	 .loc 1 132 0 is_stmt 0
 162 000a 9942     	 cmp r1,r3
 163 000c 0AD1     	 bne .L18
 133:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****       {
 134:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****         if(left == NULL) 
 164              	 .loc 1 134 0 is_stmt 1
 165 000e 22B9     	 cbnz r2,.L15
 130:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     {
 166              	 .loc 1 130 0
 167 0010 1946     	 mov r1,r3
 168              	.LVL13:
 169              	.L13:
 135:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****         {
 136:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****           /* First on list */
 137:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****           *list = right->next;
 170              	 .loc 1 137 0
 171 0012 0B68     	 ldr r3,[r1]
 172 0014 0360     	 str r3,[r0]
 173 0016 0B46     	 mov r3,r1
 174 0018 01E0     	 b .L16
 175              	.LVL14:
 176              	.L15:
 138:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****         } 
 139:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****         else 
 140:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****         {
 141:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****           /* Not first on list */
 142:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****           left->next = right->next;
 177              	 .loc 1 142 0
 178 001a 1968     	 ldr r1,[r3]
 179              	.LVL15:
 180 001c 1160     	 str r1,[r2]
 181              	.LVL16:
 182              	.L16:
 143:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****         }
 144:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****         right->next = NULL;
 183              	 .loc 1 144 0
 184 001e 0022     	 movs r2,#0
 185 0020 1A60     	 str r2,[r3]
 145:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****         break;
 186              	 .loc 1 145 0
 187 0022 7047     	 bx lr
 188              	.LVL17:
 189              	.L18:
 130:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     {
 190              	 .loc 1 130 0
 191 0024 1A46     	 mov r2,r3
 192              	.LVL18:
 193              	.L14:
 130:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     {
 194              	 .loc 1 130 0 is_stmt 0 discriminator 2
 195 0026 1368     	 ldr r3,[r2]
 196              	.LVL19:
 197 0028 002B     	 cmp r3,#0
 198 002a EED1     	 bne .L17
 199              	.LVL20:
 200              	.L11:
 201 002c 7047     	 bx lr
 202              	 .cfi_endproc
 203              	.LFE141:
 205              	 .section .text.XMC_LIST_Insert,"ax",%progbits
 206              	 .align 2
 207              	 .global XMC_LIST_Insert
 208              	 .thumb
 209              	 .thumb_func
 211              	XMC_LIST_Insert:
 212              	.LFB142:
 146:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****       }
 147:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****       left = right;
 148:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     }
 149:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   }
 150:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** }
 151:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 152:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** void XMC_LIST_Insert(XMC_LIST_t *list, void *prev_item, void *new_item)
 153:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** {
 213              	 .loc 1 153 0 is_stmt 1
 214              	 .cfi_startproc
 215              	 
 216              	 
 217              	 
 218              	.LVL21:
 154:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   if (prev_item == NULL) 
 219              	 .loc 1 154 0
 220 0000 0B46     	 mov r3,r1
 221 0002 19B9     	 cbnz r1,.L20
 155:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   {
 156:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 	((struct list *)new_item)->next = (struct list *)*list;
 222              	 .loc 1 156 0
 223 0004 0368     	 ldr r3,[r0]
 224 0006 1360     	 str r3,[r2]
 157:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 	*list = new_item;
 225              	 .loc 1 157 0
 226 0008 0260     	 str r2,[r0]
 227 000a 7047     	 bx lr
 228              	.L20:
 158:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   } 
 159:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   else 
 160:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   {
 161:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     ((struct list *)new_item)->next = ((struct list *)prev_item)->next;
 229              	 .loc 1 161 0
 230 000c 0968     	 ldr r1,[r1]
 231              	.LVL22:
 232 000e 1160     	 str r1,[r2]
 162:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     ((struct list *)prev_item)->next = (struct list *)new_item;
 233              	 .loc 1 162 0
 234 0010 1A60     	 str r2,[r3]
 235 0012 7047     	 bx lr
 236              	 .cfi_endproc
 237              	.LFE142:
 239              	 .section .text.XMC_PRIOARRAY_Init,"ax",%progbits
 240              	 .align 2
 241              	 .global XMC_PRIOARRAY_Init
 242              	 .thumb
 243              	 .thumb_func
 245              	XMC_PRIOARRAY_Init:
 246              	.LFB143:
 163:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   }
 164:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** }
 165:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 166:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** void XMC_PRIOARRAY_Init(XMC_PRIOARRAY_t *prioarray)
 167:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** {
 247              	 .loc 1 167 0
 248              	 .cfi_startproc
 249              	 
 250              	 
 251              	 
 252              	.LVL23:
 253 0000 10B4     	 push {r4}
 254              	.LCFI1:
 255              	 .cfi_def_cfa_offset 4
 256              	 .cfi_offset 4,-4
 168:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   XMC_ASSERT("XMC_PRIOARRAY_Init: NULL pointer", prioarray != NULL);
 169:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 170:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   /* Initialize head, next points to tail, previous to NULL and the priority is MININT */
 171:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[prioarray->size].next = prioarray->size + 1;
 257              	 .loc 1 171 0
 258 0002 0368     	 ldr r3,[r0]
 259 0004 4268     	 ldr r2,[r0,#4]
 260 0006 03EB4301 	 add r1,r3,r3,lsl#1
 261 000a 02EB8102 	 add r2,r2,r1,lsl#2
 262 000e 0133     	 adds r3,r3,#1
 263 0010 9360     	 str r3,[r2,#8]
 172:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[prioarray->size].previous = -1;
 264              	 .loc 1 172 0
 265 0012 0368     	 ldr r3,[r0]
 266 0014 4268     	 ldr r2,[r0,#4]
 267 0016 03EB4303 	 add r3,r3,r3,lsl#1
 268 001a 02EB8303 	 add r3,r2,r3,lsl#2
 269 001e 4FF0FF31 	 mov r1,#-1
 270 0022 5960     	 str r1,[r3,#4]
 173:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[prioarray->size].priority = INT32_MAX;
 271              	 .loc 1 173 0
 272 0024 0368     	 ldr r3,[r0]
 273 0026 4268     	 ldr r2,[r0,#4]
 274 0028 03EB4303 	 add r3,r3,r3,lsl#1
 275 002c 6FF00044 	 mvn r4,#-2147483648
 276 0030 42F82340 	 str r4,[r2,r3,lsl#2]
 174:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 175:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   /* Initialize tail, next points to NULL, previous is the head and the priority is MAXINT */
 176:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[prioarray->size + 1].next = -1;
 277              	 .loc 1 176 0
 278 0034 0368     	 ldr r3,[r0]
 279 0036 0133     	 adds r3,r3,#1
 280 0038 4268     	 ldr r2,[r0,#4]
 281 003a 03EB4303 	 add r3,r3,r3,lsl#1
 282 003e 02EB8303 	 add r3,r2,r3,lsl#2
 283 0042 9960     	 str r1,[r3,#8]
 177:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[prioarray->size + 1].previous = prioarray->size;
 284              	 .loc 1 177 0
 285 0044 0168     	 ldr r1,[r0]
 286 0046 4B1C     	 adds r3,r1,#1
 287 0048 4268     	 ldr r2,[r0,#4]
 288 004a 03EB4303 	 add r3,r3,r3,lsl#1
 289 004e 02EB8303 	 add r3,r2,r3,lsl#2
 290 0052 5960     	 str r1,[r3,#4]
 178:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[prioarray->size + 1].priority = INT32_MIN;
 291              	 .loc 1 178 0
 292 0054 0368     	 ldr r3,[r0]
 293 0056 0133     	 adds r3,r3,#1
 294 0058 4268     	 ldr r2,[r0,#4]
 295 005a 03EB4303 	 add r3,r3,r3,lsl#1
 296 005e 4FF00041 	 mov r1,#-2147483648
 297 0062 42F82310 	 str r1,[r2,r3,lsl#2]
 179:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 180:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** }
 298              	 .loc 1 180 0
 299 0066 5DF8044B 	 ldr r4,[sp],#4
 300              	.LCFI2:
 301              	 .cfi_restore 4
 302              	 .cfi_def_cfa_offset 0
 303 006a 7047     	 bx lr
 304              	 .cfi_endproc
 305              	.LFE143:
 307              	 .section .text.XMC_PRIOARRAY_Add,"ax",%progbits
 308              	 .align 2
 309              	 .global XMC_PRIOARRAY_Add
 310              	 .thumb
 311              	 .thumb_func
 313              	XMC_PRIOARRAY_Add:
 314              	.LFB144:
 181:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 182:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** void XMC_PRIOARRAY_Add(XMC_PRIOARRAY_t *prioarray, int32_t item, int32_t priority)
 183:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** {
 315              	 .loc 1 183 0
 316              	 .cfi_startproc
 317              	 
 318              	 
 319              	 
 320              	.LVL24:
 321 0000 F0B4     	 push {r4,r5,r6,r7}
 322              	.LCFI3:
 323              	 .cfi_def_cfa_offset 16
 324              	 .cfi_offset 4,-16
 325              	 .cfi_offset 5,-12
 326              	 .cfi_offset 6,-8
 327              	 .cfi_offset 7,-4
 328              	.LVL25:
 329              	.LBB8:
 330              	.LBB9:
 331              	 .file 2 "C:/Files/Projects/Git/XMCLib/inc/xmc_common.h"
   1:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /**
   2:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * @file xmc_common.h
   3:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * @date 2019-07-12
   4:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
   5:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   *************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
   9:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * 
  18:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * 
  21:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
  36:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
  39:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * 2015-06-20:
  40:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Initial
  41:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Brief section updated
  42:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Added XMC_LIB_VERSION macro
  43:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
  44:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * 2016-02-26:
  45:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.6
  46:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *      
  47:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * 2016-05-30:
  48:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.8
  49:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
  50:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * 2016-11-18:
  51:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.10
  52:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Changed type of size in XMC_PRIOARRAY_t to fix compilation warnings
  53:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
  54:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * 2017-04-04:
  55:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.12
  56:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
  57:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * 2017-06-24:
  58:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.14
  59:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
  60:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * 2017-08-03:
  61:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.16
  62:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Added __RAM_FUNC macro
  63:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
  64:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * 2018-06-29:
  65:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.20
  66:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
  67:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * 2019-05-29:
  68:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.22
  69:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
  70:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * 2019-07-12:
  71:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.24
  72:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
  73:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * @endcond 
  74:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
  75:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
  76:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
  77:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #ifndef XMC_COMMON_H
  78:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define XMC_COMMON_H
  79:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
  80:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #include <stddef.h>
  81:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #include <stdint.h>
  82:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #include <stdbool.h>
  83:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #include <string.h>
  84:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
  85:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #include "xmc_device.h"
  86:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
  87:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /**
  88:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * @addtogroup XMClib XMC Peripheral Library
  89:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * @{
  90:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
  91:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
  92:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /**
  93:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * @addtogroup COMMON
  94:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * @brief Common APIs to all peripherals for XMC microcontroller family 
  95:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * @{
  96:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
  97:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
  98:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /**************************************************************************************************
  99:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * MACROS
 100:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  **************************************************************************************************
 101:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define XMC_LIB_MAJOR_VERSION	(2U)
 102:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define XMC_LIB_MINOR_VERSION	(1U)
 103:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define XMC_LIB_PATCH_VERSION	(24U)
 104:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  
 105:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define XMC_LIB_VERSION         ((XMC_LIB_MAJOR_VERSION << 16U) + (XMC_LIB_MINOR_VERSION << 8U) + X
 106:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 107:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /* Define WEAK attribute */
 108:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #if !defined(__WEAK)
 109:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #if defined ( __CC_ARM )
 110:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define __WEAK __attribute__ ((weak))
 111:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 112:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define __WEAK __attribute__ ((weak))
 113:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #elif defined ( __ICCARM__ )
 114:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define __WEAK __weak
 115:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #elif defined ( __GNUC__ )
 116:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define __WEAK __attribute__ ((weak))
 117:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #elif defined ( __TASKING__ )
 118:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define __WEAK __attribute__ ((weak))
 119:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #endif
 120:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #endif
 121:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 122:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #if !defined(__RAM_FUNC)
 123:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #if defined ( __CC_ARM )
 124:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** // http://www.keil.com/support/docs/3723.htm
 125:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define __RAM_FUNC __attribute__((section("RAMCODESECTION")))
 126:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 127:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define __RAM_FUNC __attribute__((section("RAMCODESECTION")))
 128:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #elif defined ( __ICCARM__ )
 129:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** // https://www.iar.com/support/tech-notes/linker/controlling-placement-of-the-section-where-__ramfu
 130:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define __RAM_FUNC __ramfunc
 131:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #elif defined ( __GNUC__ )
 132:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define __RAM_FUNC __attribute__((section(".ram_code"), long_call))
 133:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #elif defined ( __TASKING__ )
 134:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define __RAM_FUNC __attribute__((section(".ram_code")))
 135:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #endif
 136:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #endif
 137:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 138:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #ifdef XMC_ASSERT_ENABLE
 139:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  #define XMC_ASSERT(msg, exp) { if(!(exp)) {XMC_AssertHandler(msg, __FILE__, __LINE__);} }
 140:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #else
 141:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  #define XMC_ASSERT(msg, exp) { ; }
 142:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #endif
 143:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 144:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #ifdef XMC_DEBUG_ENABLE
 145:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  #include <stdio.h>
 146:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  #define XMC_DEBUG(...) { printf(__VA_ARGS__); }
 147:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #else
 148:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  #define XMC_DEBUG(...) { ; }
 149:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #endif
 150:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 151:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define XMC_UNUSED_ARG(x) (void)x
 152:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 153:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define XMC_STRUCT_INIT(m) memset(&m, 0, sizeof(m))
 154:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 155:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define XMC_PRIOARRAY_DEF(name, size) \
 156:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** XMC_PRIOARRAY_ITEM_t prioarray_m_##name[size + 2]; \
 157:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** XMC_PRIOARRAY_t prioarray_def_##name = {(size), (prioarray_m_##name)};
 158:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 159:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #define XMC_PRIOARRAY(name) \
 160:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** &prioarray_def_##name
 161:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 162:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /**************************************************************************************************
 163:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * DATA STRUCTURES
 164:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  **************************************************************************************************
 165:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 166:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 167:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 168:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** typedef struct XMC_DRIVER_VERSION 
 169:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** {
 170:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   uint8_t major;
 171:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   uint8_t minor;
 172:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   uint8_t patch;
 173:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** } XMC_DRIVER_VERSION_t;
 174:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 175:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 176:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 177:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 178:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** typedef void *XMC_LIST_t;
 179:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 180:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 181:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 182:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 183:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** typedef struct XMC_PRIOARRAY_ITEM
 184:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** {
 185:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   int32_t priority;
 186:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   int32_t previous;
 187:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   int32_t next;
 188:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** } XMC_PRIOARRAY_ITEM_t;
 189:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 190:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 191:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 192:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 193:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** typedef struct XMC_PRIOARRAY
 194:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** {
 195:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   int32_t size;
 196:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   XMC_PRIOARRAY_ITEM_t *items;
 197:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** } XMC_PRIOARRAY_t;
 198:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 199:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /**************************************************************************************************
 200:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  * API PROTOTYPES
 201:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  **************************************************************************************************
 202:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 203:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #ifdef __cplusplus
 204:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** extern "C" {
 205:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** #endif
 206:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 207:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 208:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 209:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 210:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** void XMC_AssertHandler(const char *const msg, const char *const file, uint32_t line);
 211:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 212:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 213:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 214:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 215:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** void XMC_LIST_Init(XMC_LIST_t *list);
 216:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 217:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 218:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 219:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 220:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** void XMC_LIST_Add(XMC_LIST_t *list, void *const item);
 221:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 222:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 223:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 224:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 225:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** void XMC_LIST_Remove(XMC_LIST_t *list, void *const item);
 226:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 227:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 228:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 229:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 230:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** uint32_t XMC_LIST_GetLength(XMC_LIST_t *list);
 231:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 232:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 233:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 234:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 235:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** void *XMC_LIST_GetHead(XMC_LIST_t *list);
 236:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 237:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 238:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 239:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 240:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** void *XMC_LIST_GetTail(XMC_LIST_t *list);
 241:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 242:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 243:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 244:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 245:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** void XMC_LIST_Insert(XMC_LIST_t *list, void *prev_item, void *new_item);
 246:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 247:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 248:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 249:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 250:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** void XMC_PRIOARRAY_Init(XMC_PRIOARRAY_t *prioarray);
 251:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 252:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 253:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 254:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 255:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** void XMC_PRIOARRAY_Add(XMC_PRIOARRAY_t *prioarray, int32_t item, int32_t priority);
 256:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 257:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 258:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 259:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 260:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** void XMC_PRIOARRAY_Remove(XMC_PRIOARRAY_t *prioarray, int32_t item);
 261:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 262:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 263:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 264:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 265:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** __STATIC_INLINE int32_t XMC_PRIOARRAY_GetHead(XMC_PRIOARRAY_t *prioarray)
 266:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** {
 267:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   XMC_ASSERT("XMC_PRIOARRAY_Init: NULL pointer", prioarray != NULL);
 268:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   return prioarray->items[prioarray->size].next;
 332              	 .loc 2 268 0
 333 0002 4668     	 ldr r6,[r0,#4]
 334 0004 0368     	 ldr r3,[r0]
 335 0006 03EB4303 	 add r3,r3,r3,lsl#1
 336 000a 06EB8303 	 add r3,r6,r3,lsl#2
 337 000e 9C68     	 ldr r4,[r3,#8]
 338              	.LVL26:
 339              	.LBE9:
 340              	.LBE8:
 341              	.LBB10:
 342              	.LBB11:
 269:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** }
 270:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 271:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 272:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 273:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 274:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** __STATIC_INLINE int32_t XMC_PRIOARRAY_GetTail(XMC_PRIOARRAY_t *prioarray)
 275:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** {
 276:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   XMC_ASSERT("XMC_PRIOARRAY_Init: NULL pointer", prioarray != NULL);
 277:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   return prioarray->items[prioarray->size + 1].previous;
 278:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** }
 279:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 280:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 281:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 282:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 283:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** __STATIC_INLINE int32_t XMC_PRIOARRAY_GetItemPriority(XMC_PRIOARRAY_t *prioarray, int32_t item)
 284:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** {
 285:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   XMC_ASSERT("XMC_PRIOARRAY_GetItemPriority: item out of range", (item >= 0) && (item < prioarray->
 286:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   return prioarray->items[item].priority;
 343              	 .loc 2 286 0
 344 0010 04EB4405 	 add r5,r4,r4,lsl#1
 345 0014 AD00     	 lsls r5,r5,#2
 346 0016 2F46     	 mov r7,r5
 347 0018 7319     	 adds r3,r6,r5
 348              	.LBE11:
 349              	.LBE10:
 184:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   int32_t next;
 185:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   int32_t previous;
 186:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 187:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   XMC_ASSERT("XMC_PRIOARRAY_Add: item out of range", (item >= 0) && (item < prioarray->size));
 188:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   
 189:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   next = XMC_PRIOARRAY_GetHead(prioarray);
 190:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   while (XMC_PRIOARRAY_GetItemPriority(prioarray, next) > priority)
 350              	 .loc 1 190 0
 351 001a 7559     	 ldr r5,[r6,r5]
 352 001c AA42     	 cmp r2,r5
 353 001e 09DA     	 bge .L25
 354              	.LVL27:
 355              	.L27:
 356              	.LBB13:
 357              	.LBB14:
 287:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** }
 288:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** 
 289:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** /*
 290:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  *
 291:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****  */
 292:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** __STATIC_INLINE int32_t XMC_PRIOARRAY_GetItemNext(XMC_PRIOARRAY_t *prioarray, int32_t item)
 293:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** {
 294:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   XMC_ASSERT("XMC_PRIOARRAY_GetItemNext: item out of range", (item >= 0) && (item < prioarray->size
 295:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h ****   return prioarray->items[item].next;
 358              	 .loc 2 295 0
 359 0020 9C68     	 ldr r4,[r3,#8]
 360              	.LBE14:
 361              	.LBE13:
 362              	.LBB15:
 363              	.LBB12:
 286:C:/Files/Projects/Git/XMCLib/inc\xmc_common.h **** }
 364              	 .loc 2 286 0
 365 0022 04EB4405 	 add r5,r4,r4,lsl#1
 366 0026 AB00     	 lsls r3,r5,#2
 367              	.LVL28:
 368 0028 1F46     	 mov r7,r3
 369 002a 3344     	 add r3,r3,r6
 370              	.LBE12:
 371              	.LBE15:
 372              	 .loc 1 190 0
 373 002c 56F82550 	 ldr r5,[r6,r5,lsl#2]
 374 0030 AA42     	 cmp r2,r5
 375 0032 F5DB     	 blt .L27
 376              	.LVL29:
 377              	.L25:
 191:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   {
 192:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****     next = XMC_PRIOARRAY_GetItemNext(prioarray, next);
 193:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   }
 194:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 195:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   previous = prioarray->items[next].previous;
 378              	 .loc 1 195 0
 379 0034 5B68     	 ldr r3,[r3,#4]
 380              	.LVL30:
 196:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 197:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[item].next = next;
 381              	 .loc 1 197 0
 382 0036 01EB4105 	 add r5,r1,r1,lsl#1
 383 003a AD00     	 lsls r5,r5,#2
 384 003c 2E44     	 add r6,r6,r5
 385 003e B460     	 str r4,[r6,#8]
 198:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[item].previous = previous;
 386              	 .loc 1 198 0
 387 0040 4468     	 ldr r4,[r0,#4]
 388              	.LVL31:
 389 0042 2C44     	 add r4,r4,r5
 390 0044 6360     	 str r3,[r4,#4]
 391              	.LVL32:
 199:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[item].priority = priority;
 392              	 .loc 1 199 0
 393 0046 4468     	 ldr r4,[r0,#4]
 394 0048 6251     	 str r2,[r4,r5]
 200:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 201:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[previous].next = item;
 395              	 .loc 1 201 0
 396 004a 4268     	 ldr r2,[r0,#4]
 397              	.LVL33:
 398 004c 03EB4303 	 add r3,r3,r3,lsl#1
 399              	.LVL34:
 400 0050 02EB8303 	 add r3,r2,r3,lsl#2
 401 0054 9960     	 str r1,[r3,#8]
 402              	.LVL35:
 202:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[next].previous = item;
 403              	 .loc 1 202 0
 404 0056 4368     	 ldr r3,[r0,#4]
 405 0058 1F44     	 add r7,r7,r3
 406 005a 7960     	 str r1,[r7,#4]
 203:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** }
 407              	 .loc 1 203 0
 408 005c F0BC     	 pop {r4,r5,r6,r7}
 409              	.LCFI4:
 410              	 .cfi_restore 7
 411              	 .cfi_restore 6
 412              	 .cfi_restore 5
 413              	 .cfi_restore 4
 414              	 .cfi_def_cfa_offset 0
 415 005e 7047     	 bx lr
 416              	 .cfi_endproc
 417              	.LFE144:
 419              	 .section .text.XMC_PRIOARRAY_Remove,"ax",%progbits
 420              	 .align 2
 421              	 .global XMC_PRIOARRAY_Remove
 422              	 .thumb
 423              	 .thumb_func
 425              	XMC_PRIOARRAY_Remove:
 426              	.LFB145:
 204:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 205:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** void XMC_PRIOARRAY_Remove(XMC_PRIOARRAY_t *prioarray, int32_t item)
 206:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** {
 427              	 .loc 1 206 0
 428              	 .cfi_startproc
 429              	 
 430              	 
 431              	 
 432              	.LVL36:
 433 0000 10B4     	 push {r4}
 434              	.LCFI5:
 435              	 .cfi_def_cfa_offset 4
 436              	 .cfi_offset 4,-4
 207:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   int32_t next;
 208:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   int32_t previous;
 209:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 210:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   XMC_ASSERT("XMC_PRIOARRAY_Add: item out of range", (item >= 0) && (item < prioarray->size));
 211:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   
 212:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   next = prioarray->items[item].next;
 437              	 .loc 1 212 0
 438 0002 4268     	 ldr r2,[r0,#4]
 439 0004 01EB4101 	 add r1,r1,r1,lsl#1
 440              	.LVL37:
 441 0008 02EB8101 	 add r1,r2,r1,lsl#2
 442 000c 8B68     	 ldr r3,[r1,#8]
 443              	.LVL38:
 213:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   previous = prioarray->items[item].previous;
 444              	 .loc 1 213 0
 445 000e 4968     	 ldr r1,[r1,#4]
 446              	.LVL39:
 214:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** 
 215:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[previous].next = next;
 447              	 .loc 1 215 0
 448 0010 01EB4104 	 add r4,r1,r1,lsl#1
 449 0014 02EB8402 	 add r2,r2,r4,lsl#2
 450 0018 9360     	 str r3,[r2,#8]
 216:C:/Files/Projects/Git/XMCLib/src\xmc_common.c ****   prioarray->items[next].previous = previous;
 451              	 .loc 1 216 0
 452 001a 4268     	 ldr r2,[r0,#4]
 453 001c 03EB4303 	 add r3,r3,r3,lsl#1
 454              	.LVL40:
 455 0020 02EB8303 	 add r3,r2,r3,lsl#2
 456 0024 5960     	 str r1,[r3,#4]
 217:C:/Files/Projects/Git/XMCLib/src\xmc_common.c **** }
 457              	 .loc 1 217 0
 458 0026 5DF8044B 	 ldr r4,[sp],#4
 459              	.LCFI6:
 460              	 .cfi_restore 4
 461              	 .cfi_def_cfa_offset 0
 462 002a 7047     	 bx lr
 463              	 .cfi_endproc
 464              	.LFE145:
 466              	 .text
 467              	.Letext0:
 468              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 469              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 470              	 .file 5 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
 471              	 .file 6 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_common.c
    {standard input}:20     .text.XMC_LIST_Init:00000000 $t
    {standard input}:25     .text.XMC_LIST_Init:00000000 XMC_LIST_Init
    {standard input}:42     .text.XMC_LIST_GetHead:00000000 $t
    {standard input}:47     .text.XMC_LIST_GetHead:00000000 XMC_LIST_GetHead
    {standard input}:63     .text.XMC_LIST_GetTail:00000000 $t
    {standard input}:68     .text.XMC_LIST_GetTail:00000000 XMC_LIST_GetTail
    {standard input}:97     .text.XMC_LIST_Add:00000000 $t
    {standard input}:102    .text.XMC_LIST_Add:00000000 XMC_LIST_Add
    {standard input}:138    .text.XMC_LIST_Remove:00000000 $t
    {standard input}:143    .text.XMC_LIST_Remove:00000000 XMC_LIST_Remove
    {standard input}:206    .text.XMC_LIST_Insert:00000000 $t
    {standard input}:211    .text.XMC_LIST_Insert:00000000 XMC_LIST_Insert
    {standard input}:240    .text.XMC_PRIOARRAY_Init:00000000 $t
    {standard input}:245    .text.XMC_PRIOARRAY_Init:00000000 XMC_PRIOARRAY_Init
    {standard input}:308    .text.XMC_PRIOARRAY_Add:00000000 $t
    {standard input}:313    .text.XMC_PRIOARRAY_Add:00000000 XMC_PRIOARRAY_Add
    {standard input}:420    .text.XMC_PRIOARRAY_Remove:00000000 $t
    {standard input}:425    .text.XMC_PRIOARRAY_Remove:00000000 XMC_PRIOARRAY_Remove
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
