   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_sdmmc.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SDMMC_GetPowerStatus,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_SDMMC_GetPowerStatus
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_SDMMC_GetPowerStatus:
  26              	.LFB217:
  27              	 .file 1 "C:/Files/Projects/Git/XMCLib/src/xmc_sdmmc.c"
   1:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
   2:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /**
   3:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * @file xmc_sdmmc.c
   4:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * @date 2019-05-07
   5:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
   6:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * @cond
   7:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  **************************************************************************************************
   8:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   9:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
  10:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  11:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * All rights reserved.                        
  12:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *                                             
  13:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * following conditions are met:   
  15:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *                                                                              
  16:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * disclaimer.                        
  18:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * 
  19:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * 
  22:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * products derived from this software without specific prior written permission.                  
  24:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *                                                                              
  25:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *                                                                              
  33:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  **************************************************************************************************
  36:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
  37:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Change History
  38:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * --------------
  39:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
  40:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * 2015-02-20:
  41:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *     - Initial <br>
  42:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *     - Removed GetDriverVersion API <br>
  43:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
  44:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * 2015-06-20:
  45:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *     - Removed definition of GetDriverVersion API <br>
  46:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
  47:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * 2016-03-14:
  48:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *     - Values are directly assigned to the int status registers <br>
  49:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
  50:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * 2016-07-11:
  51:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *     - XMC_SDMMC_SetDataTransferMode() shall not invoke SetDateLineTimeout() <br>
  52:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
  53:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * 2019-05-07:
  54:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *     - Fixed compilation warnings
  55:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
  56:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * @endcond
  57:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  */
  58:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  
  59:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /**
  60:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * @addtogroup XMClib
  61:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * @{
  62:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  */
  63:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
  64:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /**
  65:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * @addtogroup SDMMC
  66:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * @brief SDMMC driver
  67:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * @{
  68:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  */
  69:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  
  70:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /*******************************************************************************
  71:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * HEADER FILES
  72:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *******************************************************************************/
  73:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  
  74:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #include "xmc_sdmmc.h"
  75:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
  76:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /*
  77:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * The SDMMC peripheral is only available on the
  78:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * XMC4500. The SDMMC definition can be found in
  79:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * the XMC4500.h (device header file).
  80:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  */
  81:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #if defined (SDMMC)
  82:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #include "xmc_scu.h"
  83:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
  84:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /*******************************************************************************
  85:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * MACROS
  86:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *******************************************************************************/
  87:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
  88:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /*
  89:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Check for valid SDMMC error events <br>
  90:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
  91:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
  92:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  */
  93:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #define XMC_SDMMC_CHECK_ERROR_EVENT(e)\
  94:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   ((e == XMC_SDMMC_CMD_TIMEOUT_ERR)     ||\
  95:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_CMD_CRC_ERR)         ||\
  96:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_CMD_END_BIT_ERR)     ||\
  97:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_CMD_IND_ERR)         ||\
  98:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_DATA_TIMEOUT_ERR)    ||\
  99:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_DATA_CRC_ERR)        ||\
 100:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_DATA_END_BIT_ERR)    ||\
 101:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_CURRENT_LIMIT_ERR)   ||\
 102:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_ACMD_ERR)            ||\
 103:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_TARGET_RESP_ERR))
 104:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 105:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /*
 106:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Check for valid SDMMC normal events <br>
 107:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
 108:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 109:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  */
 110:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #define XMC_SDMMC_CHECK_NORMAL_EVENT(e)\
 111:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   ((e == XMC_SDMMC_CMD_COMPLETE)        ||\
 112:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_TX_COMPLETE)         ||\
 113:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_BLOCK_GAP_EVENT)     ||\
 114:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_BUFFER_WRITE_READY)  ||\
 115:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_BUFFER_READ_READY)   ||\
 116:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_CARD_INS)            ||\
 117:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_CARD_REMOVAL)        ||\
 118:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (e == XMC_SDMMC_CARD_INT))
 119:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 120:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /*
 121:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Check for both normal and error events <br>
 122:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
 123:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 124:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  */
 125:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #define XMC_SDMMC_CHECK_EVENT(e)\
 126:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   ((XMC_SDMMC_CHECK_NORMAL_EVENT(e))    ||\
 127:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (XMC_SDMMC_CHECK_ERROR_EVENT(e)))
 128:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 129:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /*
 130:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Check for valid SDMMC wakeup events <br>
 131:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
 132:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 133:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  */
 134:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #define XMC_SDMMC_CHECK_WAKEUP_EVENT(w)\
 135:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   ((w == XMC_SDMMC_WAKEUP_EN_CARD_INT)  ||\
 136:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (w == XMC_SDMMC_WAKEUP_EN_CARD_INS)  ||\
 137:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (w == XMC_SDMMC_WAKEUP_EN_CARD_REM))
 138:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 139:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /*
 140:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Check for valid SDMMC software reset modes <br>
 141:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
 142:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 143:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  */
 144:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #define XMC_SDMMC_CHECK_SW_RESET_MODE(m)\
 145:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   ((m == XMC_SDMMC_SW_RESET_ALL)        ||\
 146:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (m == XMC_SDMMC_SW_RST_CMD_LINE)     ||\
 147:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (m == XMC_SDMMC_SW_RST_DAT_LINE))
 148:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 149:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /*
 150:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * Check for valid SDMMC transfer modes <br>
 151:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *
 152:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 153:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  */
 154:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #define XMC_SDMMC_CHECK_TRANSFER_MODE(m)\
 155:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   ((m == XMC_SDMMC_TRANSFER_MODE_TYPE_SINGLE)    ||\
 156:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (m == XMC_SDMMC_TRANSFER_MODE_TYPE_INFINITE)  ||\
 157:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (m == XMC_SDMMC_TRANSFER_MODE_TYPE_MULTIPLE)  ||\
 158:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    (m == XMC_SDMMC_TRANSFER_MODE_TYPE_STOP_MULTIPLE))
 159:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 160:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 161:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /*******************************************************************************
 162:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * API IMPLEMENTATION
 163:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  *******************************************************************************/
 164:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  
 165:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /* Get power status of the SDMMC peripheral */
 166:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** bool XMC_SDMMC_GetPowerStatus(XMC_SDMMC_t *const sdmmc)
 167:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {
  28              	 .loc 1 167 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
 168:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_GetPowerStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc))
 169:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 170:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   return (bool)(sdmmc->POWER_CTRL & SDMMC_POWER_CTRL_SD_BUS_POWER_Msk);
  34              	 .loc 1 170 0
  35 0000 90F82900 	 ldrb r0,[r0,#41]
  36              	.LVL1:
 171:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** }
  37              	 .loc 1 171 0
  38 0004 00F00100 	 and r0,r0,#1
  39 0008 7047     	 bx lr
  40              	 .cfi_endproc
  41              	.LFE217:
  43 000a 00BF     	 .section .text.XMC_SDMMC_Enable,"ax",%progbits
  44              	 .align 2
  45              	 .global XMC_SDMMC_Enable
  46              	 .thumb
  47              	 .thumb_func
  49              	XMC_SDMMC_Enable:
  50              	.LFB218:
 172:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 173:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /*
 174:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * De-assert the peripheral reset. The SDMMC peripheral
 175:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  * needs to be initialized
 176:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****  */
 177:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** void XMC_SDMMC_Enable(XMC_SDMMC_t *const sdmmc)
 178:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {
  51              	 .loc 1 178 0
  52              	 .cfi_startproc
  53              	 
  54              	 
  55              	.LVL2:
  56 0000 08B5     	 push {r3,lr}
  57              	.LCFI0:
  58              	 .cfi_def_cfa_offset 8
  59              	 .cfi_offset 3,-8
  60              	 .cfi_offset 14,-4
 179:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_Enable: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
 180:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_UNUSED_ARG(sdmmc);
 181:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 182:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #if defined(CLOCK_GATING_SUPPORTED)
 183:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_SDMMC);
 184:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #endif
 185:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 186:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_SDMMC);
  61              	 .loc 1 186 0
  62 0002 0248     	 ldr r0,.L4
  63              	.LVL3:
  64 0004 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  65              	.LVL4:
  66 0008 08BD     	 pop {r3,pc}
  67              	.L5:
  68 000a 00BF     	 .align 2
  69              	.L4:
  70 000c 40000010 	 .word 268435520
  71              	 .cfi_endproc
  72              	.LFE218:
  74              	 .section .text.XMC_SDMMC_Disable,"ax",%progbits
  75              	 .align 2
  76              	 .global XMC_SDMMC_Disable
  77              	 .thumb
  78              	 .thumb_func
  80              	XMC_SDMMC_Disable:
  81              	.LFB219:
 187:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #endif  
 188:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** }
 189:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 190:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /* Assert the peripheral reset */
 191:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** void XMC_SDMMC_Disable(XMC_SDMMC_t *const sdmmc)
 192:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {
  82              	 .loc 1 192 0
  83              	 .cfi_startproc
  84              	 
  85              	 
  86              	.LVL5:
  87 0000 08B5     	 push {r3,lr}
  88              	.LCFI1:
  89              	 .cfi_def_cfa_offset 8
  90              	 .cfi_offset 3,-8
  91              	 .cfi_offset 14,-4
 193:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_Disable: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
 194:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_UNUSED_ARG(sdmmc);
 195:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 196:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 197:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_SDMMC);
  92              	 .loc 1 197 0
  93 0002 0248     	 ldr r0,.L8
  94              	.LVL6:
  95 0004 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
  96              	.LVL7:
  97 0008 08BD     	 pop {r3,pc}
  98              	.L9:
  99 000a 00BF     	 .align 2
 100              	.L8:
 101 000c 40000010 	 .word 268435520
 102              	 .cfi_endproc
 103              	.LFE219:
 105              	 .section .text.XMC_SDMMC_Init,"ax",%progbits
 106              	 .align 2
 107              	 .global XMC_SDMMC_Init
 108              	 .thumb
 109              	 .thumb_func
 111              	XMC_SDMMC_Init:
 112              	.LFB220:
 198:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #endif  
 199:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #if defined(CLOCK_GATING_SUPPORTED)
 200:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_SDMMC);
 201:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #endif
 202:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** }
 203:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 204:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /* Initialize SDMMC peripheral */
 205:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** XMC_SDMMC_STATUS_t XMC_SDMMC_Init(XMC_SDMMC_t *const sdmmc, const XMC_SDMMC_CONFIG_t *config)
 206:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {
 113              	 .loc 1 206 0
 114              	 .cfi_startproc
 115              	 
 116              	 
 117              	.LVL8:
 118 0000 38B5     	 push {r3,r4,r5,lr}
 119              	.LCFI2:
 120              	 .cfi_def_cfa_offset 16
 121              	 .cfi_offset 3,-16
 122              	 .cfi_offset 4,-12
 123              	 .cfi_offset 5,-8
 124              	 .cfi_offset 14,-4
 125 0002 0446     	 mov r4,r0
 126 0004 0D46     	 mov r5,r1
 127              	.LVL9:
 128              	.LBB4:
 129              	.LBB5:
 186:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** #endif  
 130              	 .loc 1 186 0
 131 0006 0A48     	 ldr r0,.L12
 132              	.LVL10:
 133 0008 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 134              	.LVL11:
 135              	.LBE5:
 136              	.LBE4:
 207:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_Init: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
 208:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_Init: Invalid clock divider value", XMC_SDMMC_CHECK_SDCLK_FREQ(config->cloc
 209:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_Init: Invalid bus width", XMC_SDMMC_CHECK_DATA_LINES(config->bus_width));
 210:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   
 211:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   /* Enable SDMMC peripheral */
 212:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_SDMMC_Enable(sdmmc);
 213:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   
 214:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   /* Write internal clock divider register */
 215:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->CLOCK_CTRL |= (uint16_t)((uint32_t)config->clock_divider << SDMMC_CLOCK_CTRL_SDCLK_FREQ_SE
 137              	 .loc 1 215 0
 138 000c A38D     	 ldrh r3,[r4,#44]
 139 000e 9BB2     	 uxth r3,r3
 140 0010 6A78     	 ldrb r2,[r5,#1]
 141 0012 43EA0223 	 orr r3,r3,r2,lsl#8
 142 0016 A385     	 strh r3,[r4,#44]
 216:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   
 217:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   /* Set bus width */
 218:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->HOST_CTRL = (uint8_t)((sdmmc->HOST_CTRL & (uint8_t)~SDMMC_HOST_CTRL_DATA_TX_WIDTH_Msk) |
 143              	 .loc 1 218 0
 144 0018 94F82830 	 ldrb r3,[r4,#40]
 219:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****                                ((uint8_t)config->bus_width << SDMMC_HOST_CTRL_DATA_TX_WIDTH_Pos));
 145              	 .loc 1 219 0
 146 001c 2A78     	 ldrb r2,[r5]
 218:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****                                ((uint8_t)config->bus_width << SDMMC_HOST_CTRL_DATA_TX_WIDTH_Pos));
 147              	 .loc 1 218 0
 148 001e 03F0FD03 	 and r3,r3,#253
 149 0022 43EA4203 	 orr r3,r3,r2,lsl#1
 150 0026 DBB2     	 uxtb r3,r3
 151 0028 84F82830 	 strb r3,[r4,#40]
 220:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 221:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   return XMC_SDMMC_STATUS_SUCCESS;
 222:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** }
 152              	 .loc 1 222 0
 153 002c 0020     	 movs r0,#0
 154 002e 38BD     	 pop {r3,r4,r5,pc}
 155              	.LVL12:
 156              	.L13:
 157              	 .align 2
 158              	.L12:
 159 0030 40000010 	 .word 268435520
 160              	 .cfi_endproc
 161              	.LFE220:
 163              	 .section .text.XMC_SDMMC_EnableEventStatus,"ax",%progbits
 164              	 .align 2
 165              	 .global XMC_SDMMC_EnableEventStatus
 166              	 .thumb
 167              	 .thumb_func
 169              	XMC_SDMMC_EnableEventStatus:
 170              	.LFB221:
 223:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 224:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /* Enable event status */
 225:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** void XMC_SDMMC_EnableEventStatus(XMC_SDMMC_t *const sdmmc, uint32_t event)
 226:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {
 171              	 .loc 1 226 0
 172              	 .cfi_startproc
 173              	 
 174              	 
 175              	 
 176              	.LVL13:
 227:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_EnableEventStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
 228:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 229:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   /* Set INT status enable register */
 230:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->EN_INT_STATUS_NORM |= (uint16_t)event;
 177              	 .loc 1 230 0
 178 0000 838E     	 ldrh r3,[r0,#52]
 179 0002 0B43     	 orrs r3,r3,r1
 180 0004 9BB2     	 uxth r3,r3
 181 0006 8386     	 strh r3,[r0,#52]
 231:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->EN_INT_STATUS_ERR |= (uint16_t)(event >> 16U);
 182              	 .loc 1 231 0
 183 0008 C38E     	 ldrh r3,[r0,#54]
 184 000a 9BB2     	 uxth r3,r3
 185 000c 43EA1141 	 orr r1,r3,r1,lsr#16
 186              	.LVL14:
 187 0010 C186     	 strh r1,[r0,#54]
 188 0012 7047     	 bx lr
 189              	 .cfi_endproc
 190              	.LFE221:
 192              	 .section .text.XMC_SDMMC_DisableEventStatus,"ax",%progbits
 193              	 .align 2
 194              	 .global XMC_SDMMC_DisableEventStatus
 195              	 .thumb
 196              	 .thumb_func
 198              	XMC_SDMMC_DisableEventStatus:
 199              	.LFB222:
 232:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** }
 233:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 234:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /* Disable event status */
 235:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** void XMC_SDMMC_DisableEventStatus(XMC_SDMMC_t *const sdmmc, uint32_t event)
 236:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {
 200              	 .loc 1 236 0
 201              	 .cfi_startproc
 202              	 
 203              	 
 204              	 
 205              	.LVL15:
 237:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_DisableEventStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
 238:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 239:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   /* Clear INT status enable register */
 240:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->EN_INT_STATUS_NORM &= (uint16_t)~event;
 206              	 .loc 1 240 0
 207 0000 838E     	 ldrh r3,[r0,#52]
 208 0002 9BB2     	 uxth r3,r3
 209 0004 23EA0103 	 bic r3,r3,r1
 210 0008 8386     	 strh r3,[r0,#52]
 241:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->EN_INT_STATUS_ERR &= (uint16_t)~(event >> 16U);
 211              	 .loc 1 241 0
 212 000a C38E     	 ldrh r3,[r0,#54]
 213 000c 9BB2     	 uxth r3,r3
 214 000e 23EA1141 	 bic r1,r3,r1,lsr#16
 215              	.LVL16:
 216 0012 C186     	 strh r1,[r0,#54]
 217 0014 7047     	 bx lr
 218              	 .cfi_endproc
 219              	.LFE222:
 221 0016 00BF     	 .section .text.XMC_SDMMC_EnableEvent,"ax",%progbits
 222              	 .align 2
 223              	 .global XMC_SDMMC_EnableEvent
 224              	 .thumb
 225              	 .thumb_func
 227              	XMC_SDMMC_EnableEvent:
 228              	.LFB223:
 242:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** }
 243:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 244:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /* Enable SDMMC event */
 245:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** void XMC_SDMMC_EnableEvent(XMC_SDMMC_t *const sdmmc, uint32_t event)
 246:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {
 229              	 .loc 1 246 0
 230              	 .cfi_startproc
 231              	 
 232              	 
 233              	.LVL17:
 234 0000 38B5     	 push {r3,r4,r5,lr}
 235              	.LCFI3:
 236              	 .cfi_def_cfa_offset 16
 237              	 .cfi_offset 3,-16
 238              	 .cfi_offset 4,-12
 239              	 .cfi_offset 5,-8
 240              	 .cfi_offset 14,-4
 241 0002 0446     	 mov r4,r0
 242 0004 0D46     	 mov r5,r1
 247:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_EnableEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
 248:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   
 249:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_SDMMC_EnableEventStatus(sdmmc, event);
 243              	 .loc 1 249 0
 244 0006 FFF7FEFF 	 bl XMC_SDMMC_EnableEventStatus
 245              	.LVL18:
 250:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 251:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->EN_INT_SIGNAL_NORM |= (uint16_t)event;
 246              	 .loc 1 251 0
 247 000a 238F     	 ldrh r3,[r4,#56]
 248 000c 2B43     	 orrs r3,r3,r5
 249 000e 9BB2     	 uxth r3,r3
 250 0010 2387     	 strh r3,[r4,#56]
 252:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->EN_INT_SIGNAL_ERR |= (uint16_t)(event >> 16U);
 251              	 .loc 1 252 0
 252 0012 618F     	 ldrh r1,[r4,#58]
 253 0014 89B2     	 uxth r1,r1
 254 0016 41EA1541 	 orr r1,r1,r5,lsr#16
 255 001a 6187     	 strh r1,[r4,#58]
 256 001c 38BD     	 pop {r3,r4,r5,pc}
 257              	 .cfi_endproc
 258              	.LFE223:
 260 001e 00BF     	 .section .text.XMC_SDMMC_DisableEvent,"ax",%progbits
 261              	 .align 2
 262              	 .global XMC_SDMMC_DisableEvent
 263              	 .thumb
 264              	 .thumb_func
 266              	XMC_SDMMC_DisableEvent:
 267              	.LFB224:
 253:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** }
 254:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 255:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /* Disable SDMMC event without disabling event status */
 256:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** void XMC_SDMMC_DisableEvent(XMC_SDMMC_t *const sdmmc, uint32_t event)
 257:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {
 268              	 .loc 1 257 0
 269              	 .cfi_startproc
 270              	 
 271              	 
 272              	 
 273              	.LVL19:
 258:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_DisableEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
 259:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 260:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   /* Clear INT signal enable register */
 261:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->EN_INT_SIGNAL_NORM &= (uint16_t)~event;
 274              	 .loc 1 261 0
 275 0000 038F     	 ldrh r3,[r0,#56]
 276 0002 9BB2     	 uxth r3,r3
 277 0004 23EA0103 	 bic r3,r3,r1
 278 0008 0387     	 strh r3,[r0,#56]
 262:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->EN_INT_SIGNAL_ERR &= (uint16_t)~(event >> 16U);
 279              	 .loc 1 262 0
 280 000a 438F     	 ldrh r3,[r0,#58]
 281 000c 9BB2     	 uxth r3,r3
 282 000e 23EA1141 	 bic r1,r3,r1,lsr#16
 283              	.LVL20:
 284 0012 4187     	 strh r1,[r0,#58]
 285 0014 7047     	 bx lr
 286              	 .cfi_endproc
 287              	.LFE224:
 289 0016 00BF     	 .section .text.XMC_SDMMC_ClearEvent,"ax",%progbits
 290              	 .align 2
 291              	 .global XMC_SDMMC_ClearEvent
 292              	 .thumb
 293              	 .thumb_func
 295              	XMC_SDMMC_ClearEvent:
 296              	.LFB225:
 263:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** }
 264:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 265:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /* Clear SDMMC event(s) */
 266:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** void XMC_SDMMC_ClearEvent(XMC_SDMMC_t *const sdmmc, uint32_t event)
 267:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {
 297              	 .loc 1 267 0
 298              	 .cfi_startproc
 299              	 
 300              	 
 301              	 
 302              	.LVL21:
 268:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_ClearEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
 269:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_ClearEvent: Invalid bit-field", !(event & XMC_SDMMC_TARGET_RESP_ERR));
 270:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 271:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->INT_STATUS_NORM = (uint16_t)event;
 303              	 .loc 1 271 0
 304 0000 8BB2     	 uxth r3,r1
 305 0002 0386     	 strh r3,[r0,#48]
 272:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->INT_STATUS_ERR = (uint16_t)(event >> 16U);
 306              	 .loc 1 272 0
 307 0004 090C     	 lsrs r1,r1,#16
 308              	.LVL22:
 309 0006 4186     	 strh r1,[r0,#50]
 310 0008 7047     	 bx lr
 311              	 .cfi_endproc
 312              	.LFE225:
 314 000a 00BF     	 .section .text.XMC_SDMMC_GetEvent,"ax",%progbits
 315              	 .align 2
 316              	 .global XMC_SDMMC_GetEvent
 317              	 .thumb
 318              	 .thumb_func
 320              	XMC_SDMMC_GetEvent:
 321              	.LFB226:
 273:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** }
 274:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 275:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /* Get the status of an SDMMC event */
 276:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** bool XMC_SDMMC_GetEvent(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_EVENT_t event)
 277:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {  
 322              	 .loc 1 277 0
 323              	 .cfi_startproc
 324              	 
 325              	 
 326              	 
 327              	.LVL23:
 278:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   bool status;
 279:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   
 280:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_GetEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
 281:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_GetEvent: Invalid SDMMC event", XMC_SDMMC_CHECK_EVENT(event));
 282:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 283:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   if (event < XMC_SDMMC_CMD_TIMEOUT_ERR)
 328              	 .loc 1 283 0
 329 0000 B1F5803F 	 cmp r1,#65536
 330 0004 06D2     	 bcs .L21
 284:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   {
 285:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****     status = (bool)(sdmmc->INT_STATUS_NORM & (uint16_t)event);
 331              	 .loc 1 285 0
 332 0006 038E     	 ldrh r3,[r0,#48]
 333 0008 9BB2     	 uxth r3,r3
 334 000a 0B42     	 tst r3,r1
 335 000c 14BF     	 ite ne
 336 000e 0120     	 movne r0,#1
 337              	.LVL24:
 338 0010 0020     	 moveq r0,#0
 339              	.LVL25:
 340 0012 7047     	 bx lr
 341              	.LVL26:
 342              	.L21:
 286:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   }
 287:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   else
 288:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   {
 289:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****     status = (bool)(sdmmc->INT_STATUS_ERR & (uint16_t)((uint32_t)event >> 16U));
 343              	 .loc 1 289 0
 344 0014 438E     	 ldrh r3,[r0,#50]
 345 0016 13EA1143 	 ands r3,r3,r1,lsr#16
 346 001a 14BF     	 ite ne
 347 001c 0120     	 movne r0,#1
 348              	.LVL27:
 349 001e 0020     	 moveq r0,#0
 350              	.LVL28:
 290:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   }
 291:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   
 292:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   return status;
 293:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** }
 351              	 .loc 1 293 0
 352 0020 7047     	 bx lr
 353              	 .cfi_endproc
 354              	.LFE226:
 356 0022 00BF     	 .section .text.XMC_SDMMC_GetR2Response,"ax",%progbits
 357              	 .align 2
 358              	 .global XMC_SDMMC_GetR2Response
 359              	 .thumb
 360              	 .thumb_func
 362              	XMC_SDMMC_GetR2Response:
 363              	.LFB227:
 294:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 295:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /* Read R2 response (CID, CSD register) */
 296:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** void XMC_SDMMC_GetR2Response(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_RESPONSE_t *const response)
 297:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {
 364              	 .loc 1 297 0
 365              	 .cfi_startproc
 366              	 
 367              	 
 368              	 
 369              	.LVL29:
 298:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_GetR2Response: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
 299:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   
 300:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   response->response_0 = sdmmc->RESPONSE[0];
 370              	 .loc 1 300 0
 371 0000 0369     	 ldr r3,[r0,#16]
 372 0002 0B60     	 str r3,[r1]
 301:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   response->response_2 = sdmmc->RESPONSE[1];
 373              	 .loc 1 301 0
 374 0004 4369     	 ldr r3,[r0,#20]
 375 0006 4B60     	 str r3,[r1,#4]
 302:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   response->response_4 = sdmmc->RESPONSE[2];
 376              	 .loc 1 302 0
 377 0008 8369     	 ldr r3,[r0,#24]
 378 000a 8B60     	 str r3,[r1,#8]
 303:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   response->response_6 = sdmmc->RESPONSE[3];
 379              	 .loc 1 303 0
 380 000c C369     	 ldr r3,[r0,#28]
 381 000e CB60     	 str r3,[r1,#12]
 382 0010 7047     	 bx lr
 383              	 .cfi_endproc
 384              	.LFE227:
 386 0012 00BF     	 .section .text.XMC_SDMMC_SendCommand,"ax",%progbits
 387              	 .align 2
 388              	 .global XMC_SDMMC_SendCommand
 389              	 .thumb
 390              	 .thumb_func
 392              	XMC_SDMMC_SendCommand:
 393              	.LFB228:
 304:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** }
 305:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 306:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /* Send SDMMC command */
 307:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** XMC_SDMMC_STATUS_t XMC_SDMMC_SendCommand(XMC_SDMMC_t *const sdmmc, const XMC_SDMMC_COMMAND_t *cmd, 
 308:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {
 394              	 .loc 1 308 0
 395              	 .cfi_startproc
 396              	 
 397              	 
 398              	 
 399              	.LVL30:
 309:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_SendCommand: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
 310:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   
 311:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->ARGUMENT1 = arg;
 400              	 .loc 1 311 0
 401 0000 8260     	 str r2,[r0,#8]
 312:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->COMMAND = (uint16_t)(*(uint16_t *)cmd);
 402              	 .loc 1 312 0
 403 0002 0B88     	 ldrh r3,[r1]
 404 0004 C381     	 strh r3,[r0,#14]
 313:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   
 314:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   return XMC_SDMMC_STATUS_SUCCESS;
 315:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** }
 405              	 .loc 1 315 0
 406 0006 0020     	 movs r0,#0
 407              	.LVL31:
 408 0008 7047     	 bx lr
 409              	 .cfi_endproc
 410              	.LFE228:
 412 000a 00BF     	 .section .text.XMC_SDMMC_SetDataTransferMode,"ax",%progbits
 413              	 .align 2
 414              	 .global XMC_SDMMC_SetDataTransferMode
 415              	 .thumb
 416              	 .thumb_func
 418              	XMC_SDMMC_SetDataTransferMode:
 419              	.LFB229:
 316:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 317:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** /* Set data transfer mode */
 318:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** void XMC_SDMMC_SetDataTransferMode(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_TRANSFER_MODE_t *const respo
 319:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** {
 420              	 .loc 1 319 0
 421              	 .cfi_startproc
 422              	 
 423              	 
 424              	 
 425              	.LVL32:
 320:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferMode: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sd
 321:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferMode: Invalid transfer type", XMC_SDMMC_CHECK_TRANSFER_MODE(
 322:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   
 323:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   /* Block size */
 324:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->BLOCK_SIZE = (uint16_t)(response->block_size);
 426              	 .loc 1 324 0
 427 0000 0B88     	 ldrh r3,[r1]
 428 0002 8380     	 strh r3,[r0,#4]
 325:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   
 326:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   /* Number of blocks */
 327:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->BLOCK_COUNT = (uint16_t)(response->num_blocks);
 429              	 .loc 1 327 0
 430 0004 8B88     	 ldrh r3,[r1,#4]
 431 0006 C380     	 strh r3,[r0,#6]
 328:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 329:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   /* Type of data transfer: single, infinite, multiple or stop multiple */
 330:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->TRANSFER_MODE = (uint16_t)((sdmmc->TRANSFER_MODE & (uint16_t)~SDMMC_TRANSFER_MODE_MULTI_BL
 432              	 .loc 1 330 0
 433 0008 8389     	 ldrh r3,[r0,#12]
 434 000a 9BB2     	 uxth r3,r3
 435 000c 23F02003 	 bic r3,r3,#32
 436 0010 0A7A     	 ldrb r2,[r1,#8]
 437 0012 1343     	 orrs r3,r3,r2
 438 0014 8381     	 strh r3,[r0,#12]
 331:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****                                     ((uint16_t)response->type));
 332:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 333:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   /*
 334:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    * Clear block count enable bit; that's only valid for
 335:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    * a multi-block transfer
 336:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****    */
 337:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   if (response->type == XMC_SDMMC_TRANSFER_MODE_TYPE_SINGLE)
 439              	 .loc 1 337 0
 440 0016 0B7A     	 ldrb r3,[r1,#8]
 441 0018 2BB9     	 cbnz r3,.L26
 338:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   {
 339:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****     sdmmc->TRANSFER_MODE &= (uint16_t)~SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN_Msk;
 442              	 .loc 1 339 0
 443 001a 8389     	 ldrh r3,[r0,#12]
 444 001c 23F00203 	 bic r3,r3,#2
 445 0020 1B04     	 lsls r3,r3,#16
 446 0022 1B0C     	 lsrs r3,r3,#16
 447 0024 8381     	 strh r3,[r0,#12]
 448              	.L26:
 340:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   }
 341:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c **** 
 342:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   /* Auto CMD configuration */
 343:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****   sdmmc->TRANSFER_MODE = (uint16_t)((sdmmc->TRANSFER_MODE & (uint16_t)~SDMMC_TRANSFER_MODE_ACMD_EN_
 449              	 .loc 1 343 0
 450 0026 8389     	 ldrh r3,[r0,#12]
 451 0028 9BB2     	 uxth r3,r3
 344:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****                                     ((uint16_t)response->auto_cmd << SDMMC_TRANSFER_MODE_ACMD_EN_Po
 452              	 .loc 1 344 0
 453 002a 4A7A     	 ldrb r2,[r1,#9]
 343:C:/Files/Projects/Git/XMCLib/src\xmc_sdmmc.c ****                                     ((uint16_t)response->auto_cmd << SDMMC_TRANSFER_MODE_ACMD_EN_Po
 454              	 .loc 1 343 0
 455 002c 23F00C03 	 bic r3,r3,#12
 456 0030 43EA8203 	 orr r3,r3,r2,lsl#2
 457 0034 8381     	 strh r3,[r0,#12]
 458 0036 7047     	 bx lr
 459              	 .cfi_endproc
 460              	.LFE229:
 462              	 .text
 463              	.Letext0:
 464              	 .file 2 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 465              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 466              	 .file 4 "C:/Files/Projects/Git/XMCLib/inc/xmc_sdmmc.h"
 467              	 .file 5 "C:/Files/Projects/Git/XMCLib/inc/xmc4_scu.h"
 468              	 .file 6 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
 469              	 .file 7 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
 470              	 .file 8 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_sdmmc.c
    {standard input}:20     .text.XMC_SDMMC_GetPowerStatus:00000000 $t
    {standard input}:25     .text.XMC_SDMMC_GetPowerStatus:00000000 XMC_SDMMC_GetPowerStatus
    {standard input}:44     .text.XMC_SDMMC_Enable:00000000 $t
    {standard input}:49     .text.XMC_SDMMC_Enable:00000000 XMC_SDMMC_Enable
    {standard input}:70     .text.XMC_SDMMC_Enable:0000000c $d
    {standard input}:75     .text.XMC_SDMMC_Disable:00000000 $t
    {standard input}:80     .text.XMC_SDMMC_Disable:00000000 XMC_SDMMC_Disable
    {standard input}:101    .text.XMC_SDMMC_Disable:0000000c $d
    {standard input}:106    .text.XMC_SDMMC_Init:00000000 $t
    {standard input}:111    .text.XMC_SDMMC_Init:00000000 XMC_SDMMC_Init
    {standard input}:159    .text.XMC_SDMMC_Init:00000030 $d
    {standard input}:164    .text.XMC_SDMMC_EnableEventStatus:00000000 $t
    {standard input}:169    .text.XMC_SDMMC_EnableEventStatus:00000000 XMC_SDMMC_EnableEventStatus
    {standard input}:193    .text.XMC_SDMMC_DisableEventStatus:00000000 $t
    {standard input}:198    .text.XMC_SDMMC_DisableEventStatus:00000000 XMC_SDMMC_DisableEventStatus
    {standard input}:222    .text.XMC_SDMMC_EnableEvent:00000000 $t
    {standard input}:227    .text.XMC_SDMMC_EnableEvent:00000000 XMC_SDMMC_EnableEvent
    {standard input}:261    .text.XMC_SDMMC_DisableEvent:00000000 $t
    {standard input}:266    .text.XMC_SDMMC_DisableEvent:00000000 XMC_SDMMC_DisableEvent
    {standard input}:290    .text.XMC_SDMMC_ClearEvent:00000000 $t
    {standard input}:295    .text.XMC_SDMMC_ClearEvent:00000000 XMC_SDMMC_ClearEvent
    {standard input}:315    .text.XMC_SDMMC_GetEvent:00000000 $t
    {standard input}:320    .text.XMC_SDMMC_GetEvent:00000000 XMC_SDMMC_GetEvent
    {standard input}:357    .text.XMC_SDMMC_GetR2Response:00000000 $t
    {standard input}:362    .text.XMC_SDMMC_GetR2Response:00000000 XMC_SDMMC_GetR2Response
    {standard input}:387    .text.XMC_SDMMC_SendCommand:00000000 $t
    {standard input}:392    .text.XMC_SDMMC_SendCommand:00000000 XMC_SDMMC_SendCommand
    {standard input}:413    .text.XMC_SDMMC_SetDataTransferMode:00000000 $t
    {standard input}:418    .text.XMC_SDMMC_SetDataTransferMode:00000000 XMC_SDMMC_SetDataTransferMode
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
