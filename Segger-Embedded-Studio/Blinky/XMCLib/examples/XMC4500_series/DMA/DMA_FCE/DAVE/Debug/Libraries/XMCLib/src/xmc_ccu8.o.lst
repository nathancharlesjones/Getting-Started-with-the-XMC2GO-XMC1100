   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,1
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ccu8.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_EnableModule,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_CCU8_EnableModule
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_CCU8_EnableModule:
  26              	.LFB234:
  27              	 .file 1 "C:/Files/Projects/Git/XMCLib/src/xmc_ccu8.c"
   1:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /**
   2:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * @file xmc_ccu8.c
   3:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * @date 2017-04-27
   4:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *
   5:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *
   9:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * 
  18:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * 
  21:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *
  36:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *
  39:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - Initial <br>
  41:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *
  42:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * 2015-06-20:
  43:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  45:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *       during external load event. 
  46:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *
  47:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * 2015-07-24:
  48:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  49:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *
  50:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * 2015-08-17:
  51:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_CHC_CONFIG_MASK is not applicable to XMC14 devices. <br>
  52:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - Start of prescaler XMC_CCU8_StartPrescaler() is invoked in XMC_CCU8_Init() API. <br>
  53:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - In XMC_CCU8_SLICE_CompareInit(), CHC register is updated according to the device. <br>
  54:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - Bug fix XMC_CCU8_SLICE_ConfigureEvent() during the level setting for XMC14 devices. <br>
  55:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - XMC_CCU8_EnableShadowTransfer() definition is removed, since the API is made as inline. <b
  56:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * 
  57:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * 2015-10-07:
  58:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  59:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - DOC updates for the newly added APIs.
  60:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *
  61:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * 2017-02-25:
  62:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - XMC_CCU8_lAssertReset(), XMC_CCU8_lDeassertReset(), XMC_CCU8_lGateClock() and XMC_CCU8_lUn
  63:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *
  64:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * 2017-04-27:
  65:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  66:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  *
  67:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * @endcond
  68:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  */
  69:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /**************************************************************************************************
  70:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * HEADER FILES
  71:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  **************************************************************************************************
  72:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #include "xmc_ccu8.h"
  73:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
  74:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CCU80)
  75:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #include "xmc_scu.h"
  76:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
  77:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /**************************************************************************************************
  78:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * MACROS
  79:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  **************************************************************************************************
  80:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_NUM_SLICES_PER_MODULE          (4U)
  81:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_PERIOD_MASK       (1U)
  82:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK    (2U)
  83:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK   (3U)
  84:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK  (1U)
  85:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK (3U)
  86:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices */
  87:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS1_EV0IS_Msk
  88:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #else
  89:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS_EV0IS_Msk
  90:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
  91:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_GIDLC_CLOCK_MASK               (15U)
  92:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE0_MASK               (1U)
  93:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE1_MASK               (16U)
  94:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE2_MASK               (256U)
  95:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE3_MASK               (4096U)
  96:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK    (63U)
  97:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
  98:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHC_CONFIG_MASK          (20U)
  99:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 100:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 101:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_DTC_DIV(div) \
 102:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((div == XMC_CCU8_SLICE_DTC_DIV_1) || \
 103:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_2) || \
 104:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_4) || \
 105:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_8))
 106:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 107:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CLOCK(clock) \
 108:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((clock == XMC_CCU8_CLOCK_SCU)        || \
 109:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_A) || \
 110:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_B) || \
 111:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_C))
 112:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 113:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_OUTPUT(out) \
 114:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((out == XMC_CCU8_SLICE_OUTPUT_0) || \
 115:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_1) || \
 116:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_2) || \
 117:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_3))
 118:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 119:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_END_MODE(end_mode) \
 120:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP) || \
 121:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR) || \
 122:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR))
 123:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 124:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_ID(event_id) \
 125:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((event_id == XMC_CCU8_SLICE_EVENT_NONE)|| \
 126:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_0)   || \
 127:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_1)   || \
 128:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_2))
 129:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 130:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(edge) \
 131:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE)        || \
 132:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE) || \
 133:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE)|| \
 134:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE))
 135:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 136:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_FILTER(cycles) \
 137:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((cycles == XMC_CCU8_SLICE_EVENT_FILTER_DISABLED) || \
 138:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES) || \
 139:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES) || \
 140:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES))
 141:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 142:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CAP_TIMER_CLEAR_MODE(mode) \
 143:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER)   || \
 144:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH)|| \
 145:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW) || \
 146:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS))
 147:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 148:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action) \
 149:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR)      || \
 150:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP) || \
 151:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT))
 152:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 153:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SR_ID(id) \
 154:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((id == XMC_CCU8_SLICE_SR_ID_0) || \
 155:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_1) || \
 156:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_2) || \
 157:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_3))
 158:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 159:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel) \
 160:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE) || \
 161:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1)    || \
 162:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_2)    || \
 163:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2))
 164:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 165:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if((UC_SERIES == XMC13) || (UC_SERIES == XMC14))
 166:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 167:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 168:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 169:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2) || \
 170:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2))
 171:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #else
 172:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 173:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 174:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 175:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2))
 176:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 177:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 178:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /**************************************************************************************************
 179:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * LOCAL ROUTINES
 180:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  **************************************************************************************************
 181:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 182:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lAssertReset(const XMC_CCU8_MODULE_t *const module)
 183:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 184:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if (module == CCU80)
 185:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 186:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 187:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 188:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CCU81)
 189:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else if (module == CCU81)
 190:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 191:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 192:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 193:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 194:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
 195:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 196:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lAssertReset:Invalid Module Pointer", 0);
 197:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 198:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 199:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 200:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lDeassertReset(const XMC_CCU8_MODULE_t *const module)
 201:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 202:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if (module == CCU80)
 203:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 204:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 205:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 206:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CCU81)
 207:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else if (module == CCU81)
 208:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 209:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 210:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 211:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 212:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
 213:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 214:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lDeassertReset:Invalid Module Pointer", 0);
 215:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 216:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 217:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 218:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 219:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 220:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lGateClock(XMC_CCU8_MODULE_t *const module)
 221:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 222:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if (module == CCU80)
 223:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 224:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 225:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 226:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CCU81)
 227:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else if (module == CCU81)
 228:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 229:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 230:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 231:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 232:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
 233:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 234:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lGateClock:Invalid Module Pointer", 0);
 235:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 236:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 237:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 238:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lUngateClock(XMC_CCU8_MODULE_t *const module)
 239:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 240:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if (module == CCU80)
 241:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 242:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 243:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 244:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CCU81)
 245:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else if (module == CCU81)
 246:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 247:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 248:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 249:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 250:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
 251:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 252:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lUngateClock:Invalid Module Pointer", 0);
 253:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 254:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 255:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 256:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 257:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined (XMC_ASSERT_ENABLE)
 258:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsInputvalid(XMC_CCU8_SLICE_INPUT_t input)
 259:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 260:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if (UC_SERIES == XMC14)
 261:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   return (input < 48U);
 262:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #else
 263:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   return (input < 16U);
 264:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 265:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 266:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 267:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /**************************************************************************************************
 268:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  * API IMPLEMENTATION
 269:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****  **************************************************************************************************
 270:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 271:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to set the CCU8 module as active and enable the clock  */
 272:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module)
 273:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
  28              	 .loc 1 273 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 10B5     	 push {r4,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 4,-8
  37              	 .cfi_offset 14,-4
  38 0002 0446     	 mov r4,r0
 274:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_EnableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 275:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 276:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if (UC_FAMILY == XMC4)
 277:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Enable CCU8 module clock */
 278:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
  39              	 .loc 1 278 0
  40 0004 1020     	 movs r0,#16
  41              	.LVL1:
  42 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
  43              	.LVL2:
  44              	.LBB12:
  45              	.LBB13:
 202:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
  46              	 .loc 1 202 0
  47 000a 074B     	 ldr r3,.L5
  48 000c 9C42     	 cmp r4,r3
  49 000e 03D1     	 bne .L2
 204:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
  50              	 .loc 1 204 0
  51 0010 8020     	 movs r0,#128
  52 0012 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  53              	.LVL3:
  54 0016 10BD     	 pop {r4,pc}
  55              	.LVL4:
  56              	.L2:
 207:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
  57              	 .loc 1 207 0
  58 0018 044B     	 ldr r3,.L5+4
  59 001a 9C42     	 cmp r4,r3
  60 001c 03D1     	 bne .L1
 209:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
  61              	 .loc 1 209 0
  62 001e 4FF48070 	 mov r0,#256
  63 0022 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  64              	.LVL5:
  65              	.L1:
  66 0026 10BD     	 pop {r4,pc}
  67              	.LVL6:
  68              	.L6:
  69              	 .align 2
  70              	.L5:
  71 0028 00000240 	 .word 1073872896
  72 002c 00400240 	 .word 1073889280
  73              	.LBE13:
  74              	.LBE12:
  75              	 .cfi_endproc
  76              	.LFE234:
  78              	 .section .text.XMC_CCU8_DisableModule,"ax",%progbits
  79              	 .align 2
  80              	 .global XMC_CCU8_DisableModule
  81              	 .thumb
  82              	 .thumb_func
  84              	XMC_CCU8_DisableModule:
  85              	.LFB235:
 279:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 280:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 281:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 282:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_CCU8_lUngateClock(module);
 283:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 284:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 285:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 286:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_CCU8_lDeassertReset(module);
 287:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 288:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 289:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 290:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to set the CCU8 module as idle and disable the clock  */
 291:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module)
 292:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
  86              	 .loc 1 292 0
  87              	 .cfi_startproc
  88              	 
  89              	 
  90              	.LVL7:
  91 0000 08B5     	 push {r3,lr}
  92              	.LCFI1:
  93              	 .cfi_def_cfa_offset 8
  94              	 .cfi_offset 3,-8
  95              	 .cfi_offset 14,-4
  96              	.LVL8:
  97              	.LBB16:
  98              	.LBB17:
 184:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
  99              	 .loc 1 184 0
 100 0002 074B     	 ldr r3,.L11
 101 0004 9842     	 cmp r0,r3
 102 0006 03D1     	 bne .L8
 186:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 103              	 .loc 1 186 0
 104 0008 8020     	 movs r0,#128
 105              	.LVL9:
 106 000a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 107              	.LVL10:
 108 000e 08BD     	 pop {r3,pc}
 109              	.LVL11:
 110              	.L8:
 189:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 111              	 .loc 1 189 0
 112 0010 044B     	 ldr r3,.L11+4
 113 0012 9842     	 cmp r0,r3
 114 0014 03D1     	 bne .L7
 191:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 115              	 .loc 1 191 0
 116 0016 4FF48070 	 mov r0,#256
 117              	.LVL12:
 118 001a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 119              	.LVL13:
 120              	.L7:
 121 001e 08BD     	 pop {r3,pc}
 122              	.L12:
 123              	 .align 2
 124              	.L11:
 125 0020 00000240 	 .word 1073872896
 126 0024 00400240 	 .word 1073889280
 127              	.LBE17:
 128              	.LBE16:
 129              	 .cfi_endproc
 130              	.LFE235:
 132              	 .section .text.XMC_CCU8_Init,"ax",%progbits
 133              	 .align 2
 134              	 .global XMC_CCU8_Init
 135              	 .thumb
 136              	 .thumb_func
 138              	XMC_CCU8_Init:
 139              	.LFB236:
 293:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_DisableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 294:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 295:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 296:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_CCU8_lAssertReset(module);
 297:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 298:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 299:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 300:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_CCU8_lGateClock(module);
 301:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 302:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 303:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 304:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to initialize CCU8 global resources  */
 305:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action)
 306:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 140              	 .loc 1 306 0
 141              	 .cfi_startproc
 142              	 
 143              	 
 144              	.LVL14:
 145 0000 38B5     	 push {r3,r4,r5,lr}
 146              	.LCFI2:
 147              	 .cfi_def_cfa_offset 16
 148              	 .cfi_offset 3,-16
 149              	 .cfi_offset 4,-12
 150              	 .cfi_offset 5,-8
 151              	 .cfi_offset 14,-4
 152 0002 0446     	 mov r4,r0
 153 0004 0D46     	 mov r5,r1
 307:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t gctrl;
 308:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 309:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 310:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid mcs action", XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action));
 311:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 312:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Enable CCU8 module */
 313:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_CCU8_EnableModule(module);
 154              	 .loc 1 313 0
 155 0006 FFF7FEFF 	 bl XMC_CCU8_EnableModule
 156              	.LVL15:
 157              	.LBB18:
 158              	.LBB19:
 159              	 .file 2 "C:/Files/Projects/Git/XMCLib/inc/xmc_ccu8.h"
   1:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
   2:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @date 2019-03-30
   4:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
   5:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
   9:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 
  18:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 
  21:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  36:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  39:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  43:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  48:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  51:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  54:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  66:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  70:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  78:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  81:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  82:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  83:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer() 
  84:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  85:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  86:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  87:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  88:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2017-09-15:
  89:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Fix XMC_CCU8_SLICE_SetShadowTransferMode()
  90:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Added parity checking functionality
  91:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
  92:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2019-03-30:
  93:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_StartPrescaler(), XMC_CCU8_StartParityChecker(), XMC_CCU8_StopPrescaler()
  94:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_EnableMultipleClocks(), XMC_CCU8_EnableClock(), XMC_CCU8_DisableClock() to avoid 
  95:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_SetEvent(), XMC_CCU8_SLICE_ClearEvent() to avoid RMW access
  96:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SetSuspendMode(), XMC_CCU8_SLICE_GetPrescaler()
  97:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_GetTimerCompareMatchChannel1() and XMC_CCU8_SLICE_GetTimerCompareMatc
  98:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 
  99:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @endcond
 100:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 101:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 102:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
 103:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
 104:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 105:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 106:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
 107:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 108:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
 109:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 110:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 111:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 112:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 113:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
 114:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
 115:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 116:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 117:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 118:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
 119:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 120:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 121:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 122:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @{
 123:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 124:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 125:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 126:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 127:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
 128:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 129:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
 130:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 131:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 132:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 133:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 134:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 135:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 136:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
 137:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 138:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 139:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 140:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 141:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 142:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
 143:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 144:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 145:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 146:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
 147:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 148:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 149:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 150:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 151:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 152:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 153:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 154:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 
 155:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 156:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 157:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 158:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
 159:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 160:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 161:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 162:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 163:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 
 164:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 165:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 166:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 
 167:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 168:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 169:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 170:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 171:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 172:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 173:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 174:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 175:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 176:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
 177:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 178:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 179:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
 180:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @{
 181:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 182:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 183:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 184:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 185:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 186:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 187:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 188:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 189:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 190:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 191:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 192:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 193:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 194:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 195:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 196:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 197:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****      
 198:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 199:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 200:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 201:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 202:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 203:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 204:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 205:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 206:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 207:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 208:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 209:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 210:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 211:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 212:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 213:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 214:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 215:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 216:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 217:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 218:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 219:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 220:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 221:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 222:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 223:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 224:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 225:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 226:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 227:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 228:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 229:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 230:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 231:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 232:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 233:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 234:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 235:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 236:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 237:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 238:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 239:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 240:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 241:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 242:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 243:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 244:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 245:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 246:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 247:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 248:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 249:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 250:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 251:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 252:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 253:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 254:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 255:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 256:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 257:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 258:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 259:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 260:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 261:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 262:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 263:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 264:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 265:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 266:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 267:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 268:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 269:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 270:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 271:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 272:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 273:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 274:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 275:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 276:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 277:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 278:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 279:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 280:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 281:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 282:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 283:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 284:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 285:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 286:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 287:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 288:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 289:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 290:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 291:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 292:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 293:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 294:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 295:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 296:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 297:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 298:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 299:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 300:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 301:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 302:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 303:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 304:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 305:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 306:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 307:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 308:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 309:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 310:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 311:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 312:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 313:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 314:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 315:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 316:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 317:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 318:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 319:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 320:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 321:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 322:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 323:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 324:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 325:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 326:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 327:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 328:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 329:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 330:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 331:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 332:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 333:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 334:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 335:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 336:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 337:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 338:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 339:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 340:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 341:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 342:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 343:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 344:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 345:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 346:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 347:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 348:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 349:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 350:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 351:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 352:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 353:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 354:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 355:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 356:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 357:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 358:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 359:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 360:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 361:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 362:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 363:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 364:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 365:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 366:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 367:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 368:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 369:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 370:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 371:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 372:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 373:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 374:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 375:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 376:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 377:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 378:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 379:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 380:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 381:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 382:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 383:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 384:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 385:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 386:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 387:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 388:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 389:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 390:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 391:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 392:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 393:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
 394:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 395:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 396:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 397:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 398:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 399:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 400:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 401:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 402:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 403:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 404:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 405:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 406:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 407:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 408:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 409:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 410:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 411:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 412:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 413:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 414:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 415:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 416:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 417:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 418:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 419:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 420:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 421:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 422:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 423:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 424:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 425:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 426:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 427:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 428:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 429:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 430:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 431:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 432:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 433:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 434:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 435:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 436:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 437:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 438:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 439:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 440:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 441:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 442:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 443:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 444:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 445:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 446:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 447:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 448:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 449:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 450:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 451:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 452:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 453:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 454:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 455:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 456:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 457:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 458:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 459:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 460:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 461:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 462:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 463:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 464:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 465:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 466:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 467:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 468:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 469:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 470:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 471:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 472:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 473:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 474:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 475:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 476:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 477:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 478:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 479:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 480:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 481:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 482:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 483:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 484:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 485:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 486:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 487:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 488:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 489:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 490:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 491:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 492:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 493:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 494:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 495:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 496:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 497:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 498:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 499:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 500:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 501:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 502:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 503:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 504:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 505:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 506:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 507:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 508:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 509:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 510:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 511:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 512:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 513:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 514:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 515:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 516:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 517:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 518:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 519:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 520:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 521:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 522:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 523:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 524:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 525:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 526:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 527:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 528:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 529:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 530:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 531:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 532:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 533:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 534:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 535:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 536:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 537:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 538:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 539:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 540:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 541:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 542:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 543:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 544:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 545:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 546:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 547:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 548:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 549:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 550:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 551:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 552:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 553:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 554:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 555:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 556:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 557:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 558:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 559:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 560:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 561:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 562:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 563:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 564:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 565:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 566:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 567:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 568:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 569:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 570:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 571:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 572:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 573:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 574:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 575:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 576:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 577:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 578:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 579:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 580:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 581:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 582:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 583:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 584:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 585:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 586:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 587:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 588:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 589:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 590:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 591:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 592:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 593:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 594:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 595:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 596:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 597:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 598:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 599:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 600:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 601:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 602:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 603:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 604:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 605:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 606:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 607:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 608:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 609:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 610:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 611:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 612:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 613:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 614:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 615:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 616:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 617:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 618:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 619:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 620:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 621:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 622:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 623:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 624:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 625:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 626:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 627:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 628:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 629:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 630:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 631:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 632:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 633:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 634:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 635:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 636:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
 637:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 638:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 639:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 640:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 641:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 642:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 643:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 644:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 645:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 646:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 647:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 648:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 649:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 650:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 651:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 652:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 653:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 654:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 655:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 656:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 657:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 658:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 659:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 660:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 661:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 662:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 663:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 664:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 665:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 666:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 667:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 668:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 669:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 670:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 671:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 672:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 673:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 674:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 675:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 676:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 677:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 678:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 679:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 680:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 681:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 682:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 683:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 684:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 685:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 686:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
 687:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 688:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 689:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 690:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 691:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 692:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 693:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 694:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 695:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 696:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 697:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 698:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 699:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 700:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 701:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 702:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 703:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 704:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #else
 705:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 706:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 707:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 708:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 709:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 710:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 711:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 712:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 713:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 714:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 715:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 716:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 717:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 718:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 719:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 720:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 721:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 722:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 723:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 724:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 725:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 726:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 727:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 728:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 729:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 730:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 731:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 732:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 733:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 734:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 735:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 736:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 737:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 738:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 739:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 740:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 741:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 742:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 743:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 744:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 745:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 746:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 747:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 748:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 749:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 750:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 751:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 752:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 753:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 754:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 755:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 756:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 757:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 758:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 759:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 760:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 761:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 762:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 763:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 764:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 765:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 766:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 767:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 768:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 769:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 770:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 771:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 772:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 773:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 774:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 775:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 776:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 777:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 778:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 779:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 780:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 781:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 782:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
 783:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 784:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 785:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 786:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 787:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 788:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 789:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 790:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 791:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 792:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 793:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 794:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 795:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 796:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal is controlling the delay between the change at the CCU8 outputs and effect
 797:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 798:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DELAY_INPUT
 799:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 800:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTA = 0 << CCU8_GPCHK_PCDS_Pos,
 801:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTB = 1 << CCU8_GPCHK_PCDS_Pos,
 802:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTC = 2 << CCU8_GPCHK_PCDS_Pos,
 803:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTD = 3 << CCU8_GPCHK_PCDS_Pos
 804:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_t;
 805:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 806:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 807:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 808:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal contains the driver parity information
 809:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 810:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT
 811:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 812:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_0 = 0 << CCU8_GPCHK_PISEL_Pos,
 813:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_1 = 1 << CCU8_GPCHK_PISEL_Pos,
 814:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_2 = 2 << CCU8_GPCHK_PISEL_Pos,
 815:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_3 = 3 << CCU8_GPCHK_PISEL_Pos,
 816:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_t;
 817:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 818:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 819:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Selects if we have an odd or even parity
 820:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 821:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_TYPE
 822:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 823:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_EVEN = 0 << CCU8_GPCHK_PCTS_Pos,
 824:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_ODD = 1 << CCU8_GPCHK_PCTS_Pos,
 825:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_TYPE_t;
 826:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 827:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 828:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Selects suspend mode
 829:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 830:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SUSPEND_MODE
 831:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 832:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_IGNORE = 0 << CCU8_GCTRL_SUSCFG_Pos, /**< Suspend request ignored. The modu
 833:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_STOPS_INMEDIATELLY = 1 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops all the running
 834:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_SAFE_STOP = 2 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops the block immediately an
 835:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_WAIT_ROLL_OVER = 3 << CCU8_GCTRL_SUSCFG_Pos /**< Waits for the roll over of
 836:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SUSPEND_MODE_t;
 837:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 838:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 839:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 840:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 841:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 842:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 843:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 844:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 845:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 846:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 847:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 848:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 849:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 850:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 851:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 852:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 853:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 854:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 855:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 856:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 857:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 858:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 859:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 860:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 861:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 862:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 863:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
 864:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 865:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 866:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 867:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 868:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 869:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 870:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   union
 871:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   {
 872:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     struct
 873:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     {
 874:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 875:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 876:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 877:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 878:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 879:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 880:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 881:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 882:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 883:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 884:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 885:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     };
 886:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 887:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   };
 888:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   union
 889:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   {
 890:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     struct
 891:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     {
 892:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 893:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 894:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 895:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 896:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 897:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     };
 898:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 899:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   };
 900:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   union
 901:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   {
 902:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     struct
 903:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     {
 904:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 905:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 906:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 907:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 908:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 909:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     };
 910:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 911:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   };
 912:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 913:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
 914:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
 915:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 916:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 917:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
 918:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 919:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
 920:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   union
 921:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   {
 922:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     struct
 923:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     {
 924:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 925:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 926:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 927:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 928:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 929:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 930:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 931:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 932:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 933:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 934:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 935:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 936:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 937:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 938:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 939:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 940:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 941:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 942:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     };
 943:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 944:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   };
 945:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   union
 946:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   {
 947:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     struct
 948:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     {
 949:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 950:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 951:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 952:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 953:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 954:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 955:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 956:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 957:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 958:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     };
 959:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 960:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   };
 961:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   union
 962:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   {
 963:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     struct
 964:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     {
 965:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 966:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 967:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 968:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 969:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 970:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 971:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 972:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 973:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   #else
 974:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 975:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 976:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 977:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 978:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 979:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 980:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 981:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 982:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 983:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 984:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 985:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 986:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
 987:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
 988:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 989:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 990:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 991:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
 992:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
 993:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 994:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
 995:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   #endif
 996:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     };
 997:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
 998:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   };
 999:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
1000:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
1001:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
1002:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1003:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
1004:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1005:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
1006:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
1007:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1008:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1009:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
1010:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
1011:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1012:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
1013:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1014:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   union
1015:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   {
1016:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     struct
1017:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     {
1018:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1019:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
1020:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
1021:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
1022:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1023:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
1024:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
1025:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
1026:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
1027:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
1028:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     };
1029:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
1030:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   };
1031:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
1032:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
1033:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
1034:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
1035:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
1036:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
1037:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
1038:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
1039:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
1040:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
1041:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
1042:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
1043:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
1044:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
1045:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** extern "C" {
1046:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
1047:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1048:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
1049:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1050:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1051:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   
1052:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
1053:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   
1054:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1055:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1056:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
1057:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   
1058:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1059:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } 
1060:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1061:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1062:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1063:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1064:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   
1065:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1066:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1067:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1068:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
1069:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1070:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1071:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
1072:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1073:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1074:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
1075:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1076:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1077:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1078:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1079:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
1080:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1081:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1082:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
1083:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1084:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1085:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
1086:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif 
1087:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  
1088:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1089:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** } 
1090:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1091:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1092:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1093:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1094:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1095:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1096:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1097:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1098:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1099:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1100:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1101:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1102:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1103:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1104:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1105:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1106:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1107:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1108:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1109:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1110:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1111:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1112:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1113:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1114:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1115:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1116:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1117:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1118:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1119:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1120:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1121:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1122:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1123:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1124:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1125:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1126:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1127:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1128:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1129:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1130:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1131:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1132:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1133:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1134:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1135:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1136:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1137:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1138:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1139:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1140:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1141:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1142:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1143:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1144:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1145:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1146:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1147:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1148:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1149:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1150:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1151:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1152:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1153:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1154:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1155:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1156:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1157:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1158:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1159:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1160:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1161:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1162:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1163:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1164:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1165:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1166:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1167:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1168:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1169:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1170:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1171:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1172:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1173:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1174:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPRB_Msk;
 160              	 .loc 2 1174 0
 161 000a 4FF48073 	 mov r3,#256
 162 000e E360     	 str r3,[r4,#12]
 163              	.LBE19:
 164              	.LBE18:
 314:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Start the prescaler */
 315:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_CCU8_StartPrescaler(module);
 316:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   
 317:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   gctrl = module->GCTRL;
 165              	 .loc 1 317 0
 166 0010 2168     	 ldr r1,[r4]
 167              	.LVL16:
 318:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_MSDE_Msk);
 168              	 .loc 1 318 0
 169 0012 21F44041 	 bic r1,r1,#49152
 170              	.LVL17:
 319:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   gctrl |= (uint32_t)mcs_action << CCU8_GCTRL_MSDE_Pos;
 171              	 .loc 1 319 0
 172 0016 41EA8531 	 orr r1,r1,r5,lsl#14
 173              	.LVL18:
 320:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   
 321:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   module->GCTRL = gctrl;
 174              	 .loc 1 321 0
 175 001a 2160     	 str r1,[r4]
 176 001c 38BD     	 pop {r3,r4,r5,pc}
 177              	 .cfi_endproc
 178              	.LFE236:
 180 001e 00BF     	 .section .text.XMC_CCU8_SetModuleClock,"ax",%progbits
 181              	 .align 2
 182              	 .global XMC_CCU8_SetModuleClock
 183              	 .thumb
 184              	 .thumb_func
 186              	XMC_CCU8_SetModuleClock:
 187              	.LFB237:
 322:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 323:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 324:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to select CCU8 module clock */
 325:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock)
 326:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 188              	 .loc 1 326 0
 189              	 .cfi_startproc
 190              	 
 191              	 
 192              	 
 193              	.LVL19:
 327:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t gctrl;
 328:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 329:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 330:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Clock", XMC_CCU8_SLICE_CHECK_CLOCK(clock));
 331:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 332:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   gctrl = module->GCTRL;
 194              	 .loc 1 332 0
 195 0000 0368     	 ldr r3,[r0]
 196              	.LVL20:
 333:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_PCIS_Msk);
 197              	 .loc 1 333 0
 198 0002 23F03003 	 bic r3,r3,#48
 199              	.LVL21:
 334:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   gctrl |= ((uint32_t) clock) << CCU8_GCTRL_PCIS_Pos;
 200              	 .loc 1 334 0
 201 0006 43EA0111 	 orr r1,r3,r1,lsl#4
 202              	.LVL22:
 335:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 336:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   module->GCTRL = gctrl;
 203              	 .loc 1 336 0
 204 000a 0160     	 str r1,[r0]
 205 000c 7047     	 bx lr
 206              	 .cfi_endproc
 207              	.LFE237:
 209 000e 00BF     	 .section .text.XMC_CCU8_SLICE_CompareInit,"ax",%progbits
 210              	 .align 2
 211              	 .global XMC_CCU8_SLICE_CompareInit
 212              	 .thumb
 213              	 .thumb_func
 215              	XMC_CCU8_SLICE_CompareInit:
 216              	.LFB238:
 337:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 338:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 339:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure CC8 Slice in Compare mode */
 340:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
 341:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init)
 342:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 217              	 .loc 1 342 0
 218              	 .cfi_startproc
 219              	 
 220              	 
 221              	 
 222              	.LVL23:
 223              	.LBB20:
 224              	.LBB21:
1175:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1176:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1177:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1178:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1179:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1180:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1181:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1182:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1183:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Starts the parity function.<br>\n
1184:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Invoke this  API after XMC_CCU8_Init()
1185:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1186:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1187:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR> XMC_CCU8_StopParity
1188:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1189:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartParityChecker(XMC_CCU8_MODULE_t *const module)
1190:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1191:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1192:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPCH_Msk;
1193:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1194:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1195:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1196:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1197:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1198:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1199:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1200:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1201:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1202:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1203:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1204:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1205:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1206:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1207:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1208:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1209:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1210:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1211:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPRB_Msk;
1212:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1213:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1214:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1215:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1216:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1217:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1218:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1219:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1220:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Stops the parity function.<br>\n
1221:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1222:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1223:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartParityChecker()<BR>
1224:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1225:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopParityChecker(XMC_CCU8_MODULE_t *const module)
1226:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1227:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1228:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPCH_Msk;
1229:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1230:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1231:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1232:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1233:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1234:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1235:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1236:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1237:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1238:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1239:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1240:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1241:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1242:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1243:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1244:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1245:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1246:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1247:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1248:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1249:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1250:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1251:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1252:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1253:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1254:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1255:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the parity checker.\n\n
1256:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1257:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1258:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_StopParityChecker()<BR> XMC_CCU8_EnableClock()<BR>  
1259:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1260:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsParityCheckerRunning(XMC_CCU8_MODULE_t *const module)
1261:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1262:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1263:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PCRB_Msk) == CCU8_GSTAT_PCRB_Msk));
1264:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1265:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1266:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1267:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1268:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1269:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1270:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1271:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1272:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1273:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1274:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1275:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1276:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1277:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1278:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1279:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1280:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1281:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1282:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1283:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1284:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1285:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1286:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1287:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1288:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) clock_mask;
1289:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1290:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1291:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1292:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1293:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param mode   Selects suspend mode
1294:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1295:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1296:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1297:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1298:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures the entering in suspend mode for all the CCU8 slices.
1299:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1300:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1301:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * None.
1302:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1303:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SetSuspendMode(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SUSPEN
1304:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1305:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1306:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GCTRL = (module->GCTRL & (uint32_t)~CCU8_GCTRL_SUSCFG_Msk) | mode;
1307:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1308:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1309:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1310:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1311:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1312:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1313:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1314:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1315:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1316:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1317:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1318:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1319:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1320:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1321:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1322:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1323:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * None.
1324:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1325:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1326:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1327:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1328:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1329:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1330:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1331:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1332:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1333:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1334:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1335:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1336:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1337:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1338:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1339:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1340:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1341:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1342:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1343:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1344:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1345:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1346:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1347:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1348:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1349:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1350:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1351:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1352:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1353:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1354:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1355:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1356:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1357:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1358:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1359:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1360:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1361:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1362:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1363:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1364:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1365:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1366:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1367:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = ((uint32_t) 1 << slice_number);
1368:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1369:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1370:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1371:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1372:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1373:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1374:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1375:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1376:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1377:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1378:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1379:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1380:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1381:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1382:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1383:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1384:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1385:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1386:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1387:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1388:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1389:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1390:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1391:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = ((uint32_t) 1 << slice_number);
1392:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1393:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1394:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1395:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1396:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1397:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1398:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output.
1399:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1400:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1401:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1402:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1403:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1404:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1405:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1406:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput()<BR>
1407:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1408:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput(XMC_CCU8_MODULE_t *const module,
1409:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1410:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1411:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Slice Number", (slice_number < 
1412:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1413:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK |= (uint32_t)(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1414:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                               ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1415:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                               ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1416:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                               ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1417:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1418:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1419:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1420:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1421:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1422:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1423:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output ::XMC_CCU8_SLICE_OUTPUT_t.
1424:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1425:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1426:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1427:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1428:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1429:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1430:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1431:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput()<BR>
1432:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1433:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput(XMC_CCU8_MODULE_t *const module
1434:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1435:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1436:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Number", (slice_number <
1437:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1438:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK &= (uint32_t)~(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1439:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1440:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1441:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1442:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1443:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1444:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1445:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1446:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param input signal controlling the delay between the change at the CCU8 outputs and effective c
1447:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1448:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1449:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1450:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1451:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal is controlling the delay between the change at the CCU8 outputs and effecti
1452:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1453:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1454:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1455:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1456:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDelayInput(XMC_CCU8_MODULE_t *const module, con
1457:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1458:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1459:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCDS_Msk) | input;
1460:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1461:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1462:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1463:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1464:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param input signal contains the driver parity information ::XMC_CCU8_PARITY_CHECKER_DRIVER_INPU
1465:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1466:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1467:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1468:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1469:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal contains the driver parity information.
1470:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The signal must be selected throughout the input selector mux of each slice. The signal must be 
1471:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1472:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1473:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker(), XMC_CCU8_SLICE_SetInput()<BR>.
1474:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1475:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDriverInput(XMC_CCU8_MODULE_t *const module, co
1476:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1477:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1478:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PISEL_Msk) | input;
1479:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1480:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1481:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1482:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1483:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param type odd or even parity ::XMC_CCU8_PARITY_CHECKER_TYPE_t.
1484:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1485:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1486:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1487:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1488:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Selects if we have an odd or even parity.
1489:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1490:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1491:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>.
1492:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1493:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetType(XMC_CCU8_MODULE_t *const module, const XMC
1494:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1495:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1496:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCTS_Msk) | type;
1497:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1498:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1499:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1500:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1501:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1502:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return status of parity checker. If >0 then an error is dectected
1503:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1504:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1505:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Returns current value of the XOR chain.
1506:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1507:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1508:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1509:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1510:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint32_t XMC_CCU8_SLICE_ParityCheckerGetStatus(XMC_CCU8_MODULE_t *const module)
1511:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1512:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1513:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return (module->GPCHK & CCU8_GPCHK_PCST_Msk);
1514:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1515:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1516:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1517:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1518:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1519:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1520:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 
1521:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1522:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1523:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1524:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1525:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1526:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1527:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 
1528:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1529:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1530:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1531:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1532:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * None
1533:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** */
1534:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1535:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1536:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1537:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1538:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1539:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1540:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1541:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1542:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1543:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1544:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1545:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1546:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1547:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1548:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1549:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1550:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1551:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1552:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1553:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1554:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1555:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1556:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1557:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1558:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1559:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1560:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1561:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1562:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1563:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1564:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1565:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1566:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1567:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1568:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1569:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1570:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1571:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1572:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1573:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1574:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1575:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1576:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1577:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1578:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1579:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1580:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1581:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1582:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1583:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1584:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1585:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1586:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  
1587:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1588:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1589:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1590:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1591:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1592:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1593:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1594:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1595:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1596:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1597:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1598:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1599:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1600:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1601:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1602:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1603:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1604:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1605:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1606:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1607:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1608:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1609:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1610:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1611:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1612:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1613:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1614:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1615:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1616:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1617:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1618:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1619:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1620:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1621:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1622:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1623:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1624:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1625:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1626:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1627:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1628:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1629:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1630:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1631:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1632:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1633:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1634:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1635:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                      );
1636:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1637:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1638:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1639:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1640:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1641:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1642:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1643:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1644:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1645:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1646:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1647:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1648:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1649:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1650:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1651:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1652:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1653:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1654:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1655:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1656:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1657:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1658:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1659:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1660:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1661:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1662:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1663:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1664:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1665:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1666:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1667:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1668:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1669:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1670:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1671:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1672:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1673:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1674:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1675:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1676:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1677:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1678:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1679:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1680:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1681:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1682:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1683:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1684:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1685:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1686:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1687:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1688:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1689:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1690:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1691:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1692:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1693:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1694:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1695:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1696:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1697:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1698:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1699:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1700:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1701:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1702:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1703:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1704:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1705:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1706:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1707:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1708:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1709:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1710:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1711:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1712:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1713:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1714:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1715:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1716:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1717:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1718:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1719:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1720:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1721:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1722:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1723:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1724:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1725:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1726:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1727:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1728:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1729:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1730:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1731:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1732:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1733:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1734:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1735:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1736:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1737:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1738:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1739:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1740:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1741:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #else
1742:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1743:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1744:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1745:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1746:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1747:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1748:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1749:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1750:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1751:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1752:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1753:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1754:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1755:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1756:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1757:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1758:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1759:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1760:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1761:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1762:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** #endif
1763:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1764:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1765:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1766:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1767:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1768:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1769:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1770:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1771:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1772:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1773:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1774:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1775:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1776:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1777:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1778:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1779:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1780:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1781:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1782:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1783:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1784:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1785:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1786:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1787:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1788:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1789:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1790:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1791:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1792:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1793:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1794:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1795:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1796:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1797:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1798:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1799:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1800:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1801:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1802:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1803:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1804:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1805:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1806:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1807:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1808:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1809:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1810:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1811:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1812:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1813:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1814:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1815:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1816:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1817:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1818:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1819:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1820:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1821:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1822:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1823:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1824:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1825:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1826:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1827:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1828:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1829:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1830:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1831:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1832:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1833:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1834:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1835:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1836:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1837:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1838:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1839:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1840:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1841:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1842:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1843:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1844:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1845:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1846:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1847:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1848:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1849:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1850:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1851:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1852:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1853:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1854:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1855:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1856:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1857:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1858:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1859:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1860:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1861:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1862:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1863:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1864:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1865:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1866:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1867:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1868:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1869:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1870:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1871:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1872:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1873:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1874:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1875:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1876:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1877:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1878:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1879:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1880:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1881:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1882:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1883:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1884:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1885:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1886:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1887:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1888:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1889:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1890:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1891:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1892:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1893:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1894:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1895:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1896:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1897:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1898:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1899:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1900:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1901:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1902:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1903:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1904:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1905:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1906:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
1907:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1908:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1909:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1910:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1911:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1912:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1913:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1914:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1915:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1916:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1917:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1918:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1919:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1920:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1921:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1922:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1923:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1924:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1925:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1926:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1927:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1928:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1929:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1930:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   
1931:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1932:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1933:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1934:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1935:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1936:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1937:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1938:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1939:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1940:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1941:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1942:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1943:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1944:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1945:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1946:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1947:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1948:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
1949:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1950:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1951:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1952:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1953:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1954:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1955:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1956:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1957:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1958:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1959:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1960:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1961:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1962:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1963:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1964:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1965:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1966:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1967:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1968:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1969:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1970:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1971:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1972:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1973:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1974:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1975:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1976:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1977:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1978:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1979:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1980:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
1981:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1982:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
1983:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1984:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1985:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
1986:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
1987:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
1988:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1989:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1990:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1991:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1992:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1993:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
1994:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
1995:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
1996:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
1997:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1998:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  None.
1999:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2000:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
2001:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2002:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2003:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
2004:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2005:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2006:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2007:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2008:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2009:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2010:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2011:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
2012:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
2013:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
2014:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2015:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2016:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
2017:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2018:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
2019:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2020:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2021:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
2022:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2023:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2024:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2025:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2026:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2027:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2028:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2029:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2030:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
2031:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
2032:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2033:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2034:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2035:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2036:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
2037:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2038:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2039:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
 225              	 .loc 2 2039 0
 226 0000 0123     	 movs r3,#1
 227 0002 0361     	 str r3,[r0,#16]
 228              	.LBE21:
 229              	.LBE20:
 343:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 344:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Timer Init Pointer is NULL",
 345:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              (XMC_CCU8_SLICE_COMPARE_CONFIG_t *) NULL != compare_init);
 346:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Stops the timer */
 347:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 348:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Program the timer mode */
 349:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->TC = compare_init->tc;
 230              	 .loc 1 349 0
 231 0004 0B68     	 ldr r3,[r1]
 232 0006 4361     	 str r3,[r0,#20]
 350:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Enable the timer concatenation */
 351:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC =  (uint32_t)compare_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 233              	 .loc 1 351 0
 234 0008 4B7B     	 ldrb r3,[r1,#13]
 235 000a C3F30013 	 ubfx r3,r3,#4,#1
 236 000e 1B05     	 lsls r3,r3,#20
 237 0010 4360     	 str r3,[r0,#4]
 352:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Program initial prescaler divider value */
 353:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->PSC = (uint32_t) compare_init->prescaler_initval;
 238              	 .loc 1 353 0
 239 0012 0B7B     	 ldrb r3,[r1,#12]
 240 0014 03F00F03 	 and r3,r3,#15
 241 0018 4362     	 str r3,[r0,#36]
 354:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Program floating prescaler compare value */
 355:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->FPCS = (uint32_t) compare_init->float_limit;
 242              	 .loc 1 355 0
 243 001a 0B7B     	 ldrb r3,[r1,#12]
 244 001c 1B09     	 lsrs r3,r3,#4
 245 001e C362     	 str r3,[r0,#44]
 356:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Program the dither compare value */
 357:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->DITS = (uint32_t) compare_init->dither_limit;
 246              	 .loc 1 357 0
 247 0020 4B7B     	 ldrb r3,[r1,#13]
 248 0022 03F00F03 	 and r3,r3,#15
 249 0026 0362     	 str r3,[r0,#32]
 358:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Program timer output passive level */
 359:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->PSL = (uint32_t) compare_init->psl;
 250              	 .loc 1 359 0
 251 0028 4B68     	 ldr r3,[r1,#4]
 252 002a 8361     	 str r3,[r0,#24]
 360:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Asymmetric PWM and Slice output routing configuration */
 361:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 362:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CHC = (uint32_t) compare_init->chc;
 363:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #else
 364:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CHC = (uint32_t)((uint32_t)compare_init->chc ^ XMC_CCU8_SLICE_CHC_CONFIG_MASK);
 253              	 .loc 1 364 0
 254 002c 8B68     	 ldr r3,[r1,#8]
 255 002e 83F01403 	 eor r3,r3,#20
 256 0032 8364     	 str r3,[r0,#72]
 257 0034 7047     	 bx lr
 258              	 .cfi_endproc
 259              	.LFE238:
 261 0036 00BF     	 .section .text.XMC_CCU8_SLICE_CaptureInit,"ax",%progbits
 262              	 .align 2
 263              	 .global XMC_CCU8_SLICE_CaptureInit
 264              	 .thumb
 265              	 .thumb_func
 267              	XMC_CCU8_SLICE_CaptureInit:
 268              	.LFB239:
 365:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 366:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 367:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 368:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure CC8 Slice in Capture mode */
 369:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice, 
 370:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init)
 371:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 269              	 .loc 1 371 0
 270              	 .cfi_startproc
 271              	 
 272              	 
 273              	 
 274              	.LVL24:
 275              	.LBB22:
 276              	.LBB23:
 277              	 .loc 2 2039 0
 278 0000 0123     	 movs r3,#1
 279 0002 0361     	 str r3,[r0,#16]
 280              	.LBE23:
 281              	.LBE22:
 372:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 373:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Capture Init Pointer is NULL", 
 374:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              (XMC_CCU8_SLICE_CAPTURE_CONFIG_t *) NULL != capture_init);
 375:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Stops the timer */
 376:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 377:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Capture mode configuration */
 378:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->TC = capture_init->tc;
 282              	 .loc 1 378 0
 283 0004 0B68     	 ldr r3,[r1]
 284 0006 4361     	 str r3,[r0,#20]
 379:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Enable the timer concatenation */
 380:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC = (uint32_t)capture_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 285              	 .loc 1 380 0
 286 0008 4B79     	 ldrb r3,[r1,#5]
 287 000a 03F00103 	 and r3,r3,#1
 288 000e 1B05     	 lsls r3,r3,#20
 289 0010 4360     	 str r3,[r0,#4]
 381:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Program floating prescaler compare value */
 382:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->FPCS = (uint32_t) capture_init->float_limit;
 290              	 .loc 1 382 0
 291 0012 0B79     	 ldrb r3,[r1,#4]
 292 0014 1B09     	 lsrs r3,r3,#4
 293 0016 C362     	 str r3,[r0,#44]
 383:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Program initial prescaler divider value */
 384:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->PSC = (uint32_t) capture_init->prescaler_initval;
 294              	 .loc 1 384 0
 295 0018 0B79     	 ldrb r3,[r1,#4]
 296 001a 03F00F03 	 and r3,r3,#15
 297 001e 4362     	 str r3,[r0,#36]
 298 0020 7047     	 bx lr
 299              	 .cfi_endproc
 300              	.LFE239:
 302 0022 00BF     	 .section .text.XMC_CCU8_SLICE_SetOutPath,"ax",%progbits
 303              	 .align 2
 304              	 .global XMC_CCU8_SLICE_SetOutPath
 305              	 .thumb
 306              	 .thumb_func
 308              	XMC_CCU8_SLICE_SetOutPath:
 309              	.LFB240:
 385:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 386:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 387:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure the each output of the slice with either STx or inverted STx. */
 388:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk)
 389:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 310              	 .loc 1 389 0
 311              	 .cfi_startproc
 312              	 
 313              	 
 314              	 
 315              	.LVL25:
 390:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t chc;
 391:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetOutPath:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 392:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   chc = slice->CHC;
 316              	 .loc 1 392 0
 317 0000 836C     	 ldr r3,[r0,#72]
 318              	.LVL26:
 393:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 394:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   chc &= ~((uint32_t)out_path_msk >> 16U);
 319              	 .loc 1 394 0
 320 0002 23EA1143 	 bic r3,r3,r1,lsr#16
 321              	.LVL27:
 395:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0xFFFFU);
 322              	 .loc 1 395 0
 323 0006 89B2     	 uxth r1,r1
 324              	.LVL28:
 325 0008 1943     	 orrs r1,r1,r3
 326              	.LVL29:
 396:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #else
 397:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   chc &= ~((uint32_t)((uint32_t)(out_path_msk & 0xCCCC0U) >> 2U));
 398:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0x33330U);
 399:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 400:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CHC = chc;
 327              	 .loc 1 400 0
 328 000a 8164     	 str r1,[r0,#72]
 329 000c 7047     	 bx lr
 330              	 .cfi_endproc
 331              	.LFE240:
 333 000e 00BF     	 .section .text.XMC_CCU8_SetMultiChannelShadowTransferMode,"ax",%progbits
 334              	 .align 2
 335              	 .global XMC_CCU8_SetMultiChannelShadowTransferMode
 336              	 .thumb
 337              	 .thumb_func
 339              	XMC_CCU8_SetMultiChannelShadowTransferMode:
 340              	.LFB241:
 401:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 402:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 403:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure the multichannel shadow transfer request via SW and via the CCU8x.MCSS input. *
 404:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
 405:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 341              	 .loc 1 405 0
 342              	 .cfi_startproc
 343              	 
 344              	 
 345              	 
 346              	.LVL30:
 406:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t gctrl;
 407:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 408:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetMultiChannelShadowTransferMode:Invalid module Pointer", XMC_CCU8_IsValidM
 409:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   
 410:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   gctrl = module->GCTRL;
 347              	 .loc 1 410 0
 348 0000 0368     	 ldr r3,[r0]
 349              	.LVL31:
 411:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   gctrl &= ~((uint32_t)slice_mode_msk >> 16U);
 350              	 .loc 1 411 0
 351 0002 23EA1143 	 bic r3,r3,r1,lsr#16
 352              	.LVL32:
 412:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   gctrl |= ((uint32_t)slice_mode_msk & 0xFFFFU);
 353              	 .loc 1 412 0
 354 0006 89B2     	 uxth r1,r1
 355              	.LVL33:
 356 0008 1943     	 orrs r1,r1,r3
 357              	.LVL34:
 413:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   module->GCTRL = gctrl;
 358              	 .loc 1 413 0
 359 000a 0160     	 str r1,[r0]
 360 000c 7047     	 bx lr
 361              	 .cfi_endproc
 362              	.LFE241:
 364 000e 00BF     	 .section .text.XMC_CCU8_SLICE_StartConfig,"ax",%progbits
 365              	 .align 2
 366              	 .global XMC_CCU8_SLICE_StartConfig
 367              	 .thumb
 368              	 .thumb_func
 370              	XMC_CCU8_SLICE_StartConfig:
 371              	.LFB242:
 414:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 415:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 416:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 417:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure the Start trigger function of a slice*/
 418:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
 419:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_EVENT_t event,
 420:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode)
 421:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 372              	 .loc 1 421 0
 373              	 .cfi_startproc
 374              	 
 375              	 
 376              	 
 377              	.LVL35:
 422:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t cmc;
 423:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t tc;
 424:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 425:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 426:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 427:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Start Mode", 
 428:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              ((start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START) ||\
 429:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****               (start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)));
 430:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc = slice->CMC;
 378              	 .loc 1 430 0
 379 0000 4368     	 ldr r3,[r0,#4]
 380              	.LVL36:
 431:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 432:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_STRTS_Msk);
 381              	 .loc 1 432 0
 382 0002 23F00303 	 bic r3,r3,#3
 383              	.LVL37:
 433:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_STRTS_Pos;
 384              	 .loc 1 433 0
 385 0006 1943     	 orrs r1,r1,r3
 386              	.LVL38:
 434:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 435:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC = cmc;
 387              	 .loc 1 435 0
 388 0008 4160     	 str r1,[r0,#4]
 436:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 437:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc  = slice->TC;
 389              	 .loc 1 437 0
 390 000a 4369     	 ldr r3,[r0,#20]
 391              	.LVL39:
 438:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 439:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if(start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)
 392              	 .loc 1 439 0
 393 000c 012A     	 cmp r2,#1
 440:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 441:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_STRM_Msk;
 394              	 .loc 1 441 0
 395 000e 0CBF     	 ite eq
 396 0010 43F48063 	 orreq r3,r3,#1024
 397              	.LVL40:
 442:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 443:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
 444:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 445:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_STRM_Msk);
 398              	 .loc 1 445 0
 399 0014 23F48063 	 bicne r3,r3,#1024
 400              	.LVL41:
 446:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 447:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 448:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->TC = tc;
 401              	 .loc 1 448 0
 402 0018 4361     	 str r3,[r0,#20]
 403 001a 7047     	 bx lr
 404              	 .cfi_endproc
 405              	.LFE242:
 407              	 .section .text.XMC_CCU8_SLICE_StopConfig,"ax",%progbits
 408              	 .align 2
 409              	 .global XMC_CCU8_SLICE_StopConfig
 410              	 .thumb
 411              	 .thumb_func
 413              	XMC_CCU8_SLICE_StopConfig:
 414              	.LFB243:
 449:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 450:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 451:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure the Stop trigger function of a slice */
 452:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
 453:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                const XMC_CCU8_SLICE_EVENT_t event,
 454:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode)
 455:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 415              	 .loc 1 455 0
 416              	 .cfi_startproc
 417              	 
 418              	 
 419              	 
 420              	.LVL42:
 456:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t cmc;
 457:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t tc;
 458:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 459:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 460:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 461:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid End Mode", XMC_CCU8_SLICE_CHECK_END_MODE(end_mode))
 462:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 463:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc = slice->CMC;
 421              	 .loc 1 463 0
 422 0000 4368     	 ldr r3,[r0,#4]
 423              	.LVL43:
 464:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First, Bind the event with the stop function */
 465:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_ENDS_Msk);
 424              	 .loc 1 465 0
 425 0002 23F00C03 	 bic r3,r3,#12
 426              	.LVL44:
 466:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_ENDS_Pos;
 427              	 .loc 1 466 0
 428 0006 43EA8101 	 orr r1,r3,r1,lsl#2
 429              	.LVL45:
 467:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 468:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC = cmc;
 430              	 .loc 1 468 0
 431 000a 4160     	 str r1,[r0,#4]
 469:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 470:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the stop mode */
 471:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc = slice->TC;
 432              	 .loc 1 471 0
 433 000c 4369     	 ldr r3,[r0,#20]
 434              	.LVL46:
 472:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_ENDM_Msk);
 435              	 .loc 1 472 0
 436 000e 23F44073 	 bic r3,r3,#768
 437              	.LVL47:
 473:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc |= ((uint32_t) end_mode) << CCU8_CC8_TC_ENDM_Pos;
 438              	 .loc 1 473 0
 439 0012 43EA0222 	 orr r2,r3,r2,lsl#8
 440              	.LVL48:
 474:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 475:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->TC = tc;
 441              	 .loc 1 475 0
 442 0016 4261     	 str r2,[r0,#20]
 443 0018 7047     	 bx lr
 444              	 .cfi_endproc
 445              	.LFE243:
 447 001a 00BF     	 .section .text.XMC_CCU8_SLICE_LoadConfig,"ax",%progbits
 448              	 .align 2
 449              	 .global XMC_CCU8_SLICE_LoadConfig
 450              	 .thumb
 451              	 .thumb_func
 453              	XMC_CCU8_SLICE_LoadConfig:
 454              	.LFB244:
 476:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 477:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 478:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure the Load trigger function of a slice*/
 479:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 480:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 455              	 .loc 1 480 0
 456              	 .cfi_startproc
 457              	 
 458              	 
 459              	 
 460              	.LVL49:
 481:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t cmc;
 482:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 483:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 484:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 485:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 486:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc = slice->CMC;
 461              	 .loc 1 486 0
 462 0000 4368     	 ldr r3,[r0,#4]
 463              	.LVL50:
 487:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 488:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First, Bind the event with the load function */
 489:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_LDS_Msk);
 464              	 .loc 1 489 0
 465 0002 23F44053 	 bic r3,r3,#12288
 466              	.LVL51:
 490:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_LDS_Pos;
 467              	 .loc 1 490 0
 468 0006 43EA0131 	 orr r1,r3,r1,lsl#12
 469              	.LVL52:
 491:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 492:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC = cmc;
 470              	 .loc 1 492 0
 471 000a 4160     	 str r1,[r0,#4]
 472 000c 7047     	 bx lr
 473              	 .cfi_endproc
 474              	.LFE244:
 476 000e 00BF     	 .section .text.XMC_CCU8_SLICE_LoadSelector,"ax",%progbits
 477              	 .align 2
 478              	 .global XMC_CCU8_SLICE_LoadSelector
 479              	 .thumb
 480              	 .thumb_func
 482              	XMC_CCU8_SLICE_LoadSelector:
 483              	.LFB245:
 493:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 494:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 495:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure, which compare register value has to be loaded during external load event */
 496:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
 497:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 484              	 .loc 1 497 0
 485              	 .cfi_startproc
 486              	 
 487              	 
 488              	 
 489              	.LVL53:
 498:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t tc;
 499:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 500:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 501:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Channel number", XMC_CCU8_SLICE_CHECK_COMP_CHANNE
 502:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 503:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc = slice->TC;
 490              	 .loc 1 503 0
 491 0000 4369     	 ldr r3,[r0,#20]
 492              	.LVL54:
 504:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 505:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First, Bind the event with the load function */
 506:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_TLS_Msk);
 493              	 .loc 1 506 0
 494 0002 23F08003 	 bic r3,r3,#128
 495              	.LVL55:
 507:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc |= (uint32_t)ch_num << CCU8_CC8_TC_TLS_Pos;
 496              	 .loc 1 507 0
 497 0006 43EAC111 	 orr r1,r3,r1,lsl#7
 498              	.LVL56:
 508:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 509:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->TC = tc;
 499              	 .loc 1 509 0
 500 000a 4161     	 str r1,[r0,#20]
 501 000c 7047     	 bx lr
 502              	 .cfi_endproc
 503              	.LFE245:
 505 000e 00BF     	 .section .text.XMC_CCU8_SLICE_ModulationConfig,"ax",%progbits
 506              	 .align 2
 507              	 .global XMC_CCU8_SLICE_ModulationConfig
 508              	 .thumb
 509              	 .thumb_func
 511              	XMC_CCU8_SLICE_ModulationConfig:
 512              	.LFB246:
 510:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 511:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 512:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure the slice modulation function */
 513:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
 514:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_EVENT_t event,
 515:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
 516:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel,
 517:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                      const bool synch_with_pwm)
 518:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 513              	 .loc 1 518 0
 514              	 .cfi_startproc
 515              	 
 516              	 
 517              	 
 518              	.LVL57:
 519 0000 10B4     	 push {r4}
 520              	.LCFI3:
 521              	 .cfi_def_cfa_offset 4
 522              	 .cfi_offset 4,-4
 519:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t cmc;
 520:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t tc;
 521:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 522:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
 523:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(even
 524:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid channel for modulation", 
 525:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel));
 526:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Modulation Mode", 
 527:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              ((mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT) ||\
 528:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****               (mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)));
 529:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 530:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc = slice->CMC;
 523              	 .loc 1 530 0
 524 0002 4468     	 ldr r4,[r0,#4]
 525              	.LVL58:
 531:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 532:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First, Bind the event with the modulation function */
 533:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_MOS_Msk);
 526              	 .loc 1 533 0
 527 0004 24F44024 	 bic r4,r4,#786432
 528              	.LVL59:
 534:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_MOS_Pos;
 529              	 .loc 1 534 0
 530 0008 44EA8141 	 orr r1,r4,r1,lsl#18
 531              	.LVL60:
 535:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 536:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC = cmc;
 532              	 .loc 1 536 0
 533 000c 4160     	 str r1,[r0,#4]
 537:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 538:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc  = slice->TC;
 534              	 .loc 1 538 0
 535 000e 4169     	 ldr r1,[r0,#20]
 536              	.LVL61:
 539:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 540:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Next, Modulation mode */
 541:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if(mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)
 537              	 .loc 1 541 0
 538 0010 012A     	 cmp r2,#1
 542:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 543:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMT_Msk;
 539              	 .loc 1 543 0
 540 0012 0CBF     	 ite eq
 541 0014 41F08071 	 orreq r1,r1,#16777216
 542              	.LVL62:
 544:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 545:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
 546:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 547:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMT_Msk);
 543              	 .loc 1 547 0
 544 0018 21F08071 	 bicne r1,r1,#16777216
 545              	.LVL63:
 548:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 549:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 550:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Synchronization of modulation effect with PWM cycle */
 551:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if(synch_with_pwm == true)
 546              	 .loc 1 551 0
 547 001c 9DF80420 	 ldrb r2,[sp,#4]
 548              	.LVL64:
 549 0020 12B1     	 cbz r2,.L29
 552:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 553:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMS_Msk;
 550              	 .loc 1 553 0
 551 0022 41F40001 	 orr r1,r1,#8388608
 552              	.LVL65:
 553 0026 01E0     	 b .L30
 554              	.L29:
 554:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 555:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
 556:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 557:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMS_Msk);
 555              	 .loc 1 557 0
 556 0028 21F40001 	 bic r1,r1,#8388608
 557              	.LVL66:
 558              	.L30:
 558:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 559:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   
 560:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure on which channel external modulation to be applied */
 561:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_EME_Msk);
 559              	 .loc 1 561 0
 560 002c 21F0C051 	 bic r1,r1,#402653184
 561              	.LVL67:
 562:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc |= (uint32_t)channel << CCU8_CC8_TC_EME_Pos;
 562              	 .loc 1 562 0
 563 0030 41EAC363 	 orr r3,r1,r3,lsl#27
 564              	.LVL68:
 563:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 564:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->TC = tc;
 565              	 .loc 1 564 0
 566 0034 4361     	 str r3,[r0,#20]
 567              	.LVL69:
 565:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 568              	 .loc 1 565 0
 569 0036 5DF8044B 	 ldr r4,[sp],#4
 570              	.LCFI4:
 571              	 .cfi_restore 4
 572              	 .cfi_def_cfa_offset 0
 573              	.LVL70:
 574 003a 7047     	 bx lr
 575              	 .cfi_endproc
 576              	.LFE246:
 578              	 .section .text.XMC_CCU8_SLICE_CountConfig,"ax",%progbits
 579              	 .align 2
 580              	 .global XMC_CCU8_SLICE_CountConfig
 581              	 .thumb
 582              	 .thumb_func
 584              	XMC_CCU8_SLICE_CountConfig:
 585              	.LFB247:
 566:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 567:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure the slice count function */
 568:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 569:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 586              	 .loc 1 569 0
 587              	 .cfi_startproc
 588              	 
 589              	 
 590              	 
 591              	.LVL71:
 570:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t cmc;
 571:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 572:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 573:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 574:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 575:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc = slice->CMC;
 592              	 .loc 1 575 0
 593 0000 4368     	 ldr r3,[r0,#4]
 594              	.LVL72:
 576:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 577:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First, Bind the event with the count function */
 578:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CNTS_Msk);
 595              	 .loc 1 578 0
 596 0002 23F44043 	 bic r3,r3,#49152
 597              	.LVL73:
 579:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CNTS_Pos;
 598              	 .loc 1 579 0
 599 0006 43EA8131 	 orr r1,r3,r1,lsl#14
 600              	.LVL74:
 580:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 581:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC = cmc;
 601              	 .loc 1 581 0
 602 000a 4160     	 str r1,[r0,#4]
 603 000c 7047     	 bx lr
 604              	 .cfi_endproc
 605              	.LFE247:
 607 000e 00BF     	 .section .text.XMC_CCU8_SLICE_GateConfig,"ax",%progbits
 608              	 .align 2
 609              	 .global XMC_CCU8_SLICE_GateConfig
 610              	 .thumb
 611              	 .thumb_func
 613              	XMC_CCU8_SLICE_GateConfig:
 614              	.LFB248:
 582:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 583:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 584:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure slice gate function */
 585:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 586:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 615              	 .loc 1 586 0
 616              	 .cfi_startproc
 617              	 
 618              	 
 619              	 
 620              	.LVL75:
 587:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t cmc;
 588:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 589:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 590:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 591:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 592:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc = slice->CMC;
 621              	 .loc 1 592 0
 622 0000 4368     	 ldr r3,[r0,#4]
 623              	.LVL76:
 593:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 594:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 595:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_GATES_Msk);
 624              	 .loc 1 595 0
 625 0002 23F44073 	 bic r3,r3,#768
 626              	.LVL77:
 596:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_GATES_Pos;
 627              	 .loc 1 596 0
 628 0006 43EA0121 	 orr r1,r3,r1,lsl#8
 629              	.LVL78:
 597:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 598:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC = cmc;
 630              	 .loc 1 598 0
 631 000a 4160     	 str r1,[r0,#4]
 632 000c 7047     	 bx lr
 633              	 .cfi_endproc
 634              	.LFE248:
 636 000e 00BF     	 .section .text.XMC_CCU8_SLICE_Capture0Config,"ax",%progbits
 637              	 .align 2
 638              	 .global XMC_CCU8_SLICE_Capture0Config
 639              	 .thumb
 640              	 .thumb_func
 642              	XMC_CCU8_SLICE_Capture0Config:
 643              	.LFB249:
 599:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 600:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 601:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure Capture-0 function */
 602:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 603:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 644              	 .loc 1 603 0
 645              	 .cfi_startproc
 646              	 
 647              	 
 648              	 
 649              	.LVL79:
 604:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t cmc;
 605:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 606:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 607:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 608:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 609:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc = slice->CMC;
 650              	 .loc 1 609 0
 651 0000 4368     	 ldr r3,[r0,#4]
 652              	.LVL80:
 610:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 611:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 612:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP0S_Msk);
 653              	 .loc 1 612 0
 654 0002 23F03003 	 bic r3,r3,#48
 655              	.LVL81:
 613:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP0S_Pos;
 656              	 .loc 1 613 0
 657 0006 43EA0111 	 orr r1,r3,r1,lsl#4
 658              	.LVL82:
 614:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 615:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC = cmc;
 659              	 .loc 1 615 0
 660 000a 4160     	 str r1,[r0,#4]
 661 000c 7047     	 bx lr
 662              	 .cfi_endproc
 663              	.LFE249:
 665 000e 00BF     	 .section .text.XMC_CCU8_SLICE_Capture1Config,"ax",%progbits
 666              	 .align 2
 667              	 .global XMC_CCU8_SLICE_Capture1Config
 668              	 .thumb
 669              	 .thumb_func
 671              	XMC_CCU8_SLICE_Capture1Config:
 672              	.LFB250:
 616:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 617:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 618:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure Capture-1 function */
 619:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 620:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 673              	 .loc 1 620 0
 674              	 .cfi_startproc
 675              	 
 676              	 
 677              	 
 678              	.LVL83:
 621:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t cmc;
 622:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 623:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 624:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 625:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 626:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 627:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc = slice->CMC;
 679              	 .loc 1 627 0
 680 0000 4368     	 ldr r3,[r0,#4]
 681              	.LVL84:
 628:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 629:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 630:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP1S_Msk);
 682              	 .loc 1 630 0
 683 0002 23F0C003 	 bic r3,r3,#192
 684              	.LVL85:
 631:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP1S_Pos;
 685              	 .loc 1 631 0
 686 0006 43EA8111 	 orr r1,r3,r1,lsl#6
 687              	.LVL86:
 632:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 633:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC = cmc;
 688              	 .loc 1 633 0
 689 000a 4160     	 str r1,[r0,#4]
 690 000c 7047     	 bx lr
 691              	 .cfi_endproc
 692              	.LFE250:
 694 000e 00BF     	 .section .text.XMC_CCU8_SLICE_DirectionConfig,"ax",%progbits
 695              	 .align 2
 696              	 .global XMC_CCU8_SLICE_DirectionConfig
 697              	 .thumb
 698              	 .thumb_func
 700              	XMC_CCU8_SLICE_DirectionConfig:
 701              	.LFB251:
 634:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 635:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 636:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure direction function */
 637:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
 638:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 702              	 .loc 1 638 0
 703              	 .cfi_startproc
 704              	 
 705              	 
 706              	 
 707              	.LVL87:
 639:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t cmc;
 640:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 641:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 642:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event
 643:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 644:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc = slice->CMC;
 708              	 .loc 1 644 0
 709 0000 4368     	 ldr r3,[r0,#4]
 710              	.LVL88:
 645:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 646:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First, Bind the event with the direction function */
 647:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_UDS_Msk);
 711              	 .loc 1 647 0
 712 0002 23F44063 	 bic r3,r3,#3072
 713              	.LVL89:
 648:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_UDS_Pos;
 714              	 .loc 1 648 0
 715 0006 43EA8121 	 orr r1,r3,r1,lsl#10
 716              	.LVL90:
 649:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 650:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC = cmc;
 717              	 .loc 1 650 0
 718 000a 4160     	 str r1,[r0,#4]
 719 000c 7047     	 bx lr
 720              	 .cfi_endproc
 721              	.LFE251:
 723 000e 00BF     	 .section .text.XMC_CCU8_SLICE_StatusBitOverrideConfig,"ax",%progbits
 724              	 .align 2
 725              	 .global XMC_CCU8_SLICE_StatusBitOverrideConfig
 726              	 .thumb
 727              	 .thumb_func
 729              	XMC_CCU8_SLICE_StatusBitOverrideConfig:
 730              	.LFB252:
 651:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 652:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 653:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure slice status bit override function */
 654:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice)
 655:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 731              	 .loc 1 655 0
 732              	 .cfi_startproc
 733              	 
 734              	 
 735              	 
 736              	.LVL91:
 656:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t cmc;
 657:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 658:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StatusBitOverrideConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 659:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 660:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc = slice->CMC;
 737              	 .loc 1 660 0
 738 0000 4368     	 ldr r3,[r0,#4]
 739              	.LVL92:
 661:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 662:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Map status bit trigger override to Event 1 &
 663:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****          status bit value override to Event 2 */
 664:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_OFS_Msk);
 665:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_OFS_Pos;
 740              	 .loc 1 665 0
 741 0002 43F48033 	 orr r3,r3,#65536
 742              	.LVL93:
 666:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 667:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC = cmc;
 743              	 .loc 1 667 0
 744 0006 4360     	 str r3,[r0,#4]
 745 0008 7047     	 bx lr
 746              	 .cfi_endproc
 747              	.LFE252:
 749 000a 00BF     	 .section .text.XMC_CCU8_SLICE_TrapConfig,"ax",%progbits
 750              	 .align 2
 751              	 .global XMC_CCU8_SLICE_TrapConfig
 752              	 .thumb
 753              	 .thumb_func
 755              	XMC_CCU8_SLICE_TrapConfig:
 756              	.LFB253:
 668:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 669:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 670:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure trap function*/
 671:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
 672:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
 673:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                const bool synch_with_pwm)
 674:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 757              	 .loc 1 674 0
 758              	 .cfi_startproc
 759              	 
 760              	 
 761              	 
 762              	.LVL94:
 675:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t cmc;
 676:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t tc;
 677:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 678:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 679:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Exit Mode", ((exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 680:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                                              (exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 681:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 682:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc = slice->CMC;
 763              	 .loc 1 682 0
 764 0000 4368     	 ldr r3,[r0,#4]
 765              	.LVL95:
 683:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 684:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Map trap function to Event 2 */
 685:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_TS_Msk);
 686:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_TS_Pos;
 766              	 .loc 1 686 0
 767 0002 43F40033 	 orr r3,r3,#131072
 768              	.LVL96:
 687:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 688:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->CMC = cmc;
 769              	 .loc 1 688 0
 770 0006 4360     	 str r3,[r0,#4]
 689:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 690:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc = slice->TC;
 771              	 .loc 1 690 0
 772 0008 4369     	 ldr r3,[r0,#20]
 773              	.LVL97:
 691:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 692:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure synchronization option */
 693:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if(synch_with_pwm == true)
 774              	 .loc 1 693 0
 775 000a 12B1     	 cbz r2,.L39
 694:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 695:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSE_Msk;
 776              	 .loc 1 695 0
 777 000c 43F40013 	 orr r3,r3,#2097152
 778              	.LVL98:
 779 0010 01E0     	 b .L40
 780              	.L39:
 696:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 697:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
 698:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 699:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSE_Msk);
 781              	 .loc 1 699 0
 782 0012 23F40013 	 bic r3,r3,#2097152
 783              	.LVL99:
 784              	.L40:
 700:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 701:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 702:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure exit mode */
 703:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if(exit_mode == XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW)
 785              	 .loc 1 703 0
 786 0016 0129     	 cmp r1,#1
 704:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 705:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSW_Msk;
 787              	 .loc 1 705 0
 788 0018 0CBF     	 ite eq
 789 001a 43F48003 	 orreq r3,r3,#4194304
 790              	.LVL100:
 706:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 707:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
 708:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 709:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSW_Msk);
 791              	 .loc 1 709 0
 792 001e 23F48003 	 bicne r3,r3,#4194304
 793              	.LVL101:
 710:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 711:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 712:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->TC = tc;
 794              	 .loc 1 712 0
 795 0022 4361     	 str r3,[r0,#20]
 796              	.LVL102:
 797 0024 7047     	 bx lr
 798              	 .cfi_endproc
 799              	.LFE253:
 801 0026 00BF     	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 802              	 .align 2
 803              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
 804              	 .thumb
 805              	 .thumb_func
 807              	XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:
 808              	.LFB254:
 713:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 714:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 715:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure a slice Status Bit Override event */
 716:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
 717:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
 718:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
 719:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 809              	 .loc 1 719 0
 810              	 .cfi_startproc
 811              	 
 812              	 
 813              	 
 814              	.LVL103:
 815 0000 10B4     	 push {r4}
 816              	.LCFI5:
 817              	 .cfi_def_cfa_offset 4
 818              	 .cfi_offset 4,-4
 720:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t ins;
 721:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 722:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Slice Pointer", XMC_CCU8_IsVal
 723:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 724:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****          XMC_CCU8_SLICE_IsInputvalid(ev1_config->mapped_input));
 725:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity", 
 726:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev1_config->edge));
 727:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity", 
 728:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              ((ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 729:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****               (ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 730:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 731:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****               XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev1_config->duration));
 732:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 733:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****           XMC_CCU8_SLICE_IsInputvalid(ev2_config->mapped_input));
 734:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 735:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****               XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev2_config->edge));
 736:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 737:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              ((ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 738:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****               (ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 739:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 740:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev2_config->duration));
 741:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 742:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 743:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins = slice->INS2;
 744:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 745:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 746:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV1EM_Pos);
 747:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS2_EV1EM_Pos;
 748:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 749:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 750:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV2EM_Pos);
 751:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS2_EV2EM_Pos;
 752:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 753:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 754:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV1LM_Pos);
 755:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS2_EV1LM_Pos;
 756:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 757:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 758:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV2LM_Pos);
 759:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS2_EV2LM_Pos;
 760:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 761:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 762:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF1M_Pos);
 763:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS2_LPF1M_Pos;
 764:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 765:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 766:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF2M_Pos);
 767:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS2_LPF2M_Pos;
 768:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   
 769:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->INS2 = ins; 
 770:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 771:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins = slice->INS1;
 772:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Next, the input for Event1 */
 773:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV1IS_Pos);
 774:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS1_EV1IS_Pos;
 775:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 776:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Finally, the input for Event2 */
 777:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV2IS_Pos);
 778:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS1_EV2IS_Pos;
 779:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 780:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->INS1 = ins;  
 781:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #else
 782:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins = slice->INS;
 819              	 .loc 1 782 0
 820 0002 0368     	 ldr r3,[r0]
 821              	.LVL104:
 783:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 784:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 785:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV1EM_Pos);
 822              	 .loc 1 785 0
 823 0004 23F44023 	 bic r3,r3,#786432
 824              	.LVL105:
 786:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS_EV1EM_Pos;
 825              	 .loc 1 786 0
 826 0008 4C78     	 ldrb r4,[r1,#1]
 827 000a 43EA8443 	 orr r3,r3,r4,lsl#18
 828              	.LVL106:
 787:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 788:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 789:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV2EM_Pos);
 829              	 .loc 1 789 0
 830 000e 23F44013 	 bic r3,r3,#3145728
 831              	.LVL107:
 790:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS_EV2EM_Pos;
 832              	 .loc 1 790 0
 833 0012 5478     	 ldrb r4,[r2,#1]
 834 0014 43EA0453 	 orr r3,r3,r4,lsl#20
 835              	.LVL108:
 791:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 792:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 793:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV1LM_Pos);
 836              	 .loc 1 793 0
 837 0018 23F40003 	 bic r3,r3,#8388608
 838              	.LVL109:
 794:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS_EV1LM_Pos;
 839              	 .loc 1 794 0
 840 001c 8C78     	 ldrb r4,[r1,#2]
 841 001e 43EAC453 	 orr r3,r3,r4,lsl#23
 842              	.LVL110:
 795:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 796:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 797:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV2LM_Pos);
 843              	 .loc 1 797 0
 844 0022 23F08073 	 bic r3,r3,#16777216
 845              	.LVL111:
 798:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS_EV2LM_Pos;
 846              	 .loc 1 798 0
 847 0026 9478     	 ldrb r4,[r2,#2]
 848 0028 43EA0463 	 orr r3,r3,r4,lsl#24
 849              	.LVL112:
 799:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 800:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 801:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF1M_Pos);
 850              	 .loc 1 801 0
 851 002c 23F0C053 	 bic r3,r3,#402653184
 852              	.LVL113:
 802:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS_LPF1M_Pos;
 853              	 .loc 1 802 0
 854 0030 CC78     	 ldrb r4,[r1,#3]
 855 0032 43EAC463 	 orr r3,r3,r4,lsl#27
 856              	.LVL114:
 803:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 804:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 805:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF2M_Pos);
 857              	 .loc 1 805 0
 858 0036 23F0C043 	 bic r3,r3,#1610612736
 859              	.LVL115:
 806:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS_LPF2M_Pos;
 860              	 .loc 1 806 0
 861 003a D478     	 ldrb r4,[r2,#3]
 862 003c 43EA4473 	 orr r3,r3,r4,lsl#29
 863              	.LVL116:
 807:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 808:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Next, the input for Event1 */
 809:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV1IS_Pos);
 864              	 .loc 1 809 0
 865 0040 23F0F003 	 bic r3,r3,#240
 866              	.LVL117:
 810:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS_EV1IS_Pos;
 867              	 .loc 1 810 0
 868 0044 0978     	 ldrb r1,[r1]
 869              	.LVL118:
 870 0046 43EA0113 	 orr r3,r3,r1,lsl#4
 871              	.LVL119:
 811:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 812:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Finally, the input for Event2 */
 813:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV2IS_Pos);
 872              	 .loc 1 813 0
 873 004a 23F47063 	 bic r3,r3,#3840
 874              	.LVL120:
 814:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS_EV2IS_Pos;
 875              	 .loc 1 814 0
 876 004e 1278     	 ldrb r2,[r2]
 877              	.LVL121:
 878 0050 43EA0223 	 orr r3,r3,r2,lsl#8
 879              	.LVL122:
 815:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 816:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->INS = ins;
 880              	 .loc 1 816 0
 881 0054 0360     	 str r3,[r0]
 817:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 818:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 882              	 .loc 1 818 0
 883 0056 5DF8044B 	 ldr r4,[sp],#4
 884              	.LCFI6:
 885              	 .cfi_restore 4
 886              	 .cfi_def_cfa_offset 0
 887 005a 7047     	 bx lr
 888              	 .cfi_endproc
 889              	.LFE254:
 891              	 .section .text.XMC_CCU8_SLICE_ConfigureEvent,"ax",%progbits
 892              	 .align 2
 893              	 .global XMC_CCU8_SLICE_ConfigureEvent
 894              	 .thumb
 895              	 .thumb_func
 897              	XMC_CCU8_SLICE_ConfigureEvent:
 898              	.LFB255:
 819:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 820:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to configure a slice trigger event */
 821:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
 822:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_t event,
 823:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *const config)
 824:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 899              	 .loc 1 824 0
 900              	 .cfi_startproc
 901              	 
 902              	 
 903              	.LVL123:
 904 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 905              	.LCFI7:
 906              	 .cfi_def_cfa_offset 20
 907              	 .cfi_offset 4,-20
 908              	 .cfi_offset 5,-16
 909              	 .cfi_offset 6,-12
 910              	 .cfi_offset 7,-8
 911              	 .cfi_offset 14,-4
 825:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t ins;
 826:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint8_t  pos;
 827:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint8_t  offset;
 828:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 829:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 830:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 831:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Input",  XMC_CCU8_SLICE_IsInputvalid(config->ma
 832:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Edge Sensitivity",
 833:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(config->edge));
 834:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Level Sensitivity", 
 835:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              ((config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 836:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****               (config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 837:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Debounce Period",
 838:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(config->duration));
 839:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 840:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Calculate offset with reference to event */
 841:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 912              	 .loc 1 841 0
 913 0002 4C1E     	 subs r4,r1,#1
 914 0004 E4B2     	 uxtb r4,r4
 915              	.LVL124:
 842:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 843:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 844:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins = slice->INS2;
 845:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 846:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 847:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0EM_Pos) + (uint8_t)(offset << 2U);
 848:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 849:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 850:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 851:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Next, the level */
 852:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0LM_Pos) + (uint8_t)(offset << 2U);
 853:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 854:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 855:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 856:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Next, the debounce filter */
 857:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_LPF0M_Pos) + (uint8_t)(offset << 2U);
 858:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 859:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 860:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 861:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->INS2 = ins;
 862:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 863:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins = slice->INS1;
 864:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 865:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Finally the input */
 866:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t)(offset << 3U);
 867:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 868:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 869:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 870:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->INS1 = ins;
 871:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 872:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #else
 873:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins = slice->INS;
 916              	 .loc 1 873 0
 917 0006 0568     	 ldr r5,[r0]
 918              	.LVL125:
 874:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 875:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 876:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0EM_Pos) + (uint8_t)(offset << 1U);
 919              	 .loc 1 876 0
 920 0008 6600     	 lsls r6,r4,#1
 921 000a F6B2     	 uxtb r6,r6
 922              	.LVL126:
 923 000c 06F1100C 	 add ip,r6,#16
 877:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 924              	 .loc 1 877 0
 925 0010 5FFA8CFC 	 uxtb ip,ip
 926 0014 0323     	 movs r3,#3
 927 0016 03FA0CFE 	 lsl lr,r3,ip
 928 001a 25EA0E0E 	 bic lr,r5,lr
 929              	.LVL127:
 878:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 930              	 .loc 1 878 0
 931 001e 5778     	 ldrb r7,[r2,#1]
 932 0020 07FA0CF7 	 lsl r7,r7,ip
 933 0024 4EEA070E 	 orr lr,lr,r7
 934              	.LVL128:
 879:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 880:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Next, the level */
 881:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0LM_Pos) + offset;
 935              	 .loc 1 881 0
 936 0028 1531     	 adds r1,r1,#21
 937              	.LVL129:
 882:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 938              	 .loc 1 882 0
 939 002a 5FFA81FC 	 uxtb ip,r1
 940 002e 0125     	 movs r5,#1
 941 0030 05FA0CF5 	 lsl r5,r5,ip
 942 0034 2EEA0507 	 bic r7,lr,r5
 943              	.LVL130:
 883:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 944              	 .loc 1 883 0
 945 0038 9578     	 ldrb r5,[r2,#2]
 946 003a 05FA0CF5 	 lsl r5,r5,ip
 947 003e 3D43     	 orrs r5,r5,r7
 948              	.LVL131:
 884:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 885:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Next, the debounce filter */
 886:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_LPF0M_Pos) + (uint8_t)(offset << 1U);
 949              	 .loc 1 886 0
 950 0040 1936     	 adds r6,r6,#25
 951              	.LVL132:
 887:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 952              	 .loc 1 887 0
 953 0042 F6B2     	 uxtb r6,r6
 954              	.LVL133:
 955 0044 B340     	 lsls r3,r3,r6
 956 0046 25EA0301 	 bic r1,r5,r3
 957              	.LVL134:
 888:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 958              	 .loc 1 888 0
 959 004a D378     	 ldrb r3,[r2,#3]
 960 004c B340     	 lsls r3,r3,r6
 961 004e 1943     	 orrs r1,r1,r3
 962              	.LVL135:
 889:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 890:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Finally the input */
 891:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t)(offset << 2U);
 963              	 .loc 1 891 0
 964 0050 A400     	 lsls r4,r4,#2
 965              	.LVL136:
 892:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 966              	 .loc 1 892 0
 967 0052 E4B2     	 uxtb r4,r4
 968 0054 0F23     	 movs r3,#15
 969 0056 A340     	 lsls r3,r3,r4
 970 0058 21EA0303 	 bic r3,r1,r3
 971              	.LVL137:
 893:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 972              	 .loc 1 893 0
 973 005c 1278     	 ldrb r2,[r2]
 974              	.LVL138:
 975 005e A240     	 lsls r2,r2,r4
 976 0060 1343     	 orrs r3,r3,r2
 977              	.LVL139:
 894:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 895:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->INS = ins;
 978              	 .loc 1 895 0
 979 0062 0360     	 str r3,[r0]
 980 0064 F0BD     	 pop {r4,r5,r6,r7,pc}
 981              	 .cfi_endproc
 982              	.LFE255:
 984 0066 00BF     	 .section .text.XMC_CCU8_SLICE_SetInput,"ax",%progbits
 985              	 .align 2
 986              	 .global XMC_CCU8_SLICE_SetInput
 987              	 .thumb
 988              	 .thumb_func
 990              	XMC_CCU8_SLICE_SetInput:
 991              	.LFB256:
 896:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 897:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 898:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 899:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to bind an input to a slice trigger event */
 900:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
 901:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                          const XMC_CCU8_SLICE_EVENT_t event,
 902:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                              const XMC_CCU8_SLICE_INPUT_t input)
 903:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 992              	 .loc 1 903 0
 993              	 .cfi_startproc
 994              	 
 995              	 
 996              	 
 997              	.LVL140:
 998 0000 10B4     	 push {r4}
 999              	.LCFI8:
 1000              	 .cfi_def_cfa_offset 4
 1001              	 .cfi_offset 4,-4
 1002              	.LVL141:
 904:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t ins;
 905:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint8_t  pos;
 906:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint8_t  offset;
 907:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 908:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 909:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 910:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Input", XMC_CCU8_SLICE_IsInputvalid(input));
 911:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 912:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Calculate offset with reference to event */
 913:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 914:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 915:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 916:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t) (offset << 3U);
 917:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins = slice->INS1;
 918:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 919:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 920:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 921:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->INS1 = ins;
 922:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #else
 923:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 924:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t) (offset << 2U);
 925:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins = slice->INS;
 1003              	 .loc 1 925 0
 1004 0002 0368     	 ldr r3,[r0]
 1005              	.LVL142:
 913:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 1006              	 .loc 1 913 0
 1007 0004 0139     	 subs r1,r1,#1
 1008              	.LVL143:
 924:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins = slice->INS;
 1009              	 .loc 1 924 0
 1010 0006 8900     	 lsls r1,r1,#2
 926:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1011              	 .loc 1 926 0
 1012 0008 C9B2     	 uxtb r1,r1
 1013 000a 0F24     	 movs r4,#15
 1014 000c 8C40     	 lsls r4,r4,r1
 1015 000e 23EA0403 	 bic r3,r3,r4
 1016              	.LVL144:
 927:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 1017              	 .loc 1 927 0
 1018 0012 8A40     	 lsls r2,r2,r1
 1019              	.LVL145:
 1020 0014 1A43     	 orrs r2,r2,r3
 1021              	.LVL146:
 928:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 929:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->INS = ins;
 1022              	 .loc 1 929 0
 1023 0016 0260     	 str r2,[r0]
 930:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
 931:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 1024              	 .loc 1 931 0
 1025 0018 5DF8044B 	 ldr r4,[sp],#4
 1026              	.LCFI9:
 1027              	 .cfi_restore 4
 1028              	 .cfi_def_cfa_offset 0
 1029 001c 7047     	 bx lr
 1030              	 .cfi_endproc
 1031              	.LFE256:
 1033 001e 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerRepeatMode,"ax",%progbits
 1034              	 .align 2
 1035              	 .global XMC_CCU8_SLICE_SetTimerRepeatMode
 1036              	 .thumb
 1037              	 .thumb_func
 1039              	XMC_CCU8_SLICE_SetTimerRepeatMode:
 1040              	.LFB257:
 932:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 933:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* API to program timer repeat mode - Single shot vs repeat  */
 934:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice,
 935:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t mode)
 936:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1041              	 .loc 1 936 0
 1042              	 .cfi_startproc
 1043              	 
 1044              	 
 1045              	 
 1046              	.LVL147:
 937:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t tc;
 938:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 939:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
 940:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Timer Repeat Mode", 
 941:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT) ||\
 942:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****               (mode == (mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT))));
 943:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 944:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc = slice->TC;
 1047              	 .loc 1 944 0
 1048 0000 4369     	 ldr r3,[r0,#20]
 1049              	.LVL148:
 945:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 946:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if(XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT == mode)
 1050              	 .loc 1 946 0
 1051 0002 11B9     	 cbnz r1,.L50
 947:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 948:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TSSM_Msk);
 1052              	 .loc 1 948 0
 1053 0004 23F00203 	 bic r3,r3,#2
 1054              	.LVL149:
 1055 0008 01E0     	 b .L51
 1056              	.L50:
 949:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 950:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
 951:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 952:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TSSM_Msk;
 1057              	 .loc 1 952 0
 1058 000a 43F00203 	 orr r3,r3,#2
 1059              	.LVL150:
 1060              	.L51:
 953:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 954:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 955:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->TC = tc;
 1061              	 .loc 1 955 0
 1062 000e 4361     	 str r3,[r0,#20]
 1063 0010 7047     	 bx lr
 1064              	 .cfi_endproc
 1065              	.LFE257:
 1067 0012 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerCountingMode,"ax",%progbits
 1068              	 .align 2
 1069              	 .global XMC_CCU8_SLICE_SetTimerCountingMode
 1070              	 .thumb
 1071              	 .thumb_func
 1073              	XMC_CCU8_SLICE_SetTimerCountingMode:
 1074              	.LFB258:
 956:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 957:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 958:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Programs timer counting mode  */
 959:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
 960:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1075              	 .loc 1 960 0
 1076              	 .cfi_startproc
 1077              	 
 1078              	 
 1079              	 
 1080              	.LVL151:
 961:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t tc;
 962:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 963:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
 964:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Timer Count Mode",
 965:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA) ||\
 966:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****               (mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA)));
 967:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 968:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc = slice->TC;
 1081              	 .loc 1 968 0
 1082 0000 4369     	 ldr r3,[r0,#20]
 1083              	.LVL152:
 969:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 970:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if(XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == mode)
 1084              	 .loc 1 970 0
 1085 0002 11B9     	 cbnz r1,.L53
 971:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 972:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TCM_Msk);
 1086              	 .loc 1 972 0
 1087 0004 23F00103 	 bic r3,r3,#1
 1088              	.LVL153:
 1089 0008 01E0     	 b .L54
 1090              	.L53:
 973:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 974:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
 975:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 976:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TCM_Msk;
 1091              	 .loc 1 976 0
 1092 000a 43F00103 	 orr r3,r3,#1
 1093              	.LVL154:
 1094              	.L54:
 977:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 978:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 979:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->TC = tc;
 1095              	 .loc 1 979 0
 1096 000e 4361     	 str r3,[r0,#20]
 1097 0010 7047     	 bx lr
 1098              	 .cfi_endproc
 1099              	.LFE258:
 1101 0012 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerPeriodMatch,"ax",%progbits
 1102              	 .align 2
 1103              	 .global XMC_CCU8_SLICE_SetTimerPeriodMatch
 1104              	 .thumb
 1105              	 .thumb_func
 1107              	XMC_CCU8_SLICE_SetTimerPeriodMatch:
 1108              	.LFB259:
 980:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 981:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 982:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Programs period match value of the timer  */
 983:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val)
 984:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1109              	 .loc 1 984 0
 1110              	 .cfi_startproc
 1111              	 
 1112              	 
 1113              	 
 1114              	.LVL155:
 985:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
 986:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->PRS = (uint32_t) period_val;
 1115              	 .loc 1 986 0
 1116 0000 4163     	 str r1,[r0,#52]
 1117 0002 7047     	 bx lr
 1118              	 .cfi_endproc
 1119              	.LFE259:
 1121              	 .section .text.XMC_CCU8_SLICE_GetCaptureRegisterValue,"ax",%progbits
 1122              	 .align 2
 1123              	 .global XMC_CCU8_SLICE_GetCaptureRegisterValue
 1124              	 .thumb
 1125              	 .thumb_func
 1127              	XMC_CCU8_SLICE_GetCaptureRegisterValue:
 1128              	.LFB260:
 987:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 988:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 989:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Retrieves desired capture register value */
 990:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
 991:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1129              	 .loc 1 991 0
 1130              	 .cfi_startproc
 1131              	 
 1132              	 
 1133              	 
 1134              	.LVL156:
 992:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 993:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid register number", (reg_num < 4U));
 994:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   return(slice->CV[reg_num]);
 1135              	 .loc 1 994 0
 1136 0000 1C31     	 adds r1,r1,#28
 1137              	.LVL157:
 1138 0002 00EB8100 	 add r0,r0,r1,lsl#2
 1139              	.LVL158:
 1140 0006 4068     	 ldr r0,[r0,#4]
 995:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 1141              	 .loc 1 995 0
 1142 0008 7047     	 bx lr
 1143              	 .cfi_endproc
 1144              	.LFE260:
 1146 000a 00BF     	 .section .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 1147              	 .align 2
 1148              	 .global XMC_CCU8_SLICE_GetLastCapturedTimerValue
 1149              	 .thumb
 1150              	 .thumb_func
 1152              	XMC_CCU8_SLICE_GetLastCapturedTimerValue:
 1153              	.LFB261:
 996:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 997:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* @brief Retrieves the latest captured timer value */
 998:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
 999:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
1000:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                                            uint32_t *val_ptr)
1001:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1154              	 .loc 1 1001 0
 1155              	 .cfi_startproc
 1156              	 
 1157              	 
 1158              	 
 1159              	.LVL159:
 1160 0000 30B4     	 push {r4,r5}
 1161              	.LCFI10:
 1162              	 .cfi_def_cfa_offset 8
 1163              	 .cfi_offset 4,-8
 1164              	 .cfi_offset 5,-4
 1165              	.LVL160:
1002:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1003:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_CCU8_STATUS_t retval;
1004:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint8_t i;
1005:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint8_t start;
1006:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint8_t end;
1007:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1008:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlic
1009:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Register Set",
1010:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) ||\
1011:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1012:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1013:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   retval = XMC_CCU8_STATUS_ERROR;
1014:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1015:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First check if extended capture mode is enabled */
1016:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if((slice->TC) & CCU8_CC8_TC_ECM_Msk)
 1166              	 .loc 1 1016 0
 1167 0002 4369     	 ldr r3,[r0,#20]
 1168 0004 13F0100F 	 tst r3,#16
 1169 0008 1CD1     	 bne .L63
1017:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1018:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     /* Extended capture mode has been enabled. So start with the lowest capture register and work y
1019:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     start = 0U;
1020:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     end = XMC_CCU8_NUM_SLICES_PER_MODULE;
1021:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1022:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
1023:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1024:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     /* Extended capture mode is not enabled */
1025:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     if(set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)
1026:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     {
1027:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       start = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
1028:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       end   = (uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE;
1029:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     }
1030:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     else
1031:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     {
1032:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       start = 0U;
1033:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       end = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 1170              	 .loc 1 1033 0
 1171 000a 0129     	 cmp r1,#1
 1172 000c 0BBF     	 itete eq
 1173 000e 0425     	 moveq r5,#4
 1174 0010 0225     	 movne r5,#2
 1175 0012 0223     	 moveq r3,#2
 1176 0014 0023     	 movne r3,#0
 1177 0016 17E0     	 b .L58
 1178              	.LVL161:
 1179              	.L61:
1034:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     }
1035:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1036:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1037:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   for(i=start; i<end; i++)
1038:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1039:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     if( (slice->CV[i]) & CCU8_CC8_CV_FFL_Msk )
 1180              	 .loc 1 1039 0
 1181 0018 1C46     	 mov r4,r3
 1182 001a 03F11C01 	 add r1,r3,#28
 1183 001e 00EB8101 	 add r1,r0,r1,lsl#2
 1184 0022 4968     	 ldr r1,[r1,#4]
 1185 0024 11F4801F 	 tst r1,#1048576
 1186 0028 06D0     	 beq .L59
 1187              	.L62:
1040:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     {
1041:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       *val_ptr = slice->CV[i];
 1188              	 .loc 1 1041 0
 1189 002a 1C34     	 adds r4,r4,#28
 1190 002c 00EB8400 	 add r0,r0,r4,lsl#2
 1191              	.LVL162:
 1192 0030 4368     	 ldr r3,[r0,#4]
 1193              	.LVL163:
 1194 0032 1360     	 str r3,[r2]
 1195              	.LVL164:
1042:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       retval = XMC_CCU8_STATUS_OK;
 1196              	 .loc 1 1042 0
 1197 0034 0020     	 movs r0,#0
1043:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       break;
 1198              	 .loc 1 1043 0
 1199 0036 11E0     	 b .L66
 1200              	.LVL165:
 1201              	.L59:
1037:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
 1202              	 .loc 1 1037 0 discriminator 2
 1203 0038 0133     	 adds r3,r3,#1
 1204              	.LVL166:
 1205 003a DBB2     	 uxtb r3,r3
 1206              	.LVL167:
 1207 003c AB42     	 cmp r3,r5
 1208 003e EBD3     	 bcc .L61
1013:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
 1209              	 .loc 1 1013 0
 1210 0040 0120     	 movs r0,#1
 1211              	.LVL168:
 1212 0042 0BE0     	 b .L66
 1213              	.LVL169:
 1214              	.L63:
1020:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
 1215              	 .loc 1 1020 0
 1216 0044 0425     	 movs r5,#4
1019:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     end = XMC_CCU8_NUM_SLICES_PER_MODULE;
 1217              	 .loc 1 1019 0
 1218 0046 0023     	 movs r3,#0
 1219              	.L58:
 1220              	.LVL170:
1039:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     {
 1221              	 .loc 1 1039 0
 1222 0048 1C46     	 mov r4,r3
 1223 004a 03F11C01 	 add r1,r3,#28
 1224              	.LVL171:
 1225 004e 00EB8101 	 add r1,r0,r1,lsl#2
 1226 0052 4968     	 ldr r1,[r1,#4]
 1227 0054 11F4801F 	 tst r1,#1048576
 1228 0058 EED0     	 beq .L59
 1229 005a E6E7     	 b .L62
 1230              	.LVL172:
 1231              	.L66:
1044:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     }
1045:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1046:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1047:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   return retval;
1048:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 1232              	 .loc 1 1048 0
 1233 005c 30BC     	 pop {r4,r5}
 1234              	.LCFI11:
 1235              	 .cfi_restore 5
 1236              	 .cfi_restore 4
 1237              	 .cfi_def_cfa_offset 0
 1238              	.LVL173:
 1239 005e 7047     	 bx lr
 1240              	 .cfi_endproc
 1241              	.LFE261:
 1243              	 .section .text.XMC_CCU8_GetCapturedValueFromFifo,"ax",%progbits
 1244              	 .align 2
 1245              	 .global XMC_CCU8_GetCapturedValueFromFifo
 1246              	 .thumb
 1247              	 .thumb_func
 1249              	XMC_CCU8_GetCapturedValueFromFifo:
 1250              	.LFB262:
1049:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1050:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1051:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1052:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1251              	 .loc 1 1052 0
 1252              	 .cfi_startproc
 1253              	 
 1254              	 
 1255              	 
 1256              	.LVL174:
1053:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   int32_t  cap;
1054:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t extracted_slice;
1055:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   
1056:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidModule(modu
1057:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1058:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* First read the global fifo register */
1059:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   cap = (int32_t) module->ECRD;
 1257              	 .loc 1 1059 0
 1258 0000 006D     	 ldr r0,[r0,#80]
 1259              	.LVL175:
1060:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     
1061:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   extracted_slice = (((uint32_t) cap) & ((uint32_t) CCU8_ECRD_SPTR_Msk)) >> CCU8_ECRD_SPTR_Pos;
 1260              	 .loc 1 1061 0
 1261 0002 C0F30152 	 ubfx r2,r0,#20,#2
 1262              	.LVL176:
1062:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1063:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Return captured result only if it were applicable to this slice */
1064:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if(extracted_slice != ((uint32_t)slice_number))
1065:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1066:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     cap = -1;
1067:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1068:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1069:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   return (cap);
1070:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 1263              	 .loc 1 1070 0
 1264 0006 9142     	 cmp r1,r2
 1265 0008 18BF     	 it ne
 1266 000a 4FF0FF30 	 movne r0,#-1
 1267              	.LVL177:
 1268 000e 7047     	 bx lr
 1269              	 .cfi_endproc
 1270              	.LFE262:
 1272              	 .section .text.XMC_CCU8_SLICE_EnableDithering,"ax",%progbits
 1273              	 .align 2
 1274              	 .global XMC_CCU8_SLICE_EnableDithering
 1275              	 .thumb
 1276              	 .thumb_func
 1278              	XMC_CCU8_SLICE_EnableDithering:
 1279              	.LFB263:
1071:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #else
1072:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1073:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU
1074:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
1075:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t cap;
1076:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1077:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1078:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Register Set", 
1079:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) ||\
1080:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1081:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1082:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if(XMC_CCU8_SLICE_CAP_REG_SET_LOW == set)
1083:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1084:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     cap = slice->ECRD0;
1085:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1086:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
1087:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1088:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     cap = slice->ECRD1;
1089:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1090:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1091:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   return cap;
1092:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
1093:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** #endif
1094:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1095:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Enables PWM dithering feature */
1096:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
1097:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                     const bool period_dither,
1098:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                     const bool duty_dither,
1099:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                     const uint8_t spread)
1100:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1280              	 .loc 1 1100 0
 1281              	 .cfi_startproc
 1282              	 
 1283              	 
 1284              	 
 1285              	.LVL178:
 1286 0000 10B4     	 push {r4}
 1287              	.LCFI12:
 1288              	 .cfi_def_cfa_offset 4
 1289              	 .cfi_offset 4,-4
1101:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t tc;
1102:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1103:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1104:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1105:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc = slice->TC;
 1290              	 .loc 1 1105 0
 1291 0002 4469     	 ldr r4,[r0,#20]
 1292              	.LVL179:
1106:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
 1293              	 .loc 1 1106 0
 1294 0004 24F4C044 	 bic r4,r4,#24576
 1295              	.LVL180:
1107:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1108:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if(true == period_dither)
 1296              	 .loc 1 1108 0
 1297 0008 09B1     	 cbz r1,.L71
1109:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1110:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_PERIOD_MASK) << CCU8_CC8_TC_DITHE_Pos);
 1298              	 .loc 1 1110 0
 1299 000a 44F40054 	 orr r4,r4,#8192
 1300              	.LVL181:
 1301              	.L71:
1111:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1112:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if(true == duty_dither)
 1302              	 .loc 1 1112 0
 1303 000e 0AB1     	 cbz r2,.L72
1113:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1114:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK) << CCU8_CC8_TC_DITHE_Pos);
 1304              	 .loc 1 1114 0
 1305 0010 44F48044 	 orr r4,r4,#16384
 1306              	.LVL182:
 1307              	.L72:
1115:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1116:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1117:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->TC = tc;
 1308              	 .loc 1 1117 0
 1309 0014 4461     	 str r4,[r0,#20]
 1310              	.LVL183:
 1311              	.LBB24:
 1312              	.LBB25:
2040:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2041:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2042:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2043:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2044:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2045:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2046:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2047:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2048:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
2049:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
2050:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
2051:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2052:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2053:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2054:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2055:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
2056:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2057:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2058:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
2059:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2060:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2061:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2062:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2063:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2064:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2065:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2066:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2067:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
2068:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2069:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2070:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2071:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2072:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
2073:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2074:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2075:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
2076:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2077:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2078:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2079:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2080:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2081:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
2082:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
2083:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2084:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2085:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
2086:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
2087:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
2088:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * invalid.
2089:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2090:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2091:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  None.
2092:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2093:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
2094:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2095:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2096:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
2097:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2098:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2099:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2100:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2101:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
2102:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2103:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2104:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2105:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2106:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
2107:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
2108:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
2109:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
2110:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2111:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2112:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
2113:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2114:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
2115:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2116:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2117:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2118:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2119:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
2120:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
2121:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2122:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2123:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
2124:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
2125:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
2126:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
2127:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2128:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2129:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
2130:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2131:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
2132:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
2133:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2134:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
2135:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
2136:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2137:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2138:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2139:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
2140:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2141:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2142:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2143:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2144:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
2145:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
2146:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
2147:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
2148:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
2149:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
2150:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2151:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2152:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
2153:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2154:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
2155:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2156:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2157:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2158:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2159:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
2160:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
2161:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2162:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2163:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
2164:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2165:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2166:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
2167:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2168:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
2169:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
2170:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2171:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2172:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
2173:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2174:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2175:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2176:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
2177:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
2178:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2179:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2180:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2181:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2182:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
2183:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
2184:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
2185:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
2186:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
2187:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2188:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2189:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
2190:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2191:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
2192:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2193:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2194:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2195:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2196:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
2197:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2198:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2199:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2200:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
2201:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
2202:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2203:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2204:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
2205:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
2206:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
2207:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2208:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2209:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2210:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
2211:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2212:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
2213:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2214:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
2215:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
2216:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2217:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2218:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2219:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
2220:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2221:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2222:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2223:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2224:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2225:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
2226:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
2227:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2228:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
2229:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
2230:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
2231:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2232:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2233:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2234:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2235:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
2236:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2237:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
2238:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2239:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2240:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2241:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2242:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2243:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2244:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2245:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2246:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
2247:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2248:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2249:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2250:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2251:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2252:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2253:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2254:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2255:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2256:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2257:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2258:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2259:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2260:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2261:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2262:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2263:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2264:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2265:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2266:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2267:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2268:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2269:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2270:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2271:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2272:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2273:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2274:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2275:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2276:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2277:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2278:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2279:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2280:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2281:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2282:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2283:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2284:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2285:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2286:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2287:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2288:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2289:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2290:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2291:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2292:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2293:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2294:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2295:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2296:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2297:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2298:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2299:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2300:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2301:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2302:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2303:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2304:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2305:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2306:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2307:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2308:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2309:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2310:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return 
2311:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2312:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2313:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2314:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR1 register.\n\n
2315:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2316:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2317:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel1().
2318:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2319:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice)
2320:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2321:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2322:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return slice->CR1;
2323:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2324:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2325:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2326:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2327:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return Timer compare value
2328:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2329:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2330:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2331:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR2 register.\n\n
2332:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2333:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2334:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel2().
2335:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2336:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice)
2337:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2338:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2339:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return slice->CR2;
2340:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2341:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2342:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2343:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2344:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2345:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2346:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2347:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2348:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2349:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2350:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2351:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2352:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2353:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2354:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2355:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2356:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2357:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2358:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2359:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2360:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2361:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  None.
2362:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2363:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2364:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2365:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2366:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
2367:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2368:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2369:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2370:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2371:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2372:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2373:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2374:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2375:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2376:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2377:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2378:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2379:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2380:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2381:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2382:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2383:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2384:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
2385:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2386:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2387:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2388:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2389:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2390:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2391:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2392:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2393:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2394:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2395:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * 
2396:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2397:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2398:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2399:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2400:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2401:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2402:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2403:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2404:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2405:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
2406:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2407:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2408:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2409:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2410:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2411:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2412:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2413:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2414:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2415:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2416:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2417:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2418:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2419:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2420:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2421:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2422:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2423:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2424:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2425:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2426:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2427:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2428:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2429:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2430:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2431:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2432:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2433:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2434:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2435:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2436:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2437:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2438:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2439:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2440:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2441:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2442:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2443:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2444:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2445:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2446:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2447:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2448:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2449:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2450:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2451:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2452:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2453:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2454:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2455:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2456:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2457:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2458:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2459:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2460:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2461:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2462:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2463:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2464:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2465:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2466:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2467:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2468:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2469:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2470:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2471:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2472:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2473:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2474:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2475:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2476:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2477:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2478:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2479:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2480:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2481:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2482:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2483:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2484:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2485:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2486:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2487:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2488:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2489:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2490:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2491:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2492:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2493:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** }
2494:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2495:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** /**
2496:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2497:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2498:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2499:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2500:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2501:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2502:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2503:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2504:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2505:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2506:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2507:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2508:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *
2509:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2510:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2511:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****  */
2512:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2513:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** {
2514:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2515:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2516:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h **** 
2517:C:/Files/Projects/Git/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
 1313              	 .loc 2 2517 0
 1314 0016 0362     	 str r3,[r0,#32]
 1315              	.LBE25:
 1316              	.LBE24:
1118:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1119:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_CCU8_SLICE_SetDitherCompareValue((XMC_CCU8_SLICE_t *)slice, (uint8_t)spread);
1120:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 1317              	 .loc 1 1120 0
 1318 0018 5DF8044B 	 ldr r4,[sp],#4
 1319              	.LCFI13:
 1320              	 .cfi_restore 4
 1321              	 .cfi_def_cfa_offset 0
 1322              	.LVL184:
 1323 001c 7047     	 bx lr
 1324              	 .cfi_endproc
 1325              	.LFE263:
 1327 001e 00BF     	 .section .text.XMC_CCU8_SLICE_SetPrescaler,"ax",%progbits
 1328              	 .align 2
 1329              	 .global XMC_CCU8_SLICE_SetPrescaler
 1330              	 .thumb
 1331              	 .thumb_func
 1333              	XMC_CCU8_SLICE_SetPrescaler:
 1334              	.LFB264:
1121:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1122:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Programs Pre-scaler divider  */
1123:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_PRESCALER_t di
1124:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1335              	 .loc 1 1124 0
 1336              	 .cfi_startproc
 1337              	 
 1338              	 
 1339              	 
 1340              	.LVL185:
1125:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t fpc;
1126:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1127:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1128:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1129:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* If the prescaler is not running, update directly the divider*/
1130:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   fpc = slice->FPC;
 1341              	 .loc 1 1130 0
 1342 0000 836A     	 ldr r3,[r0,#40]
 1343              	.LVL186:
1131:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   fpc &= ~((uint32_t) CCU8_CC8_FPC_PVAL_Msk);
 1344              	 .loc 1 1131 0
 1345 0002 23F47063 	 bic r3,r3,#3840
 1346              	.LVL187:
1132:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   fpc |= ((uint32_t) div_val) << CCU8_CC8_FPC_PVAL_Pos;
 1347              	 .loc 1 1132 0
 1348 0006 43EA0123 	 orr r3,r3,r1,lsl#8
 1349              	.LVL188:
1133:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->FPC = fpc;
 1350              	 .loc 1 1133 0
 1351 000a 8362     	 str r3,[r0,#40]
1134:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1135:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /*
1136:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****    * In any case, update the initial value of the divider which is to be loaded once the prescaler 
1137:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****    * compare value.
1138:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****    */
1139:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->PSC = (uint32_t) div_val;
 1352              	 .loc 1 1139 0
 1353 000c 4162     	 str r1,[r0,#36]
 1354 000e 7047     	 bx lr
 1355              	 .cfi_endproc
 1356              	.LFE264:
 1358              	 .section .text.XMC_CCU8_SLICE_SetTimerCompareMatch,"ax",%progbits
 1359              	 .align 2
 1360              	 .global XMC_CCU8_SLICE_SetTimerCompareMatch
 1361              	 .thumb
 1362              	 .thumb_func
 1364              	XMC_CCU8_SLICE_SetTimerCompareMatch:
 1365              	.LFB265:
1140:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
1141:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1142:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Programs timer compare match value for channel 1 or 2 */
1143:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
1144:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1145:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                          const uint16_t compare_val)
1146:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1366              	 .loc 1 1146 0
 1367              	 .cfi_startproc
 1368              	 
 1369              	 
 1370              	 
 1371              	.LVL189:
1147:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1148:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANN
1149:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1150:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 1372              	 .loc 1 1150 0
 1373 0000 09B9     	 cbnz r1,.L76
1151:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1152:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     slice->CR1S = (uint32_t) compare_val;
 1374              	 .loc 1 1152 0
 1375 0002 C263     	 str r2,[r0,#60]
 1376 0004 7047     	 bx lr
 1377              	.L76:
1153:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1154:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
1155:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1156:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     slice->CR2S = (uint32_t) compare_val;
 1378              	 .loc 1 1156 0
 1379 0006 4264     	 str r2,[r0,#68]
 1380 0008 7047     	 bx lr
 1381              	 .cfi_endproc
 1382              	.LFE265:
 1384 000a 00BF     	 .section .text.XMC_CCU8_SLICE_GetTimerCompareMatch,"ax",%progbits
 1385              	 .align 2
 1386              	 .global XMC_CCU8_SLICE_GetTimerCompareMatch
 1387              	 .thumb
 1388              	 .thumb_func
 1390              	XMC_CCU8_SLICE_GetTimerCompareMatch:
 1391              	.LFB266:
1157:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1158:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
1159:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1160:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Returns the timer compare match value for channel 1 or 2 */
1161:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
1162:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel)
1163:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1392              	 .loc 1 1163 0
 1393              	 .cfi_startproc
 1394              	 
 1395              	 
 1396              	 
 1397              	.LVL190:
1164:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint16_t compare_value;
1165:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1166:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1167:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(ch
1168:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1169:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 1398              	 .loc 1 1169 0
 1399 0000 11B9     	 cbnz r1,.L79
1170:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1171:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR1;
 1400              	 .loc 1 1171 0
 1401 0002 806B     	 ldr r0,[r0,#56]
 1402              	.LVL191:
 1403 0004 80B2     	 uxth r0,r0
 1404              	.LVL192:
 1405 0006 7047     	 bx lr
 1406              	.LVL193:
 1407              	.L79:
1172:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1173:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
1174:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1175:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR2;
 1408              	 .loc 1 1175 0
 1409 0008 006C     	 ldr r0,[r0,#64]
 1410              	.LVL194:
 1411 000a 80B2     	 uxth r0,r0
 1412              	.LVL195:
1176:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1177:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1178:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   return(compare_value);
1179:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 1413              	 .loc 1 1179 0
 1414 000c 7047     	 bx lr
 1415              	 .cfi_endproc
 1416              	.LFE266:
 1418 000e 00BF     	 .section .text.XMC_CCU8_SLICE_SetInterruptNode,"ax",%progbits
 1419              	 .align 2
 1420              	 .global XMC_CCU8_SLICE_SetInterruptNode
 1421              	 .thumb
 1422              	 .thumb_func
 1424              	XMC_CCU8_SLICE_SetInterruptNode:
 1425              	.LFB267:
1180:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1181:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Binds a capcom event to an NVIC node  */
1182:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
1183:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
1184:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_SR_ID_t sr)
1185:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1426              	 .loc 1 1185 0
 1427              	 .cfi_startproc
 1428              	 
 1429              	 
 1430              	 
 1431              	.LVL196:
 1432 0000 10B4     	 push {r4}
 1433              	.LCFI14:
 1434              	 .cfi_def_cfa_offset 4
 1435              	 .cfi_offset 4,-4
1186:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t srs;
1187:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t mask;
1188:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t pos;
1189:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1190:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1191:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid SR ID ", XMC_CCU8_SLICE_CHECK_SR_ID(sr));
1192:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event)
1193:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1194:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   srs = slice->SRS;
 1436              	 .loc 1 1194 0
 1437 0002 D0F8A830 	 ldr r3,[r0,#168]
 1438              	.LVL197:
1195:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1196:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   switch(event)
 1439              	 .loc 1 1196 0
 1440 0006 0929     	 cmp r1,#9
 1441 0008 14D8     	 bhi .L82
 1442 000a DFE801F0 	 tbb [pc,r1]
 1443              	.L84:
 1444 000e 17       	 .byte (.L89-.L84)/2
 1445 000f 17       	 .byte (.L89-.L84)/2
 1446 0010 05       	 .byte (.L85-.L84)/2
 1447 0011 05       	 .byte (.L85-.L84)/2
 1448 0012 08       	 .byte (.L86-.L84)/2
 1449 0013 08       	 .byte (.L86-.L84)/2
 1450 0014 13       	 .byte (.L82-.L84)/2
 1451 0015 13       	 .byte (.L82-.L84)/2
 1452 0016 0B       	 .byte (.L87-.L84)/2
 1453 0017 0F       	 .byte (.L88-.L84)/2
 1454              	 .p2align 1
 1455              	.L85:
1197:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1198:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH:
1199:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH:
1200:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_POSR_Msk);
1201:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_POSR_Pos;
1202:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       break;
1203:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1204:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1:
1205:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1:
1206:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM1SR_Msk);
1207:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM1SR_Pos;
 1456              	 .loc 1 1207 0
 1457 0018 0221     	 movs r1,#2
 1458              	.LVL198:
1206:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM1SR_Pos;
 1459              	 .loc 1 1206 0
 1460 001a 0C24     	 movs r4,#12
 1461 001c 10E0     	 b .L83
 1462              	.LVL199:
 1463              	.L86:
1208:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       break;
1209:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1210:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2:
1211:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2:
1212:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM2SR_Msk);
1213:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM2SR_Pos;
 1464              	 .loc 1 1213 0
 1465 001e 0421     	 movs r1,#4
 1466              	.LVL200:
1212:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM2SR_Pos;
 1467              	 .loc 1 1212 0
 1468 0020 3024     	 movs r4,#48
1214:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       break;
 1469              	 .loc 1 1214 0
 1470 0022 0DE0     	 b .L83
 1471              	.LVL201:
 1472              	.L87:
1215:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1216:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT0:
1217:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E0SR_Msk);
1218:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E0SR_Pos;
 1473              	 .loc 1 1218 0
 1474 0024 0821     	 movs r1,#8
 1475              	.LVL202:
1217:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E0SR_Pos;
 1476              	 .loc 1 1217 0
 1477 0026 4FF44074 	 mov r4,#768
1219:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       break;
 1478              	 .loc 1 1219 0
 1479 002a 09E0     	 b .L83
 1480              	.LVL203:
 1481              	.L88:
1220:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1221:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT1:
1222:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E1SR_Msk);
1223:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E1SR_Pos;
 1482              	 .loc 1 1223 0
 1483 002c 0A21     	 movs r1,#10
 1484              	.LVL204:
1222:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E1SR_Pos;
 1485              	 .loc 1 1222 0
 1486 002e 4FF44064 	 mov r4,#3072
1224:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       break;
 1487              	 .loc 1 1224 0
 1488 0032 05E0     	 b .L83
 1489              	.LVL205:
 1490              	.L82:
1225:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1226:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     default:
1227:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E2SR_Msk);
1228:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E2SR_Pos;
 1491              	 .loc 1 1228 0
 1492 0034 0C21     	 movs r1,#12
 1493              	.LVL206:
1227:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E2SR_Pos;
 1494              	 .loc 1 1227 0
 1495 0036 4FF44054 	 mov r4,#12288
1229:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       break;
 1496              	 .loc 1 1229 0
 1497 003a 01E0     	 b .L83
 1498              	.LVL207:
 1499              	.L89:
1201:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       break;
 1500              	 .loc 1 1201 0
 1501 003c 0021     	 movs r1,#0
 1502              	.LVL208:
1200:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_POSR_Pos;
 1503              	 .loc 1 1200 0
 1504 003e 0324     	 movs r4,#3
 1505              	.L83:
 1506              	.LVL209:
1230:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1231:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   
1232:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   srs &= ~mask;
 1507              	 .loc 1 1232 0
 1508 0040 23EA0403 	 bic r3,r3,r4
 1509              	.LVL210:
1233:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   srs |= (uint32_t)sr << pos;
 1510              	 .loc 1 1233 0
 1511 0044 8A40     	 lsls r2,r2,r1
 1512              	.LVL211:
 1513 0046 1A43     	 orrs r2,r2,r3
 1514              	.LVL212:
1234:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   
1235:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->SRS = srs;
 1515              	 .loc 1 1235 0
 1516 0048 C0F8A820 	 str r2,[r0,#168]
1236:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
 1517              	 .loc 1 1236 0
 1518 004c 5DF8044B 	 ldr r4,[sp],#4
 1519              	.LCFI15:
 1520              	 .cfi_restore 4
 1521              	 .cfi_def_cfa_offset 0
 1522              	.LVL213:
 1523 0050 7047     	 bx lr
 1524              	 .cfi_endproc
 1525              	.LFE267:
 1527 0052 00BF     	 .section .text.XMC_CCU8_SLICE_SetPassiveLevel,"ax",%progbits
 1528              	 .align 2
 1529              	 .global XMC_CCU8_SLICE_SetPassiveLevel
 1530              	 .thumb
 1531              	 .thumb_func
 1533              	XMC_CCU8_SLICE_SetPassiveLevel:
 1534              	.LFB268:
1237:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1238:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Asserts passive level for the slice output */
1239:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
1240:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
1241:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level)
1242:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1535              	 .loc 1 1242 0
 1536              	 .cfi_startproc
 1537              	 
 1538              	 
 1539              	 
 1540              	.LVL214:
1243:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   uint32_t psl;
1244:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1245:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1246:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Output", XMC_CCU8_SLICE_CHECK_OUTPUT(out
1247:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Passive Level",
1248:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****              ((level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW) ||\
1249:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****               (level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH)));
1250:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1251:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   psl = slice->PSL;
 1541              	 .loc 1 1251 0
 1542 0000 8369     	 ldr r3,[r0,#24]
 1543              	.LVL215:
1252:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1253:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   psl &= ~((uint32_t) out);
 1544              	 .loc 1 1253 0
 1545 0002 23EA0103 	 bic r3,r3,r1
 1546              	.LVL216:
1254:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   psl |= (uint32_t) level << ((uint32_t)out >> 1U);
 1547              	 .loc 1 1254 0
 1548 0006 4908     	 lsrs r1,r1,#1
 1549              	.LVL217:
 1550 0008 8A40     	 lsls r2,r2,r1
 1551              	.LVL218:
 1552 000a 1343     	 orrs r3,r3,r2
 1553              	.LVL219:
1255:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1256:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Program CC8 slice output passive level */
1257:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->PSL = psl;
 1554              	 .loc 1 1257 0
 1555 000c 8361     	 str r3,[r0,#24]
 1556 000e 7047     	 bx lr
 1557              	 .cfi_endproc
 1558              	.LFE268:
 1560              	 .section .text.XMC_CCU8_SLICE_DeadTimeInit,"ax",%progbits
 1561              	 .align 2
 1562              	 .global XMC_CCU8_SLICE_DeadTimeInit
 1563              	 .thumb
 1564              	 .thumb_func
 1566              	XMC_CCU8_SLICE_DeadTimeInit:
 1567              	.LFB269:
1258:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
1259:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1260:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Initializes Dead time configuration for the slice outputs */
1261:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
1262:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config)
1263:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1568              	 .loc 1 1263 0
 1569              	 .cfi_startproc
 1570              	 
 1571              	 
 1572              	 
 1573              	.LVL220:
1264:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1265:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1266:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Program dead time value for channel 1 */
1267:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->DC1R = config->dc1r;
 1574              	 .loc 1 1267 0
 1575 0000 4B68     	 ldr r3,[r1,#4]
 1576 0002 0365     	 str r3,[r0,#80]
1268:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Program dead time value for channel 2 */
1269:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->DC2R = config->dc2r;
 1577              	 .loc 1 1269 0
 1578 0004 8B68     	 ldr r3,[r1,#8]
 1579 0006 4365     	 str r3,[r0,#84]
1270:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   /* Program dead time control configuration */
1271:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->DTC = config->dtc;
 1580              	 .loc 1 1271 0
 1581 0008 0B68     	 ldr r3,[r1]
 1582 000a C364     	 str r3,[r0,#76]
 1583 000c 7047     	 bx lr
 1584              	 .cfi_endproc
 1585              	.LFE269:
 1587 000e 00BF     	 .section .text.XMC_CCU8_SLICE_ConfigureDeadTime,"ax",%progbits
 1588              	 .align 2
 1589              	 .global XMC_CCU8_SLICE_ConfigureDeadTime
 1590              	 .thumb
 1591              	 .thumb_func
 1593              	XMC_CCU8_SLICE_ConfigureDeadTime:
 1594              	.LFB270:
1272:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
1273:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1274:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Activates or deactivates dead time for compare channel and ST path */
1275:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureDeadTime(XMC_CCU8_SLICE_t *const slice, const uint8_t mask)
1276:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1595              	 .loc 1 1276 0
 1596              	 .cfi_startproc
 1597              	 
 1598              	 
 1599              	 
 1600              	.LVL221:
1277:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1278:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Channel", (mask <= XMC_CCU8_SLICE_DEAD_TIME_
1279:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1280:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK);
 1601              	 .loc 1 1280 0
 1602 0000 C36C     	 ldr r3,[r0,#76]
 1603 0002 23F03F03 	 bic r3,r3,#63
 1604 0006 C364     	 str r3,[r0,#76]
1281:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->DTC |= (uint32_t) mask;
 1605              	 .loc 1 1281 0
 1606 0008 C36C     	 ldr r3,[r0,#76]
 1607 000a 1943     	 orrs r1,r1,r3
 1608              	.LVL222:
 1609 000c C164     	 str r1,[r0,#76]
 1610 000e 7047     	 bx lr
 1611              	 .cfi_endproc
 1612              	.LFE270:
 1614              	 .section .text.XMC_CCU8_SLICE_SetDeadTimeValue,"ax",%progbits
 1615              	 .align 2
 1616              	 .global XMC_CCU8_SLICE_SetDeadTimeValue
 1617              	 .thumb
 1618              	 .thumb_func
 1620              	XMC_CCU8_SLICE_SetDeadTimeValue:
 1621              	.LFB271:
1282:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
1283:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1284:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Configures rising edge delay and falling edge delay for dead time */
1285:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimeValue(XMC_CCU8_SLICE_t *const slice,
1286:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1287:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                      const uint8_t rise_value,
1288:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****                                      const uint8_t fall_value)
1289:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1622              	 .loc 1 1289 0
 1623              	 .cfi_startproc
 1624              	 
 1625              	 
 1626              	 
 1627              	.LVL223:
1290:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1291:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(c
1292:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1293:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 1628              	 .loc 1 1293 0
 1629 0000 19B9     	 cbnz r1,.L95
1294:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1295:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****     slice->DC1R = (((uint32_t) fall_value) << CCU8_CC8_DC1R_DT1F_Pos) | ((uint32_t) rise_value);
 1630              	 .loc 1 1295 0
 1631 0002 42EA0322 	 orr r2,r2,r3,lsl#8
 1632              	.LVL224:
 1633 0006 0265     	 str r2,[r0,#80]
 1634 0008 7047     	 bx lr
 1635              	.LVL225:
 1636              	.L95:
1296:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1297:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   else
1298:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   {
1299:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->DC2R = (((uint32_t) fall_value) << CCU8_CC8_DC2R_DT2F_Pos) | ((uint32_t) rise_value);
 1637              	 .loc 1 1299 0
 1638 000a 42EA0322 	 orr r2,r2,r3,lsl#8
 1639              	.LVL226:
 1640 000e 4265     	 str r2,[r0,#84]
 1641 0010 7047     	 bx lr
 1642              	 .cfi_endproc
 1643              	.LFE271:
 1645 0012 00BF     	 .section .text.XMC_CCU8_SLICE_SetDeadTimePrescaler,"ax",%progbits
 1646              	 .align 2
 1647              	 .global XMC_CCU8_SLICE_SetDeadTimePrescaler
 1648              	 .thumb
 1649              	 .thumb_func
 1651              	XMC_CCU8_SLICE_SetDeadTimePrescaler:
 1652              	.LFB272:
1300:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   }
1301:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
1302:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1303:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Configures clock division factor for dead time */
1304:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimePrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_DTC_DI
1305:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1653              	 .loc 1 1305 0
 1654              	 .cfi_startproc
 1655              	 
 1656              	 
 1657              	 
 1658              	.LVL227:
1306:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1307:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid divider value", XMC_CCU8_SLICE_CHECK_DTC_
1308:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1309:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) CCU8_CC8_DTC_DTCC_Msk);
 1659              	 .loc 1 1309 0
 1660 0000 C36C     	 ldr r3,[r0,#76]
 1661 0002 23F0C003 	 bic r3,r3,#192
 1662 0006 C364     	 str r3,[r0,#76]
1310:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->DTC |= ((uint32_t) div_val) << CCU8_CC8_DTC_DTCC_Pos;
 1663              	 .loc 1 1310 0
 1664 0008 C36C     	 ldr r3,[r0,#76]
 1665 000a 43EA8111 	 orr r1,r3,r1,lsl#6
 1666              	.LVL228:
 1667 000e C164     	 str r1,[r0,#76]
 1668 0010 7047     	 bx lr
 1669              	 .cfi_endproc
 1670              	.LFE272:
 1672 0012 00BF     	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput,"ax",%progbits
 1673              	 .align 2
 1674              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOutput
 1675              	 .thumb
 1676              	 .thumb_func
 1678              	XMC_CCU8_SLICE_ConfigureStatusBitOutput:
 1679              	.LFB273:
1311:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** }
1312:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1313:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** /* Configures status ST1, ST2 mapping to STy */
1314:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOutput(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_ST
1315:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** {
 1680              	 .loc 1 1315 0
 1681              	 .cfi_startproc
 1682              	 
 1683              	 
 1684              	 
 1685              	.LVL229:
1316:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1317:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Channel", XMC_CCU8_SLICE_CHECK_SLICE_
1318:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c **** 
1319:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_STOS_Msk);
 1686              	 .loc 1 1319 0
 1687 0000 4369     	 ldr r3,[r0,#20]
 1688 0002 23F0C043 	 bic r3,r3,#1610612736
 1689 0006 4361     	 str r3,[r0,#20]
1320:C:/Files/Projects/Git/XMCLib/src\xmc_ccu8.c ****   slice->TC |= ((uint32_t) channel) << CCU8_CC8_TC_STOS_Pos;
 1690              	 .loc 1 1320 0
 1691 0008 4369     	 ldr r3,[r0,#20]
 1692 000a 43EA4171 	 orr r1,r3,r1,lsl#29
 1693              	.LVL230:
 1694 000e 4161     	 str r1,[r0,#20]
 1695 0010 7047     	 bx lr
 1696              	 .cfi_endproc
 1697              	.LFE273:
 1699 0012 00BF     	 .text
 1700              	.Letext0:
 1701              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1702              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1703              	 .file 5 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1704              	 .file 6 "C:/Files/Projects/Git/XMCLib/inc/xmc4_scu.h"
 1705              	 .file 7 "C:/Files/Projects/Git/CMSIS/Include/cmsis_gcc.h"
 1706              	 .file 8 "C:/Files/Projects/Git/CMSIS/Include/core_cm4.h"
 1707              	 .file 9 "C:/Files/Projects/Git/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu8.c
    {standard input}:20     .text.XMC_CCU8_EnableModule:00000000 $t
    {standard input}:25     .text.XMC_CCU8_EnableModule:00000000 XMC_CCU8_EnableModule
    {standard input}:71     .text.XMC_CCU8_EnableModule:00000028 $d
    {standard input}:79     .text.XMC_CCU8_DisableModule:00000000 $t
    {standard input}:84     .text.XMC_CCU8_DisableModule:00000000 XMC_CCU8_DisableModule
    {standard input}:125    .text.XMC_CCU8_DisableModule:00000020 $d
    {standard input}:133    .text.XMC_CCU8_Init:00000000 $t
    {standard input}:138    .text.XMC_CCU8_Init:00000000 XMC_CCU8_Init
    {standard input}:181    .text.XMC_CCU8_SetModuleClock:00000000 $t
    {standard input}:186    .text.XMC_CCU8_SetModuleClock:00000000 XMC_CCU8_SetModuleClock
    {standard input}:210    .text.XMC_CCU8_SLICE_CompareInit:00000000 $t
    {standard input}:215    .text.XMC_CCU8_SLICE_CompareInit:00000000 XMC_CCU8_SLICE_CompareInit
    {standard input}:262    .text.XMC_CCU8_SLICE_CaptureInit:00000000 $t
    {standard input}:267    .text.XMC_CCU8_SLICE_CaptureInit:00000000 XMC_CCU8_SLICE_CaptureInit
    {standard input}:303    .text.XMC_CCU8_SLICE_SetOutPath:00000000 $t
    {standard input}:308    .text.XMC_CCU8_SLICE_SetOutPath:00000000 XMC_CCU8_SLICE_SetOutPath
    {standard input}:334    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:339    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 XMC_CCU8_SetMultiChannelShadowTransferMode
    {standard input}:365    .text.XMC_CCU8_SLICE_StartConfig:00000000 $t
    {standard input}:370    .text.XMC_CCU8_SLICE_StartConfig:00000000 XMC_CCU8_SLICE_StartConfig
    {standard input}:408    .text.XMC_CCU8_SLICE_StopConfig:00000000 $t
    {standard input}:413    .text.XMC_CCU8_SLICE_StopConfig:00000000 XMC_CCU8_SLICE_StopConfig
    {standard input}:448    .text.XMC_CCU8_SLICE_LoadConfig:00000000 $t
    {standard input}:453    .text.XMC_CCU8_SLICE_LoadConfig:00000000 XMC_CCU8_SLICE_LoadConfig
    {standard input}:477    .text.XMC_CCU8_SLICE_LoadSelector:00000000 $t
    {standard input}:482    .text.XMC_CCU8_SLICE_LoadSelector:00000000 XMC_CCU8_SLICE_LoadSelector
    {standard input}:506    .text.XMC_CCU8_SLICE_ModulationConfig:00000000 $t
    {standard input}:511    .text.XMC_CCU8_SLICE_ModulationConfig:00000000 XMC_CCU8_SLICE_ModulationConfig
    {standard input}:579    .text.XMC_CCU8_SLICE_CountConfig:00000000 $t
    {standard input}:584    .text.XMC_CCU8_SLICE_CountConfig:00000000 XMC_CCU8_SLICE_CountConfig
    {standard input}:608    .text.XMC_CCU8_SLICE_GateConfig:00000000 $t
    {standard input}:613    .text.XMC_CCU8_SLICE_GateConfig:00000000 XMC_CCU8_SLICE_GateConfig
    {standard input}:637    .text.XMC_CCU8_SLICE_Capture0Config:00000000 $t
    {standard input}:642    .text.XMC_CCU8_SLICE_Capture0Config:00000000 XMC_CCU8_SLICE_Capture0Config
    {standard input}:666    .text.XMC_CCU8_SLICE_Capture1Config:00000000 $t
    {standard input}:671    .text.XMC_CCU8_SLICE_Capture1Config:00000000 XMC_CCU8_SLICE_Capture1Config
    {standard input}:695    .text.XMC_CCU8_SLICE_DirectionConfig:00000000 $t
    {standard input}:700    .text.XMC_CCU8_SLICE_DirectionConfig:00000000 XMC_CCU8_SLICE_DirectionConfig
    {standard input}:724    .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:729    .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU8_SLICE_StatusBitOverrideConfig
    {standard input}:750    .text.XMC_CCU8_SLICE_TrapConfig:00000000 $t
    {standard input}:755    .text.XMC_CCU8_SLICE_TrapConfig:00000000 XMC_CCU8_SLICE_TrapConfig
    {standard input}:802    .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:807    .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:892    .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 $t
    {standard input}:897    .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 XMC_CCU8_SLICE_ConfigureEvent
    {standard input}:985    .text.XMC_CCU8_SLICE_SetInput:00000000 $t
    {standard input}:990    .text.XMC_CCU8_SLICE_SetInput:00000000 XMC_CCU8_SLICE_SetInput
    {standard input}:1034   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:1039   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 XMC_CCU8_SLICE_SetTimerRepeatMode
    {standard input}:1068   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:1073   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 XMC_CCU8_SLICE_SetTimerCountingMode
    {standard input}:1102   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:1107   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU8_SLICE_SetTimerPeriodMatch
    {standard input}:1122   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:1127   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU8_SLICE_GetCaptureRegisterValue
    {standard input}:1147   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:1152   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU8_SLICE_GetLastCapturedTimerValue
    {standard input}:1244   .text.XMC_CCU8_GetCapturedValueFromFifo:00000000 $t
    {standard input}:1249   .text.XMC_CCU8_GetCapturedValueFromFifo:00000000 XMC_CCU8_GetCapturedValueFromFifo
    {standard input}:1273   .text.XMC_CCU8_SLICE_EnableDithering:00000000 $t
    {standard input}:1278   .text.XMC_CCU8_SLICE_EnableDithering:00000000 XMC_CCU8_SLICE_EnableDithering
    {standard input}:1328   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 $t
    {standard input}:1333   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 XMC_CCU8_SLICE_SetPrescaler
    {standard input}:1359   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:1364   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 XMC_CCU8_SLICE_SetTimerCompareMatch
    {standard input}:1385   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 $t
    {standard input}:1390   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 XMC_CCU8_SLICE_GetTimerCompareMatch
    {standard input}:1419   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 $t
    {standard input}:1424   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 XMC_CCU8_SLICE_SetInterruptNode
    {standard input}:1444   .text.XMC_CCU8_SLICE_SetInterruptNode:0000000e $d
    {standard input}:1454   .text.XMC_CCU8_SLICE_SetInterruptNode:00000018 $t
    {standard input}:1528   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:1533   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 XMC_CCU8_SLICE_SetPassiveLevel
    {standard input}:1561   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 $t
    {standard input}:1566   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 XMC_CCU8_SLICE_DeadTimeInit
    {standard input}:1588   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 $t
    {standard input}:1593   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 XMC_CCU8_SLICE_ConfigureDeadTime
    {standard input}:1615   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 $t
    {standard input}:1620   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 XMC_CCU8_SLICE_SetDeadTimeValue
    {standard input}:1646   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 $t
    {standard input}:1651   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 XMC_CCU8_SLICE_SetDeadTimePrescaler
    {standard input}:1673   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 $t
    {standard input}:1678   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOutput
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_EnableClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
